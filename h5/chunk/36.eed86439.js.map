{"version":3,"sources":["webpack:///../../../../packages/icons/src/utils/unit.ts","webpack:///../../../../packages/icons/src/van/VanIcon.tsx","webpack:///../../../../packages/core/src/styles/index.ts","webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/utils/state.ts","webpack:///../../../../packages/core/src/utils/base.ts","webpack:///../../../../packages/core/src/hooks/use-mounted.ts","webpack:///../../../../packages/core/src/hooks/use-rendered-effect.tsx","webpack:///../../../../packages/core/src/hooks/use-placeholder.tsx","webpack:///../../../../packages/core/src/hooks/use-height.ts","webpack:///../../../../packages/core/src/hooks/use-timeout.ts","webpack:///../../../../packages/core/src/hooks/use-unique-id.ts","webpack:///../../../../packages/core/src/hooks/use-update.ts","webpack:///../../../../packages/core/src/hooks/use-window-resize.tsx","webpack:///../../../../packages/core/src/styles/prefix.ts","webpack:///./src/styles/prefix.ts","webpack:///../../../../packages/core/src/utils/dom/rect.ts","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/icons/src/ArrowLeft.tsx","webpack:///../../../../packages/icons/src/shared.ts","webpack:///../../../../packages/core/src/utils/dom/element.ts","webpack:///../../../../packages/core/src/utils/dom/event.ts","webpack:///./src/components/target.tsx","webpack:///./src/components/page.tsx","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///../../../../packages/core/src/cell/cell-group.context.ts","webpack:///../../../../packages/core/src/cell/cell-base.tsx","webpack:///../../../../packages/core/src/cell/cell-brief.tsx","webpack:///../../../../packages/core/src/cell/cell-title.tsx","webpack:///../../../../packages/core/src/cell/cell-value.tsx","webpack:///../../../../packages/core/src/cell/cell.tsx","webpack:///../../../../packages/core/src/cell/cell-group.tsx","webpack:///../../../../packages/core/src/cell/index.ts","webpack:///../../../../packages/core/src/cell/style/index.ts","webpack:///../../../../packages/core/src/utils/touch.ts","webpack:///../../../../packages/core/src/styles/hairline.ts","webpack:///../../../../packages/core/src/utils/raf.ts","webpack:///../../../../packages/core/src/utils/dom/computed-style.ts","webpack:///../../../../packages/core/src/swiper/swiper.context.ts","webpack:///../../../../packages/core/src/swiper/swiper-indicator.tsx","webpack:///../../../../packages/core/src/swiper/swiper-item.tsx","webpack:///../../../../packages/core/src/swiper/swiper.tsx","webpack:///../../../../packages/core/src/swiper/index.ts","webpack:///../../../../packages/core/src/swiper/style/index.ts","webpack:///../../../../packages/core/src/sticky/style/index.ts","webpack:///../../../../packages/core/src/utils/system.ts","webpack:///../../../../packages/core/src/sticky/index.ts","webpack:///../../../../packages/core/src/sticky/sticky.tsx","webpack:///../../../../packages/core/src/tabs/style/index.ts","webpack:///../../../../packages/core/src/tabs/tab-pane.tsx","webpack:///../../../../packages/core/src/tabs/tabs.context.ts","webpack:///../../../../packages/core/src/tabs/tab-pane-base.tsx","webpack:///../../../../packages/core/src/tabs/tabs-content.tsx","webpack:///../../../../packages/core/src/tabs/tabs-line.tsx","webpack:///../../../../packages/core/src/tabs/tab.tsx","webpack:///../../../../packages/core/src/tabs/tabs-header.tsx","webpack:///../../../../packages/core/src/tabs/tabs.tsx","webpack:///../../../../packages/core/src/tabs/index.ts","webpack:///../../../../packages/core/src/utils/dom/scroll.ts","webpack:///../../../../packages/core/src/pull-refresh/style/index.ts","webpack:///../../../../packages/core/src/pull-refresh/pull-refresh.context.ts","webpack:///../../../../packages/core/src/pull-refresh/pull-refresh-children.tsx","webpack:///../../../../packages/core/src/pull-refresh/pull-refresh.tsx","webpack:///../../../../packages/core/src/pull-refresh/index.ts","webpack:///../../../../packages/core/src/list/list.tsx","webpack:///../../../../packages/core/src/list/list-placeholder.tsx","webpack:///../../../../packages/core/src/list/index.ts","webpack:///./src/pages/display/list/index.tsx"],"names":["value","convertPx","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertVw","convertVh","unitToPx","size","color","presetColor","ICON_PRESET_COLORS","presetSize","ICON_PRESET_SIZES","className","classNames","style","addUnitPx","name","VanIconWrapper","width","height","previousRef","useRef","useEffect","usePreviousRef","cb","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","valueRef","useToRef","defaultValue","setValue","emitChange","getValue","inBrowser","inWechat","process","useRenderedEffect","effect","destructorRef","nextTick","destructor","useState","useMounted","useHeight","children","useTimeout","timerRef","cbRef","msRef","argsRef","stop","clearTimeout","start","args","setTimeout","callback","ms","restart","useUniqueId","prefix","uniqueIdRef","updateReducer","num","useReducer","useWindowResize","onWindowResize","offWindowResize","demoPrefixClassname","component","top","left","right","bottom","element","elementUnref","isWindow","Promise","makeRect","resolve","queryNodesRef","isRootElement","rects","oneElement","queryAllNodesRef","isValidElement","isIconElement","cloneElement","node","oldProps","props","newProps","ArrowLeft","createVanIconComponent","ICON_TYPE","Symbol","val","elementOrRef","ancestorCustomWrapper","ancestor","createSelectorQuery","event","stopPropagation","touches","clientX","clientY","TargetType","Target","type","Page","title","onClick","navigateBack","SpinIcon","key","prefixClassname","LoadingSpinner","rootStyle","LoadingCircular","direction","createContext","CellBase","clickable","clickableProp","required","bordered","useContext","align","icon","cloneIconElement","rightIcon","CellBrief","CellTitle","CellValue","alone","inset","CellGroupContext","Cell","Object","brief","emptyFunction","touchRef","startX","startY","deltaX","deltaY","offsetX","offsetY","isVertical","isHorizontal","move","reset","TouchDirection","touch","Math","getDirection","x","y","HAIRLINE_BORDER","HAIRLINE_BORDER_TOP","HAIRLINE_BORDER_LEFT","HAIRLINE_BORDER_BOTTOM","HAIRLINE_BORDER_SURROUND","HAIRLINE_BORDER_TOP_BOTTOM","HAIRLINE_BORDER_UNSET_TOP_BOTTOM","requestAnimationFrame","rafIds","raf","computedStyle","result","itemInstances","indicator","count","renderIndicator","indicators","__dataIndex__","childrenProp","vertical","initializedRef","mountedRef","shouldRender","lazyRender","active","maxActive","prevActive","nextActive","setOffset","useRendered","offset","undefined","getIndicatorValue","Swiper","loop","touchable","autoplay","duration","onChangeProp","useValue","useSwiperChildren","__children__","items","Children","elementType","useTouch","rootRef","rectRef","swipingRef","activeIndexRef","touchStartTimeRef","autoplayTimerRef","valueIndicatorRef","useRenderedRef","activeIndicatorRef","getDelta","getCorrectDirection","customRectRef","propRectRef","sizeRef","trackSizeRef","minOffsetRef","maxCountRef","getTargetActive","pace","getTargetOffset","currentPosition","targetActive","targetOffset","moveTo","outRightBound","outLeftBound","previousActiveIndex","correctPosition","swipeTo","doubleRaf","targetIndex","next","stopAutoplay","startAutoplay","onTouchStart","Date","onTouchMove","correctDirection","preventDefault","onTouchEnd","delta","speed","shouldSwipe","getTrackRect","getRect","getComputedStyle","rect","initialize","a","activeIndex","current","item","resize","valueIndicator","trackStyle","transitionDuration","transform","crossAxis","crossAxisValue","ref","SwiperContext","catchMove","onTouchCancel","screenHeight","screenWidth","windowHeight","windowWidth","position","offsetTop","offsetBottom","container","onScroll","console","offsetTopProp","offsetProp","offsetBottomProp","counterRef","offsetValue","rootRect","fixed","stickyStyle","scrollTop","__rootRect__","setRootRect","containerRect","difference","setTransform","setFixed","getSystemRect","invokeScroll","usePageScroll","React","animated","swipeable","tabObjects","activeValue","tabPane","display","onTabClick","panes","useTabPanes","tabObject","disabled","renderChildren","onSwiperChange","flexBasis","ellipsis","underline","themeLine","theme","themeCard","navRef","tab","activeOffset","tabOffsets","prev","curr","scrollLeft","navOffsetWidth","offsetLeft","navOffset","getRects","setNavOffset","setTabOffsets","scrollX","scrollWithAnimation","dot","badge","useTabObjects","Tabs","sticky","valueProp","stickyProps","useTabsSticky","handleTabClick","headerRender","TabsContext","defaultRoot","overflowScrollReg","isElementNode","root","overflowY","$element","getScrollOffset","distance","lodashRoot","require","PullRefreshStatus","TEXT_STATUS","PullRefresh","headHeight","reachTop","reachTopProp","pullDistance","durationProp","onRefresh","usePullRefreshChildren","content","child","completed","getCompletedProps","completedDuration","statusRef","reachTopPreviousRef","reachTopRef","durationRef","isTouchable","easeDistance","pullDistanceProp","checkPosition","resetDuration","updateStatus","setDistance","showCompleted","loading","completedElement","getStatusText","renderStatus","statusSlot","nodes","headStyle","PullRefreshContext","ListPlaceholder","List","loadingProp","hasMore","hasMoreProp","onLoad","edgeRef","loadingRef","hasMoreRef","loadCheck","getScrollParent","scrollParent","scrollParentRect","edgeRect","isReachEdge","listEdge","BasicList","setHasMore","list","setList","setLoading","setScrollTop","aScrollTop","i","text","length","push","String","map","Placeholder","ErrorList","error","setError","newList","PullRefreshList","refreshingRef","setReachTop","ListDemo","setTab","TabPane"],"mappings":"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","file":"chunk/36.eed86439.js","sourcesContent":["export function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport {\r\n  ICON_PRESET_COLORS,\r\n  ICON_PRESET_SIZES,\r\n  ICON_TYPE,\r\n  IconColor,\r\n  IconProps,\r\n  IconSize,\r\n} from \"../shared\"\r\nimport { addUnitPx } from \"../utils/unit\"\r\n\r\ninterface VanIconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  name?: string\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function VanIcon(props: VanIconProps) {\r\n  const { className, style, name, size = \"inherit\", color = \"inherit\", ...restProps } = props\r\n  const presetColor = ICON_PRESET_COLORS.includes(color as IconColor)\r\n  const presetSize = ICON_PRESET_SIZES.includes(size as IconSize)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        \"van-icon\",\r\n        `van-icon-${name}`,\r\n        \"taroify-icon\",\r\n        {\r\n          [`taroify-icon--${color}`]: presetColor,\r\n          [`taroify-icon--${size}`]: presetSize,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        color: presetColor ? \"\" : color,\r\n        fontSize: presetSize ? \"\" : addUnitPx(size),\r\n        ...style,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport function createVanIconComponent(name: string) {\r\n  function VanIconWrapper(props: IconProps) {\r\n    return <VanIcon name={name} {...props} />\r\n  }\r\n\r\n  // @ts-ignore\r\n  VanIconWrapper[ICON_TYPE] = ICON_TYPE\r\n  return VanIconWrapper\r\n}\r\n","export { prefixClassname } from \"./prefix\"\n","import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value: valueProp, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  //\r\n  const valueRef = useToRef(valueProp)\r\n  const stateRef = useRef(defaultValue ?? valueRef.current ?? initialValue)\r\n\r\n  if (valueRef.current !== undefined) {\r\n    stateRef.current = valueRef.current\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(valueRef.current)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({\r\n      value: stateRef.current,\r\n      getValue,\r\n      setValue,\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","export function noop() {}\r\n\r\nexport const inBrowser = typeof document !== \"undefined\" && !!document.scripts\r\nexport const inWechat = process.env.TARO_ENV === \"weapp\"\r\nexport const inSwan = process.env.TARO_ENV === \"swan\"\r\nexport const inAlipay = process.env.TARO_ENV === \"alipay\"\r\nexport const inQQ = process.env.TARO_ENV === \"qq\"\r\nexport const inToutiao = process.env.TARO_ENV === \"tt\"\r\n","import useRenderedEffect from \"./use-rendered-effect\"\r\n\r\nexport default function useMounted(cb: (...args: any[]) => any) {\r\n  useRenderedEffect(cb, [])\r\n}\r\n","import { nextTick } from \"@tarojs/taro\"\r\nimport * as _ from \"lodash\"\r\nimport { DependencyList, EffectCallback, useEffect, useRef } from \"react\"\r\n\r\nfunction useRenderedEffect(effect: EffectCallback, deps?: DependencyList) {\r\n  const destructorRef = useRef<() => void>()\r\n\r\n  useEffect(\r\n    () => {\r\n      nextTick(() => {\r\n        const destructor = effect?.()\r\n        if (_.isFunction(destructor)) {\r\n          destructorRef.current = destructor\r\n        }\r\n      })\r\n\r\n      return destructorRef.current\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    deps,\r\n  )\r\n}\r\n\r\nexport default useRenderedEffect\r\n","import { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport useHeight from \"./use-height\"\r\n\r\ninterface UsePlaceholderOptions {\r\n  className?: string\r\n}\r\n\r\nexport default function usePlaceholder(contentRef: any, { className }: UsePlaceholderOptions) {\r\n  const height = useHeight(contentRef)\r\n\r\n  return ({\r\n    // @ts-ignore\r\n    children,\r\n  }) => (\r\n    <View\r\n      className={className}\r\n      style={{ height: height ? `${addUnitPx(height)}` : \"\" }}\r\n      children={children}\r\n    />\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport useMounted from \"./use-mounted\"\r\n\r\nexport default function useHeight(elementOrRef: any) {\r\n  const [height, setHeight] = useState<number>(0)\r\n  useMounted(() =>\r\n    getRect(elementOrRef)\r\n      .then(({ height }) => height)\r\n      .then(setHeight),\r\n  )\r\n  return height\r\n}\r\n","import { useCallback, useMemo, useRef } from \"react\"\r\n\r\ntype UseTimeoutCallback = (...args: any[]) => void\r\n\r\nfunction useTimeout() {\r\n  const timerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const cbRef = useRef<UseTimeoutCallback>()\r\n  const msRef = useRef<number>()\r\n  const argsRef = useRef<any[]>()\r\n\r\n  const stop = useCallback(() => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current)\r\n      timerRef.current = undefined\r\n    }\r\n  }, [])\r\n\r\n  const start = useCallback((callback: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n    if (timerRef.current) {\r\n      return\r\n    }\r\n    cbRef.current = callback\r\n    msRef.current = ms\r\n    argsRef.current = args\r\n    timerRef.current = setTimeout(callback, ms, args)\r\n  }, [])\r\n\r\n  const restart = useCallback(\r\n    (callback?: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n      stop()\r\n      if (callback) {\r\n        start(callback, ms, args)\r\n      } else if (cbRef.current) {\r\n        start(cbRef.current, msRef.current, argsRef.current)\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  return useMemo(\r\n    () => ({\r\n      restart,\r\n      start,\r\n      stop,\r\n    }),\r\n    [restart, start, stop],\r\n  )\r\n}\r\n\r\nexport default useTimeout\r\n","import * as _ from \"lodash\"\r\nimport { useRef } from \"react\"\r\n\r\nfunction useUniqueId(prefix: string = \"t_\") {\r\n  const uniqueIdRef = useRef(_.uniqueId(prefix))\r\n  return uniqueIdRef.current\r\n}\r\n\r\nexport default useUniqueId\r\n","import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useUpdate\r\n","import { offWindowResize, onWindowResize } from \"@tarojs/taro\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Size {\r\n  /** 变化后的窗口高度，单位 px */\r\n  windowHeight: number\r\n  /** 变化后的窗口宽度，单位 px */\r\n  windowWidth: number\r\n}\r\n\r\ninterface CallbackResult {\r\n  size: Size\r\n}\r\n\r\ntype WindowResizeCallback = (result: CallbackResult) => void\r\n\r\nfunction useWindowResize(callback: WindowResizeCallback) {\r\n  useEffect(() => {\r\n    onWindowResize?.(callback)\r\n\r\n    return () =>\r\n      offWindowResize?.(\r\n        // @ts-ignore\r\n        callback,\r\n      )\r\n  }, [callback])\r\n}\r\n\r\nexport default useWindowResize\r\n","const COMPONENT_PREFIX = \"taroify-\"\n\nexport function prefixClassname(component: string) {\n  return `${COMPONENT_PREFIX}${component}`\n}\n","const DEMO_PREFIX = \"taroify-demo-\"\n\nexport function demoPrefixClassname(component: string) {\n  return `${DEMO_PREFIX}${component}`\n}\n","import { inBrowser } from \"../base\"\r\nimport { queryNodesRef, elementUnref, isRootElement, isWindow, queryAllNodesRef } from \"./element\"\r\n\r\nexport interface Rect {\r\n  dataset: Record<string, any>\r\n  id: string\r\n  top: number\r\n  right: number\r\n  bottom: number\r\n  left: number\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport function makeRect(width: number, height: number) {\r\n  return {\r\n    top: 0,\r\n    left: 0,\r\n    right: width,\r\n    bottom: height,\r\n    width,\r\n    height,\r\n  } as Rect\r\n}\r\n\r\nexport function getRect(elementOrRef: any): Promise<Rect> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      if (isWindow(element)) {\r\n        const width = element.innerWidth\r\n        const height = element.innerHeight\r\n        return Promise.resolve(makeRect(width, height))\r\n      }\r\n\r\n      return Promise.resolve(\r\n        (((element as unknown) as HTMLElement).getBoundingClientRect() as unknown) as Rect,\r\n      )\r\n    } else {\r\n      return new Promise<Rect>((resolve) => {\r\n        queryNodesRef(element)\r\n          .boundingClientRect()\r\n          .exec(([rect]) => {\r\n            if (isRootElement(element)) {\r\n              const { width, height } = rect\r\n              resolve(makeRect(width, height))\r\n            } else {\r\n              resolve(rect)\r\n            }\r\n          })\r\n      })\r\n    }\r\n  }\r\n  return Promise.resolve(makeRect(0, 0))\r\n}\r\n\r\nexport function getRects(elementOrRef: any, selector: string): Promise<Rect[]> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      const rects: Rect[] = []\r\n      ;((element as unknown) as HTMLElement)\r\n        .querySelectorAll(selector)\r\n        .forEach((oneElement) =>\r\n          rects.push((oneElement.getBoundingClientRect() as unknown) as Rect),\r\n        )\r\n      return Promise.resolve(rects)\r\n    } else {\r\n      return new Promise<Rect[]>((resolve) => {\r\n        queryAllNodesRef(element, selector)\r\n          .boundingClientRect()\r\n          .exec(([rects]) => resolve((rects as unknown) as Rect[]))\r\n      })\r\n    }\r\n  }\r\n  return Promise.resolve([])\r\n}\r\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","import { createVanIconComponent } from \"./van\"\r\n\r\nconst ArrowLeft = createVanIconComponent(\"arrow-left\")\r\nexport default ArrowLeft\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\n\r\nexport const ICON_TYPE = Symbol(\"__iconType__\")\r\n\r\nexport type IconSize = \"inherit\" | \"mini\" | \"small\" | \"medium\" | \"large\"\r\n\r\nexport const ICON_PRESET_SIZES = [\"inherit\", \"mini\", \"small\", \"medium\", \"large\"]\r\n\r\nexport type IconColor =\r\n  | \"inherit\"\r\n  | \"default\"\r\n  | \"primary\"\r\n  | \"info\"\r\n  | \"success\"\r\n  | \"warning\"\r\n  | \"danger\"\r\n\r\nexport const ICON_PRESET_COLORS = [\r\n  \"inherit\",\r\n  \"default\",\r\n  \"primary\",\r\n  \"info\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n]\r\n\r\nexport interface IconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n","import { TaroElement } from \"@tarojs/runtime\"\r\nimport { createSelectorQuery } from \"@tarojs/taro\"\r\nimport * as _ from \"lodash\"\r\nimport { inWechat } from \"../base\"\r\n\r\nexport const ELEMENT_NODE_TYPE = 1\r\n\r\nexport function isWindow(val: unknown): val is Window {\r\n  return val === window\r\n}\r\n\r\nexport function isBodyElement(val: unknown): boolean {\r\n  return val === document.body\r\n}\r\n\r\nexport function elementUnref(elementOrRef: any): TaroElement {\r\n  if (elementOrRef === undefined || elementOrRef === null) {\r\n    return elementOrRef\r\n  }\r\n  if (\"current\" in elementOrRef) {\r\n    return elementOrRef.current\r\n  }\r\n  return elementOrRef\r\n}\r\n\r\nexport function isRootElement(node?: TaroElement) {\r\n  return node?.nodeType === ELEMENT_NODE_TYPE && node?.tagName === \"ROOT\"\r\n}\r\n\r\nexport function matchSelector(aSelector?: string, bSelector?: string) {\r\n  return _.replace(aSelector as string, \"#\", \"\") === bSelector\r\n}\r\n\r\n// Fix nested in CustomWrapper is undefined\r\n// See: https://github.com/mallfoundry/taroify/pull/143\r\nfunction ancestorCustomWrapper(element: TaroElement) {\r\n  if (inWechat) {\r\n    let ancestor = element\r\n    while (ancestor.parentNode && !isRootElement(ancestor.parentNode as TaroElement)) {\r\n      ancestor = ancestor.parentNode as TaroElement\r\n    }\r\n\r\n    if (ancestor && ancestor !== element) {\r\n      return ancestor\r\n    }\r\n  }\r\n}\r\n\r\nexport function queryNodesRef(element: TaroElement) {\r\n  if (isRootElement(element)) {\r\n    return createSelectorQuery().selectViewport()\r\n  }\r\n\r\n  const ancestor = ancestorCustomWrapper(element)\r\n  if (ancestor) {\r\n    return createSelectorQuery().select(`#${ancestor.uid}>>>#${element.uid}`)\r\n  }\r\n\r\n  return createSelectorQuery().select(\"#\" + element.uid)\r\n}\r\n\r\nexport function queryAllNodesRef(element: TaroElement, selector?: string) {\r\n  if (isRootElement(element)) {\r\n    return createSelectorQuery().selectViewport()\r\n  }\r\n\r\n  const ancestor = ancestorCustomWrapper(element)\r\n  if (ancestor) {\r\n    return createSelectorQuery().selectAll(`#${ancestor.uid}>>>#${element.uid}${selector}`)\r\n  }\r\n\r\n  return createSelectorQuery().selectAll(\"#\" + element.uid + selector)\r\n}\r\n","import { CommonEvent, ITouchEvent } from \"@tarojs/components\"\nimport { inBrowser } from \"../base\"\n\nexport function stopPropagation(event: CommonEvent) {\n  event.stopPropagation()\n}\n\nexport function preventDefault(event: CommonEvent, isStopPropagation?: boolean) {\n  if (inBrowser) {\n    // @ts-ignore\n    if (typeof event.cancelable !== \"boolean\" || event.cancelable) {\n      event.preventDefault()\n    }\n  } else {\n    event.preventDefault()\n  }\n\n  if (isStopPropagation) {\n    stopPropagation(event)\n  }\n}\n\ninterface ClientCoordinates {\n  clientX: number\n  clientY: number\n}\n\nexport function getClientCoordinates(event: ITouchEvent | MouseEvent): ClientCoordinates {\n  // @ts-ignore\n  const { clientX, clientY, touches } = event\n\n  if (clientX && clientY) {\n    return {\n      clientX,\n      clientY,\n    }\n  }\n  return touches[0]\n}\n","import * as React from \"react\"\nimport { ReactNode } from \"react\"\n\n/* eslint-disable  no-shadow */\nexport enum TargetType {\n  /* eslint-enable  no-shadow */\n  H5 = \"h5\",\n}\n\ntype TargetTypeString = \"h5\"\n\ninterface TargetProps {\n  type?: TargetType | TargetTypeString\n  children?: ReactNode\n}\n\nexport default function Target(props: TargetProps) {\n  const { type, children } = props\n  return <>{type === process.env.TARO_ENV && children}</>\n}\n","import ArrowLeft from \"@taroify/icons/ArrowLeft\"\nimport { View } from \"@tarojs/components\"\nimport { navigateBack } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { ReactNode } from \"react\"\nimport { demoPrefixClassname } from \"../styles/prefix\"\nimport \"./page.scss\"\nimport Target from \"./target\"\n\ninterface PageProps {\n  className?: string\n  title?: string\n  children: ReactNode\n}\n\nexport default function Page(props: PageProps) {\n  const { className, title, children } = props\n\n  return (\n    <View className={classNames(demoPrefixClassname(\"page\"), className)}>\n      <Target type=\"h5\">\n        <View className={demoPrefixClassname(\"page__nav\")}>\n          <ArrowLeft\n            className={demoPrefixClassname(\"page__nav__back\")}\n            onClick={() => navigateBack()}\n          />\n          <View className={demoPrefixClassname(\"page__nav__title\")}>{title} </View>\n        </View>\n      </Target>\n      <View className={demoPrefixClassname(\"page__content\")}>{children}</View>\n    </View>\n  )\n}\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface CellGroupContextValue {\r\n  clickable?: boolean\r\n}\r\n\r\nconst CellGroupContext = createContext<CellGroupContextValue>({})\r\n\r\nexport default CellGroupContext\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellBaseProps extends ViewProps {\r\n  bordered?: boolean\r\n  required?: boolean\r\n  clickable?: boolean\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellBase(props: CellBaseProps) {\r\n  const {\r\n    className,\r\n    size = \"medium\",\r\n    align,\r\n    clickable: clickableProp = false,\r\n    required = false,\r\n    bordered = true,\r\n    icon,\r\n    rightIcon,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { clickable } = useContext(CellGroupContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell\"),\r\n        {\r\n          [prefixClassname(\"cell--start\")]: align === \"start\",\r\n          [prefixClassname(\"cell--center\")]: align === \"center\",\r\n          [prefixClassname(\"cell--end\")]: align === \"end\",\r\n          [prefixClassname(\"cell--large\")]: size === \"large\",\r\n          [prefixClassname(\"cell--clickable\")]: clickableProp || clickable,\r\n          [prefixClassname(\"cell--required\")]: required,\r\n          [prefixClassname(\"cell--borderless\")]: !bordered,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon && isIconElement(icon)\r\n        ? cloneIconElement(icon, { className: prefixClassname(\"cell__icon\") })\r\n        : icon}\r\n      {children}\r\n      {rightIcon && isIconElement(rightIcon)\r\n        ? cloneIconElement(rightIcon, { className: prefixClassname(\"cell__right-icon\") })\r\n        : rightIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default CellBase\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellBriefProps extends ViewProps {\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellBrief(props: CellBriefProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__brief\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellBrief\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellTitleProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellTitle(props: CellTitleProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__title\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellTitle\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellValueProps extends ViewProps {\r\n  alone?: boolean\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellValue(props: CellValueProps) {\r\n  const { className, alone, ...restProps } = props\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell__value\"),\r\n        {\r\n          [prefixClassname(\"cell__value--alone\")]: alone,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CellValue\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport CellBase from \"./cell-base\"\r\nimport CellBrief from \"./cell-brief\"\r\nimport CellTitle from \"./cell-title\"\r\nimport CellValue from \"./cell-value\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellProps extends ViewProps {\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Cell(props: CellProps) {\r\n  const { title, brief, children, ...restProps } = props\r\n  return (\r\n    <CellBase {...restProps}>\r\n      {title && (\r\n        <CellTitle>\r\n          {title}\r\n          {brief && <CellBrief children={brief} />}\r\n        </CellTitle>\r\n      )}\r\n      <CellValue alone={!title} children={children} />\r\n    </CellBase>\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\n\r\ninterface CellGroupProps extends ViewProps {\r\n  title?: ReactNode\r\n  clickable?: boolean\r\n  inset?: boolean\r\n  bordered?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nexport function CellGroup(props: CellGroupProps) {\r\n  const { title, clickable = false, inset = false, bordered = true, children, ...restProps } = props\r\n  return (\r\n    <CellGroupContext.Provider\r\n      value={{\r\n        clickable,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"cell-group\"), {\r\n          [prefixClassname(\"cell-group--inset\")]: inset,\r\n        })}\r\n        {...restProps}\r\n      >\r\n        {title && (\r\n          <View\r\n            className={classNames(prefixClassname(\"cell-group__title\"), {\r\n              [prefixClassname(\"cell-group__title--inset\")]: inset,\r\n            })}\r\n            children={title}\r\n          />\r\n        )}\r\n        <View\r\n          className={classNames(prefixClassname(\"cell-group\"), {\r\n            [prefixClassname(\"hairline--top-bottom\")]: bordered,\r\n          })}\r\n          children={children}\r\n        />\r\n      </View>\r\n    </CellGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CellGroup\r\n","import CellElement, { CellProps } from \"./cell\"\r\nimport CellGroup from \"./cell-group\"\r\n\r\nexport type { CellAlign, CellSize } from \"./cell.shared\"\r\nexport { default as CellBase } from \"./cell-base\"\r\nexport { default as CellTitle } from \"./cell-title\"\r\nexport { default as CellValue } from \"./cell-value\"\r\nexport type { CellProps } from \"./cell\"\r\n\r\ninterface CellInterface {\r\n  (props: CellProps): JSX.Element\r\n\r\n  Group: typeof CellGroup\r\n}\r\n\r\nconst Cell = CellElement as CellInterface\r\nCell.Group = CellGroup\r\n\r\nexport default Cell\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { ITouchEvent } from \"@tarojs/components\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nconst MIN_DISTANCE = 10\n\nexport enum TouchDirection {\n  Horizontal = \"horizontal\",\n  Vertical = \"vertical\",\n}\n\nfunction getDirection(x: number, y: number): TouchDirection | undefined {\n  if (x > y && x > MIN_DISTANCE) {\n    return TouchDirection.Horizontal\n  }\n  if (y > x && y > MIN_DISTANCE) {\n    return TouchDirection.Vertical\n  }\n}\n\nfunction emptyFunction() {}\n\nexport interface TouchRef {\n  startX: number\n  startY: number\n  deltaX: number\n  deltaY: number\n  offsetX: number\n  offsetY: number\n  direction?: TouchDirection\n\n  isVertical(): boolean\n\n  isHorizontal(): boolean\n\n  start(event: ITouchEvent): void\n\n  move(event: ITouchEvent): void\n\n  reset(): void\n}\n\nexport function useTouch() {\n  const touchRef = useRef<TouchRef>({\n    startX: 0,\n    startY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    isVertical: () => false,\n    isHorizontal: () => false,\n    start: emptyFunction,\n    move: emptyFunction,\n    reset: emptyFunction,\n  })\n\n  const isVertical = useCallback(() => touchRef.current.direction === TouchDirection.Vertical, [])\n\n  const isHorizontal = useCallback(\n    () => touchRef.current.direction === TouchDirection.Horizontal,\n    [],\n  )\n\n  const reset = useCallback(function () {\n    touchRef.current.deltaX = 0\n    touchRef.current.deltaY = 0\n    touchRef.current.offsetX = 0\n    touchRef.current.offsetY = 0\n    touchRef.current.direction = undefined\n  }, [])\n\n  const start = useCallback(\n    function (event: ITouchEvent) {\n      reset()\n      touchRef.current.startX = event.touches[0].clientX\n      touchRef.current.startY = event.touches[0].clientY\n    },\n    [reset],\n  )\n\n  const move = useCallback(function (event: ITouchEvent) {\n    const touch = event.touches[0]\n    // Fix: Safari back will set clientX to negative number\n    touchRef.current.deltaX = touch.clientX < 0 ? 0 : touch.clientX - touchRef.current.startX\n    touchRef.current.deltaY = touch.clientY - touchRef.current.startY\n    touchRef.current.offsetX = Math.abs(touchRef.current.deltaX)\n    touchRef.current.offsetY = Math.abs(touchRef.current.deltaY)\n\n    if (!touchRef.current.direction) {\n      touchRef.current.direction = getDirection(touchRef.current.offsetX, touchRef.current.offsetY)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (touchRef.current.isHorizontal !== isHorizontal) {\n      touchRef.current.isHorizontal = isHorizontal\n    }\n  }, [touchRef, isHorizontal])\n\n  useEffect(() => {\n    if (touchRef.current.isVertical !== isVertical) {\n      touchRef.current.isVertical = isVertical\n    }\n  }, [touchRef, isVertical])\n\n  useEffect(() => {\n    if (touchRef.current.reset !== reset) {\n      touchRef.current.reset = reset\n    }\n  }, [touchRef, reset])\n\n  useEffect(() => {\n    if (touchRef.current.start !== start) {\n      touchRef.current.start = start\n    }\n  }, [touchRef, start])\n\n  useEffect(() => {\n    if (touchRef.current.move !== move) {\n      touchRef.current.move = move\n    }\n  }, [touchRef, move])\n\n  return touchRef.current\n}\n","import { prefixClassname } from \"./prefix\"\n\nexport const HAIRLINE_BORDER = prefixClassname(\"hairline\")\nexport const HAIRLINE_BORDER_TOP = `${HAIRLINE_BORDER}--top`\nexport const HAIRLINE_BORDER_LEFT = `${HAIRLINE_BORDER}--left`\nexport const HAIRLINE_BORDER_BOTTOM = `${HAIRLINE_BORDER}--bottom`\nexport const HAIRLINE_BORDER_SURROUND = `${HAIRLINE_BORDER}--surround`\nexport const HAIRLINE_BORDER_TOP_BOTTOM = `${HAIRLINE_BORDER}--top-bottom`\nexport const HAIRLINE_BORDER_UNSET_TOP_BOTTOM = `${HAIRLINE_BORDER}-unset--top-bottom`\n","import * as _ from \"lodash\"\nimport * as requestAnimationFrame from \"raf\"\n\nexport function cancelRaf(rafId: number | number[]) {\n  if (_.isNumber(rafId)) {\n    requestAnimationFrame.cancel(rafId)\n  } else if (_.isArray(rafId)) {\n    _.forEach(rafId, cancelRaf)\n  }\n}\n\nexport function raf(cb: FrameRequestCallback) {\n  // @ts-ignore\n  return requestAnimationFrame.default(cb)\n}\n\nexport default raf\n\nexport function doubleRaf(cb: FrameRequestCallback): [number, number] {\n  const rafIds: [number, number] = [0, 0]\n  rafIds[1] = raf(() => {\n    rafIds[0] = raf(cb)\n  })\n  return rafIds\n}\n","import { inBrowser } from \"../base\"\r\nimport { elementUnref, queryNodesRef } from \"./element\"\r\n\r\nexport function getComputedStyle(\r\n  elementOrRef: any,\r\n  computedStyle: string[],\r\n): Promise<CSSStyleDeclaration> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      return Promise.resolve(window.getComputedStyle(element as any))\r\n    } else {\r\n      return new Promise<CSSStyleDeclaration>((resolve) => {\r\n        queryNodesRef(element)\r\n          .fields(\r\n            {\r\n              computedStyle,\r\n            },\r\n            (result) => resolve(result as CSSStyleDeclaration),\r\n          )\r\n          .exec()\r\n      })\r\n    }\r\n  }\r\n\r\n  return Promise.resolve({} as CSSStyleDeclaration)\r\n}\r\n","import { createContext } from \"react\"\r\nimport { SwiperDirection } from \"./swiper.shared\"\r\n\r\nexport interface SwiperItemInstance {\r\n  setOffset: (offset: number) => void\r\n}\r\n\r\ninterface SwiperContextValue {\r\n  direction?: SwiperDirection\r\n  lazyRender?: boolean\r\n  loop?: boolean\r\n  size?: number\r\n  indicator?: number\r\n  count?: number\r\n  itemInstances: SwiperItemInstance[]\r\n}\r\n\r\nconst SwiperContext = createContext<SwiperContextValue>({\r\n  itemInstances: [],\r\n})\r\nexport default SwiperContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useCallback, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport SwiperContext from \"./swiper.context\"\r\n\r\nexport interface SwiperIndicatorProps extends ViewProps {\r\n  className?: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function SwiperIndicator(props: SwiperIndicatorProps) {\r\n  const { className, children, ...restProps } = props\r\n  const { indicator = 0, direction, count } = useContext(SwiperContext)\r\n\r\n  const renderIndicator = useCallback(\r\n    (index: number) => (\r\n      <View\r\n        key={index}\r\n        className={classNames(prefixClassname(\"swiper__indicator\"), {\r\n          [prefixClassname(\"swiper__indicator--active\")]: index === indicator,\r\n        })}\r\n      />\r\n    ),\r\n    [indicator],\r\n  )\r\n\r\n  const indicators = useMemo(() => !children && _.range(0, count).map(renderIndicator), [\r\n    children,\r\n    count,\r\n    renderIndicator,\r\n  ])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        {\r\n          [prefixClassname(\"swiper__indicators\")]: !children,\r\n          [prefixClassname(\"swiper__indicators--vertical\")]: !children && direction === \"vertical\",\r\n        },\r\n        className,\r\n      )}\r\n      children={children ?? indicators}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useEffect, useMemo, useRef, useState } from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { useRendered } from \"../utils/state\"\r\nimport SwiperContext from \"./swiper.context\"\r\n\r\nexport interface SwiperItemProps extends ViewProps {\r\n  __dataIndex__?: number\r\n  className?: string\r\n  style?: CSSProperties\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function SwiperItem(props: SwiperItemProps) {\r\n  const {\r\n    __dataIndex__ = 0,\r\n    className,\r\n    style: styleProp,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { lazyRender, size, direction, loop, indicator = 0, count = 0, itemInstances } = useContext(\r\n    SwiperContext,\r\n  )\r\n  const vertical = direction === \"vertical\"\r\n\r\n  const initializedRef = useRef(false)\r\n  const mountedRef = useRef(false)\r\n\r\n  const [offset, setOffset] = useState(0)\r\n\r\n  const shouldRender = useMemo(() => {\r\n    if (!lazyRender || initializedRef.current) {\r\n      return true\r\n    }\r\n\r\n    // wait for all item to mount, so we can get the exact count\r\n    if (!mountedRef.current && indicator !== 0) {\r\n      return false\r\n    }\r\n\r\n    const active = indicator\r\n    const maxActive = count - 1\r\n    const prevActive = active === 0 && loop ? maxActive : active - 1\r\n    const nextActive = active === maxActive && loop ? 0 : active + 1\r\n    initializedRef.current =\r\n      __dataIndex__ === active || __dataIndex__ === prevActive || __dataIndex__ === nextActive\r\n    return initializedRef.current\r\n  }, [__dataIndex__, count, indicator, lazyRender, loop])\r\n\r\n  useMounted(() => {\r\n    mountedRef.current = true\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!itemInstances[__dataIndex__]) {\r\n      itemInstances[__dataIndex__] = { setOffset }\r\n    }\r\n  }, [itemInstances, __dataIndex__])\r\n\r\n  const rootStyle = useRendered(() => {\r\n    const style: CSSProperties = {}\r\n    if (size) {\r\n      const mainAxis = vertical ? \"height\" : \"width\"\r\n      style[mainAxis] = addUnitPx(size)\r\n    }\r\n    style.transform = offset ? `translate${vertical ? \"Y\" : \"X\"}(${addUnitPx(offset)})` : \"\"\r\n    return style\r\n  })\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"swiper-item\"), className)}\r\n      style={{\r\n        ...styleProp,\r\n        ...rootStyle,\r\n      }}\r\n      children={shouldRender ? childrenProp : undefined}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { nextTick } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\"\r\nimport { useMounted, useUpdate, useWindowResize } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getComputedStyle } from \"../utils/dom/computed-style\"\r\nimport { preventDefault } from \"../utils/dom/event\"\r\nimport { getRect, makeRect, Rect } from \"../utils/dom/rect\"\r\nimport { addUnitPx, unitToPx } from \"../utils/format/unit\"\r\nimport { doubleRaf } from \"../utils/raf\"\r\nimport { useRendered, useRenderedRef, useToRef, useValue } from \"../utils/state\"\r\nimport { useTouch } from \"../utils/touch\"\r\nimport SwiperIndicator from \"./swiper-indicator\"\r\nimport SwiperItem from \"./swiper-item\"\r\nimport SwiperContext, { SwiperItemInstance } from \"./swiper.context\"\r\nimport { SwiperDirection } from \"./swiper.shared\"\r\n\r\ninterface SwiperChildren {\r\n  items: ReactNode[]\r\n  indicator: ReactNode\r\n  count: number\r\n}\r\n\r\nfunction useSwiperChildren(children: ReactNode): SwiperChildren {\r\n  const __children__: SwiperChildren = {\r\n    items: [],\r\n    indicator: undefined,\r\n    count: 0,\r\n  }\r\n  let index = 0\r\n  Children.forEach(children, (child: ReactNode, i) => {\r\n    // Skip is not Item of Swiper\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n    const element = child as ReactElement\r\n    const elementType = element.type\r\n    if (elementType === SwiperIndicator) {\r\n      __children__.indicator = element\r\n    } else if (elementType === SwiperItem) {\r\n      const { key } = element\r\n      __children__.items.push(\r\n        cloneElement(element, {\r\n          ...element.props,\r\n          key: key ?? i,\r\n          __dataIndex__: index++,\r\n        }),\r\n      )\r\n    } else {\r\n      __children__.items.push(element)\r\n    }\r\n  })\r\n\r\n  __children__.count = __children__.items.length\r\n  return __children__\r\n}\r\n\r\nfunction getIndicatorValue(value: number, count: number) {\r\n  return (value + count) % count\r\n}\r\n\r\nexport interface SwiperProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  defaultValue?: number\r\n  value?: number\r\n  lazyRender?: boolean\r\n  width?: number\r\n  height?: number\r\n  autoplay?: number\r\n  loop?: boolean\r\n  touchable?: boolean\r\n  duration?: number\r\n  direction?: SwiperDirection\r\n  stopPropagation?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: number): void\r\n}\r\n\r\nfunction Swiper(props: SwiperProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    lazyRender,\r\n    loop = true,\r\n    touchable = true,\r\n    autoplay = 0,\r\n    duration = 500,\r\n    width,\r\n    height,\r\n    direction = \"horizontal\",\r\n    stopPropagation = true,\r\n    children: childrenProp,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    value: valueProp,\r\n    defaultValue,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const valueRef = useToRef(value)\r\n\r\n  const { count, indicator, items } = useSwiperChildren(childrenProp)\r\n\r\n  const itemInstances = useMemo<SwiperItemInstance[]>(() => [], [])\r\n\r\n  const touch = useTouch()\r\n\r\n  const update = useUpdate()\r\n\r\n  const vertical = direction === \"vertical\"\r\n\r\n  const rootRef = useRef()\r\n\r\n  const rectRef = useRef<Rect>()\r\n\r\n  const [offset, setOffset] = useState<number>(0)\r\n\r\n  const swipingRef = useRef(false) // Whether to swiping manually\r\n\r\n  const activeIndexRef = useRef<number>(0)\r\n\r\n  const touchStartTimeRef = useRef(0)\r\n\r\n  const autoplayTimerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const valueIndicatorRef = useRenderedRef(() => getIndicatorValue(value, count))\r\n\r\n  const activeIndicatorRef = useRenderedRef(() => getIndicatorValue(activeIndexRef.current, count))\r\n\r\n  const getDelta = useCallback(\r\n    () => (vertical ? touch.deltaY : touch.deltaX),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getCorrectDirection = useCallback(\r\n    () => touch.direction === direction,\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const customRectRef = useRenderedRef(() => ({\r\n    width: width ?? rectRef.current?.width,\r\n    height: height ?? rectRef.current?.height,\r\n  }))\r\n\r\n  const propRectRef = useRenderedRef(() => ({\r\n    width,\r\n    height,\r\n  }))\r\n\r\n  const sizeRef = useRenderedRef(\r\n    () => (vertical ? customRectRef.current?.height : customRectRef.current?.width) ?? 0,\r\n  )\r\n\r\n  const trackSizeRef = useRenderedRef(() => count * sizeRef.current)\r\n\r\n  const minOffsetRef = useRenderedRef(() => {\r\n    if (rectRef.current) {\r\n      const base = (vertical ? rectRef.current?.height : rectRef.current?.width) ?? 0\r\n      return base - sizeRef.current * count\r\n    }\r\n    return 0\r\n  })\r\n\r\n  const maxCountRef = useRenderedRef(() =>\r\n    Math.ceil(Math.abs(minOffsetRef.current) / sizeRef.current),\r\n  )\r\n\r\n  const getTargetActive = useCallback(\r\n    (pace: number) => {\r\n      if (pace) {\r\n        if (loop) {\r\n          return _.clamp(activeIndexRef.current + pace, -1, count)\r\n        }\r\n        return _.clamp(activeIndexRef.current + pace, 0, maxCountRef.current)\r\n      }\r\n      return activeIndexRef.current\r\n    },\r\n    [loop, maxCountRef, count],\r\n  )\r\n\r\n  const getTargetOffset = useCallback(\r\n    (targetActive: number, offset = 0) => {\r\n      let currentPosition = targetActive * sizeRef.current\r\n      if (!loop) {\r\n        currentPosition = Math.min(currentPosition, -minOffsetRef.current)\r\n      }\r\n\r\n      let targetOffset = offset - currentPosition\r\n      if (!loop) {\r\n        targetOffset = _.clamp(targetOffset, minOffsetRef.current, 0)\r\n      }\r\n      return targetOffset\r\n    },\r\n    [sizeRef, loop, minOffsetRef],\r\n  )\r\n\r\n  const moveTo = useCallback(\r\n    ({ pace = 0, offset = 0, emitChange = false }) => {\r\n      if (count <= 1) {\r\n        return\r\n      }\r\n\r\n      const targetActive = getTargetActive(pace)\r\n      const targetOffset = getTargetOffset(targetActive, offset)\r\n      if (loop) {\r\n        if (itemInstances[0] && targetOffset !== minOffsetRef.current) {\r\n          const outRightBound = targetOffset < minOffsetRef.current\r\n          itemInstances[0].setOffset(outRightBound ? trackSizeRef.current : 0)\r\n        }\r\n\r\n        if (itemInstances[count - 1] && targetOffset !== 0) {\r\n          const outLeftBound = targetOffset > 0\r\n          itemInstances[count - 1].setOffset(outLeftBound ? -trackSizeRef.current : 0)\r\n        }\r\n      }\r\n\r\n      const previousActiveIndex = activeIndexRef.current\r\n      activeIndexRef.current = targetActive\r\n      setOffset(targetOffset)\r\n\r\n      if (emitChange && previousActiveIndex !== targetActive) {\r\n        setValue(getIndicatorValue(targetActive, count))\r\n      }\r\n    },\r\n    [\r\n      count,\r\n      getTargetActive,\r\n      getTargetOffset,\r\n      loop,\r\n      itemInstances,\r\n      minOffsetRef,\r\n      trackSizeRef,\r\n      setValue,\r\n    ],\r\n  )\r\n\r\n  const correctPosition = useCallback(() => {\r\n    swipingRef.current = true\r\n    if (activeIndexRef.current <= -1) {\r\n      moveTo({ pace: count })\r\n    } else if (activeIndexRef.current >= count) {\r\n      moveTo({ pace: -count })\r\n    }\r\n  }, [count, moveTo])\r\n\r\n  const swipeTo = useCallback(\r\n    (index: number) => {\r\n      correctPosition()\r\n      touch.reset()\r\n\r\n      doubleRaf(() => {\r\n        let targetIndex\r\n        if (loop && index === count) {\r\n          targetIndex = activeIndexRef.current === 0 ? 0 : index\r\n        } else {\r\n          targetIndex = index % count\r\n        }\r\n\r\n        swipingRef.current = false\r\n\r\n        moveTo({\r\n          pace: targetIndex - activeIndexRef.current,\r\n          emitChange: true,\r\n        })\r\n      })\r\n    },\r\n    [correctPosition, count, loop, moveTo, touch],\r\n  )\r\n\r\n  // const previous = useCallback(() => {\r\n  //   correctPosition()\r\n  //   doubleRaf(() => {\r\n  //     swipingRef.current = false\r\n  //     moveTo({\r\n  //       pace: -1,\r\n  //       emitChange: true,\r\n  //     })\r\n  //   })\r\n  // }, [correctPosition, moveTo])\r\n\r\n  const next = useCallback(() => {\r\n    correctPosition()\r\n    doubleRaf(() => {\r\n      swipingRef.current = false\r\n      moveTo({\r\n        pace: 1,\r\n        emitChange: true,\r\n      })\r\n    })\r\n  }, [correctPosition, moveTo])\r\n\r\n  const stopAutoplay = useCallback(() => {\r\n    if (autoplayTimerRef.current) {\r\n      clearTimeout(autoplayTimerRef.current)\r\n    }\r\n  }, [])\r\n\r\n  const startAutoplay = useCallback(() => {\r\n    stopAutoplay()\r\n    if (autoplay > 0 && count > 1) {\r\n      autoplayTimerRef.current = setTimeout(() => {\r\n        next()\r\n        startAutoplay()\r\n      }, +autoplay)\r\n    }\r\n  }, [autoplay, count, next, stopAutoplay])\r\n\r\n  const onTouchStart = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (!touchable) {\r\n        return\r\n      }\r\n\r\n      touch.start(event)\r\n      touchStartTimeRef.current = Date.now()\r\n\r\n      stopAutoplay()\r\n      correctPosition()\r\n    },\r\n    [correctPosition, stopAutoplay, touch, touchable],\r\n  )\r\n\r\n  const onTouchMove = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (!touchable || !swipingRef.current) {\r\n        return\r\n      }\r\n\r\n      touch.move(event)\r\n      const correctDirection = getCorrectDirection()\r\n      // if user starting to touchmove, prevent the event bubbling to\r\n      // avoid affecting the parent components\r\n      const shouldPrevent = correctDirection || touch.offsetY > touch.offsetX === vertical\r\n      if (shouldPrevent) {\r\n        preventDefault(event, stopPropagation)\r\n      }\r\n\r\n      if (correctDirection) {\r\n        moveTo({ offset: getDelta() })\r\n      }\r\n    },\r\n    [getCorrectDirection, getDelta, moveTo, stopPropagation, touch, touchable, vertical],\r\n  )\r\n\r\n  const onTouchEnd = useCallback(() => {\r\n    if (!touchable || !swipingRef.current) {\r\n      return\r\n    }\r\n    const duration = Date.now() - touchStartTimeRef.current\r\n\r\n    const delta = getDelta()\r\n    const speed = delta / duration\r\n    const shouldSwipe = Math.abs(speed) > 0.25 || Math.abs(delta) > sizeRef.current / 2\r\n\r\n    swipingRef.current = false\r\n    const correctDirection = getCorrectDirection()\r\n    if (shouldSwipe && correctDirection) {\r\n      const offset = vertical ? touch.offsetY : touch.offsetX\r\n\r\n      let pace: number\r\n\r\n      if (loop) {\r\n        pace = offset > 0 ? (delta > 0 ? -1 : 1) : 0\r\n      } else {\r\n        pace = -Math[delta > 0 ? \"ceil\" : \"floor\"](delta / sizeRef.current)\r\n      }\r\n\r\n      moveTo({\r\n        pace,\r\n        emitChange: true,\r\n      })\r\n    } else if (delta) {\r\n      moveTo({ pace: 0 })\r\n    }\r\n    startAutoplay()\r\n  }, [\r\n    touchable,\r\n    getDelta,\r\n    sizeRef,\r\n    getCorrectDirection,\r\n    startAutoplay,\r\n    vertical,\r\n    touch.offsetY,\r\n    touch.offsetX,\r\n    loop,\r\n    moveTo,\r\n  ])\r\n\r\n  const getTrackRect = useCallback(\r\n    () =>\r\n      Promise.all([\r\n        getRect(rootRef),\r\n        getComputedStyle(rootRef, [\"width\", \"height\"]),\r\n      ]).then(([rect, style]) =>\r\n        makeRect(\r\n          style.width === \"auto\" ? rect.width : unitToPx(style.width),\r\n          style.height === \"auto\" ? rect.height : unitToPx(style.height),\r\n        ),\r\n      ),\r\n    [],\r\n  )\r\n\r\n  const initialize = useCallback(\r\n    async (activeIndex = valueRef.current) => {\r\n      if (!rootRef.current) {\r\n        return\r\n      }\r\n      rectRef.current = await getTrackRect()\r\n      if (count) {\r\n        activeIndex = Math.min(count - 1, activeIndex)\r\n      }\r\n      activeIndexRef.current = activeIndex\r\n      swipingRef.current = true\r\n      const targetOffset = getTargetOffset(activeIndex)\r\n      setOffset(targetOffset)\r\n      // Force update render\r\n      if (targetOffset === offset) {\r\n        update()\r\n      }\r\n      itemInstances.forEach((item) => item.setOffset(0))\r\n    },\r\n    [valueRef, getTrackRect, count, getTargetOffset, offset, itemInstances, update],\r\n  )\r\n\r\n  const resize = useCallback(() => nextTick(() => initialize(activeIndexRef.current)), [initialize])\r\n\r\n  useMounted(initialize)\r\n\r\n  useWindowResize(resize)\r\n\r\n  useMounted(() => {\r\n    startAutoplay()\r\n    return stopAutoplay\r\n  })\r\n\r\n  useEffect(\r\n    () => {\r\n      const valueIndicator = valueIndicatorRef.current\r\n      const activeIndicator = activeIndicatorRef.current\r\n      if (valueIndicator !== activeIndicator) {\r\n        try {\r\n          stopAutoplay()\r\n          swipeTo(valueIndicator)\r\n        } finally {\r\n          startAutoplay()\r\n        }\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [valueIndicatorRef.current],\r\n  )\r\n\r\n  const trackStyle = useRendered(() => {\r\n    const style: CSSProperties = {\r\n      transitionDuration: `${swipingRef.current ? 0 : duration}ms`,\r\n      transform: `translate${vertical ? \"Y\" : \"X\"}(${addUnitPx(offset)})`,\r\n    }\r\n\r\n    if (sizeRef.current) {\r\n      const mainAxis = vertical ? \"height\" : \"width\"\r\n      style[mainAxis] = `${addUnitPx(trackSizeRef.current)}`\r\n      const crossAxis = vertical ? \"width\" : \"height\"\r\n      const crossAxisValue = propRectRef.current[crossAxis]\r\n      style[crossAxis] = crossAxisValue ? addUnitPx(crossAxisValue) : \"\"\r\n    }\r\n    return style\r\n  })\r\n\r\n  return (\r\n    <View ref={rootRef} className={classNames(prefixClassname(\"swiper\"), className)} {...restProps}>\r\n      <SwiperContext.Provider\r\n        value={{\r\n          lazyRender,\r\n          loop,\r\n          direction,\r\n          indicator: activeIndicatorRef.current,\r\n          size: sizeRef.current,\r\n          count,\r\n          itemInstances,\r\n        }}\r\n      >\r\n        <View\r\n          className={classNames(prefixClassname(\"swiper__track\"), {\r\n            [prefixClassname(\"swiper__track--vertical\")]: vertical,\r\n          })}\r\n          catchMove\r\n          onTouchStart={onTouchStart}\r\n          onTouchMove={onTouchMove}\r\n          onTouchEnd={onTouchEnd}\r\n          onTouchCancel={onTouchEnd}\r\n          style={trackStyle}\r\n          children={items}\r\n        />\r\n        {indicator}\r\n      </SwiperContext.Provider>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Swiper\r\n","import SwiperElement, { SwiperProps } from \"./swiper\"\r\nimport SwiperIndicator, { SwiperIndicatorProps } from \"./swiper-indicator\"\r\nimport SwiperItem, { SwiperItemProps } from \"./swiper-item\"\r\nimport { SwiperItemEvent } from \"./swiper.shared\"\r\n\r\ninterface SwiperInterface {\r\n  (props: SwiperProps): JSX.Element\r\n\r\n  Item: typeof SwiperItem\r\n  Indicator: typeof SwiperIndicator\r\n}\r\n\r\nconst Swiper = (SwiperElement as unknown) as SwiperInterface\r\n\r\nSwiper.Item = SwiperItem\r\nSwiper.Indicator = SwiperIndicator\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Swiper {\r\n  export type ItemEvent = SwiperItemEvent\r\n\r\n  export type ItemProps = SwiperItemProps\r\n\r\n  export type IndicatorProps = SwiperIndicatorProps\r\n}\r\n\r\nexport default Swiper\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { getSystemInfo } from \"@tarojs/taro\"\r\nimport { useState } from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\n\r\nconst INITIAL_RECT: SystemRect = {\r\n  screenHeight: 0,\r\n  screenWidth: 0,\r\n  windowHeight: 0,\r\n  windowWidth: 0,\r\n}\r\n\r\nexport interface SystemRect {\r\n  screenHeight: number\r\n  screenWidth: number\r\n  windowHeight: number\r\n  windowWidth: number\r\n}\r\n\r\nexport function getSystemRect(): Promise<SystemRect> {\r\n  return getSystemInfo().then(({ screenHeight, screenWidth, windowHeight, windowWidth }) => ({\r\n    screenHeight,\r\n    screenWidth,\r\n    windowHeight,\r\n    windowWidth,\r\n  }))\r\n}\r\n\r\nexport function useSystemRect(): SystemRect {\r\n  const [rect, setRect] = useState<SystemRect>(INITIAL_RECT)\r\n  useMounted(() => getSystemRect().then(setRect))\r\n  return rect\r\n}\r\n","import Sticky from \"./sticky\"\n\nexport default Sticky\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { PageScrollObject, usePageScroll } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport {\r\n  CSSProperties,\r\n  MutableRefObject,\r\n  ReactNode,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport { addUnitPx, unitToPx } from \"../utils/format/unit\"\r\nimport { getSystemRect } from \"../utils/system\"\r\n\r\ninterface RootReact {\r\n  height?: number\r\n  width?: number\r\n}\r\n\r\ntype StickyPosition = \"top\" | \"bottom\"\r\n\r\ninterface StickyOffset {\r\n  top?: number | string\r\n  bottom?: number | string\r\n}\r\n\r\ninterface StickyProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  position?: StickyPosition\r\n  offset?: StickyOffset\r\n  offsetTop?: number | string\r\n  offsetBottom?: number | string\r\n  container?: MutableRefObject<Element | undefined>\r\n  children?: ReactNode\r\n\r\n  onChange?(fixed: boolean): void\r\n\r\n  onScroll?(scroll: PageScrollObject): void\r\n}\r\n\r\nexport default function Sticky(props: StickyProps) {\r\n  const {\r\n    className,\r\n    style: styleProp,\r\n    position = \"top\",\r\n    offsetTop: offsetTopProp,\r\n    offsetBottom: offsetBottomProp,\r\n    offset: offsetProp,\r\n    container: containerRef,\r\n    children,\r\n    onChange,\r\n    onScroll,\r\n    ...restProps\r\n  } = props\r\n\r\n  if (offsetProp) {\r\n    const { top, bottom } = offsetProp\r\n    if (top) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\"[Deprecated] Use the 'offsetTop' prop instead of the 'offset.top' prop.\")\r\n    }\r\n    if (bottom) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\"[Deprecated] Use the 'offsetBottom' prop instead of the 'offset.bottom' prop.\")\r\n    }\r\n  }\r\n\r\n  const offsetTop = offsetTopProp ?? offsetProp?.top\r\n  const offsetBottom = offsetBottomProp ?? offsetProp?.bottom\r\n\r\n  const rootRef = useRef<ViewProps>()\r\n  const counterRef = useRef(0)\r\n\r\n  const [rootRect, setRootRect] = useState<RootReact>({})\r\n\r\n  const [fixed, setFixed] = useState(false)\r\n  const [transform, setTransform] = useState(0)\r\n\r\n  const offsetValue = useMemo(\r\n    () => unitToPx((position === \"top\" ? offsetTop : offsetBottom) ?? 0),\r\n    [offsetBottom, offsetTop, position],\r\n  )\r\n\r\n  const rootStyle: CSSProperties | undefined = useMemo(() => {\r\n    if (!fixed) {\r\n      return {\r\n        height: \"\",\r\n        width: \"\",\r\n      }\r\n    }\r\n    const style: CSSProperties = {}\r\n    if (rootRect.height) {\r\n      style.height = addUnitPx(rootRect.height)\r\n    }\r\n    if (rootRect.width) {\r\n      style.width = addUnitPx(rootRect.width)\r\n    }\r\n    return style\r\n  }, [fixed, rootRect.height, rootRect.width])\r\n\r\n  const stickyStyle: CSSProperties | undefined = useMemo(() => {\r\n    if (!fixed) {\r\n      return {\r\n        height: \"\",\r\n        width: \"\",\r\n        [position]: \"\",\r\n      }\r\n    }\r\n    const style: CSSProperties = {}\r\n    if (rootRect.height) {\r\n      style.height = addUnitPx(rootRect.height)\r\n    }\r\n    if (rootRect.width) {\r\n      style.width = addUnitPx(rootRect.width)\r\n    }\r\n    style.transform = transform ? `translate3d(0, ${addUnitPx(transform)}, 0)` : \"\"\r\n    style[position] = addUnitPx(offsetValue)\r\n    return style\r\n  }, [fixed, rootRect.height, rootRect.width, transform, position, offsetValue])\r\n\r\n  async function invokeScroll({ scrollTop }: PageScrollObject) {\r\n    const __rootRect__ = await getRect(rootRef)\r\n    if (__rootRect__) {\r\n      setRootRect(__rootRect__)\r\n      if (position === \"top\") {\r\n        if (containerRef) {\r\n          const containerRect = await getRect(containerRef)\r\n          const difference = containerRect.bottom - offsetValue - __rootRect__.height\r\n          setTransform(difference < 0 ? difference : 0)\r\n          setFixed(offsetValue > __rootRect__.top && containerRect.bottom > 0)\r\n        } else {\r\n          setFixed(offsetValue > __rootRect__.top)\r\n        }\r\n      } else {\r\n        const { windowHeight } = await getSystemRect()\r\n        if (containerRef) {\r\n          const containerRect = await getRect(containerRef)\r\n          const difference = windowHeight - containerRect.top - offsetValue - __rootRect__.height\r\n          setTransform(difference < 0 ? difference : 0)\r\n          setFixed(\r\n            windowHeight - offsetValue < __rootRect__.bottom && windowHeight > containerRect.top,\r\n          )\r\n        } else {\r\n          setFixed(windowHeight - offsetValue < __rootRect__.bottom)\r\n        }\r\n      }\r\n    }\r\n    onScroll?.({ scrollTop })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (counterRef.current > 0) {\r\n      onChange?.(fixed)\r\n    }\r\n    counterRef.current++\r\n  }, [fixed, onChange])\r\n\r\n  useMounted(() => invokeScroll({ scrollTop: 0 }))\r\n\r\n  usePageScroll(({ scrollTop }) => invokeScroll({ scrollTop }))\r\n\r\n  return (\r\n    <View\r\n      ref={rootRef}\r\n      style={{\r\n        ...styleProp,\r\n        ...rootStyle,\r\n      }}\r\n      {...restProps}\r\n    >\r\n      <View\r\n        style={stickyStyle}\r\n        className={classNames(\r\n          prefixClassname(\"sticky\"),\r\n          {\r\n            [prefixClassname(\"sticky--fixed\")]: fixed,\r\n          },\r\n          className,\r\n        )}\r\n        children={children}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../../sticky/style\"\r\nimport \"../../swiper/style\"\r\nimport \"../index.scss\"\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\n\r\ninterface TabPaneProps extends ViewProps {\r\n  className?: string\r\n  value?: any\r\n  classNames?: { title: string }\r\n  title?: ReactNode\r\n  disabled?: boolean\r\n  dot?: boolean\r\n  badge?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function TabPane(props: TabPaneProps) {\r\n  return <></>\r\n}\r\n","import { createContext } from \"react\"\r\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\r\n\r\ninterface TabsContextValue {\r\n  index?: number\r\n  value: any\r\n  duration?: number\r\n  lazyRender: boolean\r\n  animated: boolean\r\n  swipeable: boolean\r\n  theme?: TabsTheme\r\n  bordered?: boolean\r\n  ellipsis?: boolean\r\n  tabObjects: TabObject[]\r\n\r\n  onTabClick?(event: TabEvent): void\r\n}\r\n\r\nconst TabsContext = createContext<TabsContextValue>({\r\n  value: undefined,\r\n  lazyRender: true,\r\n  animated: false,\r\n  swipeable: false,\r\n  tabObjects: [],\r\n})\r\n\r\nexport default TabsContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useMemo, useRef } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport Swiper from \"../swiper\"\r\nimport TabsContext from \"./tabs.context\"\r\n\r\ninterface TabPaneBaseProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  index: number\r\n  value?: any\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function TabPaneBase(props: TabPaneBaseProps) {\r\n  const { className, style, index, value, children, ...restProps } = props\r\n  const { index: activeIndex, value: activeValue, lazyRender, animated, swipeable } = useContext(\r\n    TabsContext,\r\n  )\r\n\r\n  const active = activeValue === value\r\n\r\n  const initializedRef = useRef(false)\r\n\r\n  const shouldRender = useMemo(() => {\r\n    if (!lazyRender) {\r\n      return true\r\n    }\r\n\r\n    if (initializedRef.current) {\r\n      return true\r\n    }\r\n\r\n    if ((index - 1 === activeIndex || index + 1 === activeIndex) && !initializedRef.current) {\r\n      initializedRef.current = true\r\n      return true\r\n    }\r\n\r\n    if (active && !initializedRef.current) {\r\n      initializedRef.current = true\r\n    }\r\n    return active\r\n  }, [active, activeIndex, index, lazyRender])\r\n\r\n  const tabPane = (\r\n    <View\r\n      style={{\r\n        ...style,\r\n        display: !(animated || swipeable) && !active ? \"none\" : \"\",\r\n      }}\r\n      className={classNames(prefixClassname(\"tabs__tab-pane\"), className)}\r\n      children={shouldRender ? children : undefined}\r\n      {...restProps}\r\n    />\r\n  )\r\n\r\n  if (animated || swipeable) {\r\n    return (\r\n      <Swiper.Item\r\n        className={classNames(prefixClassname(\"tabs__tab-pane-wrapper\"), {\r\n          [prefixClassname(\"tabs__tab-pane-wrapper--inactive\")]: !active,\r\n        })}\r\n        children={tabPane}\r\n      />\r\n    )\r\n  }\r\n\r\n  return tabPane\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport Swiper from \"../swiper\"\r\nimport TabPaneBase from \"./tab-pane-base\"\r\nimport { TabEvent, TabObject } from \"./tabs.shared\"\r\n\r\nfunction useTabPanes(tabObjects?: TabObject[]): ReactNode {\r\n  return useMemo(() => _.map(tabObjects, (props) => <TabPaneBase {...props} />), [tabObjects])\r\n}\r\n\r\ninterface TabsContentProps {\r\n  value: any\r\n  lazyRender: boolean\r\n  duration?: number\r\n  animated: boolean\r\n  swipeable: boolean\r\n  tabObjects: TabObject[]\r\n\r\n  onTabClick?(event: TabEvent): void\r\n}\r\n\r\nexport function TabsContent(props: TabsContentProps) {\r\n  const { value: activeValue, duration, animated, swipeable, tabObjects, onTabClick } = props\r\n\r\n  const panes = useTabPanes(tabObjects)\r\n\r\n  function onSwiperChange(index: number) {\r\n    const tabObject = _.get(tabObjects, index)\r\n    if (tabObject) {\r\n      const { value, title, disabled } = tabObject\r\n      if (!disabled) {\r\n        onTabClick?.({ value, title, disabled })\r\n      }\r\n    }\r\n  }\r\n\r\n  const renderChildren = () => {\r\n    if (animated || swipeable) {\r\n      return (\r\n        <Swiper\r\n          value={activeValue as number}\r\n          loop={false}\r\n          className={prefixClassname(\"tabs__track\")}\r\n          duration={duration}\r\n          touchable={swipeable}\r\n          children={panes}\r\n          onChange={onSwiperChange}\r\n        />\r\n      )\r\n    }\r\n\r\n    return panes\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"tabs__content\"), {\r\n        [prefixClassname(\"tabs__content--animated\")]: animated,\r\n      })}\r\n      children={renderChildren()}\r\n    />\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TabsContext from \"./tabs.context\"\r\n\r\ninterface TabsLineProps {\r\n  active?: boolean\r\n}\r\n\r\nexport default function TabsLine(props: TabsLineProps) {\r\n  const { active } = props\r\n  const { duration } = useContext(TabsContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"tabs__line\"), {\r\n        [prefixClassname(\"tabs__line--active\")]: active,\r\n      })}\r\n      style={{ transitionDuration: `${duration}ms` }}\r\n    />\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TabsLine from \"./tabs-line\"\r\n\r\ninterface TabProps extends ViewProps {\r\n  active?: boolean\r\n  disabled?: boolean\r\n  underline?: boolean\r\n  dot?: boolean\r\n  badge?: ReactNode\r\n  ellipsis?: boolean\r\n  flexBasis?: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Tab(props: TabProps) {\r\n  const {\r\n    className,\r\n    active,\r\n    disabled = false,\r\n    underline,\r\n    ellipsis,\r\n    flexBasis,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      style={{ flexBasis }}\r\n      className={classNames(\r\n        prefixClassname(\"tabs__tab\"),\r\n        {\r\n          [prefixClassname(\"tabs__tab--active\")]: active,\r\n          [prefixClassname(\"tabs__tab--disabled\")]: disabled,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"tabs__tab__content\"), {\r\n          [prefixClassname(\"ellipsis\")]: ellipsis,\r\n        })}\r\n        children={children}\r\n      />\r\n      {underline && <TabsLine active={active} />}\r\n    </View>\r\n  )\r\n}\r\n","import { ScrollView, View } from \"@tarojs/components\"\r\nimport { nextTick, offWindowResize, onWindowResize } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { HAIRLINE_BORDER_TOP_BOTTOM } from \"../styles/hairline\"\r\nimport { getRect, getRects } from \"../utils/dom/rect\"\r\nimport Tab from \"./tab\"\r\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\r\n\r\nexport interface NavOffset {\r\n  left?: number\r\n  width?: number\r\n}\r\n\r\nexport interface TabOffset {\r\n  left?: number\r\n  width?: number\r\n}\r\n\r\ninterface TabsHeaderProps {\r\n  value: any\r\n  theme?: TabsTheme\r\n  bordered?: boolean\r\n  ellipsis?: boolean\r\n  tabObjects: TabObject[]\r\n\r\n  onTabClick?(event: TabEvent): void\r\n}\r\n\r\nexport default function TabsHeader(props: TabsHeaderProps) {\r\n  const { value: activeValue, theme, ellipsis, bordered, tabObjects, onTabClick } = props\r\n  const themeLine = theme === \"line\"\r\n  const themeCard = theme === \"card\"\r\n\r\n  const navRef = useRef()\r\n\r\n  const [navOffset, setNavOffset] = useState<NavOffset>({})\r\n  const [tabOffsets, setTabOffsets] = useState<TabOffset[]>([])\r\n\r\n  const activeIndex = useMemo(() => _.findIndex(tabObjects, (tab) => tab.value === activeValue), [\r\n    tabObjects,\r\n    activeValue,\r\n  ])\r\n\r\n  const activeOffset = useMemo(() => {\r\n    if (_.isEmpty(tabOffsets) || activeIndex === -1 || activeIndex >= _.size(tabOffsets)) {\r\n      return {}\r\n    }\r\n    const { width } = tabOffsets[activeIndex]\r\n    const left = tabOffsets\r\n      .slice(0, activeIndex)\r\n      .reduce((prev: number, curr: TabOffset) => prev + (curr.width ?? 0), 0)\r\n    return {\r\n      left,\r\n      width,\r\n    }\r\n  }, [tabOffsets, activeIndex])\r\n\r\n  const scrollLeft = useMemo(() => {\r\n    if (navOffset) {\r\n      const { width: navOffsetWidth = 0 } = navOffset\r\n      const { left: offsetLeft = 0, width: offsetWidth = 0 } = activeOffset\r\n      return offsetLeft - (navOffsetWidth - offsetWidth) / 2\r\n    }\r\n    return 0\r\n  }, [navOffset, activeOffset])\r\n\r\n  const resize = useCallback(() => {\r\n    Promise.all([getRect(navRef), getRects(navRef, ` .${prefixClassname(\"tabs__tab\")}`)]).then(\r\n      ([navRect, tabRects]) => {\r\n        setNavOffset(navRect)\r\n        setTabOffsets(tabRects)\r\n      },\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => nextTick(resize), [resize, tabObjects])\r\n\r\n  // resize\r\n  useEffect(() => {\r\n    onWindowResize?.(resize)\r\n    return () => offWindowResize?.(resize)\r\n  }, [resize])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"tabs__wrap\"),\r\n        prefixClassname(\"tabs__wrap--scrollable\"),\r\n        {\r\n          [HAIRLINE_BORDER_TOP_BOTTOM]: bordered && themeLine,\r\n        },\r\n      )}\r\n    >\r\n      <ScrollView\r\n        scrollX\r\n        scrollWithAnimation\r\n        scrollLeft={scrollLeft}\r\n        className={classNames(prefixClassname(\"tabs__wrap__scroll\"), {\r\n          [prefixClassname(\"tabs__wrap__scroll--line\")]: themeLine,\r\n          [prefixClassname(\"tabs__wrap__scroll--card\")]: themeCard,\r\n        })}\r\n      >\r\n        <View\r\n          ref={navRef}\r\n          className={classNames(prefixClassname(\"tabs__nav\"), {\r\n            [prefixClassname(\"tabs__nav--line\")]: themeLine,\r\n            [prefixClassname(\"tabs__nav--card\")]: themeCard,\r\n          })}\r\n        >\r\n          {\r\n            //\r\n            _.map(tabObjects, (tabObject) => (\r\n              <Tab\r\n                key={tabObject.key}\r\n                // TODO swipeThreshold does not support\r\n                flexBasis={themeLine && ellipsis ? `${88 / 4}%` : \"\"}\r\n                className={tabObject?.classNames?.title}\r\n                dot={tabObject.dot}\r\n                badge={tabObject.badge}\r\n                active={activeValue === tabObject.value}\r\n                disabled={tabObject.disabled}\r\n                underline={themeLine}\r\n                ellipsis={themeLine && ellipsis}\r\n                children={tabObject.title}\r\n                onClick={() =>\r\n                  onTabClick?.({\r\n                    value: tabObject.value,\r\n                    title: tabObject.title,\r\n                    disabled: tabObject.disabled,\r\n                  })\r\n                }\r\n              />\r\n            ))\r\n          }\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { PageScrollObject } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\"\r\nimport Sticky from \"../sticky\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useValue } from \"../utils/state\"\r\nimport TabPane from \"./tab-pane\"\r\nimport { TabsContent } from \"./tabs-content\"\r\nimport TabsHeader from \"./tabs-header\"\r\nimport TabsContext from \"./tabs.context\"\r\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\r\n\r\nfunction useTabObjects(children: ReactNode) {\r\n  return useMemo(() => {\r\n    const tabObjects: TabObject[] = []\r\n\r\n    Children.forEach(children, (node: ReactNode) => {\r\n      if (!isValidElement(node)) {\r\n        return node\r\n      }\r\n      const element = node as ReactElement\r\n      if (element.type !== TabPane) {\r\n        return element\r\n      }\r\n      const { key, props } = element\r\n      const index = _.size(tabObjects)\r\n      const { value, ...restProps } = props\r\n      tabObjects.push({\r\n        key: key ?? index,\r\n        index,\r\n        value: value ?? index,\r\n        ...restProps,\r\n      })\r\n    })\r\n\r\n    return tabObjects\r\n  }, [children])\r\n}\r\n\r\ninterface TabsSticky {\r\n  offsetTop?: string | number\r\n}\r\n\r\nfunction useTabsSticky(sticky?: boolean | TabsSticky): TabsSticky | undefined {\r\n  if (sticky === false) {\r\n    return undefined\r\n  }\r\n  if (_.isBoolean(sticky) && sticky) {\r\n    return {\r\n      offsetTop: 0,\r\n    }\r\n  }\r\n  return sticky\r\n}\r\n\r\nexport interface TabsProps extends ViewProps {\r\n  className?: string\r\n  defaultValue?: any\r\n  value?: any\r\n  theme?: TabsTheme\r\n  duration?: number\r\n  lazyRender?: boolean\r\n  animated?: boolean\r\n  swipeable?: boolean\r\n  sticky?: boolean | TabsSticky\r\n  bordered?: boolean\r\n  ellipsis?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any, event: TabEvent): void\r\n\r\n  onTabClick?(event: TabEvent): void\r\n\r\n  onScroll?(scroll: PageScrollObject): void\r\n}\r\n\r\nfunction Tabs(props: TabsProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    duration = 300,\r\n    lazyRender = true,\r\n    animated = false,\r\n    swipeable = false,\r\n    sticky = false,\r\n    theme = \"line\",\r\n    ellipsis = true,\r\n    bordered,\r\n    children: childrenProp,\r\n    onTabClick,\r\n    onChange,\r\n    onScroll,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    defaultValue,\r\n    value: valueProp,\r\n  })\r\n\r\n  const rootRef = useRef()\r\n\r\n  const stickyProps = useTabsSticky(sticky)\r\n\r\n  const tabObjects = useTabObjects(childrenProp)\r\n\r\n  const index = useMemo<number | undefined>(() => {\r\n    for (const tab of tabObjects) {\r\n      if (tab.value === value) {\r\n        return tab.index\r\n      }\r\n    }\r\n  }, [tabObjects, value])\r\n\r\n  const handleTabClick = useCallback(\r\n    (event: TabEvent) => {\r\n      if (!event.disabled) {\r\n        setValue(event.value)\r\n        onChange?.(event.value, event)\r\n      }\r\n      onTabClick?.(event)\r\n    },\r\n    [onChange, onTabClick, setValue],\r\n  )\r\n\r\n  const headerRender = useMemo(\r\n    () => (\r\n      <TabsHeader\r\n        value={value}\r\n        theme={theme}\r\n        bordered={bordered}\r\n        ellipsis={ellipsis}\r\n        tabObjects={tabObjects}\r\n        onTabClick={handleTabClick}\r\n      />\r\n    ),\r\n    [bordered, ellipsis, handleTabClick, tabObjects, theme, value],\r\n  )\r\n\r\n  return (\r\n    <TabsContext.Provider\r\n      value={{\r\n        index,\r\n        value,\r\n        duration,\r\n        lazyRender,\r\n        animated,\r\n        swipeable,\r\n        theme,\r\n        ellipsis,\r\n        bordered,\r\n        tabObjects,\r\n        onTabClick: handleTabClick,\r\n      }}\r\n    >\r\n      <View\r\n        ref={rootRef}\r\n        className={classNames(\r\n          prefixClassname(\"tabs\"),\r\n          {\r\n            [prefixClassname(\"tabs--line\")]: theme === \"line\",\r\n            [prefixClassname(\"tabs--card\")]: theme === \"card\",\r\n          },\r\n          className,\r\n        )}\r\n        {...restProps}\r\n      >\r\n        {stickyProps ? (\r\n          <Sticky\r\n            container={rootRef}\r\n            offsetTop={stickyProps.offsetTop}\r\n            children={headerRender}\r\n            onScroll={onScroll}\r\n          />\r\n        ) : (\r\n          headerRender\r\n        )}\r\n        <TabsContent\r\n          value={value}\r\n          lazyRender={lazyRender}\r\n          duration={duration}\r\n          animated={animated}\r\n          swipeable={swipeable}\r\n          tabObjects={tabObjects}\r\n          onTabClick={handleTabClick}\r\n        />\r\n      </View>\r\n    </TabsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Tabs\r\n","import TabPane from \"./tab-pane\"\r\nimport TabsElement, { TabsProps } from \"./tabs\"\r\nimport { TabEvent as SharedTabEvent } from \"./tabs.shared\"\r\n\r\ninterface TabsInterface {\r\n  (props: TabsProps): JSX.Element\r\n\r\n  TabPane: typeof TabPane\r\n}\r\n\r\nconst Tabs = TabsElement as TabsInterface\r\n\r\nTabs.TabPane = TabPane\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Tabs {\r\n  export type TabEvent = SharedTabEvent\r\n}\r\n\r\nexport default Tabs\r\n","import { TaroElement } from \"@tarojs/runtime\"\r\nimport { createSelectorQuery } from \"@tarojs/taro\"\r\nimport { inBrowser } from \"../base\"\r\nimport { getComputedStyle } from \"./computed-style\"\r\nimport { elementUnref, isRootElement, queryNodesRef } from \"./element\"\r\n\r\nconst defaultRoot: HTMLElement | undefined = inBrowser\r\n  ? ((window as unknown) as HTMLElement)\r\n  : undefined\r\n\r\nconst ELEMENT_NODE_TYPE = 1\r\n\r\nconst overflowScrollReg = /scroll|auto/i\r\n\r\nfunction isElementNode(node: Element) {\r\n  return node.tagName !== \"HTML\" && node.tagName !== \"BODY\" && node.nodeType === ELEMENT_NODE_TYPE\r\n}\r\n\r\n// https://github.com/youzan/vant/issues/3823\r\nexport async function getScrollParent(\r\n  elementOrRef?: any,\r\n  root: HTMLElement | undefined = defaultRoot,\r\n) {\r\n  let node: HTMLElement = (elementUnref(elementOrRef) as unknown) as HTMLElement\r\n\r\n  while (node && node !== root && isElementNode(node)) {\r\n    const { overflowY } = await getComputedStyle(node, [\"overflowY\"])\r\n    if (overflowScrollReg.test(overflowY)) {\r\n      return node\r\n    }\r\n    // Is root element\r\n    if (isRootElement((node as unknown) as TaroElement)) {\r\n      return node\r\n    }\r\n    node = node.parentNode as HTMLElement\r\n  }\r\n\r\n  return root\r\n}\r\n\r\ninterface ScrollOffset {\r\n  scrollLeft: number\r\n  scrollTop: number\r\n}\r\n\r\nexport function getRootScrollTop(): Promise<number> {\r\n  return new Promise((resolve) => {\r\n    if (inBrowser) {\r\n      resolve(\r\n        window.pageYOffset || //\r\n          document.documentElement.scrollTop ||\r\n          document.body.scrollTop ||\r\n          0,\r\n      )\r\n    } else {\r\n      createSelectorQuery()\r\n        .selectViewport()\r\n        .scrollOffset(({ scrollTop }) => resolve(scrollTop))\r\n        .exec()\r\n    }\r\n  })\r\n}\r\n\r\nfunction makeScrollOffset() {\r\n  return {\r\n    scrollTop: 0,\r\n    scrollLeft: 0,\r\n  }\r\n}\r\n\r\nexport function getScrollOffset(elementOrRef: any): Promise<ScrollOffset> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      const $element = element as any\r\n\r\n      const top = \"scrollTop\" in element ? $element.scrollTop : $element[\"pageYOffset\"]\r\n      const left = \"scrollLeft\" in element ? $element.scrollLeft : $element[\"pageXOffset\"]\r\n      return Promise.resolve({\r\n        scrollTop: Math.max(top, 0),\r\n        scrollLeft: Math.max(left, 0),\r\n      } as ScrollOffset)\r\n    } else {\r\n      return new Promise<ScrollOffset>((resolve) => {\r\n        queryNodesRef(element).scrollOffset(resolve).exec()\r\n      })\r\n    }\r\n  }\r\n  return Promise.resolve(makeScrollOffset())\r\n}\r\n\r\nexport function getScrollTop(elementOrRef: any): Promise<number> {\r\n  return getScrollOffset(elementOrRef).then(({ scrollTop }) => scrollTop)\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\n\ninterface PullRefreshContextValue {\n  distance: number\n}\n\nconst PullRefreshContext = createContext<PullRefreshContextValue>({\n  distance: 0,\n})\n\nexport default PullRefreshContext\n","import * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport PullRefreshContext from \"./pull-refresh.context\"\r\n\r\ninterface PullRefreshRenderProps {\r\n  distance: number\r\n}\r\n\r\ntype PullRefreshRender = (props: PullRefreshRenderProps) => ReactNode\r\n\r\nexport interface PullRefreshPullingProps {\r\n  children?: ReactNode | PullRefreshRender\r\n}\r\n\r\nexport function PullRefreshPulling(props: PullRefreshPullingProps) {\r\n  const { children } = props\r\n  const { distance } = useContext(PullRefreshContext)\r\n  if (_.isFunction(children)) {\r\n    return <>{children?.({ distance })}</>\r\n  }\r\n  return <>{children}</>\r\n}\r\n\r\nexport interface PullRefreshLoosingProps {\r\n  children?: ReactNode\r\n}\r\n\r\nexport function PullRefreshLoosing(props: PullRefreshLoosingProps) {\r\n  const { children } = props\r\n  return <>{children}</>\r\n}\r\n\r\nexport interface PullRefreshLoadingProps {\r\n  children?: ReactNode\r\n}\r\n\r\nexport function PullRefreshLoading(props: PullRefreshLoadingProps) {\r\n  const { children } = props\r\n  return <>{children}</>\r\n}\r\n\r\nexport interface PullRefreshCompletedProps {\r\n  duration?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport function PullRefreshCompleted(props: PullRefreshCompletedProps) {\r\n  const { children } = props\r\n  return <>{children}</>\r\n}\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { nextTick } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\"\r\nimport Loading from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { preventDefault } from \"../utils/dom/event\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { usePreviousRef, useToRef } from \"../utils/state\"\r\nimport { useTouch } from \"../utils/touch\"\r\nimport {\r\n  PullRefreshCompleted,\r\n  PullRefreshCompletedProps,\r\n  PullRefreshLoading,\r\n  PullRefreshLoosing,\r\n  PullRefreshPulling,\r\n} from \"./pull-refresh-children\"\r\nimport PullRefreshContext from \"./pull-refresh.context\"\r\n\r\nconst lodashRoot = require(\"lodash/_root\")\r\n\r\nif (typeof lodashRoot.Date === \"undefined\") {\r\n  lodashRoot.Date = Date\r\n}\r\n\r\nenum PullRefreshStatus {\r\n  Awaiting = \"awaiting\",\r\n  Pulling = \"pulling\",\r\n  Loosing = \"loosing\",\r\n  Loading = \"loading\",\r\n  Completed = \"completed\",\r\n}\r\n\r\nconst TEXT_STATUS = [\"pulling\", \"loosing\", \"success\"]\r\n\r\ninterface PullRefreshChildren {\r\n  pulling?: ReactNode\r\n  loosing?: ReactNode\r\n  loading?: ReactNode\r\n  completed?: ReactNode\r\n  content?: ReactNode[]\r\n}\r\n\r\nfunction usePullRefreshChildren(children?: ReactNode): PullRefreshChildren {\r\n  return useMemo(() => {\r\n    const __children__: PullRefreshChildren = {\r\n      content: [],\r\n    }\r\n\r\n    Children.forEach(children, (child: ReactNode) => {\r\n      if (isValidElement(child)) {\r\n        const element = child as ReactElement\r\n\r\n        const elementType = element.type\r\n        if (elementType === PullRefreshPulling) {\r\n          __children__.pulling = element\r\n        } else if (elementType === PullRefreshLoosing) {\r\n          __children__.loosing = element\r\n        } else if (elementType === PullRefreshLoading) {\r\n          __children__.loading = element\r\n        } else if (elementType === PullRefreshCompleted) {\r\n          __children__.completed = element\r\n        } else {\r\n          __children__.content?.push(child)\r\n        }\r\n      } else {\r\n        __children__.content?.push(child)\r\n      }\r\n    })\r\n    return __children__\r\n  }, [children])\r\n}\r\n\r\nfunction getCompletedProps(node?: ReactNode): PullRefreshCompletedProps {\r\n  if (isValidElement(node)) {\r\n    const element = node as ReactElement\r\n    return element.props\r\n  }\r\n  return {}\r\n}\r\n\r\nexport interface PullRefreshProps extends ViewProps {\r\n  style?: CSSProperties\r\n  loading?: boolean\r\n  disabled?: boolean\r\n  duration?: number\r\n  headHeight?: number\r\n\r\n  reachTop?: boolean\r\n  pullDistance?: number\r\n  children?: ReactNode\r\n\r\n  onRefresh?(): void\r\n}\r\n\r\nfunction PullRefresh(props: PullRefreshProps) {\r\n  const {\r\n    className,\r\n    loading,\r\n    disabled = false,\r\n    headHeight = 50,\r\n    reachTop: reachTopProp = true,\r\n    pullDistance: pullDistanceProp,\r\n    duration: durationProp = 300,\r\n    children: childrenProp,\r\n    onRefresh,\r\n    ...restProps\r\n  } = props\r\n\r\n  const children = usePullRefreshChildren(childrenProp)\r\n  const { completed: completedElement, content } = children\r\n  const { duration: completedDuration = 500 } = getCompletedProps(completedElement)\r\n\r\n  const statusRef = useRef(PullRefreshStatus.Awaiting)\r\n  const [distance, setDistance] = useState(0)\r\n  const reachTopPreviousRef = usePreviousRef(reachTopProp)\r\n  const reachTopRef = useToRef(reachTopProp)\r\n  const durationRef = useRef(0)\r\n\r\n  const touch = useTouch()\r\n\r\n  function resetDuration() {\r\n    durationRef.current = 0\r\n  }\r\n\r\n  const isTouchable = useCallback(\r\n    () =>\r\n      PullRefreshStatus.Loading !== statusRef.current &&\r\n      PullRefreshStatus.Completed !== statusRef.current &&\r\n      !disabled,\r\n    [disabled],\r\n  )\r\n\r\n  const easeDistance = useCallback(\r\n    (distance: number) => {\r\n      const pullDistance = +(pullDistanceProp || headHeight)\r\n\r\n      if (distance > pullDistance) {\r\n        if (distance < pullDistance * 2) {\r\n          distance = pullDistance + (distance - pullDistance) / 2\r\n        } else {\r\n          distance = pullDistance * 1.5 + (distance - pullDistance * 2) / 4\r\n        }\r\n      }\r\n\r\n      return Math.round(distance)\r\n    },\r\n    [headHeight, pullDistanceProp],\r\n  )\r\n\r\n  const checkPosition = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (reachTopRef.current) {\r\n        resetDuration()\r\n        touch.start(event)\r\n      }\r\n    },\r\n    [reachTopRef, touch],\r\n  )\r\n\r\n  const onTouchStart = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (isTouchable()) {\r\n        checkPosition(event)\r\n      }\r\n    },\r\n    [checkPosition, isTouchable],\r\n  )\r\n\r\n  const updateStatus = useCallback(\r\n    (distance: number, isLoading?: boolean) => {\r\n      const pullDistance = +(pullDistanceProp || headHeight)\r\n      if (isLoading) {\r\n        statusRef.current = PullRefreshStatus.Loading\r\n      } else if (distance === 0) {\r\n        statusRef.current = PullRefreshStatus.Awaiting\r\n      } else if (distance < pullDistance) {\r\n        statusRef.current = PullRefreshStatus.Pulling\r\n      } else {\r\n        statusRef.current = PullRefreshStatus.Loosing\r\n      }\r\n      setDistance(distance)\r\n    },\r\n    [headHeight, pullDistanceProp],\r\n  )\r\n\r\n  const onTouchMove = useMemo(\r\n    () =>\r\n      _.throttle((event: ITouchEvent) => {\r\n        if (isTouchable()) {\r\n          if (!reachTopPreviousRef.current) {\r\n            checkPosition(event)\r\n          }\r\n\r\n          const { deltaY } = touch\r\n          touch.move(event)\r\n\r\n          if (reachTopRef.current && deltaY >= 0 && touch.isVertical()) {\r\n            preventDefault(event)\r\n            updateStatus(easeDistance(deltaY))\r\n          }\r\n        }\r\n      }, 16.7),\r\n    [\r\n      checkPosition,\r\n      easeDistance,\r\n      isTouchable,\r\n      reachTopPreviousRef,\r\n      reachTopRef,\r\n      touch,\r\n      updateStatus,\r\n    ],\r\n  )\r\n\r\n  const onTouchEnd = useCallback(() => {\r\n    if (reachTopRef.current && isTouchable()) {\r\n      durationRef.current = durationProp\r\n      if (statusRef.current === PullRefreshStatus.Loosing) {\r\n        updateStatus(headHeight, true)\r\n        // TODO Nested in CustomWrapper does not call.\r\n        // ensure value change can be watched\r\n        // nextTick(() => onRefresh?.())\r\n        onRefresh?.()\r\n      } else {\r\n        updateStatus(0)\r\n      }\r\n    }\r\n  }, [durationProp, headHeight, isTouchable, onRefresh, reachTopRef, updateStatus])\r\n\r\n  const showCompleted = useCallback(() => {\r\n    statusRef.current = PullRefreshStatus.Completed\r\n    resetDuration()\r\n    setTimeout(() => nextTick(() => updateStatus(0)), +completedDuration)\r\n  }, [completedDuration, updateStatus])\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      updateStatus(headHeight, true)\r\n    }\r\n  }, [headHeight, loading, updateStatus])\r\n\r\n  useEffect(() => {\r\n    if (!loading && !isTouchable() && !completedElement) {\r\n      durationRef.current = durationProp\r\n      updateStatus(0, false)\r\n    }\r\n  }, [completedElement, durationProp, isTouchable, loading, updateStatus])\r\n\r\n  useEffect(() => {\r\n    if (!loading && completedElement) {\r\n      showCompleted()\r\n    }\r\n  }, [completedElement, loading, showCompleted])\r\n\r\n  const getStatusText = useCallback(() => {\r\n    if (statusRef.current === PullRefreshStatus.Pulling) {\r\n      return \"下拉即可刷新...\"\r\n    }\r\n    if (statusRef.current === PullRefreshStatus.Loosing) {\r\n      return \"释放即可刷新...\"\r\n    }\r\n    if (statusRef.current === PullRefreshStatus.Loading) {\r\n      return \"加载中...\"\r\n    }\r\n    return \"\"\r\n  }, [])\r\n\r\n  const renderStatus = useCallback(() => {\r\n    // @ts-ignore\r\n    const statusSlot = children[statusRef.current as string]\r\n    if (statusSlot) {\r\n      return statusSlot\r\n    }\r\n\r\n    const nodes: ReactElement[] = []\r\n\r\n    if (TEXT_STATUS.includes(statusRef.current)) {\r\n      nodes.push(\r\n        <View\r\n          key=\"text\"\r\n          className={prefixClassname(\"pull-refresh__text\")}\r\n          children={getStatusText()}\r\n        />,\r\n      )\r\n    }\r\n\r\n    if (statusRef.current === PullRefreshStatus.Loading) {\r\n      nodes.push(\r\n        <Loading\r\n          key=\"loading\"\r\n          className={prefixClassname(\"pull-refresh__loading\")}\r\n          children={getStatusText()}\r\n        />,\r\n      )\r\n    }\r\n\r\n    return nodes\r\n  }, [children, getStatusText])\r\n\r\n  const trackStyle = {\r\n    transitionDuration: `${durationRef.current}ms`,\r\n    transform: distance ? `translate3d(0,${addUnitPx(distance)}, 0)` : \"\",\r\n  }\r\n\r\n  const headStyle = useMemo(() => {\r\n    if (headHeight !== 50) {\r\n      return {\r\n        height: addUnitPx(headHeight),\r\n      }\r\n    }\r\n  }, [headHeight])\r\n\r\n  return (\r\n    <PullRefreshContext.Provider\r\n      value={{\r\n        distance,\r\n      }}\r\n    >\r\n      <View className={classNames(prefixClassname(\"pull-refresh\"), className)} {...restProps}>\r\n        <View\r\n          className={prefixClassname(\"pull-refresh__track\")}\r\n          style={trackStyle}\r\n          onTouchStart={onTouchStart}\r\n          onTouchMove={onTouchMove}\r\n          onTouchEnd={onTouchEnd}\r\n          onTouchCancel={onTouchEnd}\r\n        >\r\n          <View\r\n            className={prefixClassname(\"pull-refresh__head\")}\r\n            style={headStyle}\r\n            children={renderStatus()}\r\n          />\r\n          {content}\r\n        </View>\r\n      </View>\r\n    </PullRefreshContext.Provider>\r\n  )\r\n}\r\n\r\nexport default PullRefresh\r\n","import PullRefreshElement, { PullRefreshProps } from \"./pull-refresh\"\nimport {\n  PullRefreshCompleted,\n  PullRefreshLoading,\n  PullRefreshLoosing,\n  PullRefreshPulling,\n} from \"./pull-refresh-children\"\n\ninterface PullRefreshInterface {\n  (props: PullRefreshProps): JSX.Element\n\n  Pulling: typeof PullRefreshPulling\n  Loosing: typeof PullRefreshLoosing\n  Loading: typeof PullRefreshLoading\n  Completed: typeof PullRefreshCompleted\n}\n\nconst PullRefresh = PullRefreshElement as PullRefreshInterface\n\nPullRefresh.Pulling = PullRefreshPulling\nPullRefresh.Loosing = PullRefreshLoosing\nPullRefresh.Loading = PullRefreshLoading\nPullRefresh.Completed = PullRefreshCompleted\n\nexport default PullRefresh\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { nextTick } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport { getScrollParent } from \"../utils/dom/scroll\"\r\nimport { useToRef } from \"../utils/state\"\r\nimport { ListDirection } from \"./list.shared\"\r\n\r\nexport interface ListProps extends ViewProps {\r\n  loading?: boolean\r\n  hasMore?: boolean\r\n  direction?: ListDirection\r\n  offset?: number\r\n  children?: ReactNode\r\n\r\n  scrollTop?: number\r\n\r\n  onLoad?(): void\r\n}\r\n\r\nfunction List(props: ListProps) {\r\n  const {\r\n    className,\r\n    loading: loadingProp = false,\r\n    hasMore: hasMoreProp = true,\r\n    direction = \"down\",\r\n    offset = 300,\r\n    children,\r\n    scrollTop,\r\n    onLoad,\r\n    ...restProps\r\n  } = props\r\n\r\n  const rootRef = useRef<HTMLElement>()\r\n  const edgeRef = useRef<HTMLElement>()\r\n  const loadingRef = useToRef(loadingProp)\r\n  const hasMoreRef = useToRef(hasMoreProp)\r\n\r\n  const loadCheck = useCallback(() => {\r\n    nextTick(async () => {\r\n      if (loadingRef.current || !hasMoreRef.current) {\r\n        return\r\n      }\r\n\r\n      const scrollParent = await getScrollParent(rootRef)\r\n      const scrollParentRect = await getRect(scrollParent)\r\n      if (!scrollParentRect.height) {\r\n        return\r\n      }\r\n\r\n      let isReachEdge: boolean\r\n      const edgeRect = await getRect(edgeRef)\r\n      if (direction === \"up\") {\r\n        isReachEdge = scrollParentRect.top - edgeRect.top <= offset\r\n      } else {\r\n        isReachEdge = edgeRect.bottom - scrollParentRect.bottom <= offset\r\n      }\r\n      if (isReachEdge && !loadingRef.current) {\r\n        loadingRef.current = true\r\n        onLoad?.()\r\n      }\r\n    })\r\n  }, [direction, hasMoreRef, loadingRef, offset, onLoad])\r\n\r\n  useMounted(loadCheck)\r\n\r\n  useEffect(loadCheck, [loadingProp, hasMoreProp, loadCheck, scrollTop, children])\r\n\r\n  const listEdge = useMemo(\r\n    () => <View ref={edgeRef} className={prefixClassname(\"list__edge\")} />,\r\n    [],\r\n  )\r\n\r\n  return (\r\n    <View ref={rootRef} className={classNames(prefixClassname(\"list\"), className)} {...restProps}>\r\n      {direction === \"down\" ? children : listEdge}\r\n      {direction === \"up\" ? children : listEdge}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface ListPlaceholderProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ListPlaceholder(props: ListPlaceholderProps) {\r\n  const { className, children, ...restProps } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"list__placeholder\"), className)}\r\n      children={children}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ListPlaceholder\r\n","import ListComponent, { ListProps } from \"./list\"\r\nimport ListPlaceholder from \"./list-placeholder\"\r\n\r\nexport type { ListDirection } from \"./list.shared\"\r\n\r\ninterface ListInterface {\r\n  (props: ListProps): JSX.Element\r\n\r\n  Placeholder: typeof ListPlaceholder\r\n}\r\n\r\nconst List = ListComponent as ListInterface\r\n\r\nList.Placeholder = ListPlaceholder\r\n\r\nexport default List\r\n","import { Cell, List, Loading, PullRefresh, Tabs } from \"@taroify/core\"\r\nimport { usePageScroll } from \"@tarojs/taro\"\r\nimport * as React from \"react\"\r\nimport { useRef, useState } from \"react\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction BasicList() {\r\n  const [hasMore, setHasMore] = useState(true)\r\n  const [list, setList] = useState<string[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [scrollTop, setScrollTop] = useState(0)\r\n\r\n  usePageScroll(({ scrollTop: aScrollTop }) => setScrollTop(aScrollTop))\r\n\r\n  return (\r\n    <List\r\n      loading={loading}\r\n      hasMore={hasMore}\r\n      scrollTop={scrollTop}\r\n      onLoad={() => {\r\n        setLoading(true)\r\n        setTimeout(() => {\r\n          for (let i = 0; i < 10; i++) {\r\n            const text = list.length + 1\r\n            list.push(text < 10 ? \"0\" + text : String(text))\r\n          }\r\n          setList([...list])\r\n          setHasMore(list.length < 40)\r\n          setLoading(false)\r\n        }, 1000)\r\n      }}\r\n    >\r\n      {\r\n        //\r\n        list.map((item) => (\r\n          <Cell key={item}>{item}</Cell>\r\n        ))\r\n      }\r\n      <List.Placeholder>\r\n        {loading && <Loading>加载中...</Loading>}\r\n        {!hasMore && \"没有更多了\"}\r\n      </List.Placeholder>\r\n    </List>\r\n  )\r\n}\r\n\r\nfunction ErrorList() {\r\n  const [hasMore, setHasMore] = useState(true)\r\n  const [list, setList] = useState<string[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const [scrollTop, setScrollTop] = useState(0)\r\n\r\n  usePageScroll(({ scrollTop: aScrollTop }) => setScrollTop(aScrollTop))\r\n\r\n  return (\r\n    <List\r\n      loading={loading}\r\n      hasMore={hasMore}\r\n      scrollTop={scrollTop}\r\n      onLoad={() => {\r\n        setLoading(true)\r\n        setTimeout(() => {\r\n          for (let i = 0; i < 10; i++) {\r\n            const text = list.length + 1\r\n            list.push(text < 10 ? \"0\" + text : String(text))\r\n          }\r\n          const newList = [...list]\r\n\r\n          setHasMore(!(newList.length <= 10 || newList.length >= 40))\r\n          setError(newList.length <= 10)\r\n          setList(newList)\r\n          setLoading(false)\r\n        }, 1000)\r\n      }}\r\n    >\r\n      {list.map((item) => (\r\n        <Cell key={item}>{item}</Cell>\r\n      ))}\r\n      <List.Placeholder\r\n        onClick={() => {\r\n          if (error) {\r\n            setHasMore(true)\r\n            setError(false)\r\n          }\r\n        }}\r\n      >\r\n        {loading && <Loading>加载中...</Loading>}\r\n        {error && \"请求失败，点击重新加载\"}\r\n        {!hasMore && \"没有更多了\"}\r\n      </List.Placeholder>\r\n    </List>\r\n  )\r\n}\r\n\r\nfunction PullRefreshList() {\r\n  const [hasMore, setHasMore] = useState(true)\r\n  const [list, setList] = useState<string[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const refreshingRef = useRef(false)\r\n  const [scrollTop, setScrollTop] = useState(0)\r\n  const [reachTop, setReachTop] = useState(true)\r\n\r\n  usePageScroll(({ scrollTop: aScrollTop }) => {\r\n    setScrollTop(aScrollTop)\r\n    setReachTop(aScrollTop === 0)\r\n  })\r\n\r\n  const onLoad = () => {\r\n    setLoading(true)\r\n    const newList = refreshingRef.current ? [] : list\r\n    setTimeout(() => {\r\n      refreshingRef.current = false\r\n      for (let i = 0; i < 10; i++) {\r\n        const text = newList.length + 1\r\n        newList.push(text < 10 ? \"0\" + text : String(text))\r\n      }\r\n      setList(newList)\r\n      setLoading(false)\r\n      setHasMore(newList.length < 40)\r\n    }, 1000)\r\n  }\r\n\r\n  function onRefresh() {\r\n    refreshingRef.current = true\r\n    setLoading(false)\r\n    onLoad()\r\n  }\r\n\r\n  return (\r\n    <PullRefresh loading={refreshingRef.current} reachTop={reachTop} onRefresh={onRefresh}>\r\n      <List loading={loading} hasMore={hasMore} scrollTop={scrollTop} onLoad={onLoad}>\r\n        {\r\n          //\r\n          list.map((item) => (\r\n            <Cell key={item}>{item}</Cell>\r\n          ))\r\n        }\r\n        {!refreshingRef.current && (\r\n          <List.Placeholder>\r\n            {loading && <Loading>加载中...</Loading>}\r\n            {!hasMore && \"没有更多了\"}\r\n          </List.Placeholder>\r\n        )}\r\n      </List>\r\n    </PullRefresh>\r\n  )\r\n}\r\n\r\nexport default function ListDemo() {\r\n  const [tab, setTab] = useState(0)\r\n\r\n  return (\r\n    <Page title=\"List 列表\" className=\"list-demo\">\r\n      <Tabs value={tab} onChange={setTab}>\r\n        <Tabs.TabPane title=\"基础用法\">\r\n          <BasicList />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane title=\"错误提示\">\r\n          <ErrorList />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane title=\"下拉刷新\">\r\n          <PullRefreshList />\r\n        </Tabs.TabPane>\r\n      </Tabs>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}