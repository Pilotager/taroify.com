{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isNumber.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_toKey.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isString.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_castPath.js","webpack:///./src/components/block.tsx","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_isKey.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/hasIn.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isBoolean.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toFinite.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_stringToPath.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_memoizeCapped.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/memoize.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseHasIn.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_hasPath.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_isIterateeCall.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toNumber.js","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/range.js","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isEmpty.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_createRange.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseRange.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isPlainObject.js","webpack:///../../../../packages/core/src/button/button.context.ts","webpack:///../../../../packages/core/src/cell/style/index.ts","webpack:///../../../../packages/core/src/cell/cell-group.context.ts","webpack:///../../../../packages/core/src/cell/base-cell.tsx","webpack:///../../../../packages/core/src/cell/cell.tsx","webpack:///../../../../packages/core/src/cell/cell-group.tsx","webpack:///../../../../packages/core/src/cell/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_getPrototype.js","webpack:///../../../../packages/core/src/button/style/index.ts","webpack:///../../../../packages/core/src/button-base/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseTrim.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_trimmedEndIndex.js","webpack:///../../../../packages/core/src/button-base/button-base.tsx","webpack:///../../../../packages/core/src/button/button.tsx","webpack:///../../../../packages/core/src/field/style/index.ts","webpack:///../../../../packages/core/src/field/field-button.tsx","webpack:///../../../../packages/core/src/field/field.shared.ts","webpack:///../../../../packages/core/src/field/field.tsx","webpack:///../../../../packages/core/src/field/index.ts","webpack:///./src/pages/form/field/index.tsx"],"names":["value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","baseGetTag","require","isObjectLike","module","exports","isNumber","isSymbol","toKey","result","isArray","isString","isKey","stringToPath","toString","castPath","object","Block","props","className","variant","title","children","classNames","demoPrefixClassname","isValidElement","element","isIconElement","cloneElement","node","oldProps","newProps","reIsDeepProp","reIsPlainProp","type","test","Object","baseHasIn","hasPath","hasIn","path","isBoolean","toNumber","toFinite","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","push","replace","match","number","quote","subString","memoize","func","key","cache","clear","MapCache","resolver","TypeError","memoized","args","arguments","apply","this","has","get","set","Cache","isArguments","isIndex","isLength","hasFunc","index","length","eq","isArrayLike","isObject","isIterateeCall","baseTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","slice","range","createRange","SpinIcon","prefixClassname","LoadingSpinner","rootStyle","useMemo","style","LoadingCircular","direction","baseKeys","getTag","isBuffer","isPrototype","isTypedArray","hasOwnProperty","prototype","isEmpty","splice","tag","call","baseRange","fromRight","start","end","step","undefined","nativeCeil","Math","ceil","nativeMax","max","Array","getPrototype","funcProto","Function","objectProto","funcToString","objectCtorString","isPlainObject","proto","Ctor","constructor","ButtonContext","createContext","BaseCell","clickable","clickableProp","required","bordered","useContext","align","icon","cloneIconElement","brief","rightIcon","inset","CellGroupContext","Cell","React","overArg","getPrototypeOf","trimmedEndIndex","reTrimStart","reWhitespace","charAt","ButtonBase","color","formType","loading","onClick","useButtonLoading","onCtxClick","shape","block","e","disabled","FieldButton","detailValue","onChange","detail","FieldType","FieldClearTrigger","FieldLabelAlign","FieldInputAlign","FieldMessageAlign","Field","labelAlign","inputAlign","messageAlign","clearIcon","clearTrigger","onBlur","useFieldChildren","__children__","Children","child","button","useState","allowClear","clearable","hasValue","valueProp","trigger","focused","readonly","titleClassName","Textarea","error","placeholderClass","name","autoFocus","focus","password","placeholder","maxlength","cursorSpacing","confirmType","confirmHold","cursor","selectionStart","selectionEnd","adjustPosition","holdKeyboard","onFocus","event","handleFocus","setFocused","handleBlur","nextTick","resolveOnChange","onInput","onConfirm","handleClear","onClear","message","BasicField","setValue","Group","label","CustomField","text","setText","idcard","setIdcard","setNumber","digit","setDigit","setPassword","DisabledField","IconField","value2","setValue2","ErrorField","ButtonField","Button","FieldDemo"],"mappings":"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","file":"chunk/49.2fd4287a.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport { ICON_TYPE, IconProps } from \"../shared\"\r\n\r\nexport function isIconElement(node?: ReactNode): boolean {\r\n  // Is`t not ReactElement\r\n  if (!isValidElement(node)) {\r\n    return false\r\n  }\r\n  const element = node as ReactElement\r\n  return _.hasIn(element.type, ICON_TYPE)\r\n}\r\n\r\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\r\n  if (!isIconElement(node)) {\r\n    return isValidElement(node) ? cloneElement(node, props) : node\r\n  }\r\n  const { className, ...restProps } = props\r\n  const element = node as ReactElement\r\n  const { props: oldProps } = element\r\n  const newProps: IconProps = {\r\n    ...oldProps,\r\n    className: classNames(oldProps.className, className),\r\n    ...restProps,\r\n  }\r\n  return cloneElement(element, newProps)\r\n}\r\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\nimport { ButtonProps } from \"./button\"\r\n\r\ninterface ButtonContextValue {\r\n  onClick?(event: ITouchEvent, props: ButtonProps): void\r\n}\r\n\r\nconst ButtonContext = createContext<ButtonContextValue>({})\r\n\r\nexport default ButtonContext\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface CellGroupContextValue {\r\n  clickable?: boolean\r\n}\r\n\r\nconst CellGroupContext = createContext<CellGroupContextValue>({})\r\n\r\nexport default CellGroupContext\r\n","import { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface BaseCellProps extends ViewProps {\r\n  titleClassName?: string\r\n  briefClassName?: string\r\n  valueClassName?: string\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  required?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction BaseCell(props: BaseCellProps) {\r\n  const {\r\n    className,\r\n    titleClassName,\r\n    briefClassName,\r\n    valueClassName,\r\n    size = \"medium\",\r\n    align,\r\n    title,\r\n    brief,\r\n    clickable: clickableProp = false,\r\n    required = false,\r\n    bordered = true,\r\n    icon,\r\n    rightIcon,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { clickable } = useContext(CellGroupContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell\"),\r\n        {\r\n          [prefixClassname(\"cell--start\")]: align === \"start\",\r\n          [prefixClassname(\"cell--center\")]: align === \"center\",\r\n          [prefixClassname(\"cell--end\")]: align === \"end\",\r\n          [prefixClassname(\"cell--large\")]: size === \"large\",\r\n          [prefixClassname(\"cell--clickable\")]: clickableProp || clickable,\r\n          [prefixClassname(\"cell--required\")]: required,\r\n          [prefixClassname(\"cell--borderless\")]: !bordered,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon && cloneIconElement(icon, { className: prefixClassname(\"cell__icon\") })}\r\n      {title && (\r\n        <View className={classNames(prefixClassname(\"cell__title\"), titleClassName)}>\r\n          {title}\r\n          {brief && (\r\n            <View\r\n              className={classNames(prefixClassname(\"cell__brief\"), briefClassName)}\r\n              children={brief}\r\n            />\r\n          )}\r\n        </View>\r\n      )}\r\n      {children && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"cell__value\"),\r\n            {\r\n              [prefixClassname(\"cell__value--alone\")]: !title,\r\n            },\r\n            valueClassName,\r\n          )}\r\n          children={children}\r\n        />\r\n      )}\r\n      {rightIcon && cloneIconElement(rightIcon, { className: prefixClassname(\"cell__right-icon\") })}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default BaseCell\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport BaseCell from \"./base-cell\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellProps extends ViewProps {\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Cell(props: CellProps) {\r\n  return <BaseCell {...props} />\r\n}\r\n\r\nexport default Cell\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\n\r\ninterface CellGroupProps extends ViewProps {\r\n  title?: ReactNode\r\n  clickable?: boolean\r\n  inset?: boolean\r\n  bordered?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nexport function CellGroup(props: CellGroupProps) {\r\n  const { title, clickable = false, inset = false, bordered = true, children, ...restProps } = props\r\n  return (\r\n    <CellGroupContext.Provider\r\n      value={{\r\n        clickable,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"cell-group\"), {\r\n          [prefixClassname(\"cell-group--inset\")]: inset,\r\n        })}\r\n        {...restProps}\r\n      >\r\n        {title && (\r\n          <View\r\n            className={classNames(prefixClassname(\"cell-group__title\"), {\r\n              [prefixClassname(\"cell-group__title--inset\")]: inset,\r\n            })}\r\n            children={title}\r\n          />\r\n        )}\r\n        <View\r\n          className={classNames(prefixClassname(\"cell-group\"), {\r\n            [prefixClassname(\"hairline--top-bottom\")]: bordered,\r\n          })}\r\n          children={children}\r\n        />\r\n      </View>\r\n    </CellGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CellGroup\r\n","import CellElement, { CellProps } from \"./cell\"\r\nimport CellGroup from \"./cell-group\"\r\n\r\nexport type { CellAlign, CellSize } from \"./cell.shared\"\r\nexport { default as BaseCell } from \"./base-cell\"\r\n\r\ninterface CellInterface {\r\n  (props: CellProps): JSX.Element\r\n\r\n  Group: typeof CellGroup\r\n}\r\n\r\nconst Cell = CellElement as CellInterface\r\nCell.Group = CellGroup\r\n\r\nexport default Cell\r\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../../button-base/style\"\r\n\r\nimport \"../index.scss\"\r\n","import \"../index.scss\"\r\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","import { Button, ButtonProps } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface ButtonBaseProps extends ButtonProps {}\r\n\r\nfunction ButtonBase(props: ButtonBaseProps) {\r\n  const { className, ...restProps } = props\r\n  return <Button className={classNames(prefixClassname(\"button-base\"), className)} {...restProps} />\r\n}\r\n\r\nexport default ButtonBase\r\n","import { ButtonProps as TaroButtonProps, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport ButtonBase from \"../button-base\"\r\nimport Loading, { LoadingProps } from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport ButtonContext from \"./button.context\"\r\nimport {\r\n  ButtonColor,\r\n  ButtonFormType,\r\n  ButtonShape,\r\n  ButtonSize,\r\n  ButtonVariant,\r\n} from \"./button.shared\"\r\n\r\nfunction useButtonLoading(loading?: boolean | LoadingProps): ReactNode {\r\n  return useMemo(() => {\r\n    if (_.isBoolean(loading) && loading) {\r\n      return <Loading className={prefixClassname(\"button__loading\")} />\r\n    } else if (_.isObjectLike(loading)) {\r\n      const { className, ...restProps } = loading as LoadingProps\r\n      return (\r\n        <Loading\r\n          className={classNames(prefixClassname(\"button__loading\"), className)}\r\n          {...restProps}\r\n        />\r\n      )\r\n    }\r\n    return loading\r\n  }, [loading])\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends Omit<TaroButtonProps, \"size\" | \"formType\" | \"type\" | \"loading\" | \"plain\"> {\r\n  variant?: ButtonVariant\r\n  shape?: ButtonShape\r\n  size?: ButtonSize\r\n  color?: ButtonColor\r\n  formType?: ButtonFormType\r\n  loading?: boolean | LoadingProps\r\n  block?: boolean\r\n  hairline?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    variant = \"contained\",\r\n    shape,\r\n    size = \"medium\",\r\n    color = \"default\",\r\n    formType = \"button\",\r\n    block,\r\n    hairline,\r\n    disabled,\r\n    loading: loadingProp,\r\n    icon,\r\n    children,\r\n    onClick,\r\n    ...restProps\r\n  } = props\r\n\r\n  const loading = useButtonLoading(loadingProp)\r\n\r\n  const { onClick: onCtxClick } = useContext(ButtonContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"button\"),\r\n        {\r\n          // Set variant style\r\n          [prefixClassname(\"button--text\")]: variant === \"text\",\r\n          [prefixClassname(\"button--contained\")]: variant === \"contained\",\r\n          [prefixClassname(\"button--outlined\")]: variant === \"outlined\",\r\n          // Set color style\r\n          [prefixClassname(`button--${color}`)]: color,\r\n          // Set shape style\r\n          [prefixClassname(\"button--round\")]: shape === \"round\",\r\n          [prefixClassname(\"button--square\")]: shape === \"square\",\r\n          // Set size style\r\n          [prefixClassname(\"button--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"button--small\")]: size === \"small\",\r\n          [prefixClassname(\"button--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"button--large\")]: size === \"large\",\r\n          // Set hairline style\r\n          [prefixClassname(\"button--hairline\")]: hairline,\r\n          [prefixClassname(\"hairline--surround\")]: hairline,\r\n          [prefixClassname(\"button--disabled\")]: disabled,\r\n          [prefixClassname(\"button--loading\")]: loading,\r\n          [prefixClassname(\"button--block\")]: block,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={(e) => {\r\n        if (!disabled && !loading) {\r\n          onClick?.(e)\r\n          onCtxClick?.(e, props)\r\n        }\r\n      }}\r\n    >\r\n      <View className={prefixClassname(\"button__content\")}>\r\n        {loading ?? icon}\r\n        {children && <View className={prefixClassname(\"button__text\")} children={children} />}\r\n      </View>\r\n      <ButtonBase\r\n        className={prefixClassname(\"button__button\")}\r\n        formType={formType === \"submit\" ? \"submit\" : formType === \"reset\" ? \"reset\" : undefined}\r\n        disabled={disabled}\r\n        loading={false}\r\n        {...restProps}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function createButton(children: ReactNode | ButtonProps, props?: ButtonProps) {\r\n  if (_.isPlainObject(children)) {\r\n    return <Button {...(children as ButtonProps)} {...props} />\r\n  }\r\n  return <Button children={children} {...props} />\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../../button/style\"\r\nimport \"../../cell/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface FieldButtonProps {\r\n  className?: string\r\n  children: ReactNode\r\n}\r\n\r\nfunction FieldButton(props: FieldButtonProps) {\r\n  const { className, children } = props\r\n  return (\r\n    <View className={classNames(prefixClassname(\"field__button\"), className)} children={children} />\r\n  )\r\n}\r\n\r\nexport default FieldButton\r\n","export enum FieldType {\r\n  Number = \"number\",\r\n  Text = \"text\",\r\n  Idcard = \"idcard\",\r\n  Digit = \"digit\",\r\n  Textarea = \"textarea\",\r\n  Password = \"password\",\r\n}\r\n\r\nexport type FieldTypeString = \"number\" | \"text\" | \"idcard\" | \"digit\" | \"textarea\" | \"password\"\r\n\r\nexport enum FieldClearTrigger {\r\n  Always = \"always\",\r\n  Focus = \"focus\",\r\n}\r\n\r\nexport type FieldClearTriggerString = \"always\" | \"focus\"\r\n\r\nexport enum FieldLabelAlign {\r\n  Left = \"left\",\r\n  Center = \"center\",\r\n  Right = \"right\",\r\n}\r\n\r\nexport type FieldLabelAlignString = \"left\" | \"center\" | \"right\"\r\n\r\nexport enum FieldInputAlign {\r\n  Left = \"left\",\r\n  Center = \"center\",\r\n  Right = \"right\",\r\n}\r\n\r\nexport type FieldInputAlignString = \"left\" | \"center\" | \"right\"\r\n\r\nexport enum FieldMessageAlign {\r\n  Left = \"left\",\r\n  Center = \"center\",\r\n  Right = \"right\",\r\n}\r\n\r\nexport type FieldMessageAlignString = \"left\" | \"center\" | \"right\"\r\n\r\nexport interface FieldAutosize {\r\n  maxHeight: number\r\n  minHeight: number\r\n}\r\n\r\nexport type FieldConfirmType = \"send\" | \"search\" | \"next\" | \"go\" | \"done\"\r\n","import { Clear } from \"@taroify/icons\"\nimport { cloneIconElement } from \"@taroify/icons/utils\"\nimport { Input, ITouchEvent, View } from \"@tarojs/components\"\nimport { BaseEventOrig } from \"@tarojs/components/types/common\"\nimport { InputProps } from \"@tarojs/components/types/Input\"\nimport { nextTick } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport * as React from \"react\"\nimport {\n  Children,\n  CSSProperties,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  useMemo,\n  useState,\n} from \"react\"\nimport { BaseCell, CellAlign } from \"../cell\"\nimport { prefixClassname } from \"../styles\"\nimport FieldButton from \"./field-button\"\nimport {\n  FieldAutosize,\n  FieldClearTrigger,\n  FieldClearTriggerString,\n  FieldConfirmType,\n  FieldInputAlign,\n  FieldInputAlignString,\n  FieldLabelAlign,\n  FieldLabelAlignString,\n  FieldMessageAlign,\n  FieldMessageAlignString,\n  FieldType,\n  FieldTypeString,\n} from \"./field.shared\"\n\nexport function resolveOnChange<\n  E extends InputProps.inputEventDetail | InputProps.inputValueEventDetail,\n  E2 extends InputProps.inputEventDetail | InputProps.inputValueEventDetail\n>(\n  e: BaseEventOrig<E>,\n  onChange: undefined | ((event: BaseEventOrig<E2>) => void),\n  detailValue?: string,\n) {\n  if (!onChange) {\n    return\n  }\n  if (e.type === \"click\" || e.type === \"tap\") {\n    const { detail } = e\n    // click clear icon\n    const event = Object.assign({}, e, {\n      // change target ref value cause e.detail.value should be '' when clear input\n      detail: {\n        ...(_.isPlainObject(detail) ? detail : {}),\n        value: \"\",\n      },\n    })\n\n    onChange((event as unknown) as BaseEventOrig<E2>)\n    return\n  }\n\n  // Trigger by composition event, this means we need force change the input value\n  if (detailValue !== undefined) {\n    const { detail } = e\n    const event = Object.assign({}, e, {\n      // change target ref value cause e.detail.value should be '' when clear input\n      detail: {\n        ...(_.isPlainObject(detail) ? detail : {}),\n        value: detailValue,\n      },\n    })\n\n    onChange((event as unknown) as BaseEventOrig<E2>)\n    return\n  }\n  onChange((e as unknown) as BaseEventOrig<E2>)\n}\n\ninterface FieldChildren {\n  children?: ReactNode[]\n  button?: ReactNode\n}\n\nfunction useFieldChildren(children?: ReactNode): FieldChildren {\n  const __children__: FieldChildren = {\n    children: [],\n  }\n  Children.forEach(children, (child: ReactNode) => {\n    if (!isValidElement(child)) {\n      return\n    }\n    const element = child as ReactElement\n    const elementType = element.type\n    if (elementType === FieldButton) {\n      __children__.button = element\n    } else {\n      __children__.children?.push(element)\n    }\n  })\n  return __children__\n}\n\ntype TaroInputType = \"text\" | \"number\" | \"idcard\" | \"digit\"\n\nexport interface FieldProps {\n  className?: string\n  style?: CSSProperties\n  name?: string\n  value?: string\n  maxlength?: number\n  type?: FieldType | FieldTypeString\n  align?: CellAlign\n  bordered?: boolean\n  focus?: boolean\n  autoFocus?: boolean\n  labelAlign?: FieldLabelAlign | FieldLabelAlignString\n  label?: ReactNode\n  inputAlign?: FieldInputAlign | FieldInputAlignString\n  icon?: ReactNode\n  rightIcon?: ReactNode\n  placeholder?: string\n  placeholderClassName?: string\n  clickable?: boolean\n  required?: boolean\n  readonly?: boolean\n  disabled?: boolean\n  error?: boolean\n  messageAlign?: FieldMessageAlign | FieldMessageAlignString\n  message?: ReactNode\n  clearable?: boolean\n  clearIcon?: ReactNode\n  clearTrigger?: FieldClearTrigger | FieldClearTriggerString\n  autosize?: boolean | FieldAutosize\n\n  cursorSpacing?: number\n  confirmType?: FieldConfirmType\n  confirmHold?: boolean\n  cursor?: number\n  selectionStart?: number\n  selectionEnd?: number\n  adjustPosition?: boolean\n  holdKeyboard?: boolean\n  children?: ReactNode\n\n  onClick?(event: ITouchEvent): void\n\n  onClear?(event: ITouchEvent): void\n\n  onConfirm?(event: BaseEventOrig<InputProps.inputValueEventDetail>): void\n\n  onChange?(event: BaseEventOrig<InputProps.inputEventDetail>): void\n\n  onFocus?(event: BaseEventOrig<InputProps.inputForceEventDetail>): void\n\n  onBlur?(event: BaseEventOrig<InputProps.inputValueEventDetail>): void\n}\n\nfunction Field(props: FieldProps) {\n  const {\n    className,\n    style,\n    name,\n    value: valueProp,\n    maxlength,\n    type = FieldType.Text,\n    align,\n    bordered,\n    focus,\n    autoFocus,\n    labelAlign = FieldLabelAlign.Left,\n    label,\n    inputAlign = FieldInputAlign.Left,\n    icon,\n    rightIcon,\n    placeholder,\n    placeholderClassName,\n    clickable,\n    required,\n    readonly,\n    disabled,\n    error,\n    message,\n    messageAlign = FieldLabelAlign.Left,\n    clearable,\n    clearIcon = <Clear />,\n    clearTrigger = FieldClearTrigger.Focus,\n    cursorSpacing,\n    confirmType,\n    confirmHold,\n    cursor,\n    selectionStart,\n    selectionEnd,\n    adjustPosition,\n    holdKeyboard,\n    children: childrenProp,\n    onClick,\n    onClear,\n    onConfirm,\n    onChange,\n    onFocus,\n    onBlur,\n  } = props\n  const { children, button } = useFieldChildren(childrenProp)\n\n  const [focused, setFocused] = useState(false)\n\n  const allowClear = useMemo(() => {\n    if (clearable && !readonly) {\n      const hasValue = valueProp !== \"\"\n      const trigger =\n        clearTrigger === FieldClearTrigger.Always ||\n        (clearTrigger === FieldClearTrigger.Focus && focused)\n      return hasValue && trigger\n    }\n    return false\n  }, [clearTrigger, clearable, focused, readonly, valueProp])\n\n  const handleClear = (event: ITouchEvent) => {\n    resolveOnChange(event, onChange, \"\")\n    onClear?.(event)\n  }\n\n  const handleFocus = (event: BaseEventOrig<InputProps.inputForceEventDetail>) => {\n    setFocused(true)\n    onFocus?.(event)\n  }\n\n  const handleBlur = (event: BaseEventOrig<InputProps.inputValueEventDetail>) => {\n    nextTick(() => setFocused(false))\n    resolveOnChange(event, onChange, valueProp)\n    onBlur?.(event)\n  }\n\n  return (\n    <BaseCell\n      className={classNames(\n        prefixClassname(\"field\"),\n        {\n          [prefixClassname(\"field--disabled\")]: disabled,\n        },\n        className,\n      )}\n      style={style}\n      bordered={bordered}\n      align={align}\n      clickable={clickable}\n      titleClassName={classNames(\n        prefixClassname(\"field__label\"),\n        prefixClassname(`field__label--${labelAlign}`),\n      )}\n      title={label}\n      icon={cloneIconElement(icon, { className: prefixClassname(\"field__icon\") })}\n      rightIcon={cloneIconElement(rightIcon, { className: prefixClassname(\"field__right-icon\") })}\n      required={required}\n      onClick={onClick}\n    >\n      <View\n        className={classNames(prefixClassname(\"field__body\"), {\n          [prefixClassname(\"field__body--textarea\")]: type === FieldType.Textarea,\n        })}\n      >\n        {_.isEmpty(children) ? (\n          <Input\n            className={classNames(\n              prefixClassname(\"field__control\"),\n              {\n                [prefixClassname(\"field__control--disabled\")]: disabled,\n                [prefixClassname(\"field__control--readonly\")]: readonly,\n                [prefixClassname(\"field__control--error\")]: error,\n              },\n              prefixClassname(`field__control--${inputAlign}`),\n            )}\n            placeholderClass={classNames(\n              prefixClassname(\"field__control__placeholder\"),\n              {\n                [prefixClassname(\"field__control__placeholder--readonly\")]: readonly,\n                [prefixClassname(\"field__control__placeholder--error\")]: error,\n              },\n              placeholderClassName,\n            )}\n            name={name}\n            value={valueProp}\n            autoFocus={autoFocus}\n            focus={focus}\n            type={type as TaroInputType}\n            password={type === FieldType.Password}\n            placeholder={placeholder}\n            disabled={disabled || readonly}\n            maxlength={maxlength}\n            cursorSpacing={cursorSpacing}\n            confirmType={confirmType}\n            confirmHold={confirmHold}\n            cursor={cursor}\n            selectionStart={selectionStart}\n            selectionEnd={selectionEnd}\n            adjustPosition={adjustPosition}\n            holdKeyboard={holdKeyboard}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            onInput={onChange}\n            onConfirm={onConfirm}\n          />\n        ) : (\n          children\n        )}\n\n        {allowClear &&\n          cloneIconElement(clearIcon, {\n            className: prefixClassname(\"field__clear\"),\n            onClick: handleClear,\n          })}\n        {button}\n      </View>\n      {message && (\n        <View\n          className={classNames(\n            prefixClassname(\"field__message\"),\n            prefixClassname(`field__message--${messageAlign}`),\n            {\n              [prefixClassname(\"field__message--error\")]: error,\n            },\n          )}\n          children={message}\n        />\n      )}\n    </BaseCell>\n  )\n}\n\nexport default Field\n","import FieldElement, { FieldProps } from \"./field\"\r\nimport FieldButton from \"./field-button\"\r\n\r\nexport type { FieldClearTrigger, FieldClearTriggerString } from \"./field.shared\"\r\n\r\ninterface FieldInterface {\r\n  (props: FieldProps): JSX.Element\r\n\r\n  Button: typeof FieldButton\r\n}\r\n\r\nconst Field = FieldElement as FieldInterface\r\nField.Button = FieldButton\r\n\r\nexport default Field\r\n","import { Button, Cell, Field } from \"@taroify/core\"\nimport { MusicOutlined, SmileOutlined, WarningOutlined } from \"@taroify/icons\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\nfunction BasicField() {\n  const [value, setValue] = useState(\"\")\n  return (\n    <Cell.Group inset>\n      <Field\n        value={value}\n        label=\"文本\"\n        placeholder=\"请输入文本\"\n        onChange={(e) => setValue(e.detail.value)}\n      />\n    </Cell.Group>\n  )\n}\n\nfunction CustomField() {\n  const [text, setText] = useState(\"\")\n  const [idcard, setIdcard] = useState(\"\")\n  const [number, setNumber] = useState(\"\")\n  const [digit, setDigit] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  return (\n    <Cell.Group inset>\n      <Field\n        value={text}\n        label=\"文本\"\n        placeholder=\"请输入文本\"\n        onChange={(e) => setText(e.detail.value)}\n      />\n      <Field\n        value={idcard}\n        label=\"身份证号\"\n        type=\"idcard\"\n        placeholder=\"请输入手机号\"\n        onChange={(e) => setIdcard(e.detail.value)}\n      />\n      <Field\n        value={number}\n        label=\"整数\"\n        type=\"number\"\n        placeholder=\"请输入整数\"\n        onChange={(e) => setNumber(e.detail.value)}\n      />\n      <Field\n        value={digit}\n        label=\"数字\"\n        type=\"digit\"\n        placeholder=\"请输入数字（支持小数）\"\n        onChange={(e) => setDigit(e.detail.value)}\n      />\n      <Field\n        value={password}\n        label=\"密码\"\n        type=\"password\"\n        placeholder=\"请输入密码\"\n        onChange={(e) => setPassword(e.detail.value)}\n      />\n    </Cell.Group>\n  )\n}\n\nfunction DisabledField() {\n  return (\n    <Cell.Group inset>\n      <Field label=\"文本\" placeholder=\"输入框只读\" readonly />\n      <Field label=\"文本\" placeholder=\"输入框已禁用\" disabled />\n    </Cell.Group>\n  )\n}\n\nfunction IconField() {\n  const [value2, setValue2] = useState(\"\")\n\n  return (\n    <Cell.Group inset>\n      <Field\n        label=\"文本\"\n        icon={<SmileOutlined />}\n        rightIcon={<WarningOutlined />}\n        placeholder=\"显示图标\"\n      />\n      <Field\n        value={value2}\n        label=\"文本\"\n        icon={<MusicOutlined />}\n        clearable\n        placeholder=\"显示清除图标\"\n        onChange={(e) => setValue2(e.detail.value)}\n      />\n    </Cell.Group>\n  )\n}\n\nfunction ErrorField() {\n  return (\n    <Cell.Group inset>\n      <Field required error label=\"用户名\" placeholder=\"请输入用户名\" />\n      <Field required error label=\"手机号\" placeholder=\"请输入手机号\" message=\"手机号格式错误\" />\n    </Cell.Group>\n  )\n}\n\nfunction ButtonField() {\n  return (\n    <Cell.Group inset>\n      <Field align=\"center\" label=\"短信验证码\" placeholder=\"请输入短信验证码\">\n        <Field.Button>\n          <Button size=\"small\" color=\"primary\">\n            发送验证码\n          </Button>\n        </Field.Button>\n      </Field>\n    </Cell.Group>\n  )\n}\n\nexport default function FieldDemo() {\n  return (\n    <Page title=\"Field 输入框\" className=\"field-demo\">\n      <Block title=\"基础用法\">\n        <BasicField />\n      </Block>\n      <Block title=\"自定义类型\">\n        <CustomField />\n      </Block>\n      <Block title=\"禁用输入框\">\n        <DisabledField />\n      </Block>\n      <Block title=\"显示图标\">\n        <IconField />\n      </Block>\n      <Block title=\"错误提示\">\n        <ErrorField />\n      </Block>\n      <Block title=\"插入按钮\">\n        <ButtonField />\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}