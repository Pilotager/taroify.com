{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/state.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isNumber.js","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isString.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isUndefined.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_toKey.js","webpack:///./src/components/block.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_isKey.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/hasIn.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_castPath.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isEqual.js","webpack:///../../../../packages/core/src/cell/cell-group.context.ts","webpack:///../../../../packages/core/src/cell/cell-base.tsx","webpack:///../../../../packages/core/src/cell/cell-brief.tsx","webpack:///../../../../packages/core/src/cell/cell-title.tsx","webpack:///../../../../packages/core/src/cell/cell-value.tsx","webpack:///../../../../packages/core/src/cell/cell.tsx","webpack:///../../../../packages/core/src/cell/cell-group.tsx","webpack:///../../../../packages/core/src/cell/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_stringToPath.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_memoizeCapped.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/memoize.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseHasIn.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_hasPath.js","webpack:///../../../../packages/core/src/cell/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/replace.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/uniqueId.js","webpack:///../../../../packages/core/src/image/image.tsx","webpack:///../../../../packages/core/src/image/style/index.ts","webpack:///../../../../packages/core/src/checkbox/checkbox-group.context.ts","webpack:///../../../../packages/core/src/checkbox/checkbox-group.tsx","webpack:///../../../../packages/core/src/checkbox/index.ts","webpack:///../../../../packages/core/src/checkbox/checkbox.tsx","webpack:///../../../../packages/core/src/space/style/index.ts","webpack:///../../../../packages/core/src/space/space.tsx","webpack:///../../../../packages/core/src/space/index.ts","webpack:///../../../../packages/core/src/checkbox/style/index.ts","webpack:///./src/pages/form/checkbox/index.tsx"],"names":["previousRef","useRef","useEffect","usePreviousRef","cb","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","defaultValue","value","setValue","emitChange","getValue","baseGetTag","require","isObjectLike","module","exports","isNumber","isValidElement","element","isIconElement","cloneElement","node","className","oldProps","props","newProps","classNames","isArray","isString","isUndefined","undefined","isSymbol","toKey","result","Block","variant","title","children","demoPrefixClassname","reIsDeepProp","reIsPlainProp","isKey","type","test","Object","baseHasIn","hasPath","hasIn","path","stringToPath","toString","castPath","baseIsEqual","isEqual","other","createContext","CellBase","size","clickable","clickableProp","required","bordered","useContext","prefixClassname","align","icon","cloneIconElement","rightIcon","CellBrief","CellTitle","CellValue","alone","inset","CellGroupContext","Cell","brief","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","push","replace","match","number","quote","subString","memoize","func","key","cache","clear","MapCache","resolver","TypeError","memoized","args","arguments","apply","this","has","get","set","Cache","isArguments","isIndex","isLength","hasFunc","length","idCounter","uniqueId","prefix","id","ImagePlaceholder","React","mode","round","lazyLoad","placeholder","fallback","taroMode","toTaroMode","useState","setLoading","failed","src","loading","imgProps","alt","onError","setFailed","onLoad","CheckboxGroup","direction","onChangeProp","useValue","CheckboxGroupContext","max","Checkbox","checked","shape","names","namesMax","onNamesChange","name","onClick","aName","style","fontSize","addUnitPx","disabled","SpaceItem","SpaceDirection","SpaceSize","Vertical","item","CheckboxWithCustomIcon","width","height","CheckboxDemo","defaultChecked","Group"],"mappings":"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","file":"chunk/60.26ba0b8c.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  const stateRef = useRef(defaultValue ?? value ?? initialValue)\r\n\r\n  if (value !== undefined) {\r\n    stateRef.current = value\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(value)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ value: stateRef.current, getValue, setValue }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","import { createContext } from \"react\"\r\n\r\ninterface CellGroupContextValue {\r\n  clickable?: boolean\r\n}\r\n\r\nconst CellGroupContext = createContext<CellGroupContextValue>({})\r\n\r\nexport default CellGroupContext\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellBaseProps extends ViewProps {\r\n  bordered?: boolean\r\n  required?: boolean\r\n  clickable?: boolean\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellBase(props: CellBaseProps) {\r\n  const {\r\n    className,\r\n    size = \"medium\",\r\n    align,\r\n    clickable: clickableProp = false,\r\n    required = false,\r\n    bordered = true,\r\n    icon,\r\n    rightIcon,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { clickable } = useContext(CellGroupContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell\"),\r\n        {\r\n          [prefixClassname(\"cell--start\")]: align === \"start\",\r\n          [prefixClassname(\"cell--center\")]: align === \"center\",\r\n          [prefixClassname(\"cell--end\")]: align === \"end\",\r\n          [prefixClassname(\"cell--large\")]: size === \"large\",\r\n          [prefixClassname(\"cell--clickable\")]: clickableProp || clickable,\r\n          [prefixClassname(\"cell--required\")]: required,\r\n          [prefixClassname(\"cell--borderless\")]: !bordered,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon && isIconElement(icon)\r\n        ? cloneIconElement(icon, { className: prefixClassname(\"cell__icon\") })\r\n        : icon}\r\n      {children}\r\n      {rightIcon && isIconElement(rightIcon)\r\n        ? cloneIconElement(rightIcon, { className: prefixClassname(\"cell__right-icon\") })\r\n        : rightIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default CellBase\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellBriefProps extends ViewProps {\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellBrief(props: CellBriefProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__brief\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellBrief\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellTitleProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellTitle(props: CellTitleProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__title\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellTitle\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellValueProps extends ViewProps {\r\n  alone?: boolean\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellValue(props: CellValueProps) {\r\n  const { className, alone, ...restProps } = props\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell__value\"),\r\n        {\r\n          [prefixClassname(\"cell__value--alone\")]: alone,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CellValue\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport CellBase from \"./cell-base\"\r\nimport CellBrief from \"./cell-brief\"\r\nimport CellTitle from \"./cell-title\"\r\nimport CellValue from \"./cell-value\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellProps extends ViewProps {\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Cell(props: CellProps) {\r\n  const { title, brief, children, ...restProps } = props\r\n  return (\r\n    <CellBase {...restProps}>\r\n      {title && (\r\n        <CellTitle>\r\n          {title}\r\n          {brief && <CellBrief children={brief} />}\r\n        </CellTitle>\r\n      )}\r\n      <CellValue alone={!title} children={children} />\r\n    </CellBase>\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\n\r\ninterface CellGroupProps extends ViewProps {\r\n  title?: ReactNode\r\n  clickable?: boolean\r\n  inset?: boolean\r\n  bordered?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nexport function CellGroup(props: CellGroupProps) {\r\n  const { title, clickable = false, inset = false, bordered = true, children, ...restProps } = props\r\n  return (\r\n    <CellGroupContext.Provider\r\n      value={{\r\n        clickable,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"cell-group\"), {\r\n          [prefixClassname(\"cell-group--inset\")]: inset,\r\n        })}\r\n        {...restProps}\r\n      >\r\n        {title && (\r\n          <View\r\n            className={classNames(prefixClassname(\"cell-group__title\"), {\r\n              [prefixClassname(\"cell-group__title--inset\")]: inset,\r\n            })}\r\n            children={title}\r\n          />\r\n        )}\r\n        <View\r\n          className={classNames(prefixClassname(\"cell-group\"), {\r\n            [prefixClassname(\"hairline--top-bottom\")]: bordered,\r\n          })}\r\n          children={children}\r\n        />\r\n      </View>\r\n    </CellGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CellGroup\r\n","import CellElement, { CellProps } from \"./cell\"\r\nimport CellGroup from \"./cell-group\"\r\n\r\nexport type { CellAlign, CellSize } from \"./cell.shared\"\r\nexport { default as CellBase } from \"./cell-base\"\r\nexport { default as CellTitle } from \"./cell-title\"\r\nexport { default as CellValue } from \"./cell-value\"\r\nexport type { CellProps } from \"./cell\"\r\n\r\ninterface CellInterface {\r\n  (props: CellProps): JSX.Element\r\n\r\n  Group: typeof CellGroup\r\n}\r\n\r\nconst Cell = CellElement as CellInterface\r\nCell.Group = CellGroup\r\n\r\nexport default Cell\r\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var toString = require('./toString');\n\n/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */\nfunction replace() {\n  var args = arguments,\n      string = toString(args[0]);\n\n  return args.length < 3 ? string : string.replace(args[1], args[2]);\n}\n\nmodule.exports = replace;\n","var toString = require('./toString');\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport type ImageMode =\r\n  | \"scaleToFill\"\r\n  | \"aspectFit\"\r\n  | \"aspectFill\"\r\n  | \"widthFix\"\r\n  | \"heightFix\"\r\n  | \"top\"\r\n  | \"bottom\"\r\n  | \"center\"\r\n  | \"left\"\r\n  | \"right\"\r\n  | \"topLeft\"\r\n  | \"topRight\"\r\n  | \"bottomLeft\"\r\n  | \"bottomRight\"\r\n\r\nfunction toTaroMode(mode: ImageMode): string {\r\n  if (mode === \"topLeft\") {\r\n    return \"top left\"\r\n  }\r\n  if (mode === \"topRight\") {\r\n    return \"top right\"\r\n  }\r\n  if (mode === \"bottomLeft\") {\r\n    return \"bottom left\"\r\n  }\r\n  if (mode === \"bottomRight\") {\r\n    return \"bottom right\"\r\n  }\r\n  return mode\r\n}\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ImagePlaceholder({ prefix = \"placeholder\", children }: ImagePlaceholderProps) {\r\n  // Icon Element\r\n  if (React.isValidElement(children)) {\r\n    return (\r\n      <>\r\n        {React.cloneElement(children as ReactElement, {\r\n          className: classNames(\r\n            prefixClassname(`image__${prefix}`),\r\n            prefixClassname(`image__${prefix}-icon`),\r\n          ),\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n\r\ninterface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round = false,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = toTaroMode(mode)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n  }, [src])\r\n\r\n  function handleLoad() {\r\n    setLoading(false)\r\n  }\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--round\")]: round,\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onError={handleError}\r\n          onLoad={handleLoad}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\nimport { CheckboxGroupDirection } from \"./checkbox-group.shared\"\r\n\r\ninterface CheckboxGroupContextValue {\r\n  value?: any[]\r\n  max?: number\r\n\r\n  direction?: CheckboxGroupDirection\r\n\r\n  onChange?(value: any[]): void\r\n}\r\n\r\nconst CheckboxGroupContext = createContext<CheckboxGroupContextValue>({})\r\n\r\nexport default CheckboxGroupContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useValue } from \"../utils/state\"\r\nimport CheckboxGroupContext from \"./checkbox-group.context\"\r\nimport { CheckboxGroupDirection } from \"./checkbox-group.shared\"\r\n\r\nexport interface CheckboxGroupProps extends ViewProps {\r\n  defaultValue?: any[]\r\n  value?: any[]\r\n  max?: number\r\n  direction?: CheckboxGroupDirection\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any[]): void\r\n}\r\n\r\nfunction CheckboxGroup(props: CheckboxGroupProps) {\r\n  const {\r\n    defaultValue,\r\n    value: valueProp,\r\n    max,\r\n    direction = \"vertical\",\r\n    children,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value, setValue } = useValue({ value: valueProp, defaultValue, onChange: onChangeProp })\r\n\r\n  return (\r\n    <CheckboxGroupContext.Provider\r\n      value={{\r\n        value,\r\n        max,\r\n        direction,\r\n        onChange: setValue,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"checkbox-group\"), {\r\n          [prefixClassname(\"checkbox-group--horizontal\")]: direction === \"horizontal\",\r\n          [prefixClassname(\"checkbox-group--vertical\")]: direction === \"vertical\",\r\n        })}\r\n        children={children}\r\n        {...restProps}\r\n      />\r\n    </CheckboxGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CheckboxGroup\r\n","import { CheckboxProps, default as CheckboxComponent } from \"./checkbox\"\r\nimport CheckboxGroup from \"./checkbox-group\"\r\n\r\nexport type { CheckboxProps } from \"./checkbox\"\r\nexport type { CheckboxGroupProps } from \"./checkbox-group\"\r\n\r\ninterface CheckboxInterface {\r\n  (props: CheckboxProps): JSX.Element\r\n\r\n  Group: typeof CheckboxGroup\r\n}\r\n\r\nconst Checkbox = CheckboxComponent as CheckboxInterface\r\n\r\nCheckbox.Group = CheckboxGroup\r\n\r\nexport default Checkbox\r\n","import { Success } from \"@taroify/icons\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { useValue } from \"../utils/state\"\r\nimport CheckboxGroupContext from \"./checkbox-group.context\"\r\nimport { CheckboxShape } from \"./checkbox.shared\"\r\n\r\nexport interface CheckboxProps extends ViewProps {\r\n  name?: any\r\n  defaultChecked?: boolean\r\n  checked?: boolean\r\n  disabled?: boolean\r\n  shape?: CheckboxShape\r\n  icon?: ReactNode\r\n  size?: number\r\n  children?: ReactNode\r\n\r\n  onChange?(checked: boolean): void\r\n}\r\n\r\nexport default function Checkbox(props: CheckboxProps) {\r\n  const {\r\n    className,\r\n    name,\r\n    defaultChecked,\r\n    checked: checkedProp,\r\n    disabled,\r\n    shape = \"round\",\r\n    icon = <Success />,\r\n    size,\r\n    children,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value, setValue } = useValue({\r\n    value: checkedProp,\r\n    defaultValue: defaultChecked,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const { value: names = [], max: namesMax = 0, direction, onChange: onNamesChange } = useContext(\r\n    CheckboxGroupContext,\r\n  )\r\n\r\n  const checked = useMemo(() => value || (name && names?.includes(name)), [value, name, names])\r\n\r\n  function onClick() {\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    setValue(!checked)\r\n\r\n    if (name) {\r\n      if (names?.includes(name)) {\r\n        onNamesChange?.(names.filter((aName) => aName !== name))\r\n      } else if (namesMax === 0 || names.length < namesMax) {\r\n        onNamesChange?.([...names, name])\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"checkbox\"),\r\n        {\r\n          [prefixClassname(\"checkbox--horizontal\")]: direction === \"horizontal\",\r\n          [prefixClassname(\"checkbox--vertical\")]: direction === \"vertical\",\r\n        },\r\n        className,\r\n      )}\r\n      onClick={onClick}\r\n      {...restProps}\r\n    >\r\n      <View\r\n        className={classNames(\r\n          prefixClassname(\"checkbox__icon\"),\r\n          prefixClassname(`checkbox__icon--${shape}`),\r\n          {\r\n            [prefixClassname(\"checkbox__icon--disabled\")]: disabled,\r\n            [prefixClassname(\"checkbox__icon--checked\")]: checked,\r\n          },\r\n        )}\r\n        style={{ fontSize: size ? addUnitPx(size) : \"\" }}\r\n        children={icon}\r\n      />\r\n      {children && (\r\n        <View\r\n          className={classNames(prefixClassname(\"checkbox__label\"), {\r\n            [prefixClassname(\"checkbox__label--disabled\")]: disabled,\r\n          })}\r\n          children={children}\r\n        />\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface SpaceItemProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction SpaceItem(props: SpaceItemProps) {\r\n  const { children } = props\r\n\r\n  return <View className={classNames(prefixClassname(\"space__item\"))}>{children}</View>\r\n}\r\n\r\nexport enum SpaceDirection {\r\n  Horizontal = \"horizontal\",\r\n  Vertical = \"vertical\",\r\n}\r\n\r\ntype SpaceDirectionString = \"horizontal\" | \"vertical\"\r\n\r\nexport enum SpaceSize {\r\n  Small = \"small\",\r\n  Medium = \"medium\",\r\n  Large = \"large\",\r\n}\r\n\r\ntype SpaceSizeString = \"small\" | \"medium\" | \"large\"\r\n\r\ninterface SpaceProps {\r\n  direction?: SpaceDirection | SpaceDirectionString\r\n  size?: SpaceSize | SpaceSizeString | number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Space(props: SpaceProps) {\r\n  const { direction = SpaceDirection.Horizontal, children } = props\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"space\"), {\r\n        [prefixClassname(`space--${direction}`)]:\r\n          direction === SpaceDirection.Horizontal || direction === SpaceDirection.Vertical,\r\n      })}\r\n    >\r\n      {React.Children.map(children, (item, index) => (\r\n        <SpaceItem key={index} children={item} />\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n","import Space from \"./space\"\n\nexport default Space\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { Cell, Checkbox, Image, Space } from \"@taroify/core\"\r\nimport * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction CheckboxWithCustomIcon() {\r\n  const [value, setValue] = useState(false)\r\n\r\n  return (\r\n    <Checkbox\r\n      icon={\r\n        <Image\r\n          src={`https://img.yzcdn.cn/vant/user-${value ? \"active\" : \"inactive\"}.png`}\r\n          style={{\r\n            width: \"25px\",\r\n            height: \"20px\",\r\n          }}\r\n        />\r\n      }\r\n      checked={value}\r\n      onChange={setValue}\r\n    >\r\n      自定义图标\r\n    </Checkbox>\r\n  )\r\n}\r\n\r\nexport default function CheckboxDemo() {\r\n  return (\r\n    <Page title=\"Checkbox 复选框\" className=\"checkbox-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Checkbox defaultChecked>复选框</Checkbox>\r\n      </Block>\r\n      <Block title=\"禁用状态\">\r\n        <Space direction=\"vertical\">\r\n          <Checkbox disabled checked={false}>\r\n            复选框\r\n          </Checkbox>\r\n          <Checkbox disabled checked>\r\n            复选框\r\n          </Checkbox>\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"自定义形状\">\r\n        <Checkbox shape=\"square\">自定义形状</Checkbox>\r\n      </Block>\r\n      <Block title=\"自定义颜色\">\r\n        <Checkbox className=\"custom-color\">自定义颜色</Checkbox>\r\n      </Block>\r\n      <Block title=\"自定义大小\">\r\n        <Checkbox size={24}>自定义大小</Checkbox>\r\n      </Block>\r\n      <Block title=\"自定义图标\">\r\n        <CheckboxWithCustomIcon />\r\n      </Block>\r\n      <Block title=\"复选框组\" className=\"basic-checkbox-group\">\r\n        <Checkbox.Group>\r\n          <Checkbox name=\"a\">复选框 a</Checkbox>\r\n          <Checkbox name=\"b\">复选框 b</Checkbox>\r\n        </Checkbox.Group>\r\n      </Block>\r\n      <Block title=\"水平排列\" className=\"horizontal-checkbox-group\">\r\n        <Checkbox.Group direction=\"horizontal\">\r\n          <Checkbox name=\"a\">复选框 a</Checkbox>\r\n          <Checkbox name=\"b\">复选框 b</Checkbox>\r\n        </Checkbox.Group>\r\n      </Block>\r\n      <Block title=\"水平排列\" className=\"basic-checkbox-group\">\r\n        <Checkbox.Group defaultValue={[\"a\"]} max={2}>\r\n          <Checkbox name=\"a\">复选框 a</Checkbox>\r\n          <Checkbox name=\"b\">复选框 b</Checkbox>\r\n          <Checkbox name=\"c\">复选框 c</Checkbox>\r\n        </Checkbox.Group>\r\n      </Block>\r\n      <Block title=\"搭配单元格组件使用\" className=\"checkbox-cell-group\">\r\n        <Checkbox.Group max={2}>\r\n          <Cell.Group clickable>\r\n            <Cell title=\"复选框 a\">\r\n              <Checkbox name=\"a\" />\r\n            </Cell>\r\n            <Cell title=\"复选框 b\">\r\n              <Checkbox name=\"b\" />\r\n            </Cell>\r\n          </Cell.Group>\r\n        </Checkbox.Group>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}