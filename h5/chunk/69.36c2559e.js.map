{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/utils/base.ts","webpack:///../../../../packages/core/src/hooks/use-mounted.ts","webpack:///../../../../packages/core/src/hooks/use-rendered-effect.tsx","webpack:///../../../../packages/core/src/utils/state.ts","webpack:///../../../../packages/core/src/hooks/use-placeholder.tsx","webpack:///../../../../packages/core/src/hooks/use-height.ts","webpack:///../../../../packages/core/src/hooks/use-timeout.ts","webpack:///../../../../packages/core/src/hooks/use-unique-id.ts","webpack:///../../../../packages/core/src/hooks/use-update.ts","webpack:///../../../../packages/core/src/hooks/use-window-resize.tsx","webpack:///../../../../packages/core/src/utils/dom/rect.ts","webpack:///../../../../packages/core/src/utils/dom/element.ts","webpack:///./src/components/block.tsx","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/core/src/cell/style/index.ts","webpack:///../../../../packages/core/src/cell/cell-group.context.ts","webpack:///../../../../packages/core/src/cell/base-cell.tsx","webpack:///../../../../packages/core/src/cell/cell.tsx","webpack:///../../../../packages/core/src/cell/cell-group.tsx","webpack:///../../../../packages/core/src/cell/index.ts","webpack:///../../../../packages/core/src/image/image.tsx","webpack:///../../../../packages/core/src/image/style/index.ts","webpack:///../../../../packages/core/src/space/style/index.ts","webpack:///../../../../packages/core/src/space/space.tsx","webpack:///../../../../packages/core/src/space/index.ts","webpack:///../../../../packages/core/src/checkbox/checkbox-group.context.ts","webpack:///../../../../packages/core/src/checkbox/checkbox-group.tsx","webpack:///../../../../packages/core/src/checkbox/index.ts","webpack:///../../../../packages/core/src/checkbox/checkbox.tsx","webpack:///./src/pages/form/checkbox/index.tsx"],"names":["value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","inBrowser","inWechat","process","useRenderedEffect","cb","effect","destructorRef","useRef","useEffect","nextTick","destructor","previousRef","usePreviousRef","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","defaultValue","setValue","emitChange","getValue","className","useState","useMounted","useHeight","children","style","useTimeout","timerRef","cbRef","msRef","argsRef","stop","clearTimeout","start","args","setTimeout","callback","ms","restart","updateReducer","num","useReducer","useWindowResize","onWindowResize","offWindowResize","top","left","right","bottom","element","elementUnref","isWindow","Promise","makeRect","resolve","createNodesRef","isRootElement","rects","oneElement","createSelectorQuery","val","elementOrRef","node","ancestor","Block","props","variant","title","classNames","demoPrefixClassname","isValidElement","isIconElement","cloneElement","oldProps","newProps","createContext","BaseCell","clickable","clickableProp","required","bordered","useContext","prefixClassname","align","icon","cloneIconElement","brief","rightIcon","inset","CellGroupContext","Cell","React","Object","ImagePlaceholder","prefix","mode","round","lazyLoad","placeholder","fallback","taroMode","toTaroMode","setLoading","failed","src","loading","imgProps","alt","onError","setFailed","onLoad","SpaceItem","SpaceDirection","SpaceSize","direction","Vertical","key","item","CheckboxGroup","onChangeProp","useValue","CheckboxGroupContext","max","Checkbox","checked","shape","names","namesMax","onNamesChange","name","onClick","aName","disabled","CheckboxWithCustomIcon","CheckboxDemo","defaultChecked","Group"],"mappings":"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","file":"chunk/69.36c2559e.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","export function noop() {}\r\n\r\nexport const inBrowser = typeof document !== \"undefined\" && !!document.scripts\r\nexport const inWechat = process.env.TARO_ENV === \"weapp\"\r\nexport const inSwan = process.env.TARO_ENV === \"swan\"\r\nexport const inAlipay = process.env.TARO_ENV === \"alipay\"\r\nexport const inQQ = process.env.TARO_ENV === \"qq\"\r\nexport const inToutiao = process.env.TARO_ENV === \"tt\"\r\n","import useRenderedEffect from \"./use-rendered-effect\"\r\n\r\nexport default function useMounted(cb: (...args: any[]) => any) {\r\n  useRenderedEffect(cb, [])\r\n}\r\n","import { nextTick } from \"@tarojs/taro\"\nimport * as _ from \"lodash\"\nimport { DependencyList, EffectCallback, useEffect, useRef } from \"react\"\n\nfunction useRenderedEffect(effect: EffectCallback, deps?: DependencyList) {\n  const destructorRef = useRef<() => void>()\n\n  useEffect(\n    () => {\n      nextTick(() => {\n        const destructor = effect?.()\n        if (_.isFunction(destructor)) {\n          destructorRef.current = destructor\n        }\n      })\n\n      return destructorRef.current\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  )\n}\n\nexport default useRenderedEffect\n","import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  const stateRef = useRef(defaultValue ?? value ?? initialValue)\r\n\r\n  if (value !== undefined) {\r\n    stateRef.current = value\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(value)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ value: stateRef.current, getValue, setValue }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport useHeight from \"./use-height\"\r\n\r\ninterface UsePlaceholderOptions {\r\n  className?: string\r\n}\r\n\r\nexport default function usePlaceholder(contentRef: any, { className }: UsePlaceholderOptions) {\r\n  const height = useHeight(contentRef)\r\n\r\n  return ({\r\n    // @ts-ignore\r\n    children,\r\n  }) => (\r\n    <View\r\n      className={className}\r\n      style={{ height: height ? `${addUnitPx(height)}` : \"\" }}\r\n      children={children}\r\n    />\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport useMounted from \"./use-mounted\"\r\n\r\nexport default function useHeight(elementOrRef: any) {\r\n  const [height, setHeight] = useState<number>(0)\r\n  useMounted(() =>\r\n    getRect(elementOrRef)\r\n      .then(({ height }) => height)\r\n      .then(setHeight),\r\n  )\r\n  return height\r\n}\r\n","import { useCallback, useMemo, useRef } from \"react\"\r\n\r\ntype UseTimeoutCallback = (...args: any[]) => void\r\n\r\nfunction useTimeout() {\r\n  const timerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const cbRef = useRef<UseTimeoutCallback>()\r\n  const msRef = useRef<number>()\r\n  const argsRef = useRef<any[]>()\r\n\r\n  const stop = useCallback(() => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current)\r\n      timerRef.current = undefined\r\n    }\r\n  }, [])\r\n\r\n  const start = useCallback((callback: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n    if (timerRef.current) {\r\n      return\r\n    }\r\n    cbRef.current = callback\r\n    msRef.current = ms\r\n    argsRef.current = args\r\n    timerRef.current = setTimeout(callback, ms, args)\r\n  }, [])\r\n\r\n  const restart = useCallback(\r\n    (callback?: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n      stop()\r\n      if (callback) {\r\n        start(callback, ms, args)\r\n      } else if (cbRef.current) {\r\n        start(cbRef.current, msRef.current, argsRef.current)\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  return useMemo(\r\n    () => ({\r\n      restart,\r\n      start,\r\n      stop,\r\n    }),\r\n    [restart, start, stop],\r\n  )\r\n}\r\n\r\nexport default useTimeout\r\n","import * as _ from \"lodash\"\r\nimport { useRef } from \"react\"\r\n\r\nfunction useUniqueId() {\r\n  const uniqueIdRef = useRef(_.uniqueId(\"t_\"))\r\n  return uniqueIdRef.current\r\n}\r\n\r\nexport default useUniqueId\r\n","import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useUpdate\r\n","import { offWindowResize, onWindowResize } from \"@tarojs/taro\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Size {\r\n  /** 变化后的窗口高度，单位 px */\r\n  windowHeight: number\r\n  /** 变化后的窗口宽度，单位 px */\r\n  windowWidth: number\r\n}\r\n\r\ninterface CallbackResult {\r\n  size: Size\r\n}\r\n\r\ntype WindowResizeCallback = (result: CallbackResult) => void\r\n\r\nfunction useWindowResize(callback: WindowResizeCallback) {\r\n  useEffect(() => {\r\n    onWindowResize?.(callback)\r\n\r\n    return () =>\r\n      offWindowResize?.(\r\n        // @ts-ignore\r\n        callback,\r\n      )\r\n  }, [callback])\r\n}\r\n\r\nexport default useWindowResize\r\n","import { createSelectorQuery } from \"@tarojs/taro\"\nimport { inBrowser } from \"../base\"\nimport { createNodesRef, elementUnref, isRootElement, isWindow } from \"./element\"\n\nexport interface Rect {\n  dataset: Record<string, any>\n  id: string\n  top: number\n  right: number\n  bottom: number\n  left: number\n  width: number\n  height: number\n}\n\nexport function makeRect(width: number, height: number) {\n  return {\n    top: 0,\n    left: 0,\n    right: width,\n    bottom: height,\n    width,\n    height,\n  } as Rect\n}\n\nexport function getRect(elementOrRef: any): Promise<Rect> {\n  const element = elementUnref(elementOrRef)\n  if (element) {\n    if (inBrowser) {\n      if (isWindow(element)) {\n        const width = element.innerWidth\n        const height = element.innerHeight\n        return Promise.resolve(makeRect(width, height))\n      }\n\n      return Promise.resolve(\n        (((element as unknown) as HTMLElement).getBoundingClientRect() as unknown) as Rect,\n      )\n    } else {\n      return new Promise<Rect>((resolve) => {\n        createNodesRef(element)\n          .boundingClientRect()\n          .exec(([rect]) => {\n            if (isRootElement(element)) {\n              const { width, height } = rect\n              resolve(makeRect(width, height))\n            } else {\n              resolve(rect)\n            }\n          })\n      })\n    }\n  }\n  return Promise.resolve(makeRect(0, 0))\n}\n\nexport function getRects(elementOrRef: any, selector: string): Promise<Rect[]> {\n  const element = elementUnref(elementOrRef)\n  if (element) {\n    if (inBrowser) {\n      const rects: Rect[] = []\n      ;((element as unknown) as HTMLElement)\n        .querySelectorAll(selector)\n        .forEach((oneElement) =>\n          rects.push((oneElement.getBoundingClientRect() as unknown) as Rect),\n        )\n      return Promise.resolve(rects)\n    } else {\n      return new Promise<Rect[]>((resolve) => {\n        createSelectorQuery()\n          .selectAll(\"#\" + element.uid + selector)\n          .boundingClientRect()\n          .exec(([rects]) => resolve((rects as unknown) as Rect[]))\n      })\n    }\n  }\n  return Promise.resolve([])\n}\n","import { TaroElement } from \"@tarojs/runtime\"\nimport { createSelectorQuery } from \"@tarojs/taro\"\nimport * as _ from \"lodash\"\nimport { inWechat } from \"../base\"\n\nexport const ELEMENT_NODE_TYPE = 1\n\nexport function isWindow(val: unknown): val is Window {\n  return val === window\n}\n\nexport function isBodyElement(val: unknown): boolean {\n  return val === document.body\n}\n\nexport function elementUnref(elementOrRef: any): TaroElement {\n  if (elementOrRef === undefined || elementOrRef === null) {\n    return elementOrRef\n  }\n  if (\"current\" in elementOrRef) {\n    return elementOrRef.current\n  }\n  return elementOrRef\n}\n\nexport function isRootElement(node?: TaroElement) {\n  return node?.nodeType === ELEMENT_NODE_TYPE && node?.tagName === \"ROOT\"\n}\n\nexport function matchSelector(aSelector?: string, bSelector?: string) {\n  return _.replace(aSelector as string, \"#\", \"\") === bSelector\n}\n\nexport function createNodesRef(element: TaroElement) {\n  if (isRootElement(element)) {\n    return createSelectorQuery().selectViewport()\n  }\n\n  // Fix nested in CustomWrapper is undefined\n  // See: https://github.com/mallfoundry/taroify/pull/143\n  if (inWechat) {\n    let ancestor = element\n    while (ancestor.parentNode && !isRootElement(ancestor.parentNode as TaroElement)) {\n      ancestor = ancestor.parentNode as TaroElement\n    }\n\n    if (ancestor && ancestor !== element) {\n      return createSelectorQuery().select(`#${ancestor.uid}>>>#${element.uid}`)\n    }\n  }\n\n  return createSelectorQuery().select(\"#\" + element.uid)\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport { ICON_TYPE, IconProps } from \"../shared\"\r\n\r\nexport function isIconElement(node?: ReactNode): boolean {\r\n  // Is`t not ReactElement\r\n  if (!isValidElement(node)) {\r\n    return false\r\n  }\r\n  const element = node as ReactElement\r\n  return _.hasIn(element.type, ICON_TYPE)\r\n}\r\n\r\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\r\n  if (!isIconElement(node)) {\r\n    return isValidElement(node) ? cloneElement(node, props) : node\r\n  }\r\n  const { className, ...restProps } = props\r\n  const element = node as ReactElement\r\n  const { props: oldProps } = element\r\n  const newProps: IconProps = {\r\n    ...oldProps,\r\n    className: classNames(oldProps.className, className),\r\n    ...restProps,\r\n  }\r\n  return cloneElement(element, newProps)\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface CellGroupContextValue {\r\n  clickable?: boolean\r\n}\r\n\r\nconst CellGroupContext = createContext<CellGroupContextValue>({})\r\n\r\nexport default CellGroupContext\r\n","import { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface BaseCellProps extends ViewProps {\r\n  titleClassName?: string\r\n  briefClassName?: string\r\n  valueClassName?: string\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  required?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction BaseCell(props: BaseCellProps) {\r\n  const {\r\n    className,\r\n    titleClassName,\r\n    briefClassName,\r\n    valueClassName,\r\n    size = \"medium\",\r\n    align,\r\n    title,\r\n    brief,\r\n    clickable: clickableProp = false,\r\n    required = false,\r\n    bordered = true,\r\n    icon,\r\n    rightIcon,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { clickable } = useContext(CellGroupContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell\"),\r\n        {\r\n          [prefixClassname(\"cell--start\")]: align === \"start\",\r\n          [prefixClassname(\"cell--center\")]: align === \"center\",\r\n          [prefixClassname(\"cell--end\")]: align === \"end\",\r\n          [prefixClassname(\"cell--large\")]: size === \"large\",\r\n          [prefixClassname(\"cell--clickable\")]: clickableProp || clickable,\r\n          [prefixClassname(\"cell--required\")]: required,\r\n          [prefixClassname(\"cell--borderless\")]: !bordered,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon && cloneIconElement(icon, { className: prefixClassname(\"cell__icon\") })}\r\n      {title && (\r\n        <View className={classNames(prefixClassname(\"cell__title\"), titleClassName)}>\r\n          {title}\r\n          {brief && (\r\n            <View\r\n              className={classNames(prefixClassname(\"cell__brief\"), briefClassName)}\r\n              children={brief}\r\n            />\r\n          )}\r\n        </View>\r\n      )}\r\n      {children && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"cell__value\"),\r\n            {\r\n              [prefixClassname(\"cell__value--alone\")]: !title,\r\n            },\r\n            valueClassName,\r\n          )}\r\n          children={children}\r\n        />\r\n      )}\r\n      {rightIcon && cloneIconElement(rightIcon, { className: prefixClassname(\"cell__right-icon\") })}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default BaseCell\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport BaseCell from \"./base-cell\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellProps extends ViewProps {\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Cell(props: CellProps) {\r\n  return <BaseCell {...props} />\r\n}\r\n\r\nexport default Cell\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\n\r\ninterface CellGroupProps extends ViewProps {\r\n  title?: ReactNode\r\n  clickable?: boolean\r\n  inset?: boolean\r\n  bordered?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nexport function CellGroup(props: CellGroupProps) {\r\n  const { title, clickable = false, inset = false, bordered = true, children, ...restProps } = props\r\n  return (\r\n    <CellGroupContext.Provider\r\n      value={{\r\n        clickable,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"cell-group\"), {\r\n          [prefixClassname(\"cell-group--inset\")]: inset,\r\n        })}\r\n        {...restProps}\r\n      >\r\n        {title && (\r\n          <View\r\n            className={classNames(prefixClassname(\"cell-group__title\"), {\r\n              [prefixClassname(\"cell-group__title--inset\")]: inset,\r\n            })}\r\n            children={title}\r\n          />\r\n        )}\r\n        <View\r\n          className={classNames(prefixClassname(\"cell-group\"), {\r\n            [prefixClassname(\"hairline--top-bottom\")]: bordered,\r\n          })}\r\n          children={children}\r\n        />\r\n      </View>\r\n    </CellGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CellGroup\r\n","import CellElement, { CellProps } from \"./cell\"\r\nimport CellGroup from \"./cell-group\"\r\n\r\nexport type { CellAlign, CellSize } from \"./cell.shared\"\r\nexport { default as BaseCell } from \"./base-cell\"\r\n\r\ninterface CellInterface {\r\n  (props: CellProps): JSX.Element\r\n\r\n  Group: typeof CellGroup\r\n}\r\n\r\nconst Cell = CellElement as CellInterface\r\nCell.Group = CellGroup\r\n\r\nexport default Cell\r\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport type ImageMode =\r\n  | \"scaleToFill\"\r\n  | \"aspectFit\"\r\n  | \"aspectFill\"\r\n  | \"widthFix\"\r\n  | \"heightFix\"\r\n  | \"top\"\r\n  | \"bottom\"\r\n  | \"center\"\r\n  | \"left\"\r\n  | \"right\"\r\n  | \"topLeft\"\r\n  | \"topRight\"\r\n  | \"bottomLeft\"\r\n  | \"bottomRight\"\r\n\r\nfunction toTaroMode(mode: ImageMode): string {\r\n  if (mode === \"topLeft\") {\r\n    return \"top left\"\r\n  }\r\n  if (mode === \"topRight\") {\r\n    return \"top right\"\r\n  }\r\n  if (mode === \"bottomLeft\") {\r\n    return \"bottom left\"\r\n  }\r\n  if (mode === \"bottomRight\") {\r\n    return \"bottom right\"\r\n  }\r\n  return mode\r\n}\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ImagePlaceholder({ prefix = \"placeholder\", children }: ImagePlaceholderProps) {\r\n  // Icon Element\r\n  if (React.isValidElement(children)) {\r\n    return (\r\n      <>\r\n        {React.cloneElement(children as ReactElement, {\r\n          className: classNames(\r\n            prefixClassname(`image__${prefix}`),\r\n            prefixClassname(`image__${prefix}-icon`),\r\n          ),\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n\r\ninterface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round = false,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = toTaroMode(mode)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n  }, [src])\r\n\r\n  function handleLoad() {\r\n    setLoading(false)\r\n  }\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--round\")]: round,\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onError={handleError}\r\n          onLoad={handleLoad}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface SpaceItemProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction SpaceItem(props: SpaceItemProps) {\r\n  const { children } = props\r\n\r\n  return <View className={classNames(prefixClassname(\"space__item\"))}>{children}</View>\r\n}\r\n\r\nexport enum SpaceDirection {\r\n  Horizontal = \"horizontal\",\r\n  Vertical = \"vertical\",\r\n}\r\n\r\ntype SpaceDirectionString = \"horizontal\" | \"vertical\"\r\n\r\nexport enum SpaceSize {\r\n  Small = \"small\",\r\n  Medium = \"medium\",\r\n  Large = \"large\",\r\n}\r\n\r\ntype SpaceSizeString = \"small\" | \"medium\" | \"large\"\r\n\r\ninterface SpaceProps {\r\n  direction?: SpaceDirection | SpaceDirectionString\r\n  size?: SpaceSize | SpaceSizeString | number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Space(props: SpaceProps) {\r\n  const { direction = SpaceDirection.Horizontal, children } = props\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"space\"), {\r\n        [prefixClassname(`space--${direction}`)]:\r\n          direction === SpaceDirection.Horizontal || direction === SpaceDirection.Vertical,\r\n      })}\r\n    >\r\n      {React.Children.map(children, (item, index) => (\r\n        <SpaceItem key={index} children={item} />\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n","import Space from \"./space\"\n\nexport default Space\n","import { createContext } from \"react\"\r\n\r\ninterface CheckboxGroupContextValue {\r\n  value?: any[]\r\n  max?: number\r\n\r\n  onChange?(value: any[]): void\r\n}\r\n\r\nconst CheckboxGroupContext = createContext<CheckboxGroupContextValue>({})\r\n\r\nexport default CheckboxGroupContext\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useValue } from \"../utils/state\"\r\nimport CheckboxGroupContext from \"./checkbox-group.context\"\r\n\r\nexport type CheckboxGroupDirection = \"horizontal\" | \"vertical\"\r\n\r\ninterface CheckboxGroupProps {\r\n  defaultValue?: any[]\r\n  value?: any[]\r\n  max?: number\r\n  direction?: CheckboxGroupDirection\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any[]): void\r\n}\r\n\r\nfunction CheckboxGroup(props: CheckboxGroupProps) {\r\n  const {\r\n    defaultValue,\r\n    value: valueProp,\r\n    max,\r\n    direction = \"vertical\",\r\n    children,\r\n    onChange: onChangeProp,\r\n  } = props\r\n\r\n  const { value, setValue } = useValue({ value: valueProp, defaultValue, onChange: onChangeProp })\r\n\r\n  return (\r\n    <CheckboxGroupContext.Provider\r\n      value={{\r\n        value,\r\n        max,\r\n        onChange: setValue,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(\r\n          prefixClassname(\"checkbox-group\"),\r\n          prefixClassname(`checkbox-group--${direction}`),\r\n        )}\r\n        children={children}\r\n      />\r\n    </CheckboxGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CheckboxGroup\r\n","import { CheckboxProps, default as CheckboxElement } from \"./checkbox\"\r\nimport CheckboxGroup from \"./checkbox-group\"\r\n\r\ninterface CheckboxInterface {\r\n  (props: CheckboxProps): JSX.Element\r\n\r\n  Group: typeof CheckboxGroup\r\n}\r\n\r\nconst Checkbox = CheckboxElement as CheckboxInterface\r\n\r\nCheckbox.Group = CheckboxGroup\r\n\r\nexport default Checkbox\r\n","import { Success } from \"@taroify/icons\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { useValue } from \"../utils/state\"\r\nimport CheckboxGroupContext from \"./checkbox-group.context\"\r\nimport { CheckboxShape } from \"./checkbox.shared\"\r\n\r\nexport interface CheckboxProps extends ViewProps {\r\n  name?: any\r\n  defaultChecked?: boolean\r\n  checked?: boolean\r\n  disabled?: boolean\r\n  shape?: CheckboxShape\r\n  icon?: ReactNode\r\n  size?: number\r\n  children?: ReactNode\r\n\r\n  onChange?(checked: boolean): void\r\n}\r\n\r\nexport default function Checkbox(props: CheckboxProps) {\r\n  const {\r\n    className,\r\n    name,\r\n    defaultChecked,\r\n    checked: checkedProp,\r\n    disabled,\r\n    shape = \"round\",\r\n    icon = <Success />,\r\n    size,\r\n    children,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value, setValue } = useValue({\r\n    value: checkedProp,\r\n    defaultValue: defaultChecked,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const { value: names = [], max: namesMax = 0, onChange: onNamesChange } = useContext(\r\n    CheckboxGroupContext,\r\n  )\r\n\r\n  const checked = useMemo(() => value || (name && names?.includes(name)), [value, name, names])\r\n\r\n  function onClick() {\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    setValue(!checked)\r\n\r\n    if (name) {\r\n      if (names?.includes(name)) {\r\n        onNamesChange?.(names.filter((aName) => aName !== name))\r\n      } else if (namesMax === 0 || names.length < namesMax) {\r\n        onNamesChange?.([...names, name])\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"checkbox\"), className)}\r\n      onClick={onClick}\r\n      {...restProps}\r\n    >\r\n      <View\r\n        className={classNames(\r\n          prefixClassname(\"checkbox__icon\"),\r\n          prefixClassname(`checkbox__icon--${shape}`),\r\n          {\r\n            [prefixClassname(\"checkbox__icon--disabled\")]: disabled,\r\n            [prefixClassname(\"checkbox__icon--checked\")]: checked,\r\n          },\r\n        )}\r\n        style={{ fontSize: size ? addUnitPx(size) : \"\" }}\r\n        children={icon}\r\n      />\r\n      {children && (\r\n        <View\r\n          className={classNames(prefixClassname(\"checkbox__label\"), {\r\n            [prefixClassname(\"checkbox__label--disabled\")]: disabled,\r\n          })}\r\n          children={children}\r\n        />\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n","import { Cell, Checkbox, Image, Space } from \"@taroify/core\"\r\nimport * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction CheckboxWithCustomIcon() {\r\n  const [value, setValue] = useState(false)\r\n\r\n  return (\r\n    <Checkbox\r\n      icon={\r\n        <Image\r\n          src={`https://img.yzcdn.cn/vant/user-${value ? \"active\" : \"inactive\"}.png`}\r\n          style={{\r\n            width: \"25px\",\r\n            height: \"20px\",\r\n          }}\r\n        />\r\n      }\r\n      checked={value}\r\n      onChange={setValue}\r\n    >\r\n      自定义图标\r\n    </Checkbox>\r\n  )\r\n}\r\n\r\nexport default function CheckboxDemo() {\r\n  return (\r\n    <Page title=\"Checkbox 复选框\" className=\"checkbox-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Checkbox defaultChecked>复选框</Checkbox>\r\n      </Block>\r\n      <Block title=\"禁用状态\">\r\n        <Space direction=\"vertical\">\r\n          <Checkbox disabled checked={false}>\r\n            复选框\r\n          </Checkbox>\r\n          <Checkbox disabled checked>\r\n            复选框\r\n          </Checkbox>\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"自定义形状\">\r\n        <Checkbox shape=\"square\">自定义形状</Checkbox>\r\n      </Block>\r\n      <Block title=\"自定义颜色\">\r\n        <Checkbox className=\"custom-color\">自定义颜色</Checkbox>\r\n      </Block>\r\n      <Block title=\"自定义大小\">\r\n        <Checkbox size={24}>自定义大小</Checkbox>\r\n      </Block>\r\n      <Block title=\"自定义图标\">\r\n        <CheckboxWithCustomIcon />\r\n      </Block>\r\n      <Block title=\"复选框组\" className=\"basic-checkbox-group\">\r\n        <Checkbox.Group>\r\n          <Checkbox name=\"a\">复选框 a</Checkbox>\r\n          <Checkbox name=\"b\">复选框 b</Checkbox>\r\n        </Checkbox.Group>\r\n      </Block>\r\n      <Block title=\"水平排列\" className=\"horizontal-checkbox-group\">\r\n        <Checkbox.Group direction=\"horizontal\">\r\n          <Checkbox name=\"a\">复选框 a</Checkbox>\r\n          <Checkbox name=\"b\">复选框 b</Checkbox>\r\n        </Checkbox.Group>\r\n      </Block>\r\n      <Block title=\"水平排列\" className=\"basic-checkbox-group\">\r\n        <Checkbox.Group defaultValue={[\"a\"]} max={2}>\r\n          <Checkbox name=\"a\">复选框 a</Checkbox>\r\n          <Checkbox name=\"b\">复选框 b</Checkbox>\r\n          <Checkbox name=\"c\">复选框 c</Checkbox>\r\n        </Checkbox.Group>\r\n      </Block>\r\n      <Block title=\"搭配单元格组件使用\" className=\"checkbox-cell-group\">\r\n        <Checkbox.Group max={2}>\r\n          <Cell.Group clickable>\r\n            <Cell title=\"复选框 a\">\r\n              <Checkbox name=\"a\" />\r\n            </Cell>\r\n            <Cell title=\"复选框 b\">\r\n              <Checkbox name=\"b\" />\r\n            </Cell>\r\n          </Cell.Group>\r\n        </Checkbox.Group>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}