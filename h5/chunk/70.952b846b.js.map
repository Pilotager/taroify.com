{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/utils/base.ts","webpack:///../../../../packages/core/src/hooks/use-mounted.ts","webpack:///../../../../packages/core/src/hooks/use-rendered-effect.tsx","webpack:///../../../../packages/core/src/utils/state.ts","webpack:///../../../../packages/core/src/hooks/use-placeholder.tsx","webpack:///../../../../packages/core/src/hooks/use-height.ts","webpack:///../../../../packages/core/src/hooks/use-timeout.ts","webpack:///../../../../packages/core/src/hooks/use-unique-id.ts","webpack:///../../../../packages/core/src/hooks/use-update.ts","webpack:///../../../../packages/core/src/hooks/use-window-resize.tsx","webpack:///../../../../packages/core/src/utils/dom/rect.ts","webpack:///../../../../packages/core/src/utils/dom/element.ts","webpack:///./src/components/block.tsx","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///../../../../packages/core/src/button/button.context.ts","webpack:///../../../../packages/core/src/styles/hairline.ts","webpack:///../../../../packages/core/src/button/style/index.ts","webpack:///../../../../packages/core/src/button-base/style/index.ts","webpack:///../../../../packages/core/src/button-base/button-base.tsx","webpack:///../../../../packages/core/src/button/button.tsx","webpack:///../../../../packages/core/src/steps/steps.context.ts","webpack:///../../../../packages/core/src/steps/step.tsx","webpack:///../../../../packages/core/src/steps/steps.tsx","webpack:///../../../../packages/core/src/steps/index.ts","webpack:///./src/pages/display/steps/index.tsx"],"names":["value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","inBrowser","inWechat","process","useRenderedEffect","cb","effect","destructorRef","useRef","useEffect","nextTick","destructor","previousRef","usePreviousRef","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","defaultValue","setValue","emitChange","getValue","className","useState","useMounted","useHeight","children","style","useTimeout","timerRef","cbRef","msRef","argsRef","stop","clearTimeout","start","args","setTimeout","callback","ms","restart","updateReducer","num","useReducer","useWindowResize","onWindowResize","offWindowResize","top","left","right","bottom","element","elementUnref","isWindow","Promise","makeRect","resolve","createNodesRef","isRootElement","rects","oneElement","createSelectorQuery","val","elementOrRef","node","ancestor","Block","props","variant","title","classNames","demoPrefixClassname","isValidElement","isIconElement","cloneElement","oldProps","newProps","SpinIcon","key","prefixClassname","LoadingSpinner","rootStyle","LoadingCircular","type","direction","ButtonContext","createContext","HAIRLINE_BORDER","HAIRLINE_BORDER_TOP","HAIRLINE_BORDER_LEFT","HAIRLINE_BORDER_BOTTOM","HAIRLINE_BORDER_SURROUND","HAIRLINE_BORDER_TOP_BOTTOM","HAIRLINE_BORDER_UNSET_TOP_BOTTOM","ButtonBase","color","formType","loading","onClick","useButtonLoading","onCtxClick","useContext","shape","block","e","disabled","React","Object","Step","active","activeProp","completed","completedProp","alternativeLabel","label","icon","cloneIconElement","Steps","childrenProp","useValue","steps","useStepsChildren","__children__","Children","child","StepsContext","BasicSteps","activeStep","AlternativeLabelSteps","StepsWithCustomStyle","VerticalSteps","StepsDemo","setActiveStep"],"mappings":"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","file":"chunk/70.952b846b.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","export function noop() {}\r\n\r\nexport const inBrowser = typeof document !== \"undefined\" && !!document.scripts\r\nexport const inWechat = process.env.TARO_ENV === \"weapp\"\r\nexport const inSwan = process.env.TARO_ENV === \"swan\"\r\nexport const inAlipay = process.env.TARO_ENV === \"alipay\"\r\nexport const inQQ = process.env.TARO_ENV === \"qq\"\r\nexport const inToutiao = process.env.TARO_ENV === \"tt\"\r\n","import useRenderedEffect from \"./use-rendered-effect\"\r\n\r\nexport default function useMounted(cb: (...args: any[]) => any) {\r\n  useRenderedEffect(cb, [])\r\n}\r\n","import { nextTick } from \"@tarojs/taro\"\nimport * as _ from \"lodash\"\nimport { DependencyList, EffectCallback, useEffect, useRef } from \"react\"\n\nfunction useRenderedEffect(effect: EffectCallback, deps?: DependencyList) {\n  const destructorRef = useRef<() => void>()\n\n  useEffect(\n    () => {\n      nextTick(() => {\n        const destructor = effect?.()\n        if (_.isFunction(destructor)) {\n          destructorRef.current = destructor\n        }\n      })\n\n      return destructorRef.current\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  )\n}\n\nexport default useRenderedEffect\n","import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  const stateRef = useRef(defaultValue ?? value ?? initialValue)\r\n\r\n  if (value !== undefined) {\r\n    stateRef.current = value\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(value)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ value: stateRef.current, getValue, setValue }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport useHeight from \"./use-height\"\r\n\r\ninterface UsePlaceholderOptions {\r\n  className?: string\r\n}\r\n\r\nexport default function usePlaceholder(contentRef: any, { className }: UsePlaceholderOptions) {\r\n  const height = useHeight(contentRef)\r\n\r\n  return ({\r\n    // @ts-ignore\r\n    children,\r\n  }) => (\r\n    <View\r\n      className={className}\r\n      style={{ height: height ? `${addUnitPx(height)}` : \"\" }}\r\n      children={children}\r\n    />\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport useMounted from \"./use-mounted\"\r\n\r\nexport default function useHeight(elementOrRef: any) {\r\n  const [height, setHeight] = useState<number>(0)\r\n  useMounted(() =>\r\n    getRect(elementOrRef)\r\n      .then(({ height }) => height)\r\n      .then(setHeight),\r\n  )\r\n  return height\r\n}\r\n","import { useCallback, useMemo, useRef } from \"react\"\r\n\r\ntype UseTimeoutCallback = (...args: any[]) => void\r\n\r\nfunction useTimeout() {\r\n  const timerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const cbRef = useRef<UseTimeoutCallback>()\r\n  const msRef = useRef<number>()\r\n  const argsRef = useRef<any[]>()\r\n\r\n  const stop = useCallback(() => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current)\r\n      timerRef.current = undefined\r\n    }\r\n  }, [])\r\n\r\n  const start = useCallback((callback: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n    if (timerRef.current) {\r\n      return\r\n    }\r\n    cbRef.current = callback\r\n    msRef.current = ms\r\n    argsRef.current = args\r\n    timerRef.current = setTimeout(callback, ms, args)\r\n  }, [])\r\n\r\n  const restart = useCallback(\r\n    (callback?: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n      stop()\r\n      if (callback) {\r\n        start(callback, ms, args)\r\n      } else if (cbRef.current) {\r\n        start(cbRef.current, msRef.current, argsRef.current)\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  return useMemo(\r\n    () => ({\r\n      restart,\r\n      start,\r\n      stop,\r\n    }),\r\n    [restart, start, stop],\r\n  )\r\n}\r\n\r\nexport default useTimeout\r\n","import * as _ from \"lodash\"\r\nimport { useRef } from \"react\"\r\n\r\nfunction useUniqueId() {\r\n  const uniqueIdRef = useRef(_.uniqueId(\"t_\"))\r\n  return uniqueIdRef.current\r\n}\r\n\r\nexport default useUniqueId\r\n","import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useUpdate\r\n","import { offWindowResize, onWindowResize } from \"@tarojs/taro\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Size {\r\n  /** 变化后的窗口高度，单位 px */\r\n  windowHeight: number\r\n  /** 变化后的窗口宽度，单位 px */\r\n  windowWidth: number\r\n}\r\n\r\ninterface CallbackResult {\r\n  size: Size\r\n}\r\n\r\ntype WindowResizeCallback = (result: CallbackResult) => void\r\n\r\nfunction useWindowResize(callback: WindowResizeCallback) {\r\n  useEffect(() => {\r\n    onWindowResize?.(callback)\r\n\r\n    return () =>\r\n      offWindowResize?.(\r\n        // @ts-ignore\r\n        callback,\r\n      )\r\n  }, [callback])\r\n}\r\n\r\nexport default useWindowResize\r\n","import { createSelectorQuery } from \"@tarojs/taro\"\nimport { inBrowser } from \"../base\"\nimport { createNodesRef, elementUnref, isRootElement, isWindow } from \"./element\"\n\nexport interface Rect {\n  dataset: Record<string, any>\n  id: string\n  top: number\n  right: number\n  bottom: number\n  left: number\n  width: number\n  height: number\n}\n\nexport function makeRect(width: number, height: number) {\n  return {\n    top: 0,\n    left: 0,\n    right: width,\n    bottom: height,\n    width,\n    height,\n  } as Rect\n}\n\nexport function getRect(elementOrRef: any): Promise<Rect> {\n  const element = elementUnref(elementOrRef)\n  if (element) {\n    if (inBrowser) {\n      if (isWindow(element)) {\n        const width = element.innerWidth\n        const height = element.innerHeight\n        return Promise.resolve(makeRect(width, height))\n      }\n\n      return Promise.resolve(\n        (((element as unknown) as HTMLElement).getBoundingClientRect() as unknown) as Rect,\n      )\n    } else {\n      return new Promise<Rect>((resolve) => {\n        createNodesRef(element)\n          .boundingClientRect()\n          .exec(([rect]) => {\n            if (isRootElement(element)) {\n              const { width, height } = rect\n              resolve(makeRect(width, height))\n            } else {\n              resolve(rect)\n            }\n          })\n      })\n    }\n  }\n  return Promise.resolve(makeRect(0, 0))\n}\n\nexport function getRects(elementOrRef: any, selector: string): Promise<Rect[]> {\n  const element = elementUnref(elementOrRef)\n  if (element) {\n    if (inBrowser) {\n      const rects: Rect[] = []\n      ;((element as unknown) as HTMLElement)\n        .querySelectorAll(selector)\n        .forEach((oneElement) =>\n          rects.push((oneElement.getBoundingClientRect() as unknown) as Rect),\n        )\n      return Promise.resolve(rects)\n    } else {\n      return new Promise<Rect[]>((resolve) => {\n        createSelectorQuery()\n          .selectAll(\"#\" + element.uid + selector)\n          .boundingClientRect()\n          .exec(([rects]) => resolve((rects as unknown) as Rect[]))\n      })\n    }\n  }\n  return Promise.resolve([])\n}\n","import { TaroElement } from \"@tarojs/runtime\"\nimport { createSelectorQuery } from \"@tarojs/taro\"\nimport * as _ from \"lodash\"\nimport { inWechat } from \"../base\"\n\nexport const ELEMENT_NODE_TYPE = 1\n\nexport function isWindow(val: unknown): val is Window {\n  return val === window\n}\n\nexport function isBodyElement(val: unknown): boolean {\n  return val === document.body\n}\n\nexport function elementUnref(elementOrRef: any): TaroElement {\n  if (elementOrRef === undefined || elementOrRef === null) {\n    return elementOrRef\n  }\n  if (\"current\" in elementOrRef) {\n    return elementOrRef.current\n  }\n  return elementOrRef\n}\n\nexport function isRootElement(node?: TaroElement) {\n  return node?.nodeType === ELEMENT_NODE_TYPE && node?.tagName === \"ROOT\"\n}\n\nexport function matchSelector(aSelector?: string, bSelector?: string) {\n  return _.replace(aSelector as string, \"#\", \"\") === bSelector\n}\n\nexport function createNodesRef(element: TaroElement) {\n  if (isRootElement(element)) {\n    return createSelectorQuery().selectViewport()\n  }\n\n  // Fix nested in CustomWrapper is undefined\n  // See: https://github.com/mallfoundry/taroify/pull/143\n  if (inWechat) {\n    let ancestor = element\n    while (ancestor.parentNode && !isRootElement(ancestor.parentNode as TaroElement)) {\n      ancestor = ancestor.parentNode as TaroElement\n    }\n\n    if (ancestor && ancestor !== element) {\n      return createSelectorQuery().select(`#${ancestor.uid}>>>#${element.uid}`)\n    }\n  }\n\n  return createSelectorQuery().select(\"#\" + element.uid)\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport { ICON_TYPE, IconProps } from \"../shared\"\r\n\r\nexport function isIconElement(node?: ReactNode): boolean {\r\n  // Is`t not ReactElement\r\n  if (!isValidElement(node)) {\r\n    return false\r\n  }\r\n  const element = node as ReactElement\r\n  return _.hasIn(element.type, ICON_TYPE)\r\n}\r\n\r\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\r\n  if (!isIconElement(node)) {\r\n    return isValidElement(node) ? cloneElement(node, props) : node\r\n  }\r\n  const { className, ...restProps } = props\r\n  const element = node as ReactElement\r\n  const { props: oldProps } = element\r\n  const newProps: IconProps = {\r\n    ...oldProps,\r\n    className: classNames(oldProps.className, className),\r\n    ...restProps,\r\n  }\r\n  return cloneElement(element, newProps)\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\nimport { ButtonProps } from \"./button\"\r\n\r\ninterface ButtonContextValue {\r\n  onClick?(event: ITouchEvent, props: ButtonProps): void\r\n}\r\n\r\nconst ButtonContext = createContext<ButtonContextValue>({})\r\n\r\nexport default ButtonContext\r\n","import { prefixClassname } from \"./prefix\"\n\nexport const HAIRLINE_BORDER = prefixClassname(\"hairline\")\nexport const HAIRLINE_BORDER_TOP = `${HAIRLINE_BORDER}--top`\nexport const HAIRLINE_BORDER_LEFT = `${HAIRLINE_BORDER}--left`\nexport const HAIRLINE_BORDER_BOTTOM = `${HAIRLINE_BORDER}--bottom`\nexport const HAIRLINE_BORDER_SURROUND = `${HAIRLINE_BORDER}--surround`\nexport const HAIRLINE_BORDER_TOP_BOTTOM = `${HAIRLINE_BORDER}--top-bottom`\nexport const HAIRLINE_BORDER_UNSET_TOP_BOTTOM = `${HAIRLINE_BORDER}-unset--top-bottom`\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../../button-base/style\"\r\n\r\nimport \"../index.scss\"\r\n","import \"../index.scss\"\r\n","import { Button, ButtonProps } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface ButtonBaseProps extends ButtonProps {}\r\n\r\nfunction ButtonBase(props: ButtonBaseProps) {\r\n  const { className, ...restProps } = props\r\n  return <Button className={classNames(prefixClassname(\"button-base\"), className)} {...restProps} />\r\n}\r\n\r\nexport default ButtonBase\r\n","import { ButtonProps as TaroButtonProps, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport ButtonBase from \"../button-base\"\r\nimport Loading, { LoadingProps } from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport ButtonContext from \"./button.context\"\r\nimport {\r\n  ButtonColor,\r\n  ButtonFormType,\r\n  ButtonShape,\r\n  ButtonSize,\r\n  ButtonVariant,\r\n} from \"./button.shared\"\r\n\r\nfunction useButtonLoading(loading?: boolean | LoadingProps): ReactNode {\r\n  return useMemo(() => {\r\n    if (_.isBoolean(loading) && loading) {\r\n      return <Loading className={prefixClassname(\"button__loading\")} />\r\n    } else if (_.isObjectLike(loading)) {\r\n      const { className, ...restProps } = loading as LoadingProps\r\n      return (\r\n        <Loading\r\n          className={classNames(prefixClassname(\"button__loading\"), className)}\r\n          {...restProps}\r\n        />\r\n      )\r\n    }\r\n    return loading\r\n  }, [loading])\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends Omit<TaroButtonProps, \"size\" | \"formType\" | \"type\" | \"loading\" | \"plain\"> {\r\n  variant?: ButtonVariant\r\n  shape?: ButtonShape\r\n  size?: ButtonSize\r\n  color?: ButtonColor\r\n  formType?: ButtonFormType\r\n  loading?: boolean | LoadingProps\r\n  block?: boolean\r\n  hairline?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    variant = \"contained\",\r\n    shape,\r\n    size = \"medium\",\r\n    color = \"default\",\r\n    formType = \"button\",\r\n    block,\r\n    hairline,\r\n    disabled,\r\n    loading: loadingProp,\r\n    icon,\r\n    children,\r\n    onClick,\r\n    ...restProps\r\n  } = props\r\n\r\n  const loading = useButtonLoading(loadingProp)\r\n\r\n  const { onClick: onCtxClick } = useContext(ButtonContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"button\"),\r\n        {\r\n          // Set variant style\r\n          [prefixClassname(\"button--text\")]: variant === \"text\",\r\n          [prefixClassname(\"button--contained\")]: variant === \"contained\",\r\n          [prefixClassname(\"button--outlined\")]: variant === \"outlined\",\r\n          // Set color style\r\n          [prefixClassname(`button--${color}`)]: color,\r\n          // Set shape style\r\n          [prefixClassname(\"button--round\")]: shape === \"round\",\r\n          [prefixClassname(\"button--square\")]: shape === \"square\",\r\n          // Set size style\r\n          [prefixClassname(\"button--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"button--small\")]: size === \"small\",\r\n          [prefixClassname(\"button--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"button--large\")]: size === \"large\",\r\n          // Set hairline style\r\n          [prefixClassname(\"button--hairline\")]: hairline,\r\n          [prefixClassname(\"hairline--surround\")]: hairline,\r\n          [prefixClassname(\"button--disabled\")]: disabled,\r\n          [prefixClassname(\"button--loading\")]: loading,\r\n          [prefixClassname(\"button--block\")]: block,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={(e) => {\r\n        if (!disabled && !loading) {\r\n          onClick?.(e)\r\n          onCtxClick?.(e, props)\r\n        }\r\n      }}\r\n    >\r\n      <View className={prefixClassname(\"button__content\")}>\r\n        {loading ?? icon}\r\n        {children && <View className={prefixClassname(\"button__text\")} children={children} />}\r\n      </View>\r\n      <ButtonBase\r\n        className={prefixClassname(\"button__button\")}\r\n        formType={formType === \"submit\" ? \"submit\" : formType === \"reset\" ? \"reset\" : undefined}\r\n        disabled={disabled}\r\n        loading={false}\r\n        {...restProps}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function createButton(children: ReactNode | ButtonProps, props?: ButtonProps) {\r\n  if (_.isPlainObject(children)) {\r\n    return <Button {...(children as ButtonProps)} {...props} />\r\n  }\r\n  return <Button children={children} {...props} />\r\n}\r\n","import { createContext } from \"react\"\r\nimport { StepsDirection } from \"./steps.shared\"\r\n\r\ninterface StepsContextValue {\r\n  value?: number\r\n  direction?: StepsDirection\r\n  alternativeLabel?: boolean\r\n}\r\n\r\nconst StepsContext = createContext<StepsContextValue>({})\r\nexport default StepsContext\r\n","import { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { HAIRLINE_BORDER } from \"../styles/hairline\"\r\nimport StepsContext from \"./steps.context\"\r\n\r\ninterface StepProps extends ViewProps {\r\n  className?: string\r\n  index?: number\r\n  active?: boolean\r\n  completed?: boolean\r\n  // error?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  label?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Step(props: StepProps) {\r\n  const {\r\n    className,\r\n    index = -1,\r\n    active: activeProp = false,\r\n    completed: completedProp = false,\r\n    icon,\r\n    label,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const { value = -1, direction, alternativeLabel } = useContext(StepsContext)\r\n  const active = useMemo(() => activeProp || index === value, [activeProp, index, value])\r\n  const completed = useMemo(() => completedProp || index < value, [completedProp, index, value])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        HAIRLINE_BORDER,\r\n        prefixClassname(\"step\"),\r\n        prefixClassname(`step--${direction}`),\r\n        {\r\n          [prefixClassname(\"step--alternative-label\")]:\r\n            alternativeLabel && direction === \"horizontal\",\r\n          [prefixClassname(\"step--active\")]: active,\r\n          [prefixClassname(\"step--completed\")]: completed,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      <View className={classNames(prefixClassname(\"step__label\"))} children={children ?? label} />\r\n      <View className={prefixClassname(\"step__circle-container\")}>\r\n        {icon ? (\r\n          cloneIconElement(icon, { className: prefixClassname(\"step__icon\") })\r\n        ) : (\r\n          <View className={prefixClassname(\"step__circle\")} />\r\n        )}\r\n      </View>\r\n      <View className={classNames(prefixClassname(\"step__line\"))} />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Step\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n} from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useValue } from \"../utils/state\"\r\nimport Step from \"./step\"\r\nimport StepsContext from \"./steps.context\"\r\nimport { StepsDirection } from \"./steps.shared\"\r\n\r\ninterface StepsChildren {\r\n  steps: ReactNode[]\r\n}\r\n\r\nfunction useStepsChildren(children: ReactNode): StepsChildren {\r\n  const __children__: StepsChildren = {\r\n    steps: [],\r\n  }\r\n  let index = 0\r\n  Children.forEach(children, (child: ReactNode, i) => {\r\n    // Skip is not Item of Swiper\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n    const element = child as ReactElement\r\n    const elementType = element.type\r\n    if (elementType === Step) {\r\n      const { key } = element\r\n      __children__.steps.push(\r\n        cloneElement(child, {\r\n          ...element.props,\r\n          key: key ?? i,\r\n          index: index++,\r\n        }),\r\n      )\r\n    }\r\n  })\r\n\r\n  return __children__\r\n}\r\n\r\nexport interface StepsProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  defaultValue?: number\r\n  value?: number\r\n  direction?: StepsDirection\r\n  alternativeLabel?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Steps(props: StepsProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    direction = \"horizontal\",\r\n    alternativeLabel = false,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value } = useValue({ value: valueProp, defaultValue })\r\n\r\n  const { steps } = useStepsChildren(childrenProp)\r\n\r\n  return (\r\n    <StepsContext.Provider\r\n      value={{\r\n        value,\r\n        direction,\r\n        alternativeLabel,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(\r\n          prefixClassname(\"steps\"),\r\n          {\r\n            [prefixClassname(\"steps--horizontal\")]: direction === \"horizontal\",\r\n            [prefixClassname(\"steps--vertical\")]: direction === \"vertical\",\r\n          },\r\n          className,\r\n        )}\r\n        {...restProps}\r\n      >\r\n        <View className={prefixClassname(\"steps__items\")} children={steps} />\r\n      </View>\r\n    </StepsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Steps\r\n","import Step from \"./step\"\nimport StepsComponent, { StepsProps } from \"./steps\"\n\ninterface StepsInterface {\n  (props: StepsProps): JSX.Element\n\n  Step: typeof Step\n}\n\nconst Steps = StepsComponent as StepsInterface\n\nSteps.Step = Step\n\nexport default Steps\n","import { Button, Steps } from \"@taroify/core\"\r\nimport { ArrowRight } from \"@taroify/icons\"\r\nimport { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\ninterface ActiveStepsProps {\r\n  activeStep: number\r\n}\r\n\r\nfunction BasicSteps(props: ActiveStepsProps) {\r\n  return (\r\n    <Block title=\"基础用法\">\r\n      <Steps value={props.activeStep}>\r\n        <Steps.Step>买家下单</Steps.Step>\r\n        <Steps.Step>商家接单</Steps.Step>\r\n        <Steps.Step>买家提货</Steps.Step>\r\n        <Steps.Step>交易完成</Steps.Step>\r\n      </Steps>\r\n    </Block>\r\n  )\r\n}\r\n\r\nfunction AlternativeLabelSteps(props: ActiveStepsProps) {\r\n  return (\r\n    <Block title=\"下方标签\">\r\n      <Steps value={props.activeStep} alternativeLabel>\r\n        <Steps.Step>买家下单</Steps.Step>\r\n        <Steps.Step>商家接单</Steps.Step>\r\n        <Steps.Step>买家提货</Steps.Step>\r\n        <Steps.Step>交易完成</Steps.Step>\r\n      </Steps>\r\n    </Block>\r\n  )\r\n}\r\n\r\nfunction StepsWithCustomStyle(props: ActiveStepsProps) {\r\n  return (\r\n    <Block title=\"自定义样式\">\r\n      <Steps className=\"custom-color\" value={props.activeStep}>\r\n        <Steps.Step icon={<ArrowRight />}>买家下单</Steps.Step>\r\n        <Steps.Step icon={<ArrowRight />}>商家接单</Steps.Step>\r\n        <Steps.Step icon={<ArrowRight />}>买家提货</Steps.Step>\r\n        <Steps.Step icon={<ArrowRight />}>交易完成</Steps.Step>\r\n      </Steps>\r\n    </Block>\r\n  )\r\n}\r\n\r\nfunction VerticalSteps(props: ActiveStepsProps) {\r\n  return (\r\n    <Block title=\"竖向步骤条\">\r\n      <Steps value={props.activeStep} direction=\"vertical\">\r\n        <Steps.Step>\r\n          <View>【城市】物流状态2</View>\r\n          <View>2016-07-12 12:40</View>\r\n        </Steps.Step>\r\n        <Steps.Step>\r\n          <View>【城市】物流状态1</View>\r\n          <View>2016-07-11 10:00</View>\r\n        </Steps.Step>\r\n        <Steps.Step>\r\n          <View>【城市】物流状态</View>\r\n          <View>2016-07-10 12:00</View>\r\n        </Steps.Step>\r\n        <Steps.Step>\r\n          <View>快件已发货</View>\r\n          <View>2016-07-10 09:30</View>\r\n        </Steps.Step>\r\n      </Steps>\r\n    </Block>\r\n  )\r\n}\r\n\r\nexport default function StepsDemo() {\r\n  const [activeStep, setActiveStep] = useState(0)\r\n\r\n  return (\r\n    <Page title=\"Steps 步骤条\" className=\"steps-demo\">\r\n      <BasicSteps activeStep={activeStep} />\r\n      <Block className=\"steps-demo__next-block\">\r\n        <Button onClick={() => setActiveStep(activeStep + 1 > 3 ? 0 : activeStep + 1)}>\r\n          下一步\r\n        </Button>\r\n      </Block>\r\n      <AlternativeLabelSteps activeStep={activeStep} />\r\n      <StepsWithCustomStyle activeStep={activeStep} />\r\n      <VerticalSteps activeStep={activeStep} />\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}