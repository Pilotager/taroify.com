{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/utils/state.ts","webpack:///../../../../packages/core/src/utils/base.ts","webpack:///../../../../packages/core/src/hooks/use-mounted.ts","webpack:///../../../../packages/core/src/hooks/use-rendered-effect.tsx","webpack:///../../../../packages/core/src/hooks/use-placeholder.tsx","webpack:///../../../../packages/core/src/hooks/use-height.ts","webpack:///../../../../packages/core/src/hooks/use-timeout.ts","webpack:///../../../../packages/core/src/hooks/use-unique-id.ts","webpack:///../../../../packages/core/src/hooks/use-update.ts","webpack:///../../../../packages/core/src/hooks/use-window-resize.tsx","webpack:///../../../../packages/core/src/utils/dom/rect.ts","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/core/src/utils/dom/element.ts","webpack:///../../../../packages/core/src/utils/dom/event.ts","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/utils/touch.ts","webpack:///../../../../packages/core/src/utils/raf.ts","webpack:///../../../../packages/core/src/utils/dom/computed-style.ts","webpack:///../../../../packages/core/src/swiper/swiper.context.ts","webpack:///../../../../packages/core/src/swiper/swiper-indicator.tsx","webpack:///../../../../packages/core/src/swiper/swiper-item.tsx","webpack:///../../../../packages/core/src/swiper/swiper.tsx","webpack:///../../../../packages/core/src/swiper/index.ts","webpack:///../../../../packages/core/src/swiper/style/index.ts","webpack:///../../../../packages/core/src/white-space/style/index.ts","webpack:///../../../../packages/core/src/white-space/white-space.tsx","webpack:///../../../../packages/core/src/white-space/index.ts","webpack:///../../../../packages/core/src/notice-bar/notice-bar-action.tsx","webpack:///../../../../packages/core/src/notice-bar/notice-bar-icon.tsx","webpack:///../../../../packages/core/src/notice-bar/notice-bar.tsx","webpack:///../../../../packages/core/src/notice-bar/index.ts","webpack:///./src/pages/display/notice-bar/index.tsx"],"names":["value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","previousRef","useRef","useEffect","usePreviousRef","cb","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","valueRef","useToRef","defaultValue","setValue","emitChange","getValue","inBrowser","inWechat","process","useRenderedEffect","effect","destructorRef","nextTick","destructor","className","useState","useMounted","useHeight","children","style","useTimeout","timerRef","cbRef","msRef","argsRef","stop","clearTimeout","start","args","setTimeout","callback","ms","restart","useUniqueId","prefix","uniqueIdRef","updateReducer","num","useReducer","useWindowResize","onWindowResize","offWindowResize","top","left","right","bottom","element","elementUnref","isWindow","Promise","makeRect","resolve","queryNodesRef","isRootElement","rects","oneElement","queryAllNodesRef","isValidElement","isIconElement","cloneElement","node","oldProps","props","newProps","classNames","val","elementOrRef","ancestorCustomWrapper","ancestor","createSelectorQuery","event","stopPropagation","touches","clientX","clientY","Block","variant","title","demoPrefixClassname","emptyFunction","touchRef","startX","startY","deltaX","deltaY","offsetX","offsetY","isVertical","isHorizontal","move","reset","TouchDirection","touch","Math","getDirection","x","y","requestAnimationFrame","rafIds","raf","computedStyle","result","createContext","itemInstances","useContext","indicator","count","renderIndicator","key","prefixClassname","indicators","direction","__dataIndex__","childrenProp","vertical","initializedRef","mountedRef","shouldRender","lazyRender","active","maxActive","prevActive","nextActive","setOffset","rootStyle","useRendered","offset","undefined","getIndicatorValue","Swiper","loop","touchable","autoplay","duration","onChangeProp","useValue","useSwiperChildren","__children__","items","Children","elementType","useTouch","rootRef","rectRef","swipingRef","activeIndexRef","touchStartTimeRef","autoplayTimerRef","valueIndicatorRef","useRenderedRef","activeIndicatorRef","getDelta","getCorrectDirection","customRectRef","propRectRef","sizeRef","trackSizeRef","minOffsetRef","maxCountRef","getTargetActive","pace","getTargetOffset","currentPosition","targetActive","targetOffset","moveTo","outRightBound","outLeftBound","previousActiveIndex","correctPosition","swipeTo","doubleRaf","targetIndex","next","stopAutoplay","startAutoplay","onTouchStart","Date","onTouchMove","correctDirection","preventDefault","onTouchEnd","delta","speed","shouldSwipe","getTrackRect","getRect","getComputedStyle","rect","initialize","a","activeIndex","current","item","resize","valueIndicator","trackStyle","transitionDuration","transform","crossAxis","crossAxisValue","ref","SwiperContext","catchMove","onTouchCancel","WhiteSpaceSize","SIZE_PRESETS","isPresetSize","Medium","cloneIconElement","NoticeBar","delay","scrollable","useChildren","icon","text","action","child","ellipsis","startTimerRef","wrapRef","contentRef","wrapWidthRef","contentWidthRef","contentStyle","setDuration","wrapRefWidth","contentRefWidth","wordwrap","onTransitionEnd","BasicNoticeBar","Icon","ScrollableNoticeBar","WordwrapNoticeBar","ActionNoticeBar","Action","NoticeBarWithCustomStyle","color","background","NoticeBarWithVerticalScrolling","Item","NoticeBarDemo"],"mappings":"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","file":"chunk/78.2d13db5b.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value: valueProp, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  //\r\n  const valueRef = useToRef(valueProp)\r\n  const stateRef = useRef(defaultValue ?? valueRef.current ?? initialValue)\r\n\r\n  if (valueRef.current !== undefined) {\r\n    stateRef.current = valueRef.current\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(valueRef.current)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({\r\n      value: stateRef.current,\r\n      getValue,\r\n      setValue,\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","export function noop() {}\r\n\r\nexport const inBrowser = typeof document !== \"undefined\" && !!document.scripts\r\nexport const inWechat = process.env.TARO_ENV === \"weapp\"\r\nexport const inSwan = process.env.TARO_ENV === \"swan\"\r\nexport const inAlipay = process.env.TARO_ENV === \"alipay\"\r\nexport const inQQ = process.env.TARO_ENV === \"qq\"\r\nexport const inToutiao = process.env.TARO_ENV === \"tt\"\r\n","import useRenderedEffect from \"./use-rendered-effect\"\r\n\r\nexport default function useMounted(cb: (...args: any[]) => any) {\r\n  useRenderedEffect(cb, [])\r\n}\r\n","import { nextTick } from \"@tarojs/taro\"\r\nimport * as _ from \"lodash\"\r\nimport { DependencyList, EffectCallback, useEffect, useRef } from \"react\"\r\n\r\nfunction useRenderedEffect(effect: EffectCallback, deps?: DependencyList) {\r\n  const destructorRef = useRef<() => void>()\r\n\r\n  useEffect(\r\n    () => {\r\n      nextTick(() => {\r\n        const destructor = effect?.()\r\n        if (_.isFunction(destructor)) {\r\n          destructorRef.current = destructor\r\n        }\r\n      })\r\n\r\n      return destructorRef.current\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    deps,\r\n  )\r\n}\r\n\r\nexport default useRenderedEffect\r\n","import { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport useHeight from \"./use-height\"\r\n\r\ninterface UsePlaceholderOptions {\r\n  className?: string\r\n}\r\n\r\nexport default function usePlaceholder(contentRef: any, { className }: UsePlaceholderOptions) {\r\n  const height = useHeight(contentRef)\r\n\r\n  return ({\r\n    // @ts-ignore\r\n    children,\r\n  }) => (\r\n    <View\r\n      className={className}\r\n      style={{ height: height ? `${addUnitPx(height)}` : \"\" }}\r\n      children={children}\r\n    />\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport useMounted from \"./use-mounted\"\r\n\r\nexport default function useHeight(elementOrRef: any) {\r\n  const [height, setHeight] = useState<number>(0)\r\n  useMounted(() =>\r\n    getRect(elementOrRef)\r\n      .then(({ height }) => height)\r\n      .then(setHeight),\r\n  )\r\n  return height\r\n}\r\n","import { useCallback, useMemo, useRef } from \"react\"\r\n\r\ntype UseTimeoutCallback = (...args: any[]) => void\r\n\r\nfunction useTimeout() {\r\n  const timerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const cbRef = useRef<UseTimeoutCallback>()\r\n  const msRef = useRef<number>()\r\n  const argsRef = useRef<any[]>()\r\n\r\n  const stop = useCallback(() => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current)\r\n      timerRef.current = undefined\r\n    }\r\n  }, [])\r\n\r\n  const start = useCallback((callback: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n    if (timerRef.current) {\r\n      return\r\n    }\r\n    cbRef.current = callback\r\n    msRef.current = ms\r\n    argsRef.current = args\r\n    timerRef.current = setTimeout(callback, ms, args)\r\n  }, [])\r\n\r\n  const restart = useCallback(\r\n    (callback?: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n      stop()\r\n      if (callback) {\r\n        start(callback, ms, args)\r\n      } else if (cbRef.current) {\r\n        start(cbRef.current, msRef.current, argsRef.current)\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  return useMemo(\r\n    () => ({\r\n      restart,\r\n      start,\r\n      stop,\r\n    }),\r\n    [restart, start, stop],\r\n  )\r\n}\r\n\r\nexport default useTimeout\r\n","import * as _ from \"lodash\"\r\nimport { useRef } from \"react\"\r\n\r\nfunction useUniqueId(prefix: string = \"t_\") {\r\n  const uniqueIdRef = useRef(_.uniqueId(prefix))\r\n  return uniqueIdRef.current\r\n}\r\n\r\nexport default useUniqueId\r\n","import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useUpdate\r\n","import { offWindowResize, onWindowResize } from \"@tarojs/taro\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Size {\r\n  /** 变化后的窗口高度，单位 px */\r\n  windowHeight: number\r\n  /** 变化后的窗口宽度，单位 px */\r\n  windowWidth: number\r\n}\r\n\r\ninterface CallbackResult {\r\n  size: Size\r\n}\r\n\r\ntype WindowResizeCallback = (result: CallbackResult) => void\r\n\r\nfunction useWindowResize(callback: WindowResizeCallback) {\r\n  useEffect(() => {\r\n    onWindowResize?.(callback)\r\n\r\n    return () =>\r\n      offWindowResize?.(\r\n        // @ts-ignore\r\n        callback,\r\n      )\r\n  }, [callback])\r\n}\r\n\r\nexport default useWindowResize\r\n","import { inBrowser } from \"../base\"\r\nimport { queryNodesRef, elementUnref, isRootElement, isWindow, queryAllNodesRef } from \"./element\"\r\n\r\nexport interface Rect {\r\n  dataset: Record<string, any>\r\n  id: string\r\n  top: number\r\n  right: number\r\n  bottom: number\r\n  left: number\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport function makeRect(width: number, height: number) {\r\n  return {\r\n    top: 0,\r\n    left: 0,\r\n    right: width,\r\n    bottom: height,\r\n    width,\r\n    height,\r\n  } as Rect\r\n}\r\n\r\nexport function getRect(elementOrRef: any): Promise<Rect> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      if (isWindow(element)) {\r\n        const width = element.innerWidth\r\n        const height = element.innerHeight\r\n        return Promise.resolve(makeRect(width, height))\r\n      }\r\n\r\n      return Promise.resolve(\r\n        (((element as unknown) as HTMLElement).getBoundingClientRect() as unknown) as Rect,\r\n      )\r\n    } else {\r\n      return new Promise<Rect>((resolve) => {\r\n        queryNodesRef(element)\r\n          .boundingClientRect()\r\n          .exec(([rect]) => {\r\n            if (isRootElement(element)) {\r\n              const { width, height } = rect\r\n              resolve(makeRect(width, height))\r\n            } else {\r\n              resolve(rect)\r\n            }\r\n          })\r\n      })\r\n    }\r\n  }\r\n  return Promise.resolve(makeRect(0, 0))\r\n}\r\n\r\nexport function getRects(elementOrRef: any, selector: string): Promise<Rect[]> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      const rects: Rect[] = []\r\n      ;((element as unknown) as HTMLElement)\r\n        .querySelectorAll(selector)\r\n        .forEach((oneElement) =>\r\n          rects.push((oneElement.getBoundingClientRect() as unknown) as Rect),\r\n        )\r\n      return Promise.resolve(rects)\r\n    } else {\r\n      return new Promise<Rect[]>((resolve) => {\r\n        queryAllNodesRef(element, selector)\r\n          .boundingClientRect()\r\n          .exec(([rects]) => resolve((rects as unknown) as Rect[]))\r\n      })\r\n    }\r\n  }\r\n  return Promise.resolve([])\r\n}\r\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","import { TaroElement } from \"@tarojs/runtime\"\r\nimport { createSelectorQuery } from \"@tarojs/taro\"\r\nimport * as _ from \"lodash\"\r\nimport { inWechat } from \"../base\"\r\n\r\nexport const ELEMENT_NODE_TYPE = 1\r\n\r\nexport function isWindow(val: unknown): val is Window {\r\n  return val === window\r\n}\r\n\r\nexport function isBodyElement(val: unknown): boolean {\r\n  return val === document.body\r\n}\r\n\r\nexport function elementUnref(elementOrRef: any): TaroElement {\r\n  if (elementOrRef === undefined || elementOrRef === null) {\r\n    return elementOrRef\r\n  }\r\n  if (\"current\" in elementOrRef) {\r\n    return elementOrRef.current\r\n  }\r\n  return elementOrRef\r\n}\r\n\r\nexport function isRootElement(node?: TaroElement) {\r\n  return node?.nodeType === ELEMENT_NODE_TYPE && node?.tagName === \"ROOT\"\r\n}\r\n\r\nexport function matchSelector(aSelector?: string, bSelector?: string) {\r\n  return _.replace(aSelector as string, \"#\", \"\") === bSelector\r\n}\r\n\r\n// Fix nested in CustomWrapper is undefined\r\n// See: https://github.com/mallfoundry/taroify/pull/143\r\nfunction ancestorCustomWrapper(element: TaroElement) {\r\n  if (inWechat) {\r\n    let ancestor = element\r\n    while (ancestor.parentNode && !isRootElement(ancestor.parentNode as TaroElement)) {\r\n      ancestor = ancestor.parentNode as TaroElement\r\n    }\r\n\r\n    if (ancestor && ancestor !== element) {\r\n      return ancestor\r\n    }\r\n  }\r\n}\r\n\r\nexport function queryNodesRef(element: TaroElement) {\r\n  if (isRootElement(element)) {\r\n    return createSelectorQuery().selectViewport()\r\n  }\r\n\r\n  const ancestor = ancestorCustomWrapper(element)\r\n  if (ancestor) {\r\n    return createSelectorQuery().select(`#${ancestor.uid}>>>#${element.uid}`)\r\n  }\r\n\r\n  return createSelectorQuery().select(\"#\" + element.uid)\r\n}\r\n\r\nexport function queryAllNodesRef(element: TaroElement, selector?: string) {\r\n  if (isRootElement(element)) {\r\n    return createSelectorQuery().selectViewport()\r\n  }\r\n\r\n  const ancestor = ancestorCustomWrapper(element)\r\n  if (ancestor) {\r\n    return createSelectorQuery().selectAll(`#${ancestor.uid}>>>#${element.uid}${selector}`)\r\n  }\r\n\r\n  return createSelectorQuery().selectAll(\"#\" + element.uid + selector)\r\n}\r\n","import { CommonEvent, ITouchEvent } from \"@tarojs/components\"\nimport { inBrowser } from \"../base\"\n\nexport function stopPropagation(event: CommonEvent) {\n  event.stopPropagation()\n}\n\nexport function preventDefault(event: CommonEvent, isStopPropagation?: boolean) {\n  if (inBrowser) {\n    // @ts-ignore\n    if (typeof event.cancelable !== \"boolean\" || event.cancelable) {\n      event.preventDefault()\n    }\n  } else {\n    event.preventDefault()\n  }\n\n  if (isStopPropagation) {\n    stopPropagation(event)\n  }\n}\n\ninterface ClientCoordinates {\n  clientX: number\n  clientY: number\n}\n\nexport function getClientCoordinates(event: ITouchEvent | MouseEvent): ClientCoordinates {\n  // @ts-ignore\n  const { clientX, clientY, touches } = event\n\n  if (clientX && clientY) {\n    return {\n      clientX,\n      clientY,\n    }\n  }\n  return touches[0]\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { ITouchEvent } from \"@tarojs/components\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nconst MIN_DISTANCE = 10\n\nexport enum TouchDirection {\n  Horizontal = \"horizontal\",\n  Vertical = \"vertical\",\n}\n\nfunction getDirection(x: number, y: number): TouchDirection | undefined {\n  if (x > y && x > MIN_DISTANCE) {\n    return TouchDirection.Horizontal\n  }\n  if (y > x && y > MIN_DISTANCE) {\n    return TouchDirection.Vertical\n  }\n}\n\nfunction emptyFunction() {}\n\nexport interface TouchRef {\n  startX: number\n  startY: number\n  deltaX: number\n  deltaY: number\n  offsetX: number\n  offsetY: number\n  direction?: TouchDirection\n\n  isVertical(): boolean\n\n  isHorizontal(): boolean\n\n  start(event: ITouchEvent): void\n\n  move(event: ITouchEvent): void\n\n  reset(): void\n}\n\nexport function useTouch() {\n  const touchRef = useRef<TouchRef>({\n    startX: 0,\n    startY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    isVertical: () => false,\n    isHorizontal: () => false,\n    start: emptyFunction,\n    move: emptyFunction,\n    reset: emptyFunction,\n  })\n\n  const isVertical = useCallback(() => touchRef.current.direction === TouchDirection.Vertical, [])\n\n  const isHorizontal = useCallback(\n    () => touchRef.current.direction === TouchDirection.Horizontal,\n    [],\n  )\n\n  const reset = useCallback(function () {\n    touchRef.current.deltaX = 0\n    touchRef.current.deltaY = 0\n    touchRef.current.offsetX = 0\n    touchRef.current.offsetY = 0\n    touchRef.current.direction = undefined\n  }, [])\n\n  const start = useCallback(\n    function (event: ITouchEvent) {\n      reset()\n      touchRef.current.startX = event.touches[0].clientX\n      touchRef.current.startY = event.touches[0].clientY\n    },\n    [reset],\n  )\n\n  const move = useCallback(function (event: ITouchEvent) {\n    const touch = event.touches[0]\n    // Fix: Safari back will set clientX to negative number\n    touchRef.current.deltaX = touch.clientX < 0 ? 0 : touch.clientX - touchRef.current.startX\n    touchRef.current.deltaY = touch.clientY - touchRef.current.startY\n    touchRef.current.offsetX = Math.abs(touchRef.current.deltaX)\n    touchRef.current.offsetY = Math.abs(touchRef.current.deltaY)\n\n    if (!touchRef.current.direction) {\n      touchRef.current.direction = getDirection(touchRef.current.offsetX, touchRef.current.offsetY)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (touchRef.current.isHorizontal !== isHorizontal) {\n      touchRef.current.isHorizontal = isHorizontal\n    }\n  }, [touchRef, isHorizontal])\n\n  useEffect(() => {\n    if (touchRef.current.isVertical !== isVertical) {\n      touchRef.current.isVertical = isVertical\n    }\n  }, [touchRef, isVertical])\n\n  useEffect(() => {\n    if (touchRef.current.reset !== reset) {\n      touchRef.current.reset = reset\n    }\n  }, [touchRef, reset])\n\n  useEffect(() => {\n    if (touchRef.current.start !== start) {\n      touchRef.current.start = start\n    }\n  }, [touchRef, start])\n\n  useEffect(() => {\n    if (touchRef.current.move !== move) {\n      touchRef.current.move = move\n    }\n  }, [touchRef, move])\n\n  return touchRef.current\n}\n","import * as _ from \"lodash\"\nimport * as requestAnimationFrame from \"raf\"\n\nexport function cancelRaf(rafId: number | number[]) {\n  if (_.isNumber(rafId)) {\n    requestAnimationFrame.cancel(rafId)\n  } else if (_.isArray(rafId)) {\n    _.forEach(rafId, cancelRaf)\n  }\n}\n\nexport function raf(cb: FrameRequestCallback) {\n  // @ts-ignore\n  return requestAnimationFrame.default(cb)\n}\n\nexport default raf\n\nexport function doubleRaf(cb: FrameRequestCallback): [number, number] {\n  const rafIds: [number, number] = [0, 0]\n  rafIds[1] = raf(() => {\n    rafIds[0] = raf(cb)\n  })\n  return rafIds\n}\n","import { inBrowser } from \"../base\"\r\nimport { elementUnref, queryNodesRef } from \"./element\"\r\n\r\nexport function getComputedStyle(\r\n  elementOrRef: any,\r\n  computedStyle: string[],\r\n): Promise<CSSStyleDeclaration> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      return Promise.resolve(window.getComputedStyle(element as any))\r\n    } else {\r\n      return new Promise<CSSStyleDeclaration>((resolve) => {\r\n        queryNodesRef(element)\r\n          .fields(\r\n            {\r\n              computedStyle,\r\n            },\r\n            (result) => resolve(result as CSSStyleDeclaration),\r\n          )\r\n          .exec()\r\n      })\r\n    }\r\n  }\r\n\r\n  return Promise.resolve({} as CSSStyleDeclaration)\r\n}\r\n","import { createContext } from \"react\"\r\nimport { SwiperDirection } from \"./swiper.shared\"\r\n\r\nexport interface SwiperItemInstance {\r\n  setOffset: (offset: number) => void\r\n}\r\n\r\ninterface SwiperContextValue {\r\n  direction?: SwiperDirection\r\n  lazyRender?: boolean\r\n  loop?: boolean\r\n  size?: number\r\n  indicator?: number\r\n  count?: number\r\n  itemInstances: SwiperItemInstance[]\r\n}\r\n\r\nconst SwiperContext = createContext<SwiperContextValue>({\r\n  itemInstances: [],\r\n})\r\nexport default SwiperContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useCallback, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport SwiperContext from \"./swiper.context\"\r\n\r\nexport interface SwiperIndicatorProps extends ViewProps {\r\n  className?: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function SwiperIndicator(props: SwiperIndicatorProps) {\r\n  const { className, children, ...restProps } = props\r\n  const { indicator = 0, direction, count } = useContext(SwiperContext)\r\n\r\n  const renderIndicator = useCallback(\r\n    (index: number) => (\r\n      <View\r\n        key={index}\r\n        className={classNames(prefixClassname(\"swiper__indicator\"), {\r\n          [prefixClassname(\"swiper__indicator--active\")]: index === indicator,\r\n        })}\r\n      />\r\n    ),\r\n    [indicator],\r\n  )\r\n\r\n  const indicators = useMemo(() => !children && _.range(0, count).map(renderIndicator), [\r\n    children,\r\n    count,\r\n    renderIndicator,\r\n  ])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        {\r\n          [prefixClassname(\"swiper__indicators\")]: !children,\r\n          [prefixClassname(\"swiper__indicators--vertical\")]: !children && direction === \"vertical\",\r\n        },\r\n        className,\r\n      )}\r\n      children={children ?? indicators}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useEffect, useMemo, useRef, useState } from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { useRendered } from \"../utils/state\"\r\nimport SwiperContext from \"./swiper.context\"\r\n\r\nexport interface SwiperItemProps extends ViewProps {\r\n  __dataIndex__?: number\r\n  className?: string\r\n  style?: CSSProperties\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function SwiperItem(props: SwiperItemProps) {\r\n  const {\r\n    __dataIndex__ = 0,\r\n    className,\r\n    style: styleProp,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { lazyRender, size, direction, loop, indicator = 0, count = 0, itemInstances } = useContext(\r\n    SwiperContext,\r\n  )\r\n  const vertical = direction === \"vertical\"\r\n\r\n  const initializedRef = useRef(false)\r\n  const mountedRef = useRef(false)\r\n\r\n  const [offset, setOffset] = useState(0)\r\n\r\n  const shouldRender = useMemo(() => {\r\n    if (!lazyRender || initializedRef.current) {\r\n      return true\r\n    }\r\n\r\n    // wait for all item to mount, so we can get the exact count\r\n    if (!mountedRef.current && indicator !== 0) {\r\n      return false\r\n    }\r\n\r\n    const active = indicator\r\n    const maxActive = count - 1\r\n    const prevActive = active === 0 && loop ? maxActive : active - 1\r\n    const nextActive = active === maxActive && loop ? 0 : active + 1\r\n    initializedRef.current =\r\n      __dataIndex__ === active || __dataIndex__ === prevActive || __dataIndex__ === nextActive\r\n    return initializedRef.current\r\n  }, [__dataIndex__, count, indicator, lazyRender, loop])\r\n\r\n  useMounted(() => {\r\n    mountedRef.current = true\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!itemInstances[__dataIndex__]) {\r\n      itemInstances[__dataIndex__] = { setOffset }\r\n    }\r\n  }, [itemInstances, __dataIndex__])\r\n\r\n  const rootStyle = useRendered(() => {\r\n    const style: CSSProperties = {}\r\n    if (size) {\r\n      const mainAxis = vertical ? \"height\" : \"width\"\r\n      style[mainAxis] = addUnitPx(size)\r\n    }\r\n    style.transform = offset ? `translate${vertical ? \"Y\" : \"X\"}(${addUnitPx(offset)})` : \"\"\r\n    return style\r\n  })\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"swiper-item\"), className)}\r\n      style={{\r\n        ...styleProp,\r\n        ...rootStyle,\r\n      }}\r\n      children={shouldRender ? childrenProp : undefined}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { nextTick } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\"\r\nimport { useMounted, useUpdate, useWindowResize } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getComputedStyle } from \"../utils/dom/computed-style\"\r\nimport { preventDefault } from \"../utils/dom/event\"\r\nimport { getRect, makeRect, Rect } from \"../utils/dom/rect\"\r\nimport { addUnitPx, unitToPx } from \"../utils/format/unit\"\r\nimport { doubleRaf } from \"../utils/raf\"\r\nimport { useRendered, useRenderedRef, useToRef, useValue } from \"../utils/state\"\r\nimport { useTouch } from \"../utils/touch\"\r\nimport SwiperIndicator from \"./swiper-indicator\"\r\nimport SwiperItem from \"./swiper-item\"\r\nimport SwiperContext, { SwiperItemInstance } from \"./swiper.context\"\r\nimport { SwiperDirection } from \"./swiper.shared\"\r\n\r\ninterface SwiperChildren {\r\n  items: ReactNode[]\r\n  indicator: ReactNode\r\n  count: number\r\n}\r\n\r\nfunction useSwiperChildren(children: ReactNode): SwiperChildren {\r\n  const __children__: SwiperChildren = {\r\n    items: [],\r\n    indicator: undefined,\r\n    count: 0,\r\n  }\r\n  let index = 0\r\n  Children.forEach(children, (child: ReactNode, i) => {\r\n    // Skip is not Item of Swiper\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n    const element = child as ReactElement\r\n    const elementType = element.type\r\n    if (elementType === SwiperIndicator) {\r\n      __children__.indicator = element\r\n    } else if (elementType === SwiperItem) {\r\n      const { key } = element\r\n      __children__.items.push(\r\n        cloneElement(element, {\r\n          ...element.props,\r\n          key: key ?? i,\r\n          __dataIndex__: index++,\r\n        }),\r\n      )\r\n    } else {\r\n      __children__.items.push(element)\r\n    }\r\n  })\r\n\r\n  __children__.count = __children__.items.length\r\n  return __children__\r\n}\r\n\r\nfunction getIndicatorValue(value: number, count: number) {\r\n  return (value + count) % count\r\n}\r\n\r\nexport interface SwiperProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  defaultValue?: number\r\n  value?: number\r\n  lazyRender?: boolean\r\n  width?: number\r\n  height?: number\r\n  autoplay?: number\r\n  loop?: boolean\r\n  touchable?: boolean\r\n  duration?: number\r\n  direction?: SwiperDirection\r\n  stopPropagation?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: number): void\r\n}\r\n\r\nfunction Swiper(props: SwiperProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    lazyRender,\r\n    loop = true,\r\n    touchable = true,\r\n    autoplay = 0,\r\n    duration = 500,\r\n    width,\r\n    height,\r\n    direction = \"horizontal\",\r\n    stopPropagation = true,\r\n    children: childrenProp,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    value: valueProp,\r\n    defaultValue,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const valueRef = useToRef(value)\r\n\r\n  const { count, indicator, items } = useSwiperChildren(childrenProp)\r\n\r\n  const itemInstances = useMemo<SwiperItemInstance[]>(() => [], [])\r\n\r\n  const touch = useTouch()\r\n\r\n  const update = useUpdate()\r\n\r\n  const vertical = direction === \"vertical\"\r\n\r\n  const rootRef = useRef()\r\n\r\n  const rectRef = useRef<Rect>()\r\n\r\n  const [offset, setOffset] = useState<number>(0)\r\n\r\n  const swipingRef = useRef(false) // Whether to swiping manually\r\n\r\n  const activeIndexRef = useRef<number>(0)\r\n\r\n  const touchStartTimeRef = useRef(0)\r\n\r\n  const autoplayTimerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const valueIndicatorRef = useRenderedRef(() => getIndicatorValue(value, count))\r\n\r\n  const activeIndicatorRef = useRenderedRef(() => getIndicatorValue(activeIndexRef.current, count))\r\n\r\n  const getDelta = useCallback(\r\n    () => (vertical ? touch.deltaY : touch.deltaX),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getCorrectDirection = useCallback(\r\n    () => touch.direction === direction,\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const customRectRef = useRenderedRef(() => ({\r\n    width: width ?? rectRef.current?.width,\r\n    height: height ?? rectRef.current?.height,\r\n  }))\r\n\r\n  const propRectRef = useRenderedRef(() => ({\r\n    width,\r\n    height,\r\n  }))\r\n\r\n  const sizeRef = useRenderedRef(\r\n    () => (vertical ? customRectRef.current?.height : customRectRef.current?.width) ?? 0,\r\n  )\r\n\r\n  const trackSizeRef = useRenderedRef(() => count * sizeRef.current)\r\n\r\n  const minOffsetRef = useRenderedRef(() => {\r\n    if (rectRef.current) {\r\n      const base = (vertical ? rectRef.current?.height : rectRef.current?.width) ?? 0\r\n      return base - sizeRef.current * count\r\n    }\r\n    return 0\r\n  })\r\n\r\n  const maxCountRef = useRenderedRef(() =>\r\n    Math.ceil(Math.abs(minOffsetRef.current) / sizeRef.current),\r\n  )\r\n\r\n  const getTargetActive = useCallback(\r\n    (pace: number) => {\r\n      if (pace) {\r\n        if (loop) {\r\n          return _.clamp(activeIndexRef.current + pace, -1, count)\r\n        }\r\n        return _.clamp(activeIndexRef.current + pace, 0, maxCountRef.current)\r\n      }\r\n      return activeIndexRef.current\r\n    },\r\n    [loop, maxCountRef, count],\r\n  )\r\n\r\n  const getTargetOffset = useCallback(\r\n    (targetActive: number, offset = 0) => {\r\n      let currentPosition = targetActive * sizeRef.current\r\n      if (!loop) {\r\n        currentPosition = Math.min(currentPosition, -minOffsetRef.current)\r\n      }\r\n\r\n      let targetOffset = offset - currentPosition\r\n      if (!loop) {\r\n        targetOffset = _.clamp(targetOffset, minOffsetRef.current, 0)\r\n      }\r\n      return targetOffset\r\n    },\r\n    [sizeRef, loop, minOffsetRef],\r\n  )\r\n\r\n  const moveTo = useCallback(\r\n    ({ pace = 0, offset = 0, emitChange = false }) => {\r\n      if (count <= 1) {\r\n        return\r\n      }\r\n\r\n      const targetActive = getTargetActive(pace)\r\n      const targetOffset = getTargetOffset(targetActive, offset)\r\n      if (loop) {\r\n        if (itemInstances[0] && targetOffset !== minOffsetRef.current) {\r\n          const outRightBound = targetOffset < minOffsetRef.current\r\n          itemInstances[0].setOffset(outRightBound ? trackSizeRef.current : 0)\r\n        }\r\n\r\n        if (itemInstances[count - 1] && targetOffset !== 0) {\r\n          const outLeftBound = targetOffset > 0\r\n          itemInstances[count - 1].setOffset(outLeftBound ? -trackSizeRef.current : 0)\r\n        }\r\n      }\r\n\r\n      const previousActiveIndex = activeIndexRef.current\r\n      activeIndexRef.current = targetActive\r\n      setOffset(targetOffset)\r\n\r\n      if (emitChange && previousActiveIndex !== targetActive) {\r\n        setValue(getIndicatorValue(targetActive, count))\r\n      }\r\n    },\r\n    [\r\n      count,\r\n      getTargetActive,\r\n      getTargetOffset,\r\n      loop,\r\n      itemInstances,\r\n      minOffsetRef,\r\n      trackSizeRef,\r\n      setValue,\r\n    ],\r\n  )\r\n\r\n  const correctPosition = useCallback(() => {\r\n    swipingRef.current = true\r\n    if (activeIndexRef.current <= -1) {\r\n      moveTo({ pace: count })\r\n    } else if (activeIndexRef.current >= count) {\r\n      moveTo({ pace: -count })\r\n    }\r\n  }, [count, moveTo])\r\n\r\n  const swipeTo = useCallback(\r\n    (index: number) => {\r\n      correctPosition()\r\n      touch.reset()\r\n\r\n      doubleRaf(() => {\r\n        let targetIndex\r\n        if (loop && index === count) {\r\n          targetIndex = activeIndexRef.current === 0 ? 0 : index\r\n        } else {\r\n          targetIndex = index % count\r\n        }\r\n\r\n        swipingRef.current = false\r\n\r\n        moveTo({\r\n          pace: targetIndex - activeIndexRef.current,\r\n          emitChange: true,\r\n        })\r\n      })\r\n    },\r\n    [correctPosition, count, loop, moveTo, touch],\r\n  )\r\n\r\n  // const previous = useCallback(() => {\r\n  //   correctPosition()\r\n  //   doubleRaf(() => {\r\n  //     swipingRef.current = false\r\n  //     moveTo({\r\n  //       pace: -1,\r\n  //       emitChange: true,\r\n  //     })\r\n  //   })\r\n  // }, [correctPosition, moveTo])\r\n\r\n  const next = useCallback(() => {\r\n    correctPosition()\r\n    doubleRaf(() => {\r\n      swipingRef.current = false\r\n      moveTo({\r\n        pace: 1,\r\n        emitChange: true,\r\n      })\r\n    })\r\n  }, [correctPosition, moveTo])\r\n\r\n  const stopAutoplay = useCallback(() => {\r\n    if (autoplayTimerRef.current) {\r\n      clearTimeout(autoplayTimerRef.current)\r\n    }\r\n  }, [])\r\n\r\n  const startAutoplay = useCallback(() => {\r\n    stopAutoplay()\r\n    if (autoplay > 0 && count > 1) {\r\n      autoplayTimerRef.current = setTimeout(() => {\r\n        next()\r\n        startAutoplay()\r\n      }, +autoplay)\r\n    }\r\n  }, [autoplay, count, next, stopAutoplay])\r\n\r\n  const onTouchStart = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (!touchable) {\r\n        return\r\n      }\r\n\r\n      touch.start(event)\r\n      touchStartTimeRef.current = Date.now()\r\n\r\n      stopAutoplay()\r\n      correctPosition()\r\n    },\r\n    [correctPosition, stopAutoplay, touch, touchable],\r\n  )\r\n\r\n  const onTouchMove = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (!touchable || !swipingRef.current) {\r\n        return\r\n      }\r\n\r\n      touch.move(event)\r\n      const correctDirection = getCorrectDirection()\r\n      // if user starting to touchmove, prevent the event bubbling to\r\n      // avoid affecting the parent components\r\n      const shouldPrevent = correctDirection || touch.offsetY > touch.offsetX === vertical\r\n      if (shouldPrevent) {\r\n        preventDefault(event, stopPropagation)\r\n      }\r\n\r\n      if (correctDirection) {\r\n        moveTo({ offset: getDelta() })\r\n      }\r\n    },\r\n    [getCorrectDirection, getDelta, moveTo, stopPropagation, touch, touchable, vertical],\r\n  )\r\n\r\n  const onTouchEnd = useCallback(() => {\r\n    if (!touchable || !swipingRef.current) {\r\n      return\r\n    }\r\n    const duration = Date.now() - touchStartTimeRef.current\r\n\r\n    const delta = getDelta()\r\n    const speed = delta / duration\r\n    const shouldSwipe = Math.abs(speed) > 0.25 || Math.abs(delta) > sizeRef.current / 2\r\n\r\n    swipingRef.current = false\r\n    const correctDirection = getCorrectDirection()\r\n    if (shouldSwipe && correctDirection) {\r\n      const offset = vertical ? touch.offsetY : touch.offsetX\r\n\r\n      let pace: number\r\n\r\n      if (loop) {\r\n        pace = offset > 0 ? (delta > 0 ? -1 : 1) : 0\r\n      } else {\r\n        pace = -Math[delta > 0 ? \"ceil\" : \"floor\"](delta / sizeRef.current)\r\n      }\r\n\r\n      moveTo({\r\n        pace,\r\n        emitChange: true,\r\n      })\r\n    } else if (delta) {\r\n      moveTo({ pace: 0 })\r\n    }\r\n    startAutoplay()\r\n  }, [\r\n    touchable,\r\n    getDelta,\r\n    sizeRef,\r\n    getCorrectDirection,\r\n    startAutoplay,\r\n    vertical,\r\n    touch.offsetY,\r\n    touch.offsetX,\r\n    loop,\r\n    moveTo,\r\n  ])\r\n\r\n  const getTrackRect = useCallback(\r\n    () =>\r\n      Promise.all([\r\n        getRect(rootRef),\r\n        getComputedStyle(rootRef, [\"width\", \"height\"]),\r\n      ]).then(([rect, style]) =>\r\n        makeRect(\r\n          style.width === \"auto\" ? rect.width : unitToPx(style.width),\r\n          style.height === \"auto\" ? rect.height : unitToPx(style.height),\r\n        ),\r\n      ),\r\n    [],\r\n  )\r\n\r\n  const initialize = useCallback(\r\n    async (activeIndex = valueRef.current) => {\r\n      if (!rootRef.current) {\r\n        return\r\n      }\r\n      rectRef.current = await getTrackRect()\r\n      if (count) {\r\n        activeIndex = Math.min(count - 1, activeIndex)\r\n      }\r\n      activeIndexRef.current = activeIndex\r\n      swipingRef.current = true\r\n      const targetOffset = getTargetOffset(activeIndex)\r\n      setOffset(targetOffset)\r\n      // Force update render\r\n      if (targetOffset === offset) {\r\n        update()\r\n      }\r\n      itemInstances.forEach((item) => item.setOffset(0))\r\n    },\r\n    [valueRef, getTrackRect, count, getTargetOffset, offset, itemInstances, update],\r\n  )\r\n\r\n  const resize = useCallback(() => nextTick(() => initialize(activeIndexRef.current)), [initialize])\r\n\r\n  useMounted(initialize)\r\n\r\n  useWindowResize(resize)\r\n\r\n  useMounted(() => {\r\n    startAutoplay()\r\n    return stopAutoplay\r\n  })\r\n\r\n  useEffect(\r\n    () => {\r\n      const valueIndicator = valueIndicatorRef.current\r\n      const activeIndicator = activeIndicatorRef.current\r\n      if (valueIndicator !== activeIndicator) {\r\n        try {\r\n          stopAutoplay()\r\n          swipeTo(valueIndicator)\r\n        } finally {\r\n          startAutoplay()\r\n        }\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [valueIndicatorRef.current],\r\n  )\r\n\r\n  const trackStyle = useRendered(() => {\r\n    const style: CSSProperties = {\r\n      transitionDuration: `${swipingRef.current ? 0 : duration}ms`,\r\n      transform: `translate${vertical ? \"Y\" : \"X\"}(${addUnitPx(offset)})`,\r\n    }\r\n\r\n    if (sizeRef.current) {\r\n      const mainAxis = vertical ? \"height\" : \"width\"\r\n      style[mainAxis] = `${addUnitPx(trackSizeRef.current)}`\r\n      const crossAxis = vertical ? \"width\" : \"height\"\r\n      const crossAxisValue = propRectRef.current[crossAxis]\r\n      style[crossAxis] = crossAxisValue ? addUnitPx(crossAxisValue) : \"\"\r\n    }\r\n    return style\r\n  })\r\n\r\n  return (\r\n    <View ref={rootRef} className={classNames(prefixClassname(\"swiper\"), className)} {...restProps}>\r\n      <SwiperContext.Provider\r\n        value={{\r\n          lazyRender,\r\n          loop,\r\n          direction,\r\n          indicator: activeIndicatorRef.current,\r\n          size: sizeRef.current,\r\n          count,\r\n          itemInstances,\r\n        }}\r\n      >\r\n        <View\r\n          className={classNames(prefixClassname(\"swiper__track\"), {\r\n            [prefixClassname(\"swiper__track--vertical\")]: vertical,\r\n          })}\r\n          catchMove\r\n          onTouchStart={onTouchStart}\r\n          onTouchMove={onTouchMove}\r\n          onTouchEnd={onTouchEnd}\r\n          onTouchCancel={onTouchEnd}\r\n          style={trackStyle}\r\n          children={items}\r\n        />\r\n        {indicator}\r\n      </SwiperContext.Provider>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Swiper\r\n","import SwiperElement, { SwiperProps } from \"./swiper\"\r\nimport SwiperIndicator, { SwiperIndicatorProps } from \"./swiper-indicator\"\r\nimport SwiperItem, { SwiperItemProps } from \"./swiper-item\"\r\nimport { SwiperItemEvent } from \"./swiper.shared\"\r\n\r\ninterface SwiperInterface {\r\n  (props: SwiperProps): JSX.Element\r\n\r\n  Item: typeof SwiperItem\r\n  Indicator: typeof SwiperIndicator\r\n}\r\n\r\nconst Swiper = (SwiperElement as unknown) as SwiperInterface\r\n\r\nSwiper.Item = SwiperItem\r\nSwiper.Indicator = SwiperIndicator\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Swiper {\r\n  export type ItemEvent = SwiperItemEvent\r\n\r\n  export type ItemProps = SwiperItemProps\r\n\r\n  export type IndicatorProps = SwiperIndicatorProps\r\n}\r\n\r\nexport default Swiper\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport enum WhiteSpaceSize {\r\n  Mini = \"mini\",\r\n  Small = \"small\",\r\n  Medium = \"medium\",\r\n  Large = \"large\",\r\n}\r\n\r\nconst SIZE_PRESETS = [\r\n  WhiteSpaceSize.Mini,\r\n  WhiteSpaceSize.Small,\r\n  WhiteSpaceSize.Medium,\r\n  WhiteSpaceSize.Large,\r\n]\r\n\r\nfunction isPresetSize(size?: WhiteSpaceSize | string | number) {\r\n  return SIZE_PRESETS.includes(size as WhiteSpaceSize)\r\n}\r\n\r\ntype WhiteSpaceSizeString = \"mini\" | \"small\" | \"medium\" | \"large\"\r\n\r\ninterface WhiteSpaceProps {\r\n  size?: WhiteSpaceSize | WhiteSpaceSizeString | string | number\r\n}\r\n\r\nexport default function WhiteSpace(props: WhiteSpaceProps) {\r\n  const { size = WhiteSpaceSize.Medium } = props\r\n\r\n  const rootStyle = useMemo<CSSProperties>(\r\n    () => ({ height: isPresetSize(size) ? \"\" : size }), //\r\n    [size],\r\n  )\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"white-space\"), {\r\n        [prefixClassname(`white-space-size-${size}`)]: isPresetSize(size),\r\n      })}\r\n      style={rootStyle}\r\n    />\r\n  )\r\n}\r\n","import WhiteSpace from \"./white-space\"\n\nexport { WhiteSpaceSize } from \"./white-space\"\n\nexport default WhiteSpace\n","import { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface NoticeBarActionProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nexport function NoticeBarAction(props: NoticeBarActionProps): JSX.Element {\r\n  const { className, children, ...restProps } = props\r\n  // @ts-ignore\r\n  return cloneIconElement(children, {\r\n    className: classNames(prefixClassname(\"notice-bar__action\"), className),\r\n    ...restProps,\r\n  }) as JSX.Element\r\n}\r\n","import { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface NoticeBarIconProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nexport function NoticeBarIcon(props: NoticeBarIconProps): JSX.Element {\r\n  const { className, children, ...restProps } = props\r\n\r\n  // @ts-ignore\r\n  return cloneIconElement(children, {\r\n    className: classNames(prefixClassname(\"notice-bar__icon\"), className),\r\n    ...restProps,\r\n  }) as JSX.Element\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { nextTick } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { doubleRaf } from \"../utils/raf\"\r\nimport { NoticeBarAction } from \"./notice-bar-action\"\r\nimport { NoticeBarIcon } from \"./notice-bar-icon\"\r\n\r\ninterface NoticeBarChildren {\r\n  icon: ReactNode\r\n  text: ReactNode[]\r\n  action: ReactNode\r\n}\r\n\r\nfunction useChildren(children: ReactNode): NoticeBarChildren {\r\n  const __children__: NoticeBarChildren = {\r\n    icon: undefined,\r\n    text: [],\r\n    action: undefined,\r\n  }\r\n  Children.forEach(children, (child) => {\r\n    if (isValidElement(child)) {\r\n      const element = child as ReactElement\r\n      const elementType = element.type\r\n      if (elementType === NoticeBarIcon) {\r\n        __children__.icon = element\r\n      } else if (elementType === NoticeBarAction) {\r\n        __children__.action = element\r\n      } else {\r\n        __children__.text.push(child)\r\n      }\r\n    } else {\r\n      __children__.text.push(child)\r\n    }\r\n  })\r\n  return __children__\r\n}\r\n\r\nexport interface NoticeBarProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  delay?: number\r\n  speed?: number\r\n  scrollable?: boolean\r\n  wordwrap?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction NoticeBar(props: NoticeBarProps) {\r\n  const {\r\n    className,\r\n    delay = 1000,\r\n    speed = 60,\r\n    wordwrap,\r\n    scrollable = false,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { icon, text, action } = useChildren(childrenProp)\r\n\r\n  const ellipsis = !scrollable && !wordwrap\r\n  const startTimerRef = useRef<NodeJS.Timeout>()\r\n  const wrapRef = useRef()\r\n  const contentRef = useRef()\r\n\r\n  const [offset, setOffset] = useState(0)\r\n  const [duration, setDuration] = useState(0)\r\n\r\n  const wrapWidthRef = useRef(0)\r\n  const contentWidthRef = useRef(0)\r\n\r\n  const contentStyle = useMemo<CSSProperties>(\r\n    () => ({\r\n      transform: offset ? `translateX(${addUnitPx(offset)})` : \"\",\r\n      transitionDuration: `${duration}s`,\r\n    }),\r\n    [offset, duration],\r\n  )\r\n\r\n  function reset() {\r\n    wrapWidthRef.current = 0\r\n    contentWidthRef.current = 0\r\n    setOffset(0)\r\n    setDuration(0)\r\n  }\r\n\r\n  function onTransitionEnd() {\r\n    setOffset(wrapWidthRef.current)\r\n    setDuration(0)\r\n\r\n    nextTick(() => {\r\n      // use double raf to ensure animation can start\r\n      doubleRaf(() => {\r\n        setOffset(-contentWidthRef.current)\r\n        setDuration((contentWidthRef.current + wrapWidthRef.current) / +speed)\r\n      })\r\n    })\r\n  }\r\n\r\n  function start() {\r\n    reset()\r\n\r\n    if (startTimerRef.current) {\r\n      clearTimeout(startTimerRef.current)\r\n    }\r\n\r\n    startTimerRef.current = setTimeout(async () => {\r\n      if (!wrapRef.current || !contentRef.current || !scrollable) {\r\n        return\r\n      }\r\n\r\n      const { width: wrapRefWidth } = await getRect(wrapRef)\r\n      const { width: contentRefWidth } = await getRect(contentRef)\r\n\r\n      if (scrollable || contentRefWidth > wrapRefWidth) {\r\n        doubleRaf(() => {\r\n          wrapWidthRef.current = wrapRefWidth\r\n          contentWidthRef.current = contentRefWidth\r\n          setOffset(-contentRefWidth)\r\n          setDuration(contentRefWidth / +speed)\r\n        })\r\n      }\r\n    }, +delay)\r\n  }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(start, [])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"notice-bar\"),\r\n        {\r\n          [prefixClassname(\"notice-bar--wordwrap\")]: wordwrap,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon}\r\n      <View ref={wrapRef} className={prefixClassname(\"notice-bar__wrap\")}>\r\n        <View\r\n          ref={contentRef}\r\n          style={contentStyle}\r\n          className={classNames(prefixClassname(\"notice-bar__content\"), {\r\n            [prefixClassname(\"ellipsis\")]: ellipsis,\r\n          })}\r\n          children={text}\r\n          onTransitionEnd={onTransitionEnd}\r\n        />\r\n      </View>\r\n      {action}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default NoticeBar\r\n","import NoticeBarElement, { NoticeBarProps } from \"./notice-bar\"\r\nimport { NoticeBarAction } from \"./notice-bar-action\"\r\nimport { NoticeBarIcon } from \"./notice-bar-icon\"\r\n\r\ninterface NoticeBarInterface {\r\n  (props: NoticeBarProps): JSX.Element\r\n\r\n  Icon: typeof NoticeBarIcon\r\n  Action: typeof NoticeBarAction\r\n}\r\n\r\nconst NoticeBar = NoticeBarElement as NoticeBarInterface\r\n\r\nNoticeBar.Icon = NoticeBarIcon\r\nNoticeBar.Action = NoticeBarAction\r\n\r\nexport default NoticeBar\r\n","import { NoticeBar, Swiper, WhiteSpace } from \"@taroify/core\"\r\nimport { ArrowRight, Cross, InfoOutlined, VolumeOutlined } from \"@taroify/icons\"\r\nimport * as React from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction BasicNoticeBar() {\r\n  return (\r\n    <NoticeBar scrollable>\r\n      <NoticeBar.Icon>\r\n        <VolumeOutlined />\r\n      </NoticeBar.Icon>\r\n      在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。\r\n    </NoticeBar>\r\n  )\r\n}\r\n\r\nfunction ScrollableNoticeBar() {\r\n  return (\r\n    <>\r\n      <NoticeBar scrollable>技术是开发它的人的共同灵魂。</NoticeBar>\r\n      <WhiteSpace />\r\n      <NoticeBar scrollable={false}>\r\n        在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。\r\n      </NoticeBar>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction WordwrapNoticeBar() {\r\n  return (\r\n    <NoticeBar wordwrap scrollable={false}>\r\n      在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。\r\n    </NoticeBar>\r\n  )\r\n}\r\n\r\nfunction ActionNoticeBar() {\r\n  return (\r\n    <>\r\n      <NoticeBar scrollable={false}>\r\n        技术是开发它的人的共同灵魂。\r\n        <NoticeBar.Action>\r\n          <Cross />\r\n        </NoticeBar.Action>\r\n      </NoticeBar>\r\n      <WhiteSpace />\r\n      <NoticeBar scrollable={false}>\r\n        技术是开发它的人的共同灵魂。\r\n        <NoticeBar.Action>\r\n          <ArrowRight />\r\n        </NoticeBar.Action>\r\n      </NoticeBar>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction NoticeBarWithCustomStyle() {\r\n  return (\r\n    <NoticeBar style={{ color: \"#1989fa\", background: \"#ecf9ff\" }}>\r\n      <NoticeBar.Icon>\r\n        <InfoOutlined />\r\n      </NoticeBar.Icon>\r\n      技术是开发它的人的共同灵魂。\r\n    </NoticeBar>\r\n  )\r\n}\r\n\r\nfunction NoticeBarWithVerticalScrolling() {\r\n  return (\r\n    <NoticeBar>\r\n      <NoticeBar.Icon>\r\n        <VolumeOutlined />\r\n      </NoticeBar.Icon>\r\n      <Swiper className=\"notice-swiper\" direction=\"vertical\" autoplay={3000}>\r\n        <Swiper.Item>内容 1</Swiper.Item>\r\n        <Swiper.Item>内容 2</Swiper.Item>\r\n        <Swiper.Item>内容 3</Swiper.Item>\r\n      </Swiper>\r\n    </NoticeBar>\r\n  )\r\n}\r\n\r\nexport default function NoticeBarDemo() {\r\n  return (\r\n    <Page title=\"NoticeBar 通知栏\" className=\"notice-bar-demo\">\r\n      <Block title=\"基础用法\">\r\n        <BasicNoticeBar />\r\n      </Block>\r\n      <Block title=\"滚动播放\">\r\n        <ScrollableNoticeBar />\r\n      </Block>\r\n      <Block title=\"多行展示\">\r\n        <WordwrapNoticeBar />\r\n      </Block>\r\n      <Block title=\"通知栏模式\">\r\n        <ActionNoticeBar />\r\n      </Block>\r\n      <Block title=\"自定义样式\">\r\n        <NoticeBarWithCustomStyle />\r\n      </Block>\r\n      <Block title=\"自定义样式\">\r\n        <NoticeBarWithVerticalScrolling />\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}