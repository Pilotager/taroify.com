{"version":3,"sources":["webpack:///../../../../packages/icons/src/utils/unit.ts","webpack:///../../../../packages/icons/src/van/VanIcon.tsx","webpack:///../../../../packages/core/src/styles/index.ts","webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/styles/prefix.ts","webpack:///./src/styles/prefix.ts","webpack:///../../../../packages/icons/src/ArrowLeft.tsx","webpack:///../../../../packages/icons/src/shared.ts","webpack:///./src/components/block.tsx","webpack:///./src/components/target.tsx","webpack:///./src/components/page.tsx","webpack:///../../../../packages/core/src/flex/style/index.ts","webpack:///../../../../packages/core/src/flex/flex.context.ts","webpack:///../../../../packages/core/src/flex/index.ts","webpack:///../../../../packages/core/src/flex/flex.tsx","webpack:///../../../../packages/core/src/flex/flex-item.tsx","webpack:///./src/pages/basic/flex/index.tsx"],"names":["value","convertPx","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertVw","convertVh","unitToPx","size","color","presetColor","ICON_PRESET_COLORS","presetSize","ICON_PRESET_SIZES","className","classNames","style","addUnitPx","name","VanIconWrapper","width","height","demoPrefixClassname","component","ArrowLeft","createVanIconComponent","ICON_TYPE","Symbol","Block","props","variant","title","children","TargetType","Target","type","process","Page","onClick","navigateBack","createContext","gutter","undefined","Flex","direction","wrap","justify","align","useFlexGutter","useMemo","gutterNumber","gutterStyle","averagePadding","prefixClassname","FlexContext","offset","gutters","useContext","horizontalGutter","span","FlexDemo","Item"],"mappings":"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","file":"chunk/81.6b063f69.js","sourcesContent":["export function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport {\r\n  ICON_PRESET_COLORS,\r\n  ICON_PRESET_SIZES,\r\n  ICON_TYPE,\r\n  IconColor,\r\n  IconProps,\r\n  IconSize,\r\n} from \"../shared\"\r\nimport { addUnitPx } from \"../utils/unit\"\r\n\r\ninterface VanIconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  name?: string\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function VanIcon(props: VanIconProps) {\r\n  const { className, style, name, size = \"inherit\", color = \"inherit\", ...restProps } = props\r\n  const presetColor = ICON_PRESET_COLORS.includes(color as IconColor)\r\n  const presetSize = ICON_PRESET_SIZES.includes(size as IconSize)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        \"van-icon\",\r\n        `van-icon-${name}`,\r\n        \"taroify-icon\",\r\n        {\r\n          [`taroify-icon--${color}`]: presetColor,\r\n          [`taroify-icon--${size}`]: presetSize,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        color: presetColor ? \"\" : color,\r\n        fontSize: presetSize ? \"\" : addUnitPx(size),\r\n        ...style,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport function createVanIconComponent(name: string) {\r\n  function VanIconWrapper(props: IconProps) {\r\n    return <VanIcon name={name} {...props} />\r\n  }\r\n\r\n  // @ts-ignore\r\n  VanIconWrapper[ICON_TYPE] = ICON_TYPE\r\n  return VanIconWrapper\r\n}\r\n","export { prefixClassname } from \"./prefix\"\n","import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","const COMPONENT_PREFIX = \"taroify-\"\n\nexport function prefixClassname(component: string) {\n  return `${COMPONENT_PREFIX}${component}`\n}\n","const DEMO_PREFIX = \"taroify-demo-\"\n\nexport function demoPrefixClassname(component: string) {\n  return `${DEMO_PREFIX}${component}`\n}\n","import { createVanIconComponent } from \"./van\"\r\n\r\nconst ArrowLeft = createVanIconComponent(\"arrow-left\")\r\nexport default ArrowLeft\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\n\r\nexport const ICON_TYPE = Symbol(\"__iconType__\")\r\n\r\nexport type IconSize = \"inherit\" | \"mini\" | \"small\" | \"medium\" | \"large\"\r\n\r\nexport const ICON_PRESET_SIZES = [\"inherit\", \"mini\", \"small\", \"medium\", \"large\"]\r\n\r\nexport type IconColor =\r\n  | \"inherit\"\r\n  | \"default\"\r\n  | \"primary\"\r\n  | \"info\"\r\n  | \"success\"\r\n  | \"warning\"\r\n  | \"danger\"\r\n\r\nexport const ICON_PRESET_COLORS = [\r\n  \"inherit\",\r\n  \"default\",\r\n  \"primary\",\r\n  \"info\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n]\r\n\r\nexport interface IconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import * as React from \"react\"\nimport { ReactNode } from \"react\"\n\n/* eslint-disable  no-shadow */\nexport enum TargetType {\n  /* eslint-enable  no-shadow */\n  H5 = \"h5\",\n}\n\ntype TargetTypeString = \"h5\"\n\ninterface TargetProps {\n  type?: TargetType | TargetTypeString\n  children?: ReactNode\n}\n\nexport default function Target(props: TargetProps) {\n  const { type, children } = props\n  return <>{type === process.env.TARO_ENV && children}</>\n}\n","import ArrowLeft from \"@taroify/icons/ArrowLeft\"\nimport { View } from \"@tarojs/components\"\nimport { navigateBack } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { ReactNode } from \"react\"\nimport { demoPrefixClassname } from \"../styles/prefix\"\nimport \"./page.scss\"\nimport Target from \"./target\"\n\ninterface PageProps {\n  className?: string\n  title?: string\n  children: ReactNode\n}\n\nexport default function Page(props: PageProps) {\n  const { className, title, children } = props\n\n  return (\n    <View className={classNames(demoPrefixClassname(\"page\"), className)}>\n      <Target type=\"h5\">\n        <View className={demoPrefixClassname(\"page__nav\")}>\n          <ArrowLeft\n            className={demoPrefixClassname(\"page__nav__back\")}\n            onClick={() => navigateBack()}\n          />\n          <View className={demoPrefixClassname(\"page__nav__title\")}>{title} </View>\n        </View>\n      </Target>\n      <View className={demoPrefixClassname(\"page__content\")}>{children}</View>\n    </View>\n  )\n}\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface FlexContextValue {\r\n  gutter: [number | undefined, number | undefined]\r\n}\r\n\r\nconst FlexContext = createContext<FlexContextValue>({\r\n  gutter: [undefined, undefined],\r\n})\r\n\r\nexport default FlexContext\r\n","import FlexComponent, { FlexProps } from \"./flex\"\r\nimport FlexItem from \"./flex-item\"\r\n\r\nexport type { FlexProps } from \"./flex\"\r\nexport type { FlexItemProps } from \"./flex-item\"\r\n\r\ninterface FlexInterface {\r\n  (props: FlexProps): JSX.Element\r\n\r\n  Item: typeof FlexItem\r\n}\r\n\r\nconst Flex = FlexComponent as FlexInterface\r\n\r\nFlex.Item = FlexItem\r\n\r\nexport default Flex\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\nimport { FlexAlign, FlexDirection, FlexGutter, FlexJustify, FlexWrap } from \"./flex.shared\"\r\n\r\nfunction useFlexGutter(gutter?: FlexGutter): [undefined | number, undefined | number] {\r\n  return useMemo(() => {\r\n    if (gutter === undefined) {\r\n      return [undefined, undefined]\r\n    }\r\n\r\n    if (_.isNumber(gutter)) {\r\n      return [gutter, gutter]\r\n    }\r\n\r\n    if (_.isString(gutter)) {\r\n      const gutterNumber = _.toNumber(gutter)\r\n      return [gutterNumber, gutterNumber]\r\n    }\r\n\r\n    if (_.isArray(gutter)) {\r\n      const [horizontalGutter, verticalGutter] = gutter\r\n      return [_.toNumber(horizontalGutter), _.toNumber(verticalGutter)]\r\n    }\r\n\r\n    return [0, 0]\r\n  }, [gutter])\r\n}\r\n\r\nexport interface FlexProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: FlexDirection\r\n  wrap?: FlexWrap\r\n  justify?: FlexJustify\r\n  align?: FlexAlign\r\n  gutter?: FlexGutter\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Flex(props: FlexProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    gutter: gutterProp,\r\n    direction = \"row\",\r\n    wrap = \"nowrap\",\r\n    justify = \"start\",\r\n    align = \"start\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const gutter = useFlexGutter(gutterProp)\r\n  const [horizontalGutter] = gutter\r\n\r\n  const gutterStyle = useMemo<CSSProperties>(() => {\r\n    const gutterStyle: CSSProperties = {}\r\n    if (horizontalGutter) {\r\n      const averagePadding = _.toNumber(horizontalGutter) / 2\r\n      gutterStyle.marginLeft = addUnitPx(-averagePadding)\r\n      gutterStyle.marginRight = addUnitPx(-averagePadding)\r\n    }\r\n    return {}\r\n  }, [horizontalGutter])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex\"),\r\n        {\r\n          // Set flex style\r\n          [prefixClassname(\"flex--row\")]: direction === \"row\",\r\n          [prefixClassname(\"flex--row-reverse\")]: direction === \"row-reverse\",\r\n          [prefixClassname(\"flex--column\")]: direction === \"column\",\r\n          [prefixClassname(\"flex--column-reverse\")]: direction === \"column-reverse\",\r\n          // Set flex-wrap style\r\n          [prefixClassname(\"flex--nowrap\")]: wrap === \"nowrap\",\r\n          [prefixClassname(\"flex--wrap\")]: wrap === \"wrap\",\r\n          [prefixClassname(\"flex--wrap-reverse\")]: wrap === \"wrap-reverse\",\r\n          // Set justify style\r\n          [prefixClassname(\"flex--justify-start\")]: justify === \"start\",\r\n          [prefixClassname(\"flex--justify-center\")]: justify === \"center\",\r\n          [prefixClassname(\"flex--justify-end\")]: justify === \"end\",\r\n          [prefixClassname(\"flex--justify-space-around\")]: justify === \"space-around\",\r\n          [prefixClassname(\"flex--justify-space-between\")]: justify === \"space-between\",\r\n          // Set align style\r\n          [prefixClassname(\"flex--align-start\")]: align === \"start\",\r\n          [prefixClassname(\"flex--align-center\")]: align === \"center\",\r\n          [prefixClassname(\"flex--align-end\")]: align === \"end\",\r\n          [prefixClassname(\"flex--align-baseline\")]: align === \"baseline\",\r\n          [prefixClassname(\"flex--align-stretch\")]: align === \"stretch\",\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    >\r\n      <FlexContext.Provider\r\n        value={{\r\n          gutter,\r\n        }}\r\n        children={children}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\n\r\nexport interface FlexItemProps extends ViewProps {\r\n  style?: CSSProperties\r\n  span?: number\r\n  offset?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function FlexItem(props: FlexItemProps) {\r\n  const { className, style, span, offset, ...restProps } = props\r\n  const { gutter: gutters } = useContext(FlexContext)\r\n  const [horizontalGutter] = gutters\r\n\r\n  // Horizontal gutter use padding\r\n  const gutterStyle: React.CSSProperties = {}\r\n  if (horizontalGutter) {\r\n    const averagePadding = horizontalGutter / 2\r\n    gutterStyle.paddingLeft = addUnitPx(averagePadding)\r\n    gutterStyle.paddingRight = addUnitPx(averagePadding)\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex-item\"),\r\n        {\r\n          [prefixClassname(`flex-item-${span}`)]: span !== undefined,\r\n          [prefixClassname(`flex-item-offset-${offset}`)]: offset !== undefined,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { Flex } from \"@taroify/core\"\r\nimport * as React from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nexport default function FlexDemo() {\r\n  return (\r\n    <Page title=\"Flex 布局\" className=\"flex-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Flex>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n        </Flex>\r\n      </Block>\r\n      <Block title=\"在列元素之间增加间距\">\r\n        <Flex gutter={12}>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n        </Flex>\r\n      </Block>\r\n      <Block title=\"Flex 布局\">\r\n        <Flex>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n        </Flex>\r\n        <Flex>\r\n          <Flex.Item offset={3} span={6}>\r\n            span: 6\r\n          </Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n        </Flex>\r\n        <Flex justify=\"space-between\">\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n        </Flex>\r\n        <Flex justify=\"space-around\">\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n        </Flex>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}