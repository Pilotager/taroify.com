{"version":3,"sources":["webpack:///../core/src/utils/format/unit.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isNumber.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_toKey.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isString.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_castPath.js","webpack:///./src/components/block.tsx","webpack:///../icons/src/utils/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_isKey.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/hasIn.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isBoolean.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toFinite.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_stringToPath.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_memoizeCapped.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/memoize.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseHasIn.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_hasPath.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_isIterateeCall.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toNumber.js","webpack:///../core/src/loading/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/range.js","webpack:///../core/src/loading/loading.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isEmpty.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_createRange.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseRange.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isPlainObject.js","webpack:///../core/src/button/button.context.ts","webpack:///../core/src/button/button.tsx","webpack:///../core/src/cell/style/index.ts","webpack:///../core/src/cell/cell-group.context.ts","webpack:///../core/src/cell/base-cell.tsx","webpack:///../core/src/cell/cell-group.tsx","webpack:///../core/src/cell/index.ts","webpack:///../core/src/cell/cell.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_getPrototype.js","webpack:///../core/src/button/style/index.ts","webpack:///../core/src/button-base/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseTrim.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_trimmedEndIndex.js","webpack:///../core/src/button-base/button-base.tsx","webpack:///../core/src/button/index.ts","webpack:///../core/src/field/style/index.ts","webpack:///../core/src/field/field-button.tsx","webpack:///../core/src/field/field.shared.ts","webpack:///../core/src/field/field.tsx","webpack:///../core/src/field/index.ts","webpack:///./src/pages/form/field/index.tsx"],"names":["rootFontSize","addUnitPx","value","undefined","unitToPx","getSizeStyle","originSize","size","width","height","convertRem","replace","getRootFontSize","doc","document","documentElement","fontSize","style","window","getComputedStyle","parseFloat","includes","convertPx","convertVw","innerWidth","convertVh","innerHeight","baseGetTag","require","isObjectLike","module","exports","isNumber","isSymbol","toKey","result","isArray","isString","isKey","stringToPath","toString","castPath","object","Block","props","className","variant","title","children","classNames","demoPrefixClassname","isIconElement","node","isValidElement","element","type","ICON_TYPE","cloneIconElement","cloneElement","restProps","oldProps","newProps","reIsDeepProp","reIsPlainProp","test","Object","baseHasIn","hasPath","hasIn","path","isBoolean","toNumber","toFinite","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","push","match","number","quote","subString","memoize","func","key","cache","clear","MapCache","resolver","TypeError","memoized","args","arguments","apply","this","has","get","set","Cache","isArguments","isIndex","isLength","hasFunc","index","length","eq","isArrayLike","isObject","isIterateeCall","baseTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","slice","range","createRange","SpinIcon","map","prefixClassname","LoadingSpinner","rootStyle","useMemo","LoadingCircular","Loading","direction","baseKeys","getTag","isBuffer","isPrototype","isTypedArray","hasOwnProperty","prototype","isEmpty","splice","tag","call","baseRange","fromRight","start","end","step","nativeCeil","Math","ceil","nativeMax","max","Array","getPrototype","funcProto","Function","objectProto","funcToString","objectCtorString","isPlainObject","proto","Ctor","constructor","ButtonContext","createContext","Button","shape","color","formType","block","hairline","disabled","loadingProp","loading","icon","onClick","useButtonLoading","onCtxClick","useContext","e","createButton","CellGroupContext","BaseCell","titleClassName","briefClassName","valueClassName","align","brief","clickable","clickableProp","required","bordered","rightIcon","CellGroup","inset","Provider","Cell","Group","overArg","getPrototypeOf","trimmedEndIndex","reTrimStart","reWhitespace","charAt","ButtonBase","FieldButton","FieldType","FieldClearTrigger","FieldLabelAlign","FieldInputAlign","FieldMessageAlign","resolveOnChange","onChange","detailValue","detail","assign","Field","name","valueProp","maxlength","Text","focus","autoFocus","labelAlign","Left","label","inputAlign","placeholder","placeholderClassName","readonly","error","message","messageAlign","clearable","clearIcon","clearTrigger","Focus","cursorSpacing","confirmType","confirmHold","cursor","selectionStart","selectionEnd","adjustPosition","holdKeyboard","childrenProp","onClear","onConfirm","onFocus","onBlur","useFieldChildren","__children__","Children","forEach","child","button","useState","focused","setFocused","allowClear","hasValue","trigger","Always","Textarea","placeholderClass","password","Password","handleFocus","event","handleBlur","nextTick","onInput","handleClear","BasicField","setValue","CustomField","text","setText","idcard","setIdcard","setNumber","digit","setDigit","setPassword","DisabledField","IconField","value2","setValue2","ErrorField","ButtonField","FieldDemo"],"mappings":"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","file":"chunk/48.a589a22f.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport { ICON_TYPE, IconProps } from \"../shared\"\r\n\r\nexport function isIconElement(node?: ReactNode): boolean {\r\n  // Is`t not ReactElement\r\n  if (!isValidElement(node)) {\r\n    return false\r\n  }\r\n  const element = node as ReactElement\r\n  return _.hasIn(element.type, ICON_TYPE)\r\n}\r\n\r\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\r\n  if (!isIconElement(node)) {\r\n    return isValidElement(node) ? cloneElement(node, props) : node\r\n  }\r\n  const { className, ...restProps } = props\r\n  const element = node as ReactElement\r\n  const { props: oldProps } = element\r\n  const newProps: IconProps = {\r\n    ...oldProps,\r\n    className: classNames(oldProps.className, className),\r\n    ...restProps,\r\n  }\r\n  return cloneElement(element, newProps)\r\n}\r\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\nimport { ButtonProps } from \"./button\"\r\n\r\ninterface ButtonContextValue {\r\n  onClick?(event: ITouchEvent, props: ButtonProps): void\r\n}\r\n\r\nconst ButtonContext = createContext<ButtonContextValue>({})\r\n\r\nexport default ButtonContext\r\n","import { ButtonProps as TaroButtonProps, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport ButtonBase from \"../button-base\"\r\nimport Loading, { LoadingProps } from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport ButtonContext from \"./button.context\"\r\nimport {\r\n  ButtonColor,\r\n  ButtonFormType,\r\n  ButtonShape,\r\n  ButtonSize,\r\n  ButtonVariant,\r\n} from \"./button.shared\"\r\n\r\nfunction useButtonLoading(loading?: boolean | LoadingProps): ReactNode {\r\n  return useMemo(() => {\r\n    if (_.isBoolean(loading) && loading) {\r\n      return <Loading className={prefixClassname(\"button__loading\")} />\r\n    } else if (_.isObjectLike(loading)) {\r\n      const { className, ...restProps } = loading as LoadingProps\r\n      return (\r\n        <Loading\r\n          className={classNames(prefixClassname(\"button__loading\"), className)}\r\n          {...restProps}\r\n        />\r\n      )\r\n    }\r\n    return loading\r\n  }, [loading])\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends Omit<TaroButtonProps, \"size\" | \"formType\" | \"type\" | \"loading\" | \"plain\"> {\r\n  variant?: ButtonVariant\r\n  shape?: ButtonShape\r\n  size?: ButtonSize\r\n  color?: ButtonColor\r\n  formType?: ButtonFormType\r\n  loading?: boolean | LoadingProps\r\n  block?: boolean\r\n  hairline?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    variant = \"contained\",\r\n    shape,\r\n    size = \"medium\",\r\n    color = \"default\",\r\n    formType = \"button\",\r\n    block,\r\n    hairline,\r\n    disabled,\r\n    loading: loadingProp,\r\n    icon,\r\n    children,\r\n    onClick,\r\n    ...restProps\r\n  } = props\r\n\r\n  const loading = useButtonLoading(loadingProp)\r\n\r\n  const { onClick: onCtxClick } = useContext(ButtonContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"button\"),\r\n        {\r\n          // Set variant style\r\n          [prefixClassname(\"button--text\")]: variant === \"text\",\r\n          [prefixClassname(\"button--contained\")]: variant === \"contained\",\r\n          [prefixClassname(\"button--outlined\")]: variant === \"outlined\",\r\n          // Set color style\r\n          [prefixClassname(`button--${color}`)]: color,\r\n          // Set shape style\r\n          [prefixClassname(\"button--round\")]: shape === \"round\",\r\n          [prefixClassname(\"button--square\")]: shape === \"square\",\r\n          // Set size style\r\n          [prefixClassname(\"button--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"button--small\")]: size === \"small\",\r\n          [prefixClassname(\"button--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"button--large\")]: size === \"large\",\r\n          // Set hairline style\r\n          [prefixClassname(\"button--hairline\")]: hairline,\r\n          [prefixClassname(\"hairline--surround\")]: hairline,\r\n          [prefixClassname(\"button--disabled\")]: disabled,\r\n          [prefixClassname(\"button--loading\")]: loading,\r\n          [prefixClassname(\"button--block\")]: block,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={(e) => {\r\n        if (!disabled && !loading) {\r\n          onClick?.(e)\r\n          onCtxClick?.(e, props)\r\n        }\r\n      }}\r\n    >\r\n      <View className={prefixClassname(\"button__content\")}>\r\n        {loading ?? icon}\r\n        {children && <View className={prefixClassname(\"button__text\")} children={children} />}\r\n      </View>\r\n      <ButtonBase\r\n        className={prefixClassname(\"button__button\")}\r\n        formType={formType === \"submit\" ? \"submit\" : formType === \"reset\" ? \"reset\" : undefined}\r\n        disabled={disabled}\r\n        loading={false}\r\n        {...restProps}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function createButton(children: ReactNode | ButtonProps, props?: ButtonProps) {\r\n  if (_.isPlainObject(children)) {\r\n    return <Button {...(children as ButtonProps)} {...props} />\r\n  }\r\n  return <Button children={children} {...props} />\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface CellGroupContextValue {\r\n  clickable?: boolean\r\n}\r\n\r\nconst CellGroupContext = createContext<CellGroupContextValue>({})\r\n\r\nexport default CellGroupContext\r\n","import { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface BaseCellProps extends ViewProps {\r\n  titleClassName?: string\r\n  briefClassName?: string\r\n  valueClassName?: string\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  required?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction BaseCell(props: BaseCellProps) {\r\n  const {\r\n    className,\r\n    titleClassName,\r\n    briefClassName,\r\n    valueClassName,\r\n    size = \"medium\",\r\n    align,\r\n    title,\r\n    brief,\r\n    clickable: clickableProp = false,\r\n    required = false,\r\n    bordered = true,\r\n    icon,\r\n    rightIcon,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { clickable } = useContext(CellGroupContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell\"),\r\n        {\r\n          [prefixClassname(\"cell--start\")]: align === \"start\",\r\n          [prefixClassname(\"cell--center\")]: align === \"center\",\r\n          [prefixClassname(\"cell--end\")]: align === \"end\",\r\n          [prefixClassname(\"cell--large\")]: size === \"large\",\r\n          [prefixClassname(\"cell--clickable\")]: clickableProp || clickable,\r\n          [prefixClassname(\"cell--required\")]: required,\r\n          [prefixClassname(\"cell--borderless\")]: !bordered,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon && cloneIconElement(icon, { className: prefixClassname(\"cell__icon\") })}\r\n      {title && (\r\n        <View className={classNames(prefixClassname(\"cell__title\"), titleClassName)}>\r\n          {title}\r\n          {brief && (\r\n            <View\r\n              className={classNames(prefixClassname(\"cell__brief\"), briefClassName)}\r\n              children={brief}\r\n            />\r\n          )}\r\n        </View>\r\n      )}\r\n      {children && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"cell__value\"),\r\n            {\r\n              [prefixClassname(\"cell__value--alone\")]: !title,\r\n            },\r\n            valueClassName,\r\n          )}\r\n          children={children}\r\n        />\r\n      )}\r\n      {rightIcon && cloneIconElement(rightIcon, { className: prefixClassname(\"cell__right-icon\") })}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default BaseCell\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\n\r\ninterface CellGroupProps extends ViewProps {\r\n  title?: ReactNode\r\n  clickable?: boolean\r\n  inset?: boolean\r\n  bordered?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nexport function CellGroup(props: CellGroupProps) {\r\n  const { title, clickable = false, inset = false, bordered = true, children, ...restProps } = props\r\n  return (\r\n    <CellGroupContext.Provider\r\n      value={{\r\n        clickable,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"cell-group\"), {\r\n          [prefixClassname(\"cell-group--inset\")]: inset,\r\n        })}\r\n        {...restProps}\r\n      >\r\n        {title && (\r\n          <View\r\n            className={classNames(prefixClassname(\"cell-group__title\"), {\r\n              [prefixClassname(\"cell-group__title--inset\")]: inset,\r\n            })}\r\n            children={title}\r\n          />\r\n        )}\r\n        <View\r\n          className={classNames(prefixClassname(\"cell-group\"), {\r\n            [prefixClassname(\"hairline--top-bottom\")]: bordered,\r\n          })}\r\n          children={children}\r\n        />\r\n      </View>\r\n    </CellGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CellGroup\r\n","import CellElement, { CellProps } from \"./cell\"\r\nimport CellGroup from \"./cell-group\"\r\n\r\nexport type { CellAlign, CellSize } from \"./cell.shared\"\r\nexport { default as BaseCell } from \"./base-cell\"\r\n\r\ninterface CellInterface {\r\n  (props: CellProps): JSX.Element\r\n\r\n  Group: typeof CellGroup\r\n}\r\n\r\nconst Cell = CellElement as CellInterface\r\nCell.Group = CellGroup\r\n\r\nexport default Cell\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport BaseCell from \"./base-cell\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellProps extends ViewProps {\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Cell(props: CellProps) {\r\n  return <BaseCell {...props} />\r\n}\r\n\r\nexport default Cell\r\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../../button-base/style\"\r\n\r\nimport \"../index.scss\"\r\n","import \"../index.scss\"\r\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","import { Button, ButtonProps } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface ButtonBaseProps extends ButtonProps {}\r\n\r\nfunction ButtonBase(props: ButtonBaseProps) {\r\n  const { className, ...restProps } = props\r\n  return <Button className={classNames(prefixClassname(\"button-base\"), className)} {...restProps} />\r\n}\r\n\r\nexport default ButtonBase\r\n","export { default, createButton } from \"./button\"\r\nexport * from \"./button.shared\"\r\nexport type { ButtonProps } from \"./button\"\r\nexport { default as ButtonContext } from \"./button.context\"\r\n","import \"../../styles/style\"\r\nimport \"../../button/style\"\r\nimport \"../../cell/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface FieldButtonProps {\r\n  className?: string\r\n  children: ReactNode\r\n}\r\n\r\nfunction FieldButton(props: FieldButtonProps) {\r\n  const { className, children } = props\r\n  return (\r\n    <View className={classNames(prefixClassname(\"field__button\"), className)} children={children} />\r\n  )\r\n}\r\n\r\nexport default FieldButton\r\n","export enum FieldType {\r\n  Number = \"number\",\r\n  Text = \"text\",\r\n  Idcard = \"idcard\",\r\n  Digit = \"digit\",\r\n  Textarea = \"textarea\",\r\n  Password = \"password\",\r\n}\r\n\r\nexport type FieldTypeString = \"number\" | \"text\" | \"idcard\" | \"digit\" | \"textarea\" | \"password\"\r\n\r\nexport enum FieldClearTrigger {\r\n  Always = \"always\",\r\n  Focus = \"focus\",\r\n}\r\n\r\nexport type FieldClearTriggerString = \"always\" | \"focus\"\r\n\r\nexport enum FieldLabelAlign {\r\n  Left = \"left\",\r\n  Center = \"center\",\r\n  Right = \"right\",\r\n}\r\n\r\nexport type FieldLabelAlignString = \"left\" | \"center\" | \"right\"\r\n\r\nexport enum FieldInputAlign {\r\n  Left = \"left\",\r\n  Center = \"center\",\r\n  Right = \"right\",\r\n}\r\n\r\nexport type FieldInputAlignString = \"left\" | \"center\" | \"right\"\r\n\r\nexport enum FieldMessageAlign {\r\n  Left = \"left\",\r\n  Center = \"center\",\r\n  Right = \"right\",\r\n}\r\n\r\nexport type FieldMessageAlignString = \"left\" | \"center\" | \"right\"\r\n\r\nexport interface FieldAutosize {\r\n  maxHeight: number\r\n  minHeight: number\r\n}\r\n\r\nexport type FieldConfirmType = \"send\" | \"search\" | \"next\" | \"go\" | \"done\"\r\n","import { Clear } from \"@taroify/icons\"\r\nimport { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { Input, ITouchEvent, View } from \"@tarojs/components\"\r\nimport { BaseEventOrig } from \"@tarojs/components/types/common\"\r\nimport { InputProps } from \"@tarojs/components/types/Input\"\r\nimport { nextTick } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useMemo,\r\n  useState,\r\n} from \"react\"\r\nimport { BaseCell, CellAlign } from \"../cell\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport FieldButton from \"./field-button\"\r\nimport {\r\n  FieldAutosize,\r\n  FieldClearTrigger,\r\n  FieldClearTriggerString,\r\n  FieldConfirmType,\r\n  FieldInputAlign,\r\n  FieldInputAlignString,\r\n  FieldLabelAlign,\r\n  FieldLabelAlignString,\r\n  FieldMessageAlign,\r\n  FieldMessageAlignString,\r\n  FieldType,\r\n  FieldTypeString,\r\n} from \"./field.shared\"\r\n\r\nexport function resolveOnChange<\r\n  E extends InputProps.inputEventDetail | InputProps.inputValueEventDetail,\r\n  E2 extends InputProps.inputEventDetail | InputProps.inputValueEventDetail\r\n>(\r\n  e: BaseEventOrig<E>,\r\n  onChange: undefined | ((event: BaseEventOrig<E2>) => void),\r\n  detailValue?: string,\r\n) {\r\n  if (!onChange) {\r\n    return\r\n  }\r\n  if (e.type === \"click\" || e.type === \"tap\") {\r\n    const { detail } = e\r\n    // click clear icon\r\n    const event = Object.assign({}, e, {\r\n      // change target ref value cause e.detail.value should be '' when clear input\r\n      detail: {\r\n        ...(_.isPlainObject(detail) ? detail : {}),\r\n        value: \"\",\r\n      },\r\n    })\r\n\r\n    onChange((event as unknown) as BaseEventOrig<E2>)\r\n    return\r\n  }\r\n\r\n  // Trigger by composition event, this means we need force change the input value\r\n  if (detailValue !== undefined) {\r\n    const { detail } = e\r\n    const event = Object.assign({}, e, {\r\n      // change target ref value cause e.detail.value should be '' when clear input\r\n      detail: {\r\n        ...(_.isPlainObject(detail) ? detail : {}),\r\n        value: detailValue,\r\n      },\r\n    })\r\n\r\n    onChange((event as unknown) as BaseEventOrig<E2>)\r\n    return\r\n  }\r\n  onChange((e as unknown) as BaseEventOrig<E2>)\r\n}\r\n\r\ninterface FieldChildren {\r\n  children?: ReactNode[]\r\n  button?: ReactNode\r\n}\r\n\r\nfunction useFieldChildren(children?: ReactNode): FieldChildren {\r\n  const __children__: FieldChildren = {\r\n    children: [],\r\n  }\r\n  Children.forEach(children, (child: ReactNode) => {\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n    const element = child as ReactElement\r\n    const elementType = element.type\r\n    if (elementType === FieldButton) {\r\n      __children__.button = element\r\n    } else {\r\n      __children__.children?.push(element)\r\n    }\r\n  })\r\n  return __children__\r\n}\r\n\r\ntype TaroInputType = \"text\" | \"number\" | \"idcard\" | \"digit\"\r\n\r\nexport interface FieldProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  name?: string\r\n  value?: string\r\n  maxlength?: number\r\n  type?: FieldType | FieldTypeString\r\n  align?: CellAlign\r\n  bordered?: boolean\r\n  focus?: boolean\r\n  autoFocus?: boolean\r\n  labelAlign?: FieldLabelAlign | FieldLabelAlignString\r\n  label?: ReactNode\r\n  inputAlign?: FieldInputAlign | FieldInputAlignString\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  placeholder?: string\r\n  placeholderClassName?: string\r\n  clickable?: boolean\r\n  required?: boolean\r\n  readonly?: boolean\r\n  disabled?: boolean\r\n  error?: boolean\r\n  messageAlign?: FieldMessageAlign | FieldMessageAlignString\r\n  message?: ReactNode\r\n  clearable?: boolean\r\n  clearIcon?: ReactNode\r\n  clearTrigger?: FieldClearTrigger | FieldClearTriggerString\r\n  autosize?: boolean | FieldAutosize\r\n\r\n  cursorSpacing?: number\r\n  confirmType?: FieldConfirmType\r\n  confirmHold?: boolean\r\n  cursor?: number\r\n  selectionStart?: number\r\n  selectionEnd?: number\r\n  adjustPosition?: boolean\r\n  holdKeyboard?: boolean\r\n  children?: ReactNode\r\n\r\n  onClick?(event: ITouchEvent): void\r\n\r\n  onClear?(event: ITouchEvent): void\r\n\r\n  onConfirm?(event: BaseEventOrig<InputProps.inputValueEventDetail>): void\r\n\r\n  onChange?(event: BaseEventOrig<InputProps.inputEventDetail>): void\r\n\r\n  onFocus?(event: BaseEventOrig<InputProps.inputForceEventDetail>): void\r\n\r\n  onBlur?(event: BaseEventOrig<InputProps.inputValueEventDetail>): void\r\n}\r\n\r\nfunction Field(props: FieldProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    name,\r\n    value: valueProp,\r\n    maxlength,\r\n    type = FieldType.Text,\r\n    align,\r\n    bordered,\r\n    focus,\r\n    autoFocus,\r\n    labelAlign = FieldLabelAlign.Left,\r\n    label,\r\n    inputAlign = FieldInputAlign.Left,\r\n    icon,\r\n    rightIcon,\r\n    placeholder,\r\n    placeholderClassName,\r\n    clickable,\r\n    required,\r\n    readonly,\r\n    disabled,\r\n    error,\r\n    message,\r\n    messageAlign = FieldLabelAlign.Left,\r\n    clearable,\r\n    clearIcon = <Clear />,\r\n    clearTrigger = FieldClearTrigger.Focus,\r\n    cursorSpacing,\r\n    confirmType,\r\n    confirmHold,\r\n    cursor,\r\n    selectionStart,\r\n    selectionEnd,\r\n    adjustPosition,\r\n    holdKeyboard,\r\n    children: childrenProp,\r\n    onClick,\r\n    onClear,\r\n    onConfirm,\r\n    onChange,\r\n    onFocus,\r\n    onBlur,\r\n  } = props\r\n  const { children, button } = useFieldChildren(childrenProp)\r\n\r\n  const [focused, setFocused] = useState(false)\r\n\r\n  const allowClear = useMemo(() => {\r\n    if (clearable && !readonly) {\r\n      const hasValue = valueProp !== \"\"\r\n      const trigger =\r\n        clearTrigger === FieldClearTrigger.Always ||\r\n        (clearTrigger === FieldClearTrigger.Focus && focused)\r\n      return hasValue && trigger\r\n    }\r\n    return false\r\n  }, [clearTrigger, clearable, focused, readonly, valueProp])\r\n\r\n  const handleClear = (event: ITouchEvent) => {\r\n    resolveOnChange(event, onChange, \"\")\r\n    onClear?.(event)\r\n  }\r\n\r\n  const handleFocus = (event: BaseEventOrig<InputProps.inputForceEventDetail>) => {\r\n    setFocused(true)\r\n    onFocus?.(event)\r\n  }\r\n\r\n  const handleBlur = (event: BaseEventOrig<InputProps.inputValueEventDetail>) => {\r\n    nextTick(() => setFocused(false))\r\n    resolveOnChange(event, onChange, valueProp)\r\n    onBlur?.(event)\r\n  }\r\n\r\n  return (\r\n    <BaseCell\r\n      className={classNames(\r\n        prefixClassname(\"field\"),\r\n        {\r\n          [prefixClassname(\"field--disabled\")]: disabled,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      bordered={bordered}\r\n      align={align}\r\n      clickable={clickable}\r\n      titleClassName={classNames(\r\n        prefixClassname(\"field__label\"),\r\n        prefixClassname(`field__label--${labelAlign}`),\r\n      )}\r\n      title={label}\r\n      icon={cloneIconElement(icon, { className: prefixClassname(\"field__icon\") })}\r\n      rightIcon={cloneIconElement(rightIcon, { className: prefixClassname(\"field__right-icon\") })}\r\n      required={required}\r\n      onClick={onClick}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"field__body\"), {\r\n          [prefixClassname(\"field__body--textarea\")]: type === FieldType.Textarea,\r\n        })}\r\n      >\r\n        {_.isEmpty(children) ? (\r\n          <Input\r\n            className={classNames(\r\n              prefixClassname(\"field__control\"),\r\n              {\r\n                [prefixClassname(\"field__control--disabled\")]: disabled,\r\n                [prefixClassname(\"field__control--readonly\")]: readonly,\r\n                [prefixClassname(\"field__control--error\")]: error,\r\n              },\r\n              prefixClassname(`field__control--${inputAlign}`),\r\n            )}\r\n            placeholderClass={classNames(\r\n              prefixClassname(\"field__control__placeholder\"),\r\n              {\r\n                [prefixClassname(\"field__control__placeholder--readonly\")]: readonly,\r\n                [prefixClassname(\"field__control__placeholder--error\")]: error,\r\n              },\r\n              placeholderClassName,\r\n            )}\r\n            name={name}\r\n            value={valueProp}\r\n            autoFocus={autoFocus}\r\n            focus={focus}\r\n            type={type as TaroInputType}\r\n            password={type === FieldType.Password}\r\n            placeholder={placeholder}\r\n            disabled={disabled || readonly}\r\n            maxlength={maxlength}\r\n            cursorSpacing={cursorSpacing}\r\n            confirmType={confirmType}\r\n            confirmHold={confirmHold}\r\n            cursor={cursor}\r\n            selectionStart={selectionStart}\r\n            selectionEnd={selectionEnd}\r\n            adjustPosition={adjustPosition}\r\n            holdKeyboard={holdKeyboard}\r\n            onFocus={handleFocus}\r\n            onBlur={handleBlur}\r\n            onInput={onChange}\r\n            onConfirm={onConfirm}\r\n          />\r\n        ) : (\r\n          children\r\n        )}\r\n\r\n        {allowClear &&\r\n          cloneIconElement(clearIcon, {\r\n            className: prefixClassname(\"field__clear\"),\r\n            onClick: handleClear,\r\n          })}\r\n        {button}\r\n      </View>\r\n      {message && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"field__message\"),\r\n            prefixClassname(`field__message--${messageAlign}`),\r\n            {\r\n              [prefixClassname(\"field__message--error\")]: error,\r\n            },\r\n          )}\r\n          children={message}\r\n        />\r\n      )}\r\n    </BaseCell>\r\n  )\r\n}\r\n\r\nexport default Field\r\n","import FieldElement, { FieldProps } from \"./field\"\r\nimport FieldButton from \"./field-button\"\r\n\r\nexport type { FieldClearTrigger, FieldClearTriggerString } from \"./field.shared\"\r\n\r\ninterface FieldInterface {\r\n  (props: FieldProps): JSX.Element\r\n\r\n  Button: typeof FieldButton\r\n}\r\n\r\nconst Field = FieldElement as FieldInterface\r\nField.Button = FieldButton\r\n\r\nexport default Field\r\n","import { Button, Cell, Field } from \"@taroify/core\"\r\nimport { MusicOutlined, SmileOutlined, WarningOutlined } from \"@taroify/icons\"\r\nimport * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction BasicField() {\r\n  const [value, setValue] = useState(\"\")\r\n  return (\r\n    <Cell.Group inset>\r\n      <Field\r\n        value={value}\r\n        label=\"文本\"\r\n        placeholder=\"请输入文本\"\r\n        onChange={(e) => setValue(e.detail.value)}\r\n      />\r\n    </Cell.Group>\r\n  )\r\n}\r\n\r\nfunction CustomField() {\r\n  const [text, setText] = useState(\"\")\r\n  const [idcard, setIdcard] = useState(\"\")\r\n  const [number, setNumber] = useState(\"\")\r\n  const [digit, setDigit] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  return (\r\n    <Cell.Group inset>\r\n      <Field\r\n        value={text}\r\n        label=\"文本\"\r\n        placeholder=\"请输入文本\"\r\n        onChange={(e) => setText(e.detail.value)}\r\n      />\r\n      <Field\r\n        value={idcard}\r\n        label=\"身份证号\"\r\n        type=\"idcard\"\r\n        placeholder=\"请输入手机号\"\r\n        onChange={(e) => setIdcard(e.detail.value)}\r\n      />\r\n      <Field\r\n        value={number}\r\n        label=\"整数\"\r\n        type=\"number\"\r\n        placeholder=\"请输入整数\"\r\n        onChange={(e) => setNumber(e.detail.value)}\r\n      />\r\n      <Field\r\n        value={digit}\r\n        label=\"数字\"\r\n        type=\"digit\"\r\n        placeholder=\"请输入数字（支持小数）\"\r\n        onChange={(e) => setDigit(e.detail.value)}\r\n      />\r\n      <Field\r\n        value={password}\r\n        label=\"密码\"\r\n        type=\"password\"\r\n        placeholder=\"请输入密码\"\r\n        onChange={(e) => setPassword(e.detail.value)}\r\n      />\r\n    </Cell.Group>\r\n  )\r\n}\r\n\r\nfunction DisabledField() {\r\n  return (\r\n    <Cell.Group inset>\r\n      <Field label=\"文本\" placeholder=\"输入框只读\" readonly />\r\n      <Field label=\"文本\" placeholder=\"输入框已禁用\" disabled />\r\n    </Cell.Group>\r\n  )\r\n}\r\n\r\nfunction IconField() {\r\n  const [value2, setValue2] = useState(\"\")\r\n\r\n  return (\r\n    <Cell.Group inset>\r\n      <Field\r\n        label=\"文本\"\r\n        icon={<SmileOutlined />}\r\n        rightIcon={<WarningOutlined />}\r\n        placeholder=\"显示图标\"\r\n      />\r\n      <Field\r\n        value={value2}\r\n        label=\"文本\"\r\n        icon={<MusicOutlined />}\r\n        clearable\r\n        placeholder=\"显示清除图标\"\r\n        onChange={(e) => setValue2(e.detail.value)}\r\n      />\r\n    </Cell.Group>\r\n  )\r\n}\r\n\r\nfunction ErrorField() {\r\n  return (\r\n    <Cell.Group inset>\r\n      <Field required error label=\"用户名\" placeholder=\"请输入用户名\" />\r\n      <Field required error label=\"手机号\" placeholder=\"请输入手机号\" message=\"手机号格式错误\" />\r\n    </Cell.Group>\r\n  )\r\n}\r\n\r\nfunction ButtonField() {\r\n  return (\r\n    <Cell.Group inset>\r\n      <Field align=\"center\" label=\"短信验证码\" placeholder=\"请输入短信验证码\">\r\n        <Field.Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            发送验证码\r\n          </Button>\r\n        </Field.Button>\r\n      </Field>\r\n    </Cell.Group>\r\n  )\r\n}\r\n\r\nexport default function FieldDemo() {\r\n  return (\r\n    <Page title=\"Field 输入框\" className=\"field-demo\">\r\n      <Block title=\"基础用法\">\r\n        <BasicField />\r\n      </Block>\r\n      <Block title=\"自定义类型\">\r\n        <CustomField />\r\n      </Block>\r\n      <Block title=\"禁用输入框\">\r\n        <DisabledField />\r\n      </Block>\r\n      <Block title=\"显示图标\">\r\n        <IconField />\r\n      </Block>\r\n      <Block title=\"错误提示\">\r\n        <ErrorField />\r\n      </Block>\r\n      <Block title=\"插入按钮\">\r\n        <ButtonField />\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}