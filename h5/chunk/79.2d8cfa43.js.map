{"version":3,"sources":["webpack:///../../../../packages/core/src/image/image.tsx","webpack:///../../../../packages/core/src/image/style/index.ts","webpack:///./src/pages/basic/image/index.tsx"],"names":["ImagePlaceholder","prefix","children","React","className","classNames","prefixClassname","mode","round","lazyLoad","placeholder","fallback","taroMode","toTaroMode","useState","useEffect","setLoading","failed","src","loading","imgProps","alt","onError","setFailed","onLoad","ImageDemo","imageUrl","modes","title","wrap","gutter","map","Item","span"],"mappings":"6tBA6CA,SAASA,iBAAiB,GAA2D,QAAzDC,cAAyD,MAA3D,cAA2D,EAAjCC,EAAiC,EAAjCA,SAElD,OAAIC,iBAAJ,GAEI,gCACG,iBAA6C,CAC5CC,YAAWC,IACTC,YAAgB,UAAD,OADI,IAEnBA,YAAgB,UAAD,SAFI,cASzB,QAAwB,IAA5B,GACS,oBAAK,CAACF,YAAWE,YAAgB,UAAD,OAA3B,IAAiDJ,WAAUA,IAElEC,2BAAP,MAaY,kBAAiC,MACvC,EAAN,EAAM,YAAN,EAAM,MAAN,EAAM,IADuC,EAC7C,EAIEI,YAL2C,MACvC,cADuC,IAC7C,EAKEC,aAN2C,WAC7C,EAMEC,gBAP2C,WAC7C,EAOEC,mBAR2C,WAC7C,EAQEC,gBAT2C,SAC7C,gCAWMC,EAhER,SAASC,WAAWN,GAClB,kBAAIA,EACF,WAEF,aAAIA,EACF,YAEF,eAAIA,EACF,cAEF,gBAAIA,EACF,eAEF,EAmDiBM,CAAjB,GAZ6C,EAcfC,oBAA9B,GAd6C,mBAcvC,EAduC,KAcvC,EAduC,OAejBA,oBAA5B,GAf6C,mBAevC,EAfuC,KAevC,EAfuC,KA8B7C,OAbAC,qBAAU,WACRC,QACC,CAFHD,IAcE,iCACIE,GAAUC,GACV,oBAAU,eACRA,MADQ,EAERX,OAFQ,EAGRE,WAHQ,EAIRL,YAAWC,IACTC,YADmB,6BAGhBA,YAAD,gBADF,GAFmB,cAIhBA,YAAD,kBAAqCa,GAJpB,GAJb,GAYRC,WAAU,CAAEC,SACZC,UArBR,uBACEN,MACAO,OAoBMC,SA1BR,sBACER,QASA,IAoBGG,MACC,oBAAK,eAACf,YAAWC,IAAWC,YAAD,aAA3B,GACE,iCAAiB,CAACL,SAAD,cAAsBC,WAAUQ,KAGpDO,MACC,oBAAK,eAACb,YAAWC,IAAWC,YAAD,aAA3B,GACE,iCAAiB,CAACL,SAAD,WAAmBC,WAAUS,Q,mCCtIxD,e,8OCSe,SAASc,YACtB,IAAMC,EAAW,uCAEXC,EAAqB,CACzB,cACA,YACA,aACA,WACA,YACA,MACA,SACA,SACA,OACA,QACA,UACA,WACA,aACA,eAGF,OACE,eAAC,IAAD,CAAMC,QAAM,WAAWxB,YAAU,aAAjC,YACE,cAAC,IAAD,CAAOwB,QAAM,OAAb,WACE,mBAAOxB,YAAU,cAAcc,MAAKQ,MAEtC,cAAC,IAAD,CAAOE,QAAM,OAAb,WACE,mBAAMC,OAAK,OAAOC,SAAQ,GAA1B,WACGH,EAAMI,KAAI,SAACxB,GAAD,OACT,mBAAMyB,KAAN,CAAWC,OAAM,EAAjB,YACE,mBAAO1B,OAAMA,EAAMW,MAAKQ,IACxB,cAAC,IAAD,CAAMtB,YAAU,OAAhB,WAAwBG,MAFDA,UAO/B,cAAC,IAAD,CAAOqB,QAAM,OAAb,WACE,mBAAMC,OAAK,OAAOC,SAAQ,GAA1B,WACGH,EAAMI,KAAI,SAACxB,GAAD,OACT,mBAAMyB,KAAN,CAAWC,OAAM,EAAjB,YACE,mBAAO1B,OAAMA,EAAMW,MAAKQ,EAAUlB,SAAK,IACvC,cAAC,IAAD,CAAMJ,YAAU,OAAhB,WAAwBG,MAFDA,UAO/B,cAAC,IAAD,CAAOqB,QAAM,QAAb,WACE,oBAAMC,OAAK,OAAOC,SAAQ,GAA1B,YACE,mBAAME,KAAN,CAAWC,OAAM,EAAjB,YACE,mBAAOvB,cAAa,cAAC,QAAD,MACpB,cAAC,IAAD,CAAMN,YAAU,OAAhB,uBAEF,mBAAM4B,KAAN,CAAWC,OAAM,EAAjB,YACE,mBAAOvB,cAAY,WACnB,cAAC,IAAD,CAAMN,YAAU,OAAhB,6BAIN,cAAC,IAAD,CAAOwB,QAAM,SAAb,WACE,oBAAMC,OAAK,OAAOC,SAAQ,GAA1B,YACE,mBAAME,KAAN,CAAWC,OAAM,EAAjB,YACE,mBAAOf,MAAI,QAAQP,WAAU,cAAC,YAAD,MAC7B,cAAC,IAAD,CAAMP,YAAU,OAAhB,uBAEF,mBAAM4B,KAAN,CAAWC,OAAM,EAAjB,YACE,mBAAOf,MAAI,QAAQP,WAAS,SAC5B,cAAC,IAAD,CAAMP,YAAU,OAAhB","file":"chunk/79.2d8cfa43.js","sourcesContent":["import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport type ImageMode =\r\n  | \"scaleToFill\"\r\n  | \"aspectFit\"\r\n  | \"aspectFill\"\r\n  | \"widthFix\"\r\n  | \"heightFix\"\r\n  | \"top\"\r\n  | \"bottom\"\r\n  | \"center\"\r\n  | \"left\"\r\n  | \"right\"\r\n  | \"topLeft\"\r\n  | \"topRight\"\r\n  | \"bottomLeft\"\r\n  | \"bottomRight\"\r\n\r\nfunction toTaroMode(mode: ImageMode): string {\r\n  if (mode === \"topLeft\") {\r\n    return \"top left\"\r\n  }\r\n  if (mode === \"topRight\") {\r\n    return \"top right\"\r\n  }\r\n  if (mode === \"bottomLeft\") {\r\n    return \"bottom left\"\r\n  }\r\n  if (mode === \"bottomRight\") {\r\n    return \"bottom right\"\r\n  }\r\n  return mode\r\n}\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ImagePlaceholder({ prefix = \"placeholder\", children }: ImagePlaceholderProps) {\r\n  // Icon Element\r\n  if (React.isValidElement(children)) {\r\n    return (\r\n      <>\r\n        {React.cloneElement(children as ReactElement, {\r\n          className: classNames(\r\n            prefixClassname(`image__${prefix}`),\r\n            prefixClassname(`image__${prefix}-icon`),\r\n          ),\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n\r\ninterface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round = false,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = toTaroMode(mode)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n  }, [src])\r\n\r\n  function handleLoad() {\r\n    setLoading(false)\r\n  }\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--round\")]: round,\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onError={handleError}\r\n          onLoad={handleLoad}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { Flex, Image } from \"@taroify/core\"\nimport { ImageMode } from \"@taroify/core/image\"\nimport { Photo, PhotoFail } from \"@taroify/icons\"\nimport { Text } from \"@tarojs/components\"\nimport * as React from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\nexport default function ImageDemo() {\n  const imageUrl = \"https://img01.yzcdn.cn/vant/cat.jpeg\"\n\n  const modes: ImageMode[] = [\n    \"scaleToFill\",\n    \"aspectFit\",\n    \"aspectFill\",\n    \"widthFix\",\n    \"heightFix\",\n    \"top\",\n    \"bottom\",\n    \"center\",\n    \"left\",\n    \"right\",\n    \"topLeft\",\n    \"topRight\",\n    \"bottomLeft\",\n    \"bottomRight\",\n  ]\n\n  return (\n    <Page title=\"Image 图片\" className=\"image-demo\">\n      <Block title=\"基础用法\">\n        <Image className=\"basic-image\" src={imageUrl} />\n      </Block>\n      <Block title=\"填充模式\">\n        <Flex wrap=\"wrap\" gutter={20}>\n          {modes.map((mode) => (\n            <Flex.Item span={8} key={mode}>\n              <Image mode={mode} src={imageUrl} />\n              <Text className=\"text\">{mode}</Text>\n            </Flex.Item>\n          ))}\n        </Flex>\n      </Block>\n      <Block title=\"圆形图片\">\n        <Flex wrap=\"wrap\" gutter={20}>\n          {modes.map((mode) => (\n            <Flex.Item span={8} key={mode}>\n              <Image mode={mode} src={imageUrl} round />\n              <Text className=\"text\">{mode}</Text>\n            </Flex.Item>\n          ))}\n        </Flex>\n      </Block>\n      <Block title=\"加载中提示\">\n        <Flex wrap=\"wrap\" gutter={20}>\n          <Flex.Item span={8}>\n            <Image placeholder={<Photo />} />\n            <Text className=\"text\">默认提示</Text>\n          </Flex.Item>\n          <Flex.Item span={8}>\n            <Image placeholder=\"加载中...\" />\n            <Text className=\"text\">自定义提示</Text>\n          </Flex.Item>\n        </Flex>\n      </Block>\n      <Block title=\"加载失败提示\">\n        <Flex wrap=\"wrap\" gutter={20}>\n          <Flex.Item span={8}>\n            <Image src=\"error\" fallback={<PhotoFail />} />\n            <Text className=\"text\">默认提示</Text>\n          </Flex.Item>\n          <Flex.Item span={8}>\n            <Image src=\"error\" fallback=\"加载失败\" />\n            <Text className=\"text\">自定义提示</Text>\n          </Flex.Item>\n        </Flex>\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}