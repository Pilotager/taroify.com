{"version":3,"sources":["webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.shared.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.new.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.old.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.ts","webpack:///../../../../packages/hooks/src/use-uncontrolled/use-uncontrolled.ts","webpack:///../../../../packages/hooks/src/use-to-ref/use-to-ref.ts","webpack:///../../../../packages/hooks/src/use-force-update/use-force-update.ts","webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/core/src/utils/validate/index.ts","webpack:///../../../../packages/hooks/src/use-area/use-area.ts","webpack:///../../../../packages/hooks/src/use-area/area.shared.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isBoolean.js","webpack:///./src/components/block.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isNull.js","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isPlainObject.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_getPrototype.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/endsWith.js","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///../../../../packages/core/src/button/button.context.ts","webpack:///../../../../packages/core/src/styles/hairline.ts","webpack:///../../../../packages/core/src/utils/children.ts","webpack:///../../../../packages/core/src/button/button-content.tsx","webpack:///../../../../packages/core/src/button/button.tsx","webpack:///../../../../packages/core/src/button/index.ts","webpack:///../../../../packages/core/src/button/style/index.ts","webpack:///../../../../packages/core/src/button-base/button-base.tsx","webpack:///../../../../packages/core/src/button-base/style/index.ts","webpack:///../../../../packages/core/src/steps/steps.context.ts","webpack:///../../../../packages/core/src/steps/step.tsx","webpack:///../../../../packages/core/src/steps/steps.tsx","webpack:///../../../../packages/core/src/steps/index.ts","webpack:///./src/pages/display/steps/index.tsx"],"names":["defaultFirst","option","useCascadeSelect","options","depth","useMemo","doCascadeSelect","value","data","newValues","newColumns","children","cursorOptions","nextOption","findCascadeOption","nextOptions","values","maxDepth","onChange","onChangeRef","useToRef","useEffect","e","columns","useState","setColumns","useCascader","useCascaderNew","forceUpdate","useForceUpdate","valueRef","stateRef","useRef","defaultValue","setValue","useCallback","emitChange","getValue","updateReducer","num","useReducer","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","isValidElement","element","isIconElement","cloneElement","node","className","oldProps","props","newProps","classNames","displayName","DEFAULT_AREA_DATA","province_list","city_list","county_list","defaultFormatter","list","index","label","getAreaPrefix","getFirstDivisionPrefix","divisions","getAreaPrefixDivision","valuePrefix","prefixes","valueSuperiorPrefix","superiorPrefix","valuePad","padAreaPrefixToValue","prefix","division","doAreaSelect","formatter","dataArray","getAreaData","dataPrimitive","nextValueOptions","nextValues","filterAreaList","newRecord","record","unverifiedValues","valueOptions","useAreaSelect","useAreaValues","unverifiedValue","unverifiedValueRef","valuesRef","valueOptionsRef","getValues","getValueOptions","setValues","baseGetTag","require","isObjectLike","module","exports","isBoolean","Block","variant","title","demoPrefixClassname","isNull","SpinIcon","key","prefixClassname","LoadingSpinner","rootStyle","style","LoadingCircular","type","direction","getPrototype","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","objectCtorString","call","isPlainObject","proto","Ctor","constructor","overArg","getPrototypeOf","baseClamp","baseToString","toInteger","endsWith","string","target","position","length","end","undefined","slice","ButtonContext","createContext","HAIRLINE_BORDER","HAIRLINE_BORDER_TOP","HAIRLINE_BORDER_LEFT","HAIRLINE_BORDER_BOTTOM","HAIRLINE_BORDER_SURROUND","HAIRLINE_BORDER_TOP_BOTTOM","HAIRLINE_BORDER_UNSET_TOP_BOTTOM","isObjectChildren","isObjectElement","Children","toArray","ReactChildren","forEach","forEachChildren","map","mapChildren","ButtonContent","appendButtonIconClassname","icon","cloneIconElement","color","formType","loading","onClick","useButtonLoading","isElementOf","useButtonChildren","childrenArray","lastIndex","iconProp","child","onCtxClick","useContext","shape","block","disabled","React","Button","ButtonBase","Step","active","activeProp","completed","completedProp","alternativeLabel","Steps","childrenProp","useUncontrolled","steps","useStepsChildren","__children__","StepsContext","BasicSteps","activeStep","AlternativeLabelSteps","StepsWithCustomStyle","VerticalSteps","StepsDemo","setActiveStep"],"mappings":"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","file":"chunk/63.45765e30.js","sourcesContent":["import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as _ from \"lodash\"\r\nimport { ReactNode } from \"react\"\r\n\r\nexport interface CascaderOption extends ViewProps {\r\n  value?: any\r\n  label?: ReactNode\r\n  disabled?: boolean\r\n  children?: CascaderOption[]\r\n}\r\n\r\nexport function findCascadeOption(\r\n  options: CascaderOption[],\r\n  value: any,\r\n  defaultFirst: boolean = false,\r\n): CascaderOption | undefined {\r\n  const option = _.find(options, (option) => option.value === value)\r\n  return _.isUndefined(option) && defaultFirst ? _.first(options) : option\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { useEffect, useMemo } from \"react\"\r\nimport useToRef from \"../use-to-ref\"\r\nimport { CascaderOption, findCascadeOption } from \"./use-cascader.shared\"\r\n\r\ninterface UseCascadeSelectOptions {\r\n  data: CascaderOption[]\r\n  value: any[]\r\n  depth: number\r\n}\r\n\r\nfunction doCascadeSelect({ value: values, data: options }: UseCascadeSelectOptions) {\r\n  const newValues: any[] = []\r\n  const newColumns: CascaderOption[] = []\r\n  newColumns.push({ children: options })\r\n\r\n  let cursorOptions: CascaderOption[] = options\r\n  let depth = 0\r\n\r\n  for (;;) {\r\n    const value = _.get(values, depth)\r\n    const nextOption = findCascadeOption(cursorOptions, value, true)\r\n    if (_.isUndefined(nextOption)) {\r\n      break\r\n    }\r\n    const { value: newValue, children: nextOptions } = nextOption\r\n    newValues.push(newValue)\r\n    if (!nextOptions || _.isEmpty(nextOptions)) {\r\n      break\r\n    }\r\n    newColumns.push(nextOption)\r\n    cursorOptions = nextOptions\r\n    depth++\r\n  }\r\n\r\n  return [newColumns, newValues]\r\n}\r\n\r\nfunction useCascadeSelect(options: UseCascadeSelectOptions) {\r\n  const { value, data, depth } = options\r\n  return useMemo(\r\n    () =>\r\n      doCascadeSelect({\r\n        value,\r\n        data,\r\n        depth,\r\n      }),\r\n    [data, depth, value],\r\n  )\r\n}\r\n\r\nexport interface UseCascaderNewOptions {\r\n  value?: any[]\r\n  depth?: number\r\n  data?: CascaderOption[]\r\n\r\n  onChange?(value: any[]): void\r\n}\r\n\r\nexport interface CascaderObjectNew {\r\n  columns: CascaderOption[]\r\n}\r\n\r\nexport default function useCascaderNew({\r\n  value: values = [],\r\n  depth: maxDepth = 0,\r\n  data = [],\r\n  onChange,\r\n}: UseCascaderNewOptions): CascaderObjectNew {\r\n  maxDepth = _.clamp(maxDepth, 0, maxDepth)\r\n  const onChangeRef = useToRef(onChange)\r\n  const [columns, newValues] = useCascadeSelect({ value: values, depth: maxDepth, data })\r\n\r\n  useEffect(() => {\r\n    if (maxDepth !== 0 && maxDepth > _.size(columns)) {\r\n      _.range(maxDepth - _.size(columns))\r\n        .map(() => [])\r\n        .forEach((e) => columns.push(e))\r\n    }\r\n\r\n    if (!_.isEqual(values, newValues)) {\r\n      onChangeRef.current?.(newValues)\r\n    }\r\n  }, [columns, maxDepth, newValues, onChangeRef, values])\r\n\r\n  return {\r\n    columns,\r\n  }\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { CascaderOption, findCascadeOption } from \"./use-cascader.shared\"\r\n\r\nexport interface UseCascaderOldOptions {\r\n  value?: any[]\r\n  depth?: number\r\n  options?: CascaderOption[]\r\n}\r\n\r\nexport interface CascaderObjectOld {\r\n  columns: CascaderOption[][]\r\n}\r\n\r\nexport default function useCascaderOld({\r\n  value: values = [],\r\n  depth = 0,\r\n  options = [],\r\n}: UseCascaderOldOptions): CascaderObjectOld {\r\n  depth = _.clamp(depth, 0, depth)\r\n  const [columns, setColumns] = useState<CascaderOption[][]>([])\r\n\r\n  useEffect(() => {\r\n    const newColumns: CascaderOption[][] = []\r\n    newColumns.push(options)\r\n\r\n    if (!_.isEmpty(values)) {\r\n      let cursorOptions: CascaderOption[] = options\r\n\r\n      for (const value of values) {\r\n        const nextOption = findCascadeOption(cursorOptions, value)\r\n        if (_.isUndefined(nextOption)) {\r\n          break\r\n        }\r\n        const { children: nextOptions } = nextOption\r\n        if (!nextOptions || _.isEmpty(nextOptions)) {\r\n          break\r\n        }\r\n        cursorOptions = nextOptions\r\n        newColumns.push(nextOptions)\r\n      }\r\n    }\r\n    if (depth !== 0 && depth > _.size(newColumns)) {\r\n      _.range(depth - _.size(newColumns))\r\n        .map(() => [])\r\n        .forEach((e) => newColumns.push(e))\r\n    }\r\n    setColumns(newColumns)\r\n  }, [depth, options, values])\r\n\r\n  return {\r\n    columns,\r\n  }\r\n}\r\n","import useCascaderNew, { CascaderObjectNew, UseCascaderNewOptions } from \"./use-cascader.new\"\r\nimport useCascaderOld, { CascaderObjectOld, UseCascaderOldOptions } from \"./use-cascader.old\"\r\nimport { CascaderOption } from \"./use-cascader.shared\"\r\n\r\ninterface UseCascaderOptions {\r\n  options?: CascaderOption[]\r\n  data?: CascaderOption[]\r\n}\r\n\r\nfunction useCascader(options: UseCascaderOldOptions): CascaderObjectOld\r\nfunction useCascader(options: UseCascaderNewOptions): CascaderObjectNew\r\nfunction useCascader({ data, ...restOptions }: UseCascaderOptions) {\r\n  const useCompatibleCascader = data ? useCascaderNew : useCascaderOld\r\n  return useCompatibleCascader({\r\n    data,\r\n    ...restOptions,\r\n  })\r\n}\r\n\r\nexport default useCascader\r\n","import * as _ from \"lodash\"\r\nimport { useCallback, useMemo, useRef } from \"react\"\r\nimport useForceUpdate from \"../use-force-update\"\r\nimport useToRef from \"../use-to-ref\"\r\n\r\ninterface UseUncontrolledOptions<S> {\r\n  defaultValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\nexport default function useUncontrolled<S>(options: UseUncontrolledOptions<S> = {}) {\r\n  const { defaultValue, value: valueProp, onChange } = options\r\n  const forceUpdate = useForceUpdate()\r\n  //\r\n  const valueRef = useToRef(valueProp)\r\n  const stateRef = useRef(defaultValue ?? valueRef.current)\r\n\r\n  if (valueRef.current !== undefined) {\r\n    stateRef.current = valueRef.current\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(valueRef.current)) {\r\n        stateRef.current = newValue\r\n        forceUpdate()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({\r\n      value: stateRef.current,\r\n      getValue,\r\n      setValue,\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","import { MutableRefObject, useRef } from \"react\"\r\n\r\nexport default function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n","import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useForceUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useForceUpdate\r\n","import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","import * as _ from \"lodash\"\r\nimport { isValidElement, JSXElementConstructor, ReactElement, ReactNode } from \"react\"\r\n\r\nexport function isNoneElement(node: ReactNode) {\r\n  return _.isUndefined(node) || _.isNull(node)\r\n}\r\n\r\nexport function isTextElement(node: ReactNode) {\r\n  return _.isNumber(node) || _.isString(node)\r\n}\r\n\r\nexport function isObjectElement(node?: ReactNode) {\r\n  return !isValidElement(node) && _.isObject(node) && !_.isArray(node)\r\n}\r\n\r\nexport function isElementOf(node?: ReactNode, type?: JSXElementConstructor<any>) {\r\n  if (isValidElement(node)) {\r\n    const element = node as ReactElement\r\n    if (element.type === type) {\r\n      return true\r\n    }\r\n\r\n    const displayName = _.get(element.type, \"displayName\")\r\n    if (\r\n      _.isFunction(element.type) &&\r\n      !_.isEmpty(displayName) &&\r\n      _.endsWith(displayName, _.get(type, \"displayName\"))\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport useForceUpdate from \"../use-force-update\"\r\nimport useToRef from \"../use-to-ref\"\r\nimport { AreaData, AreaDivision, getAreaData } from \"./area.shared\"\r\n\r\nexport type AreaFormatter = (record?: Record<string, string>, prefix?: any) => AreaDivision[]\r\n\r\nconst DEFAULT_AREA_DATA: AreaData = {\r\n  province_list: {},\r\n  city_list: {},\r\n  county_list: {},\r\n}\r\n\r\nfunction defaultFormatter(list?: Record<string, string>): AreaDivision[] {\r\n  let index = 0\r\n  return _.map(list, (label, value) => ({ index: index++, value, label, children: label }))\r\n}\r\n\r\nfunction padAreaPrefixToValue(prefix: any) {\r\n  return _.padEnd(prefix, 6, \"0\")\r\n}\r\n\r\nfunction filterAreaList(list?: Record<string, string>, prefix?: string) {\r\n  const newRecord: Record<string, string> = {}\r\n  _.forEach(list, (name, code) => {\r\n    if (_.startsWith(code, prefix)) {\r\n      newRecord[code] = name\r\n    }\r\n  })\r\n  return newRecord\r\n}\r\n\r\nfunction getAreaPrefix(value: any, depth: number) {\r\n  return value?.substring(0, depth * 2)\r\n}\r\n\r\nfunction getFirstDivisionPrefix(divisions: AreaDivision[], depth: number) {\r\n  return getAreaPrefix(_.first(divisions)?.value, depth)\r\n}\r\n\r\nfunction getAreaPrefixDivision(\r\n  prefixes: string[],\r\n  divisions: AreaDivision[],\r\n  values: any[],\r\n  index: number,\r\n): AreaDivision {\r\n  const value = _.get(values, index)\r\n  const depth = index + 1\r\n  const valuePrefix = getAreaPrefix(value, depth)\r\n\r\n  if (index === 0) {\r\n    prefixes[index] = valuePrefix ?? getFirstDivisionPrefix(divisions, depth)\r\n  } else {\r\n    const valueSuperiorPrefix = value?.substring(0, index * 2)\r\n    const superiorPrefix = prefixes[index - 1]\r\n    // Easy to debug code\r\n    if (superiorPrefix !== valueSuperiorPrefix) {\r\n      prefixes[index] = getFirstDivisionPrefix(divisions, depth)\r\n    } else {\r\n      prefixes[index] = valuePrefix\r\n    }\r\n  }\r\n  const valuePad = padAreaPrefixToValue(prefixes[index])\r\n  return _.find(divisions, (division) => division.value === valuePad) as AreaDivision\r\n}\r\n\r\ninterface UseAreaSelectOptions {\r\n  data: AreaData\r\n  unverifiedValues: any[]\r\n  depth: number\r\n\r\n  formatter: AreaFormatter\r\n}\r\n\r\nfunction doAreaSelect(options: UseAreaSelectOptions) {\r\n  const { unverifiedValues, data: dataPrimitive, depth, formatter } = options\r\n  const data = getAreaData(dataPrimitive, depth)\r\n  //\r\n  const prefixes: string[] = []\r\n  const columns: AreaDivision[] = []\r\n  const nextValueOptions: AreaDivision[] = []\r\n  const nextValues: string[] = []\r\n\r\n  _.forEach(data, (record, index) => {\r\n    // const divisions = formatter?.(index === 0 ? record : filterAreaList(record, prefixes[index - 1]))\r\n    // Easy to debug code\r\n    let divisions: AreaDivision[]\r\n    if (index === 0) {\r\n      divisions = formatter?.(record)\r\n    } else {\r\n      divisions = formatter?.(filterAreaList(record, prefixes[index - 1]))\r\n    }\r\n    const division = getAreaPrefixDivision(prefixes, divisions, unverifiedValues, index)\r\n    nextValueOptions[index] = division\r\n    nextValues[index] = division.value\r\n    columns[index] = {\r\n      index,\r\n      children: divisions,\r\n    }\r\n  })\r\n  return {\r\n    columns,\r\n    values: nextValues,\r\n    valueOptions: nextValueOptions,\r\n  }\r\n}\r\n\r\nfunction useAreaSelect(options: UseAreaSelectOptions) {\r\n  const { unverifiedValues, data, depth, formatter } = options\r\n  return useMemo(\r\n    () =>\r\n      doAreaSelect({\r\n        unverifiedValues,\r\n        data,\r\n        depth,\r\n        formatter,\r\n      }),\r\n    [data, depth, formatter, unverifiedValues],\r\n  )\r\n}\r\n\r\nfunction useAreaValues(value: any | any[]) {\r\n  return useMemo(() => (_.isArray(value) ? value : [value]), [value])\r\n}\r\n\r\ninterface UseAreaOptions {\r\n  depth?: number\r\n  data?: AreaData\r\n\r\n  formatter?: AreaFormatter\r\n}\r\n\r\nexport default function useArea(unverifiedValue: any[] = [], options: UseAreaOptions = {}) {\r\n  const { data = DEFAULT_AREA_DATA, depth = 3, formatter = defaultFormatter } = options\r\n  const unverifiedValueRef = useRef(unverifiedValue)\r\n  const forceUpdate = useForceUpdate()\r\n  const unverifiedValues = useAreaValues(unverifiedValueRef.current)\r\n  //\r\n  const { columns, values, valueOptions } = useAreaSelect({\r\n    unverifiedValues,\r\n    data,\r\n    depth,\r\n    formatter,\r\n  })\r\n  //\r\n  const valuesRef = useToRef(values)\r\n  const valueOptionsRef = useToRef(valueOptions)\r\n  const getValues = useCallback(() => valuesRef.current, [valuesRef])\r\n  const getValueOptions = useCallback(() => valueOptionsRef.current, [valueOptionsRef])\r\n\r\n  const setValues = useCallback(\r\n    (newValues: any[]) => {\r\n      unverifiedValueRef.current = newValues\r\n      forceUpdate()\r\n    },\r\n    [forceUpdate],\r\n  )\r\n  //\r\n  useEffect(() => {\r\n    if (!_.isEqual(valuesRef.current, unverifiedValue)) {\r\n      setValues(unverifiedValue)\r\n    }\r\n  }, [setValues, unverifiedValue, valuesRef])\r\n  //\r\n  return useMemo(\r\n    () => ({\r\n      columns,\r\n      values,\r\n      valueOptions,\r\n      getValues,\r\n      getValueOptions,\r\n      setValues,\r\n    }),\r\n    [columns, getValueOptions, getValues, setValues, valueOptions, values],\r\n  )\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { ReactNode } from \"react\"\r\n\r\nexport interface AreaData {\r\n  province_list: Record<string, string>\r\n  city_list: Record<string, string>\r\n  county_list: Record<string, string>\r\n}\r\n\r\nexport interface AreaDivision extends Record<any, any> {\r\n  index: number\r\n  value?: any\r\n  label?: ReactNode\r\n  children?: AreaDivision[] | ReactNode\r\n}\r\n\r\nexport function getAreaData(data: AreaData, maxDepth: number) {\r\n  const { province_list, city_list, county_list } = data\r\n  const dataArray: Record<any, any>[] = []\r\n  if (maxDepth >= 1 && !_.isEmpty(province_list)) {\r\n    dataArray.push(province_list)\r\n    if (maxDepth >= 2 && !_.isEmpty(city_list)) {\r\n      dataArray.push(city_list)\r\n      if (maxDepth >= 3 && !_.isEmpty(county_list)) {\r\n        dataArray.push(county_list)\r\n      }\r\n    }\r\n  }\r\n  return dataArray\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nmodule.exports = isNull;\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var baseClamp = require('./_baseClamp'),\n    baseToString = require('./_baseToString'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Checks if `string` ends with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @example\n *\n * _.endsWith('abc', 'c');\n * // => true\n *\n * _.endsWith('abc', 'b');\n * // => false\n *\n * _.endsWith('abc', 'b', 2);\n * // => true\n */\nfunction endsWith(string, target, position) {\n  string = toString(string);\n  target = baseToString(target);\n\n  var length = string.length;\n  position = position === undefined\n    ? length\n    : baseClamp(toInteger(position), 0, length);\n\n  var end = position;\n  position -= target.length;\n  return position >= 0 && string.slice(position, end) == target;\n}\n\nmodule.exports = endsWith;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\nimport { ButtonProps } from \"./button\"\r\n\r\ninterface ButtonContextValue {\r\n  onClick?(event: ITouchEvent, props: ButtonProps): void\r\n}\r\n\r\nconst ButtonContext = createContext<ButtonContextValue>({})\r\n\r\nexport default ButtonContext\r\n","import { prefixClassname } from \"./prefix\"\n\nexport const HAIRLINE_BORDER = prefixClassname(\"hairline\")\nexport const HAIRLINE_BORDER_TOP = `${HAIRLINE_BORDER}--top`\nexport const HAIRLINE_BORDER_LEFT = `${HAIRLINE_BORDER}--left`\nexport const HAIRLINE_BORDER_BOTTOM = `${HAIRLINE_BORDER}--bottom`\nexport const HAIRLINE_BORDER_SURROUND = `${HAIRLINE_BORDER}--surround`\nexport const HAIRLINE_BORDER_TOP_BOTTOM = `${HAIRLINE_BORDER}--top-bottom`\nexport const HAIRLINE_BORDER_UNSET_TOP_BOTTOM = `${HAIRLINE_BORDER}-unset--top-bottom`\n","import * as _ from \"lodash\"\r\nimport { Children as ReactChildren, ReactNode } from \"react\"\r\nimport { isObjectElement } from \"./validate\"\r\n\r\nfunction isObjectChildren(children?: ReactNode) {\r\n  if (!_.isArray(children)) {\r\n    return false\r\n  }\r\n  const node = _.first(children)\r\n  return isObjectElement(node)\r\n}\r\n\r\nfunction forEachChildren<C>(children: C | C[], fn: (child: C, index: number) => void) {\r\n  const objectified = isObjectChildren(children)\r\n  const forEach = objectified ? _.forEach : ReactChildren.forEach\r\n  return forEach(children, fn)\r\n}\r\n\r\nfunction mapChildren<T, C>(\r\n  children: C | C[],\r\n  fn: (child: C, index: number) => T,\r\n): C extends null | undefined ? C : Array<Exclude<T, boolean | null | undefined>> {\r\n  const objectified = isObjectChildren(children)\r\n  const map = objectified ? _.map : ReactChildren.map\r\n  return map(children, fn)\r\n}\r\n\r\nconst Children = {\r\n  toArray: ReactChildren.toArray,\r\n  forEach: forEachChildren,\r\n  map: mapChildren,\r\n}\r\n\r\nexport default Children\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { PropsWithChildren } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface ButtonContentProps extends PropsWithChildren<ViewProps> {}\r\n\r\nfunction ButtonContent(props: ButtonContentProps) {\r\n  const { className, ...restProps } = props\r\n  return (\r\n    <View className={classNames(prefixClassname(\"button__content\"), className)} {...restProps} />\r\n  )\r\n}\r\n\r\nexport default ButtonContent\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { ButtonProps as TaroButtonProps, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, ReactElement, ReactNode, useContext, useMemo } from \"react\"\r\nimport ButtonBase from \"../button-base\"\r\nimport Loading, { LoadingProps } from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport Children from \"../utils/children\"\r\nimport { isElementOf, isObjectElement } from \"../utils/validate\"\r\nimport ButtonContent from \"./button-content\"\r\nimport ButtonContext from \"./button.context\"\r\nimport {\r\n  ButtonColor,\r\n  ButtonFormType,\r\n  ButtonShape,\r\n  ButtonSize,\r\n  ButtonVariant,\r\n} from \"./button.shared\"\r\n\r\nfunction useButtonLoading(loading?: boolean | LoadingProps | ReactElement): ReactNode {\r\n  return useMemo(() => {\r\n    if (_.isBoolean(loading) && loading) {\r\n      return (\r\n        <Loading\r\n          className={classNames(\r\n            prefixClassname(\"button__loading\"),\r\n            prefixClassname(\"button__loading--right\"),\r\n          )}\r\n        />\r\n      )\r\n    }\r\n\r\n    if (isObjectElement(loading)) {\r\n      const { className, ...restProps } = loading as LoadingProps\r\n      return (\r\n        <Loading\r\n          className={classNames(\r\n            prefixClassname(\"button__loading\"),\r\n            prefixClassname(\"button__loading--right\"),\r\n            className,\r\n          )}\r\n          {...restProps}\r\n        />\r\n      )\r\n    }\r\n\r\n    if (isElementOf(loading, Loading)) {\r\n      return cloneElement(loading as ReactElement, {\r\n        className: classNames(\r\n          prefixClassname(\"button__loading\"),\r\n          prefixClassname(\"button__loading--right\"),\r\n        ),\r\n      })\r\n    }\r\n\r\n    return loading\r\n  }, [loading])\r\n}\r\n\r\nfunction appendButtonIconClassname(icon?: ReactNode, className?: string) {\r\n  return isIconElement(icon) ? cloneIconElement(icon, { className }) : icon\r\n}\r\n\r\ninterface UseButtonChildrenOptions {\r\n  children?: ReactNode\r\n  loading?: ReactNode\r\n  icon?: ReactNode\r\n}\r\n\r\nfunction useButtonChildren(options: UseButtonChildrenOptions = {}) {\r\n  const { loading, icon: iconProp, children } = options\r\n  if (isElementOf(children, ButtonContent)) {\r\n    return children\r\n  }\r\n  const childrenArray = Children.toArray(children)\r\n  const lastIndex = _.size(childrenArray) - 1\r\n\r\n  const icon = appendButtonIconClassname(iconProp, prefixClassname(\"button__icon--right\"))\r\n  return (\r\n    <ButtonContent>\r\n      {loading || icon}\r\n      {\r\n        //\r\n        _.map(childrenArray, (child, index) => {\r\n          if (isIconElement(child) && index === 0) {\r\n            return appendButtonIconClassname(child, prefixClassname(\"button__icon--right\"))\r\n          }\r\n          if (isIconElement(child) && index === lastIndex) {\r\n            return appendButtonIconClassname(child, prefixClassname(\"button__icon--left\"))\r\n          }\r\n          return child\r\n        })\r\n      }\r\n    </ButtonContent>\r\n  )\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends Omit<TaroButtonProps, \"size\" | \"formType\" | \"type\" | \"loading\" | \"plain\"> {\r\n  variant?: ButtonVariant\r\n  shape?: ButtonShape\r\n  size?: ButtonSize\r\n  color?: ButtonColor\r\n  formType?: ButtonFormType\r\n  loading?: boolean | LoadingProps | ReactElement\r\n  block?: boolean\r\n  hairline?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    variant = \"contained\",\r\n    shape,\r\n    size = \"medium\",\r\n    color = \"default\",\r\n    formType = \"button\",\r\n    block,\r\n    hairline,\r\n    disabled,\r\n    loading: loadingProp,\r\n    icon,\r\n    children: childrenProp,\r\n    onClick,\r\n    ...restProps\r\n  } = props\r\n\r\n  const loading = useButtonLoading(loadingProp)\r\n  const children = useButtonChildren({ children: childrenProp, loading, icon })\r\n\r\n  const { onClick: onCtxClick } = useContext(ButtonContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"button\"),\r\n        {\r\n          // Set variant style\r\n          [prefixClassname(\"button--text\")]: variant === \"text\",\r\n          [prefixClassname(\"button--contained\")]: variant === \"contained\",\r\n          [prefixClassname(\"button--outlined\")]: variant === \"outlined\",\r\n          // Set color style\r\n          [prefixClassname(`button--${color}`)]: color,\r\n          // Set shape style\r\n          [prefixClassname(\"button--round\")]: shape === \"round\",\r\n          [prefixClassname(\"button--square\")]: shape === \"square\",\r\n          // Set size style\r\n          [prefixClassname(\"button--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"button--small\")]: size === \"small\",\r\n          [prefixClassname(\"button--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"button--large\")]: size === \"large\",\r\n          // Set hairline style\r\n          [prefixClassname(\"button--hairline\")]: hairline,\r\n          [prefixClassname(\"hairline--surround\")]: hairline,\r\n          [prefixClassname(\"button--disabled\")]: disabled,\r\n          [prefixClassname(\"button--loading\")]: loading,\r\n          [prefixClassname(\"button--block\")]: block,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={(e) => {\r\n        if (!disabled && !loading) {\r\n          onClick?.(e)\r\n          onCtxClick?.(e, props)\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n      <ButtonBase\r\n        className={prefixClassname(\"button__button\")}\r\n        formType={formType === \"submit\" ? \"submit\" : formType === \"reset\" ? \"reset\" : undefined}\r\n        disabled={disabled || !!loading}\r\n        loading={false}\r\n        {...restProps}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function createButton(children: ReactNode | ButtonProps, props?: ButtonProps) {\r\n  if (_.isPlainObject(children)) {\r\n    return <Button {...(children as ButtonProps)} {...props} />\r\n  }\r\n  return <Button children={children} {...props} />\r\n}\r\n","import { FunctionComponent } from \"react\"\r\nimport ButtonComponent, { ButtonProps } from \"./button\"\r\nimport ButtonContent from \"./button-content\"\r\n\r\nexport * from \"./button.shared\"\r\nexport { createButton } from \"./button\"\r\nexport type { ButtonProps } from \"./button\"\r\nexport { default as ButtonContext } from \"./button.context\"\r\n\r\ninterface ButtonInterface extends FunctionComponent<ButtonProps> {\r\n  Content: typeof ButtonContent\r\n}\r\n\r\nconst Button = ButtonComponent as ButtonInterface\r\n\r\nButton.Content = ButtonContent\r\n\r\nexport default Button\r\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../../button-base/style\"\r\n\r\nimport \"../index.scss\"\r\n","import { Button, ButtonProps } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface ButtonBaseProps extends ButtonProps {}\r\n\r\nfunction ButtonBase(props: ButtonBaseProps) {\r\n  const { className, ...restProps } = props\r\n  return <Button className={classNames(prefixClassname(\"button-base\"), className)} {...restProps} />\r\n}\r\n\r\nexport default ButtonBase\r\n","import \"../index.scss\"\r\n","import { createContext } from \"react\"\r\nimport { StepsDirection } from \"./steps.shared\"\r\n\r\ninterface StepsContextValue {\r\n  value?: number\r\n  direction?: StepsDirection\r\n  alternativeLabel?: boolean\r\n}\r\n\r\nconst StepsContext = createContext<StepsContextValue>({})\r\nexport default StepsContext\r\n","import { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { HAIRLINE_BORDER } from \"../styles/hairline\"\r\nimport StepsContext from \"./steps.context\"\r\n\r\ninterface StepProps extends ViewProps {\r\n  className?: string\r\n  index?: number\r\n  active?: boolean\r\n  completed?: boolean\r\n  // error?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  label?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Step(props: StepProps) {\r\n  const {\r\n    className,\r\n    index = -1,\r\n    active: activeProp = false,\r\n    completed: completedProp = false,\r\n    icon,\r\n    label,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const { value = -1, direction, alternativeLabel } = useContext(StepsContext)\r\n  const active = useMemo(() => activeProp || index === value, [activeProp, index, value])\r\n  const completed = useMemo(() => completedProp || index < value, [completedProp, index, value])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        HAIRLINE_BORDER,\r\n        prefixClassname(\"step\"),\r\n        prefixClassname(`step--${direction}`),\r\n        {\r\n          [prefixClassname(\"step--alternative-label\")]:\r\n            alternativeLabel && direction === \"horizontal\",\r\n          [prefixClassname(\"step--active\")]: active,\r\n          [prefixClassname(\"step--completed\")]: completed,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      <View className={classNames(prefixClassname(\"step__label\"))} children={children ?? label} />\r\n      <View className={prefixClassname(\"step__circle-container\")}>\r\n        {icon ? (\r\n          cloneIconElement(icon, { className: prefixClassname(\"step__icon\") })\r\n        ) : (\r\n          <View className={prefixClassname(\"step__circle\")} />\r\n        )}\r\n      </View>\r\n      <View className={classNames(prefixClassname(\"step__line\"))} />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Step\r\n","import { useUncontrolled } from \"@taroify/hooks\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n} from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport Step from \"./step\"\r\nimport StepsContext from \"./steps.context\"\r\nimport { StepsDirection } from \"./steps.shared\"\r\n\r\ninterface StepsChildren {\r\n  steps: ReactNode[]\r\n}\r\n\r\nfunction useStepsChildren(children: ReactNode): StepsChildren {\r\n  const __children__: StepsChildren = {\r\n    steps: [],\r\n  }\r\n  let index = 0\r\n  Children.forEach(children, (child: ReactNode, i) => {\r\n    // Skip is not Item of Swiper\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n    const element = child as ReactElement\r\n    const elementType = element.type\r\n    if (elementType === Step) {\r\n      const { key } = element\r\n      __children__.steps.push(\r\n        cloneElement(child, {\r\n          ...element.props,\r\n          key: key ?? i,\r\n          index: index++,\r\n        }),\r\n      )\r\n    }\r\n  })\r\n\r\n  return __children__\r\n}\r\n\r\nexport interface StepsProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  defaultValue?: number\r\n  value?: number\r\n  direction?: StepsDirection\r\n  alternativeLabel?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Steps(props: StepsProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    direction = \"horizontal\",\r\n    alternativeLabel = false,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value } = useUncontrolled({ value: valueProp, defaultValue })\r\n\r\n  const { steps } = useStepsChildren(childrenProp)\r\n\r\n  return (\r\n    <StepsContext.Provider\r\n      value={{\r\n        value,\r\n        direction,\r\n        alternativeLabel,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(\r\n          prefixClassname(\"steps\"),\r\n          {\r\n            [prefixClassname(\"steps--horizontal\")]: direction === \"horizontal\",\r\n            [prefixClassname(\"steps--vertical\")]: direction === \"vertical\",\r\n          },\r\n          className,\r\n        )}\r\n        {...restProps}\r\n      >\r\n        <View className={prefixClassname(\"steps__items\")} children={steps} />\r\n      </View>\r\n    </StepsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Steps\r\n","import Step from \"./step\"\nimport StepsComponent, { StepsProps } from \"./steps\"\n\ninterface StepsInterface {\n  (props: StepsProps): JSX.Element\n\n  Step: typeof Step\n}\n\nconst Steps = StepsComponent as StepsInterface\n\nSteps.Step = Step\n\nexport default Steps\n","import { Button, Steps } from \"@taroify/core\"\r\nimport { ArrowRight } from \"@taroify/icons\"\r\nimport { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\ninterface ActiveStepsProps {\r\n  activeStep: number\r\n}\r\n\r\nfunction BasicSteps(props: ActiveStepsProps) {\r\n  return (\r\n    <Block title=\"基础用法\">\r\n      <Steps value={props.activeStep}>\r\n        <Steps.Step>买家下单</Steps.Step>\r\n        <Steps.Step>商家接单</Steps.Step>\r\n        <Steps.Step>买家提货</Steps.Step>\r\n        <Steps.Step>交易完成</Steps.Step>\r\n      </Steps>\r\n    </Block>\r\n  )\r\n}\r\n\r\nfunction AlternativeLabelSteps(props: ActiveStepsProps) {\r\n  return (\r\n    <Block title=\"下方标签\">\r\n      <Steps value={props.activeStep} alternativeLabel>\r\n        <Steps.Step>买家下单</Steps.Step>\r\n        <Steps.Step>商家接单</Steps.Step>\r\n        <Steps.Step>买家提货</Steps.Step>\r\n        <Steps.Step>交易完成</Steps.Step>\r\n      </Steps>\r\n    </Block>\r\n  )\r\n}\r\n\r\nfunction StepsWithCustomStyle(props: ActiveStepsProps) {\r\n  return (\r\n    <Block title=\"自定义样式\">\r\n      <Steps className=\"custom-color\" value={props.activeStep}>\r\n        <Steps.Step icon={<ArrowRight />}>买家下单</Steps.Step>\r\n        <Steps.Step icon={<ArrowRight />}>商家接单</Steps.Step>\r\n        <Steps.Step icon={<ArrowRight />}>买家提货</Steps.Step>\r\n        <Steps.Step icon={<ArrowRight />}>交易完成</Steps.Step>\r\n      </Steps>\r\n    </Block>\r\n  )\r\n}\r\n\r\nfunction VerticalSteps(props: ActiveStepsProps) {\r\n  return (\r\n    <Block title=\"竖向步骤条\">\r\n      <Steps value={props.activeStep} direction=\"vertical\">\r\n        <Steps.Step>\r\n          <View>【城市】物流状态2</View>\r\n          <View>2016-07-12 12:40</View>\r\n        </Steps.Step>\r\n        <Steps.Step>\r\n          <View>【城市】物流状态1</View>\r\n          <View>2016-07-11 10:00</View>\r\n        </Steps.Step>\r\n        <Steps.Step>\r\n          <View>【城市】物流状态</View>\r\n          <View>2016-07-10 12:00</View>\r\n        </Steps.Step>\r\n        <Steps.Step>\r\n          <View>快件已发货</View>\r\n          <View>2016-07-10 09:30</View>\r\n        </Steps.Step>\r\n      </Steps>\r\n    </Block>\r\n  )\r\n}\r\n\r\nexport default function StepsDemo() {\r\n  const [activeStep, setActiveStep] = useState(0)\r\n\r\n  return (\r\n    <Page title=\"Steps 步骤条\" className=\"steps-demo\">\r\n      <BasicSteps activeStep={activeStep} />\r\n      <Block className=\"steps-demo__next-block\">\r\n        <Button onClick={() => setActiveStep(activeStep + 1 > 3 ? 0 : activeStep + 1)}>\r\n          下一步\r\n        </Button>\r\n      </Block>\r\n      <AlternativeLabelSteps activeStep={activeStep} />\r\n      <StepsWithCustomStyle activeStep={activeStep} />\r\n      <VerticalSteps activeStep={activeStep} />\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}