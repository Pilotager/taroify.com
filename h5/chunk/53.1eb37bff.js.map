{"version":3,"sources":["webpack:///../../../../packages/icons/src/utils/unit.ts","webpack:///../../../../packages/icons/src/van/VanIcon.tsx","webpack:///../../../../packages/core/src/styles/index.ts","webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/utils/base.ts","webpack:///../../../../packages/core/src/hooks/use-mounted.ts","webpack:///../../../../packages/core/src/hooks/use-rendered-effect.tsx","webpack:///../../../../packages/core/src/utils/state.ts","webpack:///../../../../packages/core/src/styles/prefix.ts","webpack:///./src/styles/prefix.ts","webpack:///../../../../packages/core/src/hooks/use-placeholder.tsx","webpack:///../../../../packages/core/src/hooks/use-height.ts","webpack:///../../../../packages/core/src/hooks/use-timeout.ts","webpack:///../../../../packages/core/src/hooks/use-unique-id.ts","webpack:///../../../../packages/core/src/hooks/use-update.ts","webpack:///../../../../packages/core/src/hooks/use-window-resize.tsx","webpack:///../../../../packages/icons/src/shared.ts","webpack:///../../../../packages/icons/src/ArrowLeft.tsx","webpack:///../../../../packages/core/src/utils/dom/rect.ts","webpack:///../../../../packages/core/src/utils/dom/element.ts","webpack:///./src/components/block.tsx","webpack:///./src/components/target.tsx","webpack:///./src/components/page.tsx","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///../../../../packages/core/src/button/button.context.ts","webpack:///../../../../packages/core/src/button/style/index.ts","webpack:///../../../../packages/core/src/button-base/style/index.ts","webpack:///../../../../packages/core/src/button-base/button-base.tsx","webpack:///../../../../packages/core/src/button/button.tsx","webpack:///../../../../packages/core/src/utils/raf.ts","webpack:///../../../../packages/core/src/space/style/index.ts","webpack:///../../../../packages/core/src/space/space.tsx","webpack:///../../../../packages/core/src/space/index.ts","webpack:///../../../../packages/core/src/circle/circle.hooks.ts","webpack:///../../../../packages/core/src/circle/circle-canvas.h5.tsx","webpack:///../../../../packages/core/src/circle/circle.shared.ts","webpack:///../../../../packages/core/src/circle/circle.tsx","webpack:///./src/pages/display/circle/index.tsx"],"names":["value","convertPx","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertVw","convertVh","unitToPx","size","color","presetColor","ICON_PRESET_COLORS","presetSize","ICON_PRESET_SIZES","className","classNames","style","addUnitPx","name","VanIconWrapper","width","height","inBrowser","inWechat","process","useRenderedEffect","cb","effect","destructorRef","useRef","useEffect","nextTick","destructor","previousRef","usePreviousRef","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","defaultValue","setValue","emitChange","getValue","demoPrefixClassname","component","useState","useMounted","useHeight","children","useTimeout","timerRef","cbRef","msRef","argsRef","stop","clearTimeout","start","args","setTimeout","callback","ms","restart","updateReducer","num","useReducer","useWindowResize","onWindowResize","offWindowResize","ICON_TYPE","Symbol","ArrowLeft","createVanIconComponent","top","left","right","bottom","element","elementUnref","isWindow","Promise","makeRect","resolve","createNodesRef","isRootElement","rects","oneElement","createSelectorQuery","val","elementOrRef","node","ancestor","Block","props","variant","title","TargetType","Target","type","Page","onClick","navigateBack","SpinIcon","key","prefixClassname","LoadingSpinner","rootStyle","LoadingCircular","direction","ButtonContext","createContext","ButtonBase","formType","loading","useButtonLoading","onCtxClick","useContext","shape","block","e","disabled","React","Object","requestAnimationFrame","rafIds","raf","SpaceItem","SpaceDirection","SpaceSize","Vertical","item","currentRateRef","useToRef","startTime","Date","startRate","endRate","format","rate","Math","duration","cancelRaf","rafId","animate","progress","setPercent","speed","uid","CircleCanvasH5","percent","percentProp","fill","clockwise","strokeWidth","useAnimatePercent","id","viewBoxSize","path","getPath","sweepFlag","renderHover","offset","stroke","strokeLinecap","strokeDasharray","d","renderLayer","layerColor","renderGradient","Stops","stopColor","x1","y1","x2","y2","viewBox","CircleStrokeLinecap","getCircleSizeStyle","originSize","Circle","BasicCircle","currentPercent","setCurrentPercent","toFixed","CustomCircle","CircleDemo","prevPercent","min","max"],"mappings":"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","file":"chunk/53.1eb37bff.js","sourcesContent":["export function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport {\r\n  ICON_PRESET_COLORS,\r\n  ICON_PRESET_SIZES,\r\n  ICON_TYPE,\r\n  IconColor,\r\n  IconProps,\r\n  IconSize,\r\n} from \"../shared\"\r\nimport { addUnitPx } from \"../utils/unit\"\r\n\r\ninterface VanIconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  name?: string\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function VanIcon(props: VanIconProps) {\r\n  const { className, style, name, size = \"inherit\", color = \"inherit\", ...restProps } = props\r\n  const presetColor = ICON_PRESET_COLORS.includes(color as IconColor)\r\n  const presetSize = ICON_PRESET_SIZES.includes(size as IconSize)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        \"van-icon\",\r\n        `van-icon-${name}`,\r\n        \"taroify-icon\",\r\n        {\r\n          [`taroify-icon--${color}`]: presetColor,\r\n          [`taroify-icon--${size}`]: presetSize,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        color: presetColor ? \"\" : color,\r\n        fontSize: presetSize ? \"\" : addUnitPx(size),\r\n        ...style,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport function createVanIconComponent(name: string) {\r\n  function VanIconWrapper(props: IconProps) {\r\n    return <VanIcon name={name} {...props} />\r\n  }\r\n\r\n  // @ts-ignore\r\n  VanIconWrapper[ICON_TYPE] = ICON_TYPE\r\n  return VanIconWrapper\r\n}\r\n","export { prefixClassname } from \"./prefix\"\n","import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","export function noop() {}\r\n\r\nexport const inBrowser = typeof document !== \"undefined\" && !!document.scripts\r\nexport const inWechat = process.env.TARO_ENV === \"weapp\"\r\nexport const inSwan = process.env.TARO_ENV === \"swan\"\r\nexport const inAlipay = process.env.TARO_ENV === \"alipay\"\r\nexport const inQQ = process.env.TARO_ENV === \"qq\"\r\nexport const inToutiao = process.env.TARO_ENV === \"tt\"\r\n","import useRenderedEffect from \"./use-rendered-effect\"\r\n\r\nexport default function useMounted(cb: (...args: any[]) => any) {\r\n  useRenderedEffect(cb, [])\r\n}\r\n","import { nextTick } from \"@tarojs/taro\"\nimport * as _ from \"lodash\"\nimport { DependencyList, EffectCallback, useEffect, useRef } from \"react\"\n\nfunction useRenderedEffect(effect: EffectCallback, deps?: DependencyList) {\n  const destructorRef = useRef<() => void>()\n\n  useEffect(\n    () => {\n      nextTick(() => {\n        const destructor = effect?.()\n        if (_.isFunction(destructor)) {\n          destructorRef.current = destructor\n        }\n      })\n\n      return destructorRef.current\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  )\n}\n\nexport default useRenderedEffect\n","import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  const stateRef = useRef(defaultValue ?? value ?? initialValue)\r\n\r\n  if (value !== undefined) {\r\n    stateRef.current = value\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(value)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ value: stateRef.current, getValue, setValue }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","const COMPONENT_PREFIX = \"taroify-\"\n\nexport function prefixClassname(component: string) {\n  return `${COMPONENT_PREFIX}${component}`\n}\n","const DEMO_PREFIX = \"taroify-demo-\"\n\nexport function demoPrefixClassname(component: string) {\n  return `${DEMO_PREFIX}${component}`\n}\n","import { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport useHeight from \"./use-height\"\r\n\r\ninterface UsePlaceholderOptions {\r\n  className?: string\r\n}\r\n\r\nexport default function usePlaceholder(contentRef: any, { className }: UsePlaceholderOptions) {\r\n  const height = useHeight(contentRef)\r\n\r\n  return ({\r\n    // @ts-ignore\r\n    children,\r\n  }) => (\r\n    <View\r\n      className={className}\r\n      style={{ height: height ? `${addUnitPx(height)}` : \"\" }}\r\n      children={children}\r\n    />\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport useMounted from \"./use-mounted\"\r\n\r\nexport default function useHeight(elementOrRef: any) {\r\n  const [height, setHeight] = useState<number>(0)\r\n  useMounted(() =>\r\n    getRect(elementOrRef)\r\n      .then(({ height }) => height)\r\n      .then(setHeight),\r\n  )\r\n  return height\r\n}\r\n","import { useCallback, useMemo, useRef } from \"react\"\r\n\r\ntype UseTimeoutCallback = (...args: any[]) => void\r\n\r\nfunction useTimeout() {\r\n  const timerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const cbRef = useRef<UseTimeoutCallback>()\r\n  const msRef = useRef<number>()\r\n  const argsRef = useRef<any[]>()\r\n\r\n  const stop = useCallback(() => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current)\r\n      timerRef.current = undefined\r\n    }\r\n  }, [])\r\n\r\n  const start = useCallback((callback: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n    if (timerRef.current) {\r\n      return\r\n    }\r\n    cbRef.current = callback\r\n    msRef.current = ms\r\n    argsRef.current = args\r\n    timerRef.current = setTimeout(callback, ms, args)\r\n  }, [])\r\n\r\n  const restart = useCallback(\r\n    (callback?: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n      stop()\r\n      if (callback) {\r\n        start(callback, ms, args)\r\n      } else if (cbRef.current) {\r\n        start(cbRef.current, msRef.current, argsRef.current)\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  return useMemo(\r\n    () => ({\r\n      restart,\r\n      start,\r\n      stop,\r\n    }),\r\n    [restart, start, stop],\r\n  )\r\n}\r\n\r\nexport default useTimeout\r\n","import * as _ from \"lodash\"\r\nimport { useRef } from \"react\"\r\n\r\nfunction useUniqueId() {\r\n  const uniqueIdRef = useRef(_.uniqueId(\"t_\"))\r\n  return uniqueIdRef.current\r\n}\r\n\r\nexport default useUniqueId\r\n","import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useUpdate\r\n","import { offWindowResize, onWindowResize } from \"@tarojs/taro\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Size {\r\n  /** 变化后的窗口高度，单位 px */\r\n  windowHeight: number\r\n  /** 变化后的窗口宽度，单位 px */\r\n  windowWidth: number\r\n}\r\n\r\ninterface CallbackResult {\r\n  size: Size\r\n}\r\n\r\ntype WindowResizeCallback = (result: CallbackResult) => void\r\n\r\nfunction useWindowResize(callback: WindowResizeCallback) {\r\n  useEffect(() => {\r\n    onWindowResize?.(callback)\r\n\r\n    return () =>\r\n      offWindowResize?.(\r\n        // @ts-ignore\r\n        callback,\r\n      )\r\n  }, [callback])\r\n}\r\n\r\nexport default useWindowResize\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\n\r\nexport const ICON_TYPE = Symbol(\"__iconType__\")\r\n\r\nexport type IconSize = \"inherit\" | \"mini\" | \"small\" | \"medium\" | \"large\"\r\n\r\nexport const ICON_PRESET_SIZES = [\"inherit\", \"mini\", \"small\", \"medium\", \"large\"]\r\n\r\nexport type IconColor =\r\n  | \"inherit\"\r\n  | \"default\"\r\n  | \"primary\"\r\n  | \"info\"\r\n  | \"success\"\r\n  | \"warning\"\r\n  | \"danger\"\r\n\r\nexport const ICON_PRESET_COLORS = [\r\n  \"inherit\",\r\n  \"default\",\r\n  \"primary\",\r\n  \"info\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n]\r\n\r\nexport interface IconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n","import { createVanIconComponent } from \"./van\"\r\n\r\nconst ArrowLeft = createVanIconComponent(\"arrow-left\")\r\nexport default ArrowLeft\r\n","import { createSelectorQuery } from \"@tarojs/taro\"\nimport { inBrowser } from \"../base\"\nimport { createNodesRef, elementUnref, isRootElement, isWindow } from \"./element\"\n\nexport interface Rect {\n  dataset: Record<string, any>\n  id: string\n  top: number\n  right: number\n  bottom: number\n  left: number\n  width: number\n  height: number\n}\n\nexport function makeRect(width: number, height: number) {\n  return {\n    top: 0,\n    left: 0,\n    right: width,\n    bottom: height,\n    width,\n    height,\n  } as Rect\n}\n\nexport function getRect(elementOrRef: any): Promise<Rect> {\n  const element = elementUnref(elementOrRef)\n  if (element) {\n    if (inBrowser) {\n      if (isWindow(element)) {\n        const width = element.innerWidth\n        const height = element.innerHeight\n        return Promise.resolve(makeRect(width, height))\n      }\n\n      return Promise.resolve(\n        (((element as unknown) as HTMLElement).getBoundingClientRect() as unknown) as Rect,\n      )\n    } else {\n      return new Promise<Rect>((resolve) => {\n        createNodesRef(element)\n          .boundingClientRect()\n          .exec(([rect]) => {\n            if (isRootElement(element)) {\n              const { width, height } = rect\n              resolve(makeRect(width, height))\n            } else {\n              resolve(rect)\n            }\n          })\n      })\n    }\n  }\n  return Promise.resolve(makeRect(0, 0))\n}\n\nexport function getRects(elementOrRef: any, selector: string): Promise<Rect[]> {\n  const element = elementUnref(elementOrRef)\n  if (element) {\n    if (inBrowser) {\n      const rects: Rect[] = []\n      ;((element as unknown) as HTMLElement)\n        .querySelectorAll(selector)\n        .forEach((oneElement) =>\n          rects.push((oneElement.getBoundingClientRect() as unknown) as Rect),\n        )\n      return Promise.resolve(rects)\n    } else {\n      return new Promise<Rect[]>((resolve) => {\n        createSelectorQuery()\n          .selectAll(\"#\" + element.uid + selector)\n          .boundingClientRect()\n          .exec(([rects]) => resolve((rects as unknown) as Rect[]))\n      })\n    }\n  }\n  return Promise.resolve([])\n}\n","import { TaroElement } from \"@tarojs/runtime\"\nimport { createSelectorQuery } from \"@tarojs/taro\"\nimport * as _ from \"lodash\"\nimport { inWechat } from \"../base\"\n\nexport const ELEMENT_NODE_TYPE = 1\n\nexport function isWindow(val: unknown): val is Window {\n  return val === window\n}\n\nexport function isBodyElement(val: unknown): boolean {\n  return val === document.body\n}\n\nexport function elementUnref(elementOrRef: any): TaroElement {\n  if (elementOrRef === undefined || elementOrRef === null) {\n    return elementOrRef\n  }\n  if (\"current\" in elementOrRef) {\n    return elementOrRef.current\n  }\n  return elementOrRef\n}\n\nexport function isRootElement(node?: TaroElement) {\n  return node?.nodeType === ELEMENT_NODE_TYPE && node?.tagName === \"ROOT\"\n}\n\nexport function matchSelector(aSelector?: string, bSelector?: string) {\n  return _.replace(aSelector as string, \"#\", \"\") === bSelector\n}\n\nexport function createNodesRef(element: TaroElement) {\n  if (isRootElement(element)) {\n    return createSelectorQuery().selectViewport()\n  }\n\n  // Fix nested in CustomWrapper is undefined\n  // See: https://github.com/mallfoundry/taroify/pull/143\n  if (inWechat) {\n    let ancestor = element\n    while (ancestor.parentNode && !isRootElement(ancestor.parentNode as TaroElement)) {\n      ancestor = ancestor.parentNode as TaroElement\n    }\n\n    if (ancestor && ancestor !== element) {\n      return createSelectorQuery().select(`#${ancestor.uid}>>>#${element.uid}`)\n    }\n  }\n\n  return createSelectorQuery().select(\"#\" + element.uid)\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import * as React from \"react\"\nimport { ReactNode } from \"react\"\n\n/* eslint-disable  no-shadow */\nexport enum TargetType {\n  /* eslint-enable  no-shadow */\n  H5 = \"h5\",\n}\n\ntype TargetTypeString = \"h5\"\n\ninterface TargetProps {\n  type?: TargetType | TargetTypeString\n  children?: ReactNode\n}\n\nexport default function Target(props: TargetProps) {\n  const { type, children } = props\n  return <>{type === process.env.TARO_ENV && children}</>\n}\n","import ArrowLeft from \"@taroify/icons/ArrowLeft\"\nimport { View } from \"@tarojs/components\"\nimport { navigateBack } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { ReactNode } from \"react\"\nimport { demoPrefixClassname } from \"../styles/prefix\"\nimport \"./page.scss\"\nimport Target from \"./target\"\n\ninterface PageProps {\n  className?: string\n  title?: string\n  children: ReactNode\n}\n\nexport default function Page(props: PageProps) {\n  const { className, title, children } = props\n\n  return (\n    <View className={classNames(demoPrefixClassname(\"page\"), className)}>\n      <Target type=\"h5\">\n        <View className={demoPrefixClassname(\"page__nav\")}>\n          <ArrowLeft\n            className={demoPrefixClassname(\"page__nav__back\")}\n            onClick={() => navigateBack()}\n          />\n          <View className={demoPrefixClassname(\"page__nav__title\")}>{title} </View>\n        </View>\n      </Target>\n      <View className={demoPrefixClassname(\"page__content\")}>{children}</View>\n    </View>\n  )\n}\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\nimport { ButtonProps } from \"./button\"\r\n\r\ninterface ButtonContextValue {\r\n  onClick?(event: ITouchEvent, props: ButtonProps): void\r\n}\r\n\r\nconst ButtonContext = createContext<ButtonContextValue>({})\r\n\r\nexport default ButtonContext\r\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../../button-base/style\"\r\n\r\nimport \"../index.scss\"\r\n","import \"../index.scss\"\r\n","import { Button, ButtonProps } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface ButtonBaseProps extends ButtonProps {}\r\n\r\nfunction ButtonBase(props: ButtonBaseProps) {\r\n  const { className, ...restProps } = props\r\n  return <Button className={classNames(prefixClassname(\"button-base\"), className)} {...restProps} />\r\n}\r\n\r\nexport default ButtonBase\r\n","import { ButtonProps as TaroButtonProps, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport ButtonBase from \"../button-base\"\r\nimport Loading, { LoadingProps } from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport ButtonContext from \"./button.context\"\r\nimport {\r\n  ButtonColor,\r\n  ButtonFormType,\r\n  ButtonShape,\r\n  ButtonSize,\r\n  ButtonVariant,\r\n} from \"./button.shared\"\r\n\r\nfunction useButtonLoading(loading?: boolean | LoadingProps): ReactNode {\r\n  return useMemo(() => {\r\n    if (_.isBoolean(loading) && loading) {\r\n      return <Loading className={prefixClassname(\"button__loading\")} />\r\n    } else if (_.isObjectLike(loading)) {\r\n      const { className, ...restProps } = loading as LoadingProps\r\n      return (\r\n        <Loading\r\n          className={classNames(prefixClassname(\"button__loading\"), className)}\r\n          {...restProps}\r\n        />\r\n      )\r\n    }\r\n    return loading\r\n  }, [loading])\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends Omit<TaroButtonProps, \"size\" | \"formType\" | \"type\" | \"loading\" | \"plain\"> {\r\n  variant?: ButtonVariant\r\n  shape?: ButtonShape\r\n  size?: ButtonSize\r\n  color?: ButtonColor\r\n  formType?: ButtonFormType\r\n  loading?: boolean | LoadingProps\r\n  block?: boolean\r\n  hairline?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    variant = \"contained\",\r\n    shape,\r\n    size = \"medium\",\r\n    color = \"default\",\r\n    formType = \"button\",\r\n    block,\r\n    hairline,\r\n    disabled,\r\n    loading: loadingProp,\r\n    icon,\r\n    children,\r\n    onClick,\r\n    ...restProps\r\n  } = props\r\n\r\n  const loading = useButtonLoading(loadingProp)\r\n\r\n  const { onClick: onCtxClick } = useContext(ButtonContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"button\"),\r\n        {\r\n          // Set variant style\r\n          [prefixClassname(\"button--text\")]: variant === \"text\",\r\n          [prefixClassname(\"button--contained\")]: variant === \"contained\",\r\n          [prefixClassname(\"button--outlined\")]: variant === \"outlined\",\r\n          // Set color style\r\n          [prefixClassname(`button--${color}`)]: color,\r\n          // Set shape style\r\n          [prefixClassname(\"button--round\")]: shape === \"round\",\r\n          [prefixClassname(\"button--square\")]: shape === \"square\",\r\n          // Set size style\r\n          [prefixClassname(\"button--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"button--small\")]: size === \"small\",\r\n          [prefixClassname(\"button--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"button--large\")]: size === \"large\",\r\n          // Set hairline style\r\n          [prefixClassname(\"button--hairline\")]: hairline,\r\n          [prefixClassname(\"hairline--surround\")]: hairline,\r\n          [prefixClassname(\"button--disabled\")]: disabled,\r\n          [prefixClassname(\"button--loading\")]: loading,\r\n          [prefixClassname(\"button--block\")]: block,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={(e) => {\r\n        if (!disabled && !loading) {\r\n          onClick?.(e)\r\n          onCtxClick?.(e, props)\r\n        }\r\n      }}\r\n    >\r\n      <View className={prefixClassname(\"button__content\")}>\r\n        {loading ?? icon}\r\n        {children && <View className={prefixClassname(\"button__text\")} children={children} />}\r\n      </View>\r\n      <ButtonBase\r\n        className={prefixClassname(\"button__button\")}\r\n        formType={formType === \"submit\" ? \"submit\" : formType === \"reset\" ? \"reset\" : undefined}\r\n        disabled={disabled}\r\n        loading={false}\r\n        {...restProps}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function createButton(children: ReactNode | ButtonProps, props?: ButtonProps) {\r\n  if (_.isPlainObject(children)) {\r\n    return <Button {...(children as ButtonProps)} {...props} />\r\n  }\r\n  return <Button children={children} {...props} />\r\n}\r\n","import * as _ from \"lodash\"\nimport * as requestAnimationFrame from \"raf\"\n\nexport function cancelRaf(rafId: number | number[]) {\n  if (_.isNumber(rafId)) {\n    requestAnimationFrame.cancel(rafId)\n  } else if (_.isArray(rafId)) {\n    _.forEach(rafId, cancelRaf)\n  }\n}\n\nexport function raf(cb: FrameRequestCallback) {\n  // @ts-ignore\n  return requestAnimationFrame.default(cb)\n}\n\nexport default raf\n\nexport function doubleRaf(cb: FrameRequestCallback): [number, number] {\n  const rafIds: [number, number] = [0, 0]\n  rafIds[1] = raf(() => {\n    rafIds[0] = raf(cb)\n  })\n  return rafIds\n}\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface SpaceItemProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction SpaceItem(props: SpaceItemProps) {\r\n  const { children } = props\r\n\r\n  return <View className={classNames(prefixClassname(\"space__item\"))}>{children}</View>\r\n}\r\n\r\nexport enum SpaceDirection {\r\n  Horizontal = \"horizontal\",\r\n  Vertical = \"vertical\",\r\n}\r\n\r\ntype SpaceDirectionString = \"horizontal\" | \"vertical\"\r\n\r\nexport enum SpaceSize {\r\n  Small = \"small\",\r\n  Medium = \"medium\",\r\n  Large = \"large\",\r\n}\r\n\r\ntype SpaceSizeString = \"small\" | \"medium\" | \"large\"\r\n\r\ninterface SpaceProps {\r\n  direction?: SpaceDirection | SpaceDirectionString\r\n  size?: SpaceSize | SpaceSizeString | number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Space(props: SpaceProps) {\r\n  const { direction = SpaceDirection.Horizontal, children } = props\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"space\"), {\r\n        [prefixClassname(`space--${direction}`)]:\r\n          direction === SpaceDirection.Horizontal || direction === SpaceDirection.Vertical,\r\n      })}\r\n    >\r\n      {React.Children.map(children, (item, index) => (\r\n        <SpaceItem key={index} children={item} />\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n","import Space from \"./space\"\n\nexport default Space\n","import * as _ from \"lodash\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { cancelRaf, raf } from \"../utils/raf\"\r\nimport { useToRef } from \"../utils/state\"\r\n\r\nfunction format(rate: number) {\r\n  return Math.min(Math.max(rate, 0), 100)\r\n}\r\n\r\nexport function useAnimatePercent(percentProp: number, speed: number) {\r\n  const [percent, setPercent] = useState(percentProp)\r\n  const currentRateRef = useToRef(percent)\r\n  useEffect(() => {\r\n    let rafId: number | undefined\r\n    const startTime = Date.now()\r\n    const startRate = currentRateRef.current\r\n    const endRate = format(percentProp)\r\n    const duration = Math.abs(((startRate - endRate) * 1000) / speed)\r\n\r\n    const animate = () => {\r\n      const now = Date.now()\r\n      let progress = (now - startTime) / duration\r\n      progress = Math.min(_.isNaN(progress) ? 1 : progress, 1)\r\n\r\n      const rate = progress * (endRate - startRate) + startRate\r\n      setPercent(rate)\r\n\r\n      if (endRate > startRate ? rate < endRate : rate > endRate) {\r\n        rafId = raf(animate)\r\n      }\r\n    }\r\n\r\n    if (speed) {\r\n      if (rafId) {\r\n        cancelRaf(rafId)\r\n      }\r\n      rafId = raf(animate)\r\n    } else {\r\n      setPercent(endRate)\r\n    }\r\n  }, [currentRateRef, speed, percentProp])\r\n\r\n  return percent\r\n}\r\n","import * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, useCallback, useEffect, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useAnimatePercent } from \"./circle.hooks\"\r\nimport { CircleProps } from \"./circle.shared\"\r\n\r\nlet uid = 0\r\n\r\nfunction getPath(clockwise: boolean, viewBoxSize: number) {\r\n  const sweepFlag = clockwise ? 1 : 0\r\n  return `M ${viewBoxSize / 2} ${\r\n    viewBoxSize / 2\r\n  } m 0, -500 a 500, 500 0 1, ${sweepFlag} 0, 1000 a 500, 500 0 1, ${sweepFlag} 0, -1000`\r\n}\r\n\r\nfunction CircleCanvasH5(props: CircleProps) {\r\n  const {\r\n    percent: percentProp = 0,\r\n    speed = 0,\r\n    color,\r\n    layerColor,\r\n    fill = \"none\",\r\n    clockwise = true,\r\n    strokeWidth = 0,\r\n    strokeLinecap,\r\n    onChange,\r\n  } = props\r\n\r\n  const percent = useAnimatePercent(percentProp, speed)\r\n\r\n  useEffect(() => onChange?.(percent), [onChange, percent])\r\n\r\n  const id = useMemo(() => prefixClassname(`circle-${uid++}`), [])\r\n\r\n  const viewBoxSize = useMemo(() => +strokeWidth + 1000, [strokeWidth])\r\n\r\n  const path = useMemo(() => getPath(clockwise, viewBoxSize), [clockwise, viewBoxSize])\r\n\r\n  const renderHover = useCallback(() => {\r\n    const PERIMETER = 3140\r\n    const offset = (PERIMETER * percent) / 100\r\n    const stroke = _.isObject(color) ? `url(#${id})` : color\r\n    const style: CSSProperties = {\r\n      stroke,\r\n      strokeWidth: `${+strokeWidth + 1}px`,\r\n      // @ts-ignore\r\n      strokeLinecap: strokeLinecap,\r\n      strokeDasharray: `${offset}px ${PERIMETER}px`,\r\n    }\r\n\r\n    return (\r\n      <path d={path} style={style} className={prefixClassname(\"circle__hover\")} stroke={stroke} />\r\n    )\r\n  }, [percent, color, id, strokeWidth, strokeLinecap, path])\r\n\r\n  const renderLayer = useCallback(() => {\r\n    const style = {\r\n      fill: fill,\r\n      stroke: layerColor,\r\n      strokeWidth: `${strokeWidth}px`,\r\n    }\r\n\r\n    return <path className={prefixClassname(\"circle__layer\")} style={style} d={path} />\r\n  }, [fill, layerColor, path, strokeWidth])\r\n\r\n  const renderGradient = useCallback(() => {\r\n    if (!_.isObject(color)) {\r\n      return\r\n    }\r\n\r\n    const Stops = Object.keys(color)\r\n      .sort((a, b) => parseFloat(a) - parseFloat(b))\r\n      .map((key, index) => (\r\n        <stop\r\n          key={index}\r\n          offset={key}\r\n          stopColor={\r\n            // @ts-ignore\r\n            color[key]\r\n          }\r\n        />\r\n      ))\r\n\r\n    return (\r\n      <defs>\r\n        <linearGradient id={id} x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"0%\">\r\n          {Stops}\r\n        </linearGradient>\r\n      </defs>\r\n    )\r\n  }, [color, id])\r\n\r\n  return (\r\n    <svg viewBox={`0 0 ${viewBoxSize} ${viewBoxSize}`}>\r\n      {renderGradient()}\r\n      {renderLayer()}\r\n      {renderHover()}\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default CircleCanvasH5\r\n","import { ReactNode } from \"react\"\n\nexport enum CircleStrokeLinecap {\n  Round = \"round\",\n  Square = \"square\",\n  Butt = \"butt\",\n}\n\nexport interface CircleProps {\n  percent?: number\n  color?: string | object\n  layerColor?: string\n  fill?: string\n  size?: number\n  speed?: number\n  strokeWidth?: number\n  strokeLinecap?: CircleStrokeLinecap\n  clockwise?: boolean\n  children?: ReactNode\n\n  onChange?(value: number): void\n}\n","import { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport CircleCanvas from \"./circle-canvas\"\r\nimport { CircleProps, CircleStrokeLinecap } from \"./circle.shared\"\r\n\r\nfunction getCircleSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (originSize !== undefined && originSize !== null) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nfunction Circle(props: CircleProps) {\r\n  const {\r\n    speed = 100,\r\n    clockwise = true,\r\n    strokeWidth = 40,\r\n    strokeLinecap = CircleStrokeLinecap.Round,\r\n    size,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  return (\r\n    <View className={prefixClassname(\"circle\")} style={getCircleSizeStyle(size)}>\r\n      <CircleCanvas\r\n        speed={speed}\r\n        clockwise={clockwise}\r\n        strokeWidth={strokeWidth}\r\n        strokeLinecap={strokeLinecap}\r\n        size={size}\r\n        {...restProps}\r\n      />\r\n      {children && <View className={prefixClassname(\"circle__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Circle\r\n","import { Button, Circle, Space } from \"@taroify/core\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\ninterface PercentProps {\n  percent?: number\n}\n\nfunction BasicCircle({ percent }: PercentProps) {\n  const [currentPercent, setCurrentPercent] = useState(0)\n\n  return (\n    <Circle percent={percent} onChange={setCurrentPercent}>\n      {currentPercent.toFixed(0)}%\n    </Circle>\n  )\n}\n\nfunction CustomCircle({ percent }: PercentProps) {\n  return (\n    <Space>\n      <Circle percent={percent} strokeWidth={60}>\n        宽度定制\n      </Circle>\n      <Circle percent={percent} color=\"#ee0a24\" layerColor=\"#ebedf0\">\n        颜色定制\n      </Circle>\n      <Circle\n        percent={percent}\n        color={{\n          \"0%\": \"#3fecff\",\n          \"100%\": \"#6149f6\",\n        }}\n      >\n        渐变色\n      </Circle>\n      <Circle percent={percent} clockwise={false} color=\"#07c160\">\n        逆时针方向\n      </Circle>\n      <Circle percent={percent} size={120} color=\"#7232dd\">\n        大小定制\n      </Circle>\n    </Space>\n  )\n}\n\nexport default function CircleDemo() {\n  const [percent, setPercent] = useState(70)\n\n  return (\n    <Page title=\"Circle 环形进度条\" className=\"circle-demo\">\n      <Block title=\"基础用法\">\n        <BasicCircle percent={percent} />\n      </Block>\n      <Block title=\"样式定制\">\n        <CustomCircle percent={percent} />\n      </Block>\n      <Block>\n        <Space>\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => setPercent((prevPercent) => Math.min(prevPercent + 20, 100))}\n          >\n            增加\n          </Button>\n          <Button\n            color=\"danger\"\n            size=\"small\"\n            onClick={() => setPercent((prevPercent) => Math.max(prevPercent - 20, 0))}\n          >\n            减少\n          </Button>\n        </Space>\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}