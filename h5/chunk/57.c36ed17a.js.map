{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/state.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isNumber.js","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isString.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isUndefined.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_toKey.js","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_isKey.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toNumber.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/hasIn.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_castPath.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/range.js","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_isIterateeCall.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isEqual.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_createRange.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseRange.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toFinite.js","webpack:///../../../../packages/core/src/cell/cell-group.context.ts","webpack:///../../../../packages/core/src/cell/cell-base.tsx","webpack:///../../../../packages/core/src/cell/cell-brief.tsx","webpack:///../../../../packages/core/src/cell/cell-title.tsx","webpack:///../../../../packages/core/src/cell/cell-value.tsx","webpack:///../../../../packages/core/src/cell/cell.tsx","webpack:///../../../../packages/core/src/cell/cell-group.tsx","webpack:///../../../../packages/core/src/cell/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_stringToPath.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_memoizeCapped.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/memoize.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseHasIn.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_hasPath.js","webpack:///../../../../packages/core/src/cell/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseTrim.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_trimmedEndIndex.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/replace.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/uniqueId.js","webpack:///../../../../packages/core/src/switch/switch.tsx","webpack:///../../../../packages/core/src/switch/style/index.ts","webpack:///./src/pages/form/switch/index.tsx"],"names":["previousRef","useRef","useEffect","usePreviousRef","cb","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","defaultValue","value","setValue","emitChange","getValue","baseGetTag","require","isObjectLike","module","exports","isNumber","isValidElement","element","isIconElement","cloneElement","node","className","oldProps","props","newProps","classNames","isArray","isString","isUndefined","undefined","isSymbol","toKey","result","Block","variant","title","children","demoPrefixClassname","SpinIcon","key","prefixClassname","LoadingSpinner","size","rootStyle","width","addUnitPx","height","style","LoadingCircular","type","direction","reIsDeepProp","reIsPlainProp","isKey","test","Object","baseTrim","isObject","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","slice","baseHasIn","hasPath","hasIn","path","stringToPath","toString","castPath","range","createRange","eq","isArrayLike","isIndex","isIterateeCall","length","baseIsEqual","isEqual","baseRange","toFinite","fromRight","start","end","step","nativeCeil","Math","ceil","nativeMax","max","Array","createContext","CellBase","clickable","clickableProp","required","bordered","useContext","align","icon","cloneIconElement","rightIcon","CellBrief","CellTitle","CellValue","alone","inset","CellGroupContext","Cell","brief","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","push","replace","match","number","quote","subString","memoize","func","cache","clear","MapCache","resolver","TypeError","memoized","args","arguments","apply","this","has","get","set","Cache","isArguments","isLength","hasFunc","trimmedEndIndex","reTrimStart","reWhitespace","charAt","idCounter","uniqueId","prefix","id","Switch","checked","loading","disabled","onClick","useValue","onChangeProp","fontSize","BasicSwitch","DisabledSwitch","LoadingSwitch","SwitchList","useState","setChecked","SwitchDemo","defaultChecked"],"mappings":"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","file":"chunk/57.c36ed17a.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  const stateRef = useRef(defaultValue ?? value ?? initialValue)\r\n\r\n  if (value !== undefined) {\r\n    stateRef.current = value\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(value)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ value: stateRef.current, getValue, setValue }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","import { createContext } from \"react\"\r\n\r\ninterface CellGroupContextValue {\r\n  clickable?: boolean\r\n}\r\n\r\nconst CellGroupContext = createContext<CellGroupContextValue>({})\r\n\r\nexport default CellGroupContext\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellBaseProps extends ViewProps {\r\n  bordered?: boolean\r\n  required?: boolean\r\n  clickable?: boolean\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellBase(props: CellBaseProps) {\r\n  const {\r\n    className,\r\n    size = \"medium\",\r\n    align,\r\n    clickable: clickableProp = false,\r\n    required = false,\r\n    bordered = true,\r\n    icon,\r\n    rightIcon,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { clickable } = useContext(CellGroupContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell\"),\r\n        {\r\n          [prefixClassname(\"cell--start\")]: align === \"start\",\r\n          [prefixClassname(\"cell--center\")]: align === \"center\",\r\n          [prefixClassname(\"cell--end\")]: align === \"end\",\r\n          [prefixClassname(\"cell--large\")]: size === \"large\",\r\n          [prefixClassname(\"cell--clickable\")]: clickableProp || clickable,\r\n          [prefixClassname(\"cell--required\")]: required,\r\n          [prefixClassname(\"cell--borderless\")]: !bordered,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon && isIconElement(icon)\r\n        ? cloneIconElement(icon, { className: prefixClassname(\"cell__icon\") })\r\n        : icon}\r\n      {children}\r\n      {rightIcon && isIconElement(rightIcon)\r\n        ? cloneIconElement(rightIcon, { className: prefixClassname(\"cell__right-icon\") })\r\n        : rightIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default CellBase\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellBriefProps extends ViewProps {\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellBrief(props: CellBriefProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__brief\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellBrief\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellTitleProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellTitle(props: CellTitleProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__title\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellTitle\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellValueProps extends ViewProps {\r\n  alone?: boolean\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellValue(props: CellValueProps) {\r\n  const { className, alone, ...restProps } = props\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell__value\"),\r\n        {\r\n          [prefixClassname(\"cell__value--alone\")]: alone,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CellValue\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport CellBase from \"./cell-base\"\r\nimport CellBrief from \"./cell-brief\"\r\nimport CellTitle from \"./cell-title\"\r\nimport CellValue from \"./cell-value\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellProps extends ViewProps {\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Cell(props: CellProps) {\r\n  const { title, brief, children, ...restProps } = props\r\n  return (\r\n    <CellBase {...restProps}>\r\n      {title && (\r\n        <CellTitle>\r\n          {title}\r\n          {brief && <CellBrief children={brief} />}\r\n        </CellTitle>\r\n      )}\r\n      <CellValue alone={!title} children={children} />\r\n    </CellBase>\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\n\r\ninterface CellGroupProps extends ViewProps {\r\n  title?: ReactNode\r\n  clickable?: boolean\r\n  inset?: boolean\r\n  bordered?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nexport function CellGroup(props: CellGroupProps) {\r\n  const { title, clickable = false, inset = false, bordered = true, children, ...restProps } = props\r\n  return (\r\n    <CellGroupContext.Provider\r\n      value={{\r\n        clickable,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"cell-group\"), {\r\n          [prefixClassname(\"cell-group--inset\")]: inset,\r\n        })}\r\n        {...restProps}\r\n      >\r\n        {title && (\r\n          <View\r\n            className={classNames(prefixClassname(\"cell-group__title\"), {\r\n              [prefixClassname(\"cell-group__title--inset\")]: inset,\r\n            })}\r\n            children={title}\r\n          />\r\n        )}\r\n        <View\r\n          className={classNames(prefixClassname(\"cell-group\"), {\r\n            [prefixClassname(\"hairline--top-bottom\")]: bordered,\r\n          })}\r\n          children={children}\r\n        />\r\n      </View>\r\n    </CellGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CellGroup\r\n","import CellElement, { CellProps } from \"./cell\"\r\nimport CellGroup from \"./cell-group\"\r\n\r\nexport type { CellAlign, CellSize } from \"./cell.shared\"\r\nexport { default as CellBase } from \"./cell-base\"\r\nexport { default as CellTitle } from \"./cell-title\"\r\nexport { default as CellValue } from \"./cell-value\"\r\nexport type { CellProps } from \"./cell\"\r\n\r\ninterface CellInterface {\r\n  (props: CellProps): JSX.Element\r\n\r\n  Group: typeof CellGroup\r\n}\r\n\r\nconst Cell = CellElement as CellInterface\r\nCell.Group = CellGroup\r\n\r\nexport default Cell\r\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var toString = require('./toString');\n\n/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */\nfunction replace() {\n  var args = arguments,\n      string = toString(args[0]);\n\n  return args.length < 3 ? string : string.replace(args[1], args[2]);\n}\n\nmodule.exports = replace;\n","var toString = require('./toString');\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;\n","import { ITouchEvent, View } from \"@tarojs/components\"\nimport { ViewProps } from \"@tarojs/components/types/View\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { CSSProperties } from \"react\"\nimport Loading from \"../loading\"\nimport { prefixClassname } from \"../styles\"\nimport { addUnitPx } from \"../utils/format/unit\"\nimport { useValue } from \"../utils/state\"\n\nexport interface SwitchProps extends ViewProps {\n  style?: CSSProperties\n  defaultChecked?: boolean\n  checked?: boolean\n  loading?: boolean\n  disabled?: boolean\n  size?: number | string\n\n  onChange?(checked: boolean): void\n}\n\nfunction Switch(props: SwitchProps) {\n  const {\n    className,\n    style,\n    defaultChecked,\n    checked: checkedProp,\n    loading = false,\n    disabled = false,\n    size,\n    onChange: onChangeProp,\n    onClick,\n    ...restProps\n  } = props\n\n  const { value: checked = false, setValue } = useValue({\n    value: checkedProp,\n    defaultValue: defaultChecked,\n    onChange: onChangeProp,\n  })\n\n  function handleClick(event: ITouchEvent) {\n    onClick?.(event)\n    if (disabled || loading) {\n      return\n    }\n    setValue(!checked)\n  }\n\n  return (\n    <View\n      className={classNames(\n        prefixClassname(\"switch\"),\n        {\n          [prefixClassname(\"switch--checked\")]: checked,\n          [prefixClassname(\"switch--loading\")]: loading,\n          [prefixClassname(\"switch--disabled\")]: disabled,\n        },\n        className,\n      )}\n      style={{\n        fontSize: addUnitPx(size),\n        ...style,\n      }}\n      onClick={handleClick}\n      {...restProps}\n    >\n      <View className={prefixClassname(\"switch__node\")}>\n        {loading && <Loading className={prefixClassname(\"switch__loading\")} />}\n      </View>\n    </View>\n  )\n}\n\nexport default Switch\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../index.scss\"\r\n","import { Cell, Switch } from \"@taroify/core\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\ninterface SwitchListProps {\n  checked?: boolean\n\n  onChange?(checked: boolean): void\n}\n\nfunction BasicSwitch({ checked, onChange }: SwitchListProps) {\n  return <Switch checked={checked} onChange={onChange} />\n}\n\nfunction DisabledSwitch({ checked }: SwitchListProps) {\n  return <Switch checked={checked} disabled />\n}\n\nfunction LoadingSwitch({ checked }: SwitchListProps) {\n  return <Switch checked={checked} loading />\n}\n\nfunction SwitchList() {\n  const [checked, setChecked] = useState(false)\n  return (\n    <>\n      <Block title=\"基础用法\">\n        <BasicSwitch checked={checked} onChange={setChecked} />\n      </Block>\n      <Block title=\"禁用状态\">\n        <DisabledSwitch checked={checked} />\n      </Block>\n      <Block title=\"加载状态\">\n        <LoadingSwitch checked={checked} />\n      </Block>\n    </>\n  )\n}\n\nexport default function SwitchDemo() {\n  return (\n    <Page title=\"Switch 开关\" className=\"switch-demo\">\n      <SwitchList />\n      <Block title=\"自定义大小\">\n        <Switch size=\"24\" />\n      </Block>\n      <Block title=\"自定义颜色\">\n        <Switch className=\"custom-color\" defaultChecked />\n      </Block>\n      <Block title=\"搭配单元格使用\" className=\"switch-with-cell\">\n        <Cell align=\"center\" title=\"标题\" rightIcon={<Switch size=\"24\" />} />\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}