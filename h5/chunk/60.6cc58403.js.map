{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/state.ts","webpack:///../../../../packages/core/src/utils/dom/event.ts","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///../../../../packages/core/src/button/button.context.ts","webpack:///../../../../packages/core/src/utils/touch.ts","webpack:///../../../../packages/core/src/styles/hairline.ts","webpack:///../../../../packages/core/src/image/image.tsx","webpack:///../../../../packages/core/src/utils/raf.ts","webpack:///../../../../packages/core/src/button/style/index.ts","webpack:///../../../../packages/core/src/button-base/style/index.ts","webpack:///../../../../packages/core/src/button/button.tsx","webpack:///../../../../packages/core/src/button-base/button-base.tsx","webpack:///../../../../packages/core/src/utils/dom/computed-style.ts","webpack:///../../../../packages/core/src/swiper/swiper.context.ts","webpack:///../../../../packages/core/src/swiper/swiper-indicator.tsx","webpack:///../../../../packages/core/src/swiper/swiper-item.tsx","webpack:///../../../../packages/core/src/swiper/swiper.tsx","webpack:///../../../../packages/core/src/swiper/index.ts","webpack:///../../../../packages/core/src/swiper/style/index.ts","webpack:///../../../../packages/core/src/sticky/style/index.ts","webpack:///../../../../packages/core/src/utils/system.ts","webpack:///../../../../packages/core/src/sticky/index.ts","webpack:///../../../../packages/core/src/sticky/sticky.tsx","webpack:///../../../../packages/core/src/tabs/style/index.ts","webpack:///../../../../packages/core/src/tabs/tab-pane.tsx","webpack:///../../../../packages/core/src/tabs/tabs.context.ts","webpack:///../../../../packages/core/src/tabs/tab-pane-base.tsx","webpack:///../../../../packages/core/src/tabs/tabs-content.tsx","webpack:///../../../../packages/core/src/tabs/tabs-line.tsx","webpack:///../../../../packages/core/src/tabs/tab.tsx","webpack:///../../../../packages/core/src/tabs/tabs-header.tsx","webpack:///../../../../packages/core/src/tabs/tabs.tsx","webpack:///../../../../packages/core/src/tabs/index.ts","webpack:///../../../../packages/core/src/empty/empty.tsx","webpack:///./src/pages/display/empty/index.tsx"],"names":["previousRef","useRef","useEffect","usePreviousRef","cb","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","defaultValue","value","setValue","emitChange","getValue","event","stopPropagation","touches","clientX","clientY","Block","props","className","variant","title","children","classNames","demoPrefixClassname","SpinIcon","key","prefixClassname","LoadingSpinner","size","rootStyle","width","addUnitPx","height","style","LoadingCircular","type","direction","ButtonContext","createContext","emptyFunction","touchRef","startX","startY","deltaX","deltaY","offsetX","offsetY","isVertical","isHorizontal","start","move","reset","TouchDirection","touch","Math","getDirection","x","y","HAIRLINE_BORDER","HAIRLINE_BORDER_TOP","HAIRLINE_BORDER_LEFT","HAIRLINE_BORDER_BOTTOM","HAIRLINE_BORDER_SURROUND","HAIRLINE_BORDER_TOP_BOTTOM","HAIRLINE_BORDER_UNSET_TOP_BOTTOM","ImagePlaceholder","prefix","React","mode","round","lazyLoad","placeholder","fallback","taroMode","toTaroMode","useState","setLoading","failed","src","loading","imgProps","alt","onError","setFailed","onLoad","requestAnimationFrame","rafIds","raf","color","formType","onClick","useButtonLoading","onCtxClick","useContext","shape","block","e","disabled","Object","ButtonBase","element","elementUnref","Promise","window","resolve","queryNodesRef","computedStyle","result","itemInstances","indicator","count","renderIndicator","indicators","__dataIndex__","childrenProp","vertical","initializedRef","mountedRef","shouldRender","lazyRender","active","maxActive","prevActive","nextActive","useMounted","setOffset","useRendered","offset","undefined","getIndicatorValue","Swiper","loop","touchable","autoplay","duration","onChangeProp","useValue","valueRef","useToRef","useSwiperChildren","__children__","items","Children","isValidElement","elementType","cloneElement","useTouch","rootRef","rectRef","swipingRef","activeIndexRef","touchStartTimeRef","autoplayTimerRef","valueIndicatorRef","useRenderedRef","activeIndicatorRef","getDelta","getCorrectDirection","customRectRef","propRectRef","sizeRef","trackSizeRef","minOffsetRef","maxCountRef","getTargetActive","pace","getTargetOffset","currentPosition","targetActive","targetOffset","moveTo","outRightBound","outLeftBound","previousActiveIndex","correctPosition","swipeTo","doubleRaf","targetIndex","next","stopAutoplay","clearTimeout","startAutoplay","setTimeout","onTouchStart","Date","onTouchMove","correctDirection","preventDefault","onTouchEnd","delta","speed","shouldSwipe","getTrackRect","getRect","getComputedStyle","makeRect","rect","unitToPx","initialize","a","activeIndex","current","item","resize","nextTick","useWindowResize","valueIndicator","trackStyle","transitionDuration","transform","crossAxis","crossAxisValue","ref","SwiperContext","catchMove","onTouchCancel","screenHeight","screenWidth","windowHeight","windowWidth","position","offsetTop","offsetBottom","container","onScroll","bottom","console","offsetTopProp","offsetProp","offsetBottomProp","counterRef","offsetValue","rootRect","fixed","stickyStyle","scrollTop","__rootRect__","setRootRect","containerRect","difference","setTransform","setFixed","getSystemRect","invokeScroll","usePageScroll","animated","swipeable","tabObjects","activeValue","tabPane","display","onTabClick","panes","useTabPanes","tabObject","renderChildren","onSwiperChange","flexBasis","ellipsis","underline","themeLine","theme","themeCard","navRef","tab","activeOffset","tabOffsets","left","prev","curr","scrollLeft","navOffsetWidth","offsetLeft","navOffset","getRects","setNavOffset","setTabOffsets","onWindowResize","offWindowResize","bordered","scrollX","scrollWithAnimation","dot","badge","useTabObjects","node","Tabs","sticky","valueProp","stickyProps","useTabsSticky","handleTabClick","headerRender","TabsContext","PRESET_IMAGES","Empty","__src__","obtainImageUrl","image","PresetEmpty","setTab","TabPane","Image","Description","EmptyDemo"],"mappings":"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","file":"chunk/60.6cc58403.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  const stateRef = useRef(defaultValue ?? value ?? initialValue)\r\n\r\n  if (value !== undefined) {\r\n    stateRef.current = value\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(value)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ value: stateRef.current, getValue, setValue }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","import { CommonEvent, ITouchEvent } from \"@tarojs/components\"\nimport { inBrowser } from \"../base\"\n\nexport function stopPropagation(event: CommonEvent) {\n  event.stopPropagation()\n}\n\nexport function preventDefault(event: CommonEvent, isStopPropagation?: boolean) {\n  if (inBrowser) {\n    // @ts-ignore\n    if (typeof event.cancelable !== \"boolean\" || event.cancelable) {\n      event.preventDefault()\n    }\n  } else {\n    event.preventDefault()\n  }\n\n  if (isStopPropagation) {\n    stopPropagation(event)\n  }\n}\n\ninterface ClientCoordinates {\n  clientX: number\n  clientY: number\n}\n\nexport function getClientCoordinates(event: ITouchEvent | MouseEvent): ClientCoordinates {\n  // @ts-ignore\n  const { clientX, clientY, touches } = event\n\n  if (clientX && clientY) {\n    return {\n      clientX,\n      clientY,\n    }\n  }\n  return touches[0]\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\nimport { ButtonProps } from \"./button\"\r\n\r\ninterface ButtonContextValue {\r\n  onClick?(event: ITouchEvent, props: ButtonProps): void\r\n}\r\n\r\nconst ButtonContext = createContext<ButtonContextValue>({})\r\n\r\nexport default ButtonContext\r\n","import { ITouchEvent } from \"@tarojs/components\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nconst MIN_DISTANCE = 10\n\nexport enum TouchDirection {\n  Horizontal = \"horizontal\",\n  Vertical = \"vertical\",\n}\n\nfunction getDirection(x: number, y: number): TouchDirection | undefined {\n  if (x > y && x > MIN_DISTANCE) {\n    return TouchDirection.Horizontal\n  }\n  if (y > x && y > MIN_DISTANCE) {\n    return TouchDirection.Vertical\n  }\n}\n\nfunction emptyFunction() {}\n\nexport interface TouchRef {\n  startX: number\n  startY: number\n  deltaX: number\n  deltaY: number\n  offsetX: number\n  offsetY: number\n  direction?: TouchDirection\n\n  isVertical(): boolean\n\n  isHorizontal(): boolean\n\n  start(event: ITouchEvent): void\n\n  move(event: ITouchEvent): void\n\n  reset(): void\n}\n\nexport function useTouch() {\n  const touchRef = useRef<TouchRef>({\n    startX: 0,\n    startY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    isVertical: () => false,\n    isHorizontal: () => false,\n    start: emptyFunction,\n    move: emptyFunction,\n    reset: emptyFunction,\n  })\n\n  const isVertical = useCallback(() => touchRef.current.direction === TouchDirection.Vertical, [])\n\n  const isHorizontal = useCallback(\n    () => touchRef.current.direction === TouchDirection.Horizontal,\n    [],\n  )\n\n  const reset = useCallback(function () {\n    touchRef.current.deltaX = 0\n    touchRef.current.deltaY = 0\n    touchRef.current.offsetX = 0\n    touchRef.current.offsetY = 0\n    touchRef.current.direction = undefined\n  }, [])\n\n  const start = useCallback(\n    function (event: ITouchEvent) {\n      reset()\n      touchRef.current.startX = event.touches[0].clientX\n      touchRef.current.startY = event.touches[0].clientY\n    },\n    [reset],\n  )\n\n  const move = useCallback(function (event: ITouchEvent) {\n    const touch = event.touches[0]\n    // Fix: Safari back will set clientX to negative number\n    touchRef.current.deltaX = touch.clientX < 0 ? 0 : touch.clientX - touchRef.current.startX\n    touchRef.current.deltaY = touch.clientY - touchRef.current.startY\n    touchRef.current.offsetX = Math.abs(touchRef.current.deltaX)\n    touchRef.current.offsetY = Math.abs(touchRef.current.deltaY)\n\n    if (!touchRef.current.direction) {\n      touchRef.current.direction = getDirection(touchRef.current.offsetX, touchRef.current.offsetY)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (touchRef.current.isHorizontal !== isHorizontal) {\n      touchRef.current.isHorizontal = isHorizontal\n    }\n  }, [touchRef, isHorizontal])\n\n  useEffect(() => {\n    if (touchRef.current.isVertical !== isVertical) {\n      touchRef.current.isVertical = isVertical\n    }\n  }, [touchRef, isVertical])\n\n  useEffect(() => {\n    if (touchRef.current.reset !== reset) {\n      touchRef.current.reset = reset\n    }\n  }, [touchRef, reset])\n\n  useEffect(() => {\n    if (touchRef.current.start !== start) {\n      touchRef.current.start = start\n    }\n  }, [touchRef, start])\n\n  useEffect(() => {\n    if (touchRef.current.move !== move) {\n      touchRef.current.move = move\n    }\n  }, [touchRef, move])\n\n  return touchRef.current\n}\n","import { prefixClassname } from \"./prefix\"\n\nexport const HAIRLINE_BORDER = prefixClassname(\"hairline\")\nexport const HAIRLINE_BORDER_TOP = `${HAIRLINE_BORDER}--top`\nexport const HAIRLINE_BORDER_LEFT = `${HAIRLINE_BORDER}--left`\nexport const HAIRLINE_BORDER_BOTTOM = `${HAIRLINE_BORDER}--bottom`\nexport const HAIRLINE_BORDER_SURROUND = `${HAIRLINE_BORDER}--surround`\nexport const HAIRLINE_BORDER_TOP_BOTTOM = `${HAIRLINE_BORDER}--top-bottom`\nexport const HAIRLINE_BORDER_UNSET_TOP_BOTTOM = `${HAIRLINE_BORDER}-unset--top-bottom`\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport type ImageMode =\r\n  | \"scaleToFill\"\r\n  | \"aspectFit\"\r\n  | \"aspectFill\"\r\n  | \"widthFix\"\r\n  | \"heightFix\"\r\n  | \"top\"\r\n  | \"bottom\"\r\n  | \"center\"\r\n  | \"left\"\r\n  | \"right\"\r\n  | \"topLeft\"\r\n  | \"topRight\"\r\n  | \"bottomLeft\"\r\n  | \"bottomRight\"\r\n\r\nfunction toTaroMode(mode: ImageMode): string {\r\n  if (mode === \"topLeft\") {\r\n    return \"top left\"\r\n  }\r\n  if (mode === \"topRight\") {\r\n    return \"top right\"\r\n  }\r\n  if (mode === \"bottomLeft\") {\r\n    return \"bottom left\"\r\n  }\r\n  if (mode === \"bottomRight\") {\r\n    return \"bottom right\"\r\n  }\r\n  return mode\r\n}\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ImagePlaceholder({ prefix = \"placeholder\", children }: ImagePlaceholderProps) {\r\n  // Icon Element\r\n  if (React.isValidElement(children)) {\r\n    return (\r\n      <>\r\n        {React.cloneElement(children as ReactElement, {\r\n          className: classNames(\r\n            prefixClassname(`image__${prefix}`),\r\n            prefixClassname(`image__${prefix}-icon`),\r\n          ),\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n\r\ninterface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round = false,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = toTaroMode(mode)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n  }, [src])\r\n\r\n  function handleLoad() {\r\n    setLoading(false)\r\n  }\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--round\")]: round,\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onError={handleError}\r\n          onLoad={handleLoad}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import * as _ from \"lodash\"\nimport * as requestAnimationFrame from \"raf\"\n\nexport function cancelRaf(rafId: number | number[]) {\n  if (_.isNumber(rafId)) {\n    requestAnimationFrame.cancel(rafId)\n  } else if (_.isArray(rafId)) {\n    _.forEach(rafId, cancelRaf)\n  }\n}\n\nexport function raf(cb: FrameRequestCallback) {\n  // @ts-ignore\n  return requestAnimationFrame.default(cb)\n}\n\nexport default raf\n\nexport function doubleRaf(cb: FrameRequestCallback): [number, number] {\n  const rafIds: [number, number] = [0, 0]\n  rafIds[1] = raf(() => {\n    rafIds[0] = raf(cb)\n  })\n  return rafIds\n}\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../../button-base/style\"\r\n\r\nimport \"../index.scss\"\r\n","import \"../index.scss\"\r\n","import { ButtonProps as TaroButtonProps, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport ButtonBase from \"../button-base\"\r\nimport Loading, { LoadingProps } from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport ButtonContext from \"./button.context\"\r\nimport {\r\n  ButtonColor,\r\n  ButtonFormType,\r\n  ButtonShape,\r\n  ButtonSize,\r\n  ButtonVariant,\r\n} from \"./button.shared\"\r\n\r\nfunction useButtonLoading(loading?: boolean | LoadingProps): ReactNode {\r\n  return useMemo(() => {\r\n    if (_.isBoolean(loading) && loading) {\r\n      return <Loading className={prefixClassname(\"button__loading\")} />\r\n    } else if (_.isObjectLike(loading)) {\r\n      const { className, ...restProps } = loading as LoadingProps\r\n      return (\r\n        <Loading\r\n          className={classNames(prefixClassname(\"button__loading\"), className)}\r\n          {...restProps}\r\n        />\r\n      )\r\n    }\r\n    return loading\r\n  }, [loading])\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends Omit<TaroButtonProps, \"size\" | \"formType\" | \"type\" | \"loading\" | \"plain\"> {\r\n  variant?: ButtonVariant\r\n  shape?: ButtonShape\r\n  size?: ButtonSize\r\n  color?: ButtonColor\r\n  formType?: ButtonFormType\r\n  loading?: boolean | LoadingProps\r\n  block?: boolean\r\n  hairline?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    variant = \"contained\",\r\n    shape,\r\n    size = \"medium\",\r\n    color = \"default\",\r\n    formType = \"button\",\r\n    block,\r\n    hairline,\r\n    disabled,\r\n    loading: loadingProp,\r\n    icon,\r\n    children,\r\n    onClick,\r\n    ...restProps\r\n  } = props\r\n\r\n  const loading = useButtonLoading(loadingProp)\r\n\r\n  const { onClick: onCtxClick } = useContext(ButtonContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"button\"),\r\n        {\r\n          // Set variant style\r\n          [prefixClassname(\"button--text\")]: variant === \"text\",\r\n          [prefixClassname(\"button--contained\")]: variant === \"contained\",\r\n          [prefixClassname(\"button--outlined\")]: variant === \"outlined\",\r\n          // Set color style\r\n          [prefixClassname(`button--${color}`)]: color,\r\n          // Set shape style\r\n          [prefixClassname(\"button--round\")]: shape === \"round\",\r\n          [prefixClassname(\"button--square\")]: shape === \"square\",\r\n          // Set size style\r\n          [prefixClassname(\"button--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"button--small\")]: size === \"small\",\r\n          [prefixClassname(\"button--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"button--large\")]: size === \"large\",\r\n          // Set hairline style\r\n          [prefixClassname(\"button--hairline\")]: hairline,\r\n          [prefixClassname(\"hairline--surround\")]: hairline,\r\n          [prefixClassname(\"button--disabled\")]: disabled,\r\n          [prefixClassname(\"button--loading\")]: loading,\r\n          [prefixClassname(\"button--block\")]: block,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={(e) => {\r\n        if (!disabled && !loading) {\r\n          onClick?.(e)\r\n          onCtxClick?.(e, props)\r\n        }\r\n      }}\r\n    >\r\n      <View className={prefixClassname(\"button__content\")}>\r\n        {loading ?? icon}\r\n        {children && <View className={prefixClassname(\"button__text\")} children={children} />}\r\n      </View>\r\n      <ButtonBase\r\n        className={prefixClassname(\"button__button\")}\r\n        formType={formType === \"submit\" ? \"submit\" : formType === \"reset\" ? \"reset\" : undefined}\r\n        disabled={disabled}\r\n        loading={false}\r\n        {...restProps}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function createButton(children: ReactNode | ButtonProps, props?: ButtonProps) {\r\n  if (_.isPlainObject(children)) {\r\n    return <Button {...(children as ButtonProps)} {...props} />\r\n  }\r\n  return <Button children={children} {...props} />\r\n}\r\n","import { Button, ButtonProps } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface ButtonBaseProps extends ButtonProps {}\r\n\r\nfunction ButtonBase(props: ButtonBaseProps) {\r\n  const { className, ...restProps } = props\r\n  return <Button className={classNames(prefixClassname(\"button-base\"), className)} {...restProps} />\r\n}\r\n\r\nexport default ButtonBase\r\n","import { inBrowser } from \"../base\"\r\nimport { elementUnref, queryNodesRef } from \"./element\"\r\n\r\nexport function getComputedStyle(\r\n  elementOrRef: any,\r\n  computedStyle: string[],\r\n): Promise<CSSStyleDeclaration> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      return Promise.resolve(window.getComputedStyle(element as any))\r\n    } else {\r\n      return new Promise<CSSStyleDeclaration>((resolve) => {\r\n        queryNodesRef(element)\r\n          .fields(\r\n            {\r\n              computedStyle,\r\n            },\r\n            (result) => resolve(result as CSSStyleDeclaration),\r\n          )\r\n          .exec()\r\n      })\r\n    }\r\n  }\r\n\r\n  return Promise.resolve({} as CSSStyleDeclaration)\r\n}\r\n","import { createContext } from \"react\"\r\nimport { SwiperDirection } from \"./swiper.shared\"\r\n\r\nexport interface SwiperItemInstance {\r\n  setOffset: (offset: number) => void\r\n}\r\n\r\ninterface SwiperContextValue {\r\n  direction?: SwiperDirection\r\n  lazyRender?: boolean\r\n  loop?: boolean\r\n  size?: number\r\n  indicator?: number\r\n  count?: number\r\n  itemInstances: SwiperItemInstance[]\r\n}\r\n\r\nconst SwiperContext = createContext<SwiperContextValue>({\r\n  itemInstances: [],\r\n})\r\nexport default SwiperContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useCallback, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport SwiperContext from \"./swiper.context\"\r\n\r\nexport interface SwiperIndicatorProps extends ViewProps {\r\n  className?: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function SwiperIndicator(props: SwiperIndicatorProps) {\r\n  const { className, children, ...restProps } = props\r\n  const { indicator = 0, direction, count } = useContext(SwiperContext)\r\n\r\n  const renderIndicator = useCallback(\r\n    (index: number) => (\r\n      <View\r\n        key={index}\r\n        className={classNames(prefixClassname(\"swiper__indicator\"), {\r\n          [prefixClassname(\"swiper__indicator--active\")]: index === indicator,\r\n        })}\r\n      />\r\n    ),\r\n    [indicator],\r\n  )\r\n\r\n  const indicators = useMemo(() => !children && _.range(0, count).map(renderIndicator), [\r\n    children,\r\n    count,\r\n    renderIndicator,\r\n  ])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        {\r\n          [prefixClassname(\"swiper__indicators\")]: !children,\r\n          [prefixClassname(\"swiper__indicators--vertical\")]: !children && direction === \"vertical\",\r\n        },\r\n        className,\r\n      )}\r\n      children={children ?? indicators}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useEffect, useMemo, useRef, useState } from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { useRendered } from \"../utils/state\"\r\nimport SwiperContext from \"./swiper.context\"\r\n\r\nexport interface SwiperItemProps extends ViewProps {\r\n  __dataIndex__?: number\r\n  className?: string\r\n  style?: CSSProperties\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function SwiperItem(props: SwiperItemProps) {\r\n  const {\r\n    __dataIndex__ = 0,\r\n    className,\r\n    style: styleProp,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { lazyRender, size, direction, loop, indicator = 0, count = 0, itemInstances } = useContext(\r\n    SwiperContext,\r\n  )\r\n  const vertical = direction === \"vertical\"\r\n\r\n  const initializedRef = useRef(false)\r\n  const mountedRef = useRef(false)\r\n\r\n  const [offset, setOffset] = useState(0)\r\n\r\n  const shouldRender = useMemo(() => {\r\n    if (!lazyRender || initializedRef.current) {\r\n      return true\r\n    }\r\n\r\n    // wait for all item to mount, so we can get the exact count\r\n    if (!mountedRef.current && indicator !== 0) {\r\n      return false\r\n    }\r\n\r\n    const active = indicator\r\n    const maxActive = count - 1\r\n    const prevActive = active === 0 && loop ? maxActive : active - 1\r\n    const nextActive = active === maxActive && loop ? 0 : active + 1\r\n    initializedRef.current =\r\n      __dataIndex__ === active || __dataIndex__ === prevActive || __dataIndex__ === nextActive\r\n    return initializedRef.current\r\n  }, [__dataIndex__, count, indicator, lazyRender, loop])\r\n\r\n  useMounted(() => {\r\n    mountedRef.current = true\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!itemInstances[__dataIndex__]) {\r\n      itemInstances[__dataIndex__] = { setOffset }\r\n    }\r\n  }, [itemInstances, __dataIndex__])\r\n\r\n  const rootStyle = useRendered(() => {\r\n    const style: CSSProperties = {}\r\n    if (size) {\r\n      const mainAxis = vertical ? \"height\" : \"width\"\r\n      style[mainAxis] = addUnitPx(size)\r\n    }\r\n    style.transform = offset ? `translate${vertical ? \"Y\" : \"X\"}(${addUnitPx(offset)})` : \"\"\r\n    return style\r\n  })\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"swiper-item\"), className)}\r\n      style={{\r\n        ...styleProp,\r\n        ...rootStyle,\r\n      }}\r\n      children={shouldRender ? childrenProp : undefined}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { nextTick } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\"\r\nimport { useMounted, useUpdate, useWindowResize } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getComputedStyle } from \"../utils/dom/computed-style\"\r\nimport { preventDefault } from \"../utils/dom/event\"\r\nimport { getRect, makeRect, Rect } from \"../utils/dom/rect\"\r\nimport { addUnitPx, unitToPx } from \"../utils/format/unit\"\r\nimport { doubleRaf } from \"../utils/raf\"\r\nimport { useRendered, useRenderedRef, useToRef, useValue } from \"../utils/state\"\r\nimport { useTouch } from \"../utils/touch\"\r\nimport SwiperIndicator from \"./swiper-indicator\"\r\nimport SwiperItem from \"./swiper-item\"\r\nimport SwiperContext, { SwiperItemInstance } from \"./swiper.context\"\r\nimport { SwiperDirection } from \"./swiper.shared\"\r\n\r\ninterface SwiperChildren {\r\n  items: ReactNode[]\r\n  indicator: ReactNode\r\n  count: number\r\n}\r\n\r\nfunction useSwiperChildren(children: ReactNode): SwiperChildren {\r\n  const __children__: SwiperChildren = {\r\n    items: [],\r\n    indicator: undefined,\r\n    count: 0,\r\n  }\r\n  let index = 0\r\n  Children.forEach(children, (child: ReactNode, i) => {\r\n    // Skip is not Item of Swiper\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n    const element = child as ReactElement\r\n    const elementType = element.type\r\n    if (elementType === SwiperIndicator) {\r\n      __children__.indicator = element\r\n    } else if (elementType === SwiperItem) {\r\n      const { key } = element\r\n      __children__.items.push(\r\n        cloneElement(element, {\r\n          ...element.props,\r\n          key: key ?? i,\r\n          __dataIndex__: index++,\r\n        }),\r\n      )\r\n    } else {\r\n      __children__.items.push(element)\r\n    }\r\n  })\r\n\r\n  __children__.count = __children__.items.length\r\n  return __children__\r\n}\r\n\r\nfunction getIndicatorValue(value: number, count: number) {\r\n  return (value + count) % count\r\n}\r\n\r\nexport interface SwiperProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  defaultValue?: number\r\n  value?: number\r\n  lazyRender?: boolean\r\n  width?: number\r\n  height?: number\r\n  autoplay?: number\r\n  loop?: boolean\r\n  touchable?: boolean\r\n  duration?: number\r\n  direction?: SwiperDirection\r\n  stopPropagation?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: number): void\r\n}\r\n\r\nfunction Swiper(props: SwiperProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    lazyRender,\r\n    loop = true,\r\n    touchable = true,\r\n    autoplay = 0,\r\n    duration = 500,\r\n    width,\r\n    height,\r\n    direction = \"horizontal\",\r\n    stopPropagation = true,\r\n    children: childrenProp,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    value: valueProp,\r\n    defaultValue,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const valueRef = useToRef(value)\r\n\r\n  const { count, indicator, items } = useSwiperChildren(childrenProp)\r\n\r\n  const itemInstances = useMemo<SwiperItemInstance[]>(() => [], [])\r\n\r\n  const touch = useTouch()\r\n\r\n  const update = useUpdate()\r\n\r\n  const vertical = direction === \"vertical\"\r\n\r\n  const rootRef = useRef()\r\n\r\n  const rectRef = useRef<Rect>()\r\n\r\n  const [offset, setOffset] = useState<number>(0)\r\n\r\n  const swipingRef = useRef(false) // Whether to swiping manually\r\n\r\n  const activeIndexRef = useRef<number>(0)\r\n\r\n  const touchStartTimeRef = useRef(0)\r\n\r\n  const autoplayTimerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const valueIndicatorRef = useRenderedRef(() => getIndicatorValue(value, count))\r\n\r\n  const activeIndicatorRef = useRenderedRef(() => getIndicatorValue(activeIndexRef.current, count))\r\n\r\n  const getDelta = useCallback(\r\n    () => (vertical ? touch.deltaY : touch.deltaX),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getCorrectDirection = useCallback(\r\n    () => touch.direction === direction,\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const customRectRef = useRenderedRef(() => ({\r\n    width: width ?? rectRef.current?.width,\r\n    height: height ?? rectRef.current?.height,\r\n  }))\r\n\r\n  const propRectRef = useRenderedRef(() => ({\r\n    width,\r\n    height,\r\n  }))\r\n\r\n  const sizeRef = useRenderedRef(\r\n    () => (vertical ? customRectRef.current?.height : customRectRef.current?.width) ?? 0,\r\n  )\r\n\r\n  const trackSizeRef = useRenderedRef(() => count * sizeRef.current)\r\n\r\n  const minOffsetRef = useRenderedRef(() => {\r\n    if (rectRef.current) {\r\n      const base = (vertical ? rectRef.current?.height : rectRef.current?.width) ?? 0\r\n      return base - sizeRef.current * count\r\n    }\r\n    return 0\r\n  })\r\n\r\n  const maxCountRef = useRenderedRef(() =>\r\n    Math.ceil(Math.abs(minOffsetRef.current) / sizeRef.current),\r\n  )\r\n\r\n  const getTargetActive = useCallback(\r\n    (pace: number) => {\r\n      if (pace) {\r\n        if (loop) {\r\n          return _.clamp(activeIndexRef.current + pace, -1, count)\r\n        }\r\n        return _.clamp(activeIndexRef.current + pace, 0, maxCountRef.current)\r\n      }\r\n      return activeIndexRef.current\r\n    },\r\n    [loop, maxCountRef, count],\r\n  )\r\n\r\n  const getTargetOffset = useCallback(\r\n    (targetActive: number, offset = 0) => {\r\n      let currentPosition = targetActive * sizeRef.current\r\n      if (!loop) {\r\n        currentPosition = Math.min(currentPosition, -minOffsetRef.current)\r\n      }\r\n\r\n      let targetOffset = offset - currentPosition\r\n      if (!loop) {\r\n        targetOffset = _.clamp(targetOffset, minOffsetRef.current, 0)\r\n      }\r\n      return targetOffset\r\n    },\r\n    [sizeRef, loop, minOffsetRef],\r\n  )\r\n\r\n  const moveTo = useCallback(\r\n    ({ pace = 0, offset = 0, emitChange = false }) => {\r\n      if (count <= 1) {\r\n        return\r\n      }\r\n\r\n      const targetActive = getTargetActive(pace)\r\n      const targetOffset = getTargetOffset(targetActive, offset)\r\n      if (loop) {\r\n        if (itemInstances[0] && targetOffset !== minOffsetRef.current) {\r\n          const outRightBound = targetOffset < minOffsetRef.current\r\n          itemInstances[0].setOffset(outRightBound ? trackSizeRef.current : 0)\r\n        }\r\n\r\n        if (itemInstances[count - 1] && targetOffset !== 0) {\r\n          const outLeftBound = targetOffset > 0\r\n          itemInstances[count - 1].setOffset(outLeftBound ? -trackSizeRef.current : 0)\r\n        }\r\n      }\r\n\r\n      const previousActiveIndex = activeIndexRef.current\r\n      activeIndexRef.current = targetActive\r\n      setOffset(targetOffset)\r\n\r\n      if (emitChange && previousActiveIndex !== targetActive) {\r\n        setValue(getIndicatorValue(targetActive, count))\r\n      }\r\n    },\r\n    [\r\n      count,\r\n      getTargetActive,\r\n      getTargetOffset,\r\n      loop,\r\n      itemInstances,\r\n      minOffsetRef,\r\n      trackSizeRef,\r\n      setValue,\r\n    ],\r\n  )\r\n\r\n  const correctPosition = useCallback(() => {\r\n    swipingRef.current = true\r\n    if (activeIndexRef.current <= -1) {\r\n      moveTo({ pace: count })\r\n    } else if (activeIndexRef.current >= count) {\r\n      moveTo({ pace: -count })\r\n    }\r\n  }, [count, moveTo])\r\n\r\n  const swipeTo = useCallback(\r\n    (index: number) => {\r\n      correctPosition()\r\n      touch.reset()\r\n\r\n      doubleRaf(() => {\r\n        let targetIndex\r\n        if (loop && index === count) {\r\n          targetIndex = activeIndexRef.current === 0 ? 0 : index\r\n        } else {\r\n          targetIndex = index % count\r\n        }\r\n\r\n        swipingRef.current = false\r\n\r\n        moveTo({\r\n          pace: targetIndex - activeIndexRef.current,\r\n          emitChange: true,\r\n        })\r\n      })\r\n    },\r\n    [correctPosition, count, loop, moveTo, touch],\r\n  )\r\n\r\n  // const previous = useCallback(() => {\r\n  //   correctPosition()\r\n  //   doubleRaf(() => {\r\n  //     swipingRef.current = false\r\n  //     moveTo({\r\n  //       pace: -1,\r\n  //       emitChange: true,\r\n  //     })\r\n  //   })\r\n  // }, [correctPosition, moveTo])\r\n\r\n  const next = useCallback(() => {\r\n    correctPosition()\r\n    doubleRaf(() => {\r\n      swipingRef.current = false\r\n      moveTo({\r\n        pace: 1,\r\n        emitChange: true,\r\n      })\r\n    })\r\n  }, [correctPosition, moveTo])\r\n\r\n  const stopAutoplay = useCallback(() => {\r\n    if (autoplayTimerRef.current) {\r\n      clearTimeout(autoplayTimerRef.current)\r\n    }\r\n  }, [])\r\n\r\n  const startAutoplay = useCallback(() => {\r\n    stopAutoplay()\r\n    if (autoplay > 0 && count > 1) {\r\n      autoplayTimerRef.current = setTimeout(() => {\r\n        next()\r\n        startAutoplay()\r\n      }, +autoplay)\r\n    }\r\n  }, [autoplay, count, next, stopAutoplay])\r\n\r\n  const onTouchStart = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (!touchable) {\r\n        return\r\n      }\r\n\r\n      touch.start(event)\r\n      touchStartTimeRef.current = Date.now()\r\n\r\n      stopAutoplay()\r\n      correctPosition()\r\n    },\r\n    [correctPosition, stopAutoplay, touch, touchable],\r\n  )\r\n\r\n  const onTouchMove = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (!touchable || !swipingRef.current) {\r\n        return\r\n      }\r\n\r\n      touch.move(event)\r\n      const correctDirection = getCorrectDirection()\r\n      // if user starting to touchmove, prevent the event bubbling to\r\n      // avoid affecting the parent components\r\n      const shouldPrevent = correctDirection || touch.offsetY > touch.offsetX === vertical\r\n      if (shouldPrevent) {\r\n        preventDefault(event, stopPropagation)\r\n      }\r\n\r\n      if (correctDirection) {\r\n        moveTo({ offset: getDelta() })\r\n      }\r\n    },\r\n    [getCorrectDirection, getDelta, moveTo, stopPropagation, touch, touchable, vertical],\r\n  )\r\n\r\n  const onTouchEnd = useCallback(() => {\r\n    if (!touchable || !swipingRef.current) {\r\n      return\r\n    }\r\n    const duration = Date.now() - touchStartTimeRef.current\r\n\r\n    const delta = getDelta()\r\n    const speed = delta / duration\r\n    const shouldSwipe = Math.abs(speed) > 0.25 || Math.abs(delta) > sizeRef.current / 2\r\n\r\n    swipingRef.current = false\r\n    const correctDirection = getCorrectDirection()\r\n    if (shouldSwipe && correctDirection) {\r\n      const offset = vertical ? touch.offsetY : touch.offsetX\r\n\r\n      let pace: number\r\n\r\n      if (loop) {\r\n        pace = offset > 0 ? (delta > 0 ? -1 : 1) : 0\r\n      } else {\r\n        pace = -Math[delta > 0 ? \"ceil\" : \"floor\"](delta / sizeRef.current)\r\n      }\r\n\r\n      moveTo({\r\n        pace,\r\n        emitChange: true,\r\n      })\r\n    } else if (delta) {\r\n      moveTo({ pace: 0 })\r\n    }\r\n    startAutoplay()\r\n  }, [\r\n    touchable,\r\n    getDelta,\r\n    sizeRef,\r\n    getCorrectDirection,\r\n    startAutoplay,\r\n    vertical,\r\n    touch.offsetY,\r\n    touch.offsetX,\r\n    loop,\r\n    moveTo,\r\n  ])\r\n\r\n  const getTrackRect = useCallback(\r\n    () =>\r\n      Promise.all([\r\n        getRect(rootRef),\r\n        getComputedStyle(rootRef, [\"width\", \"height\"]),\r\n      ]).then(([rect, style]) =>\r\n        makeRect(\r\n          style.width === \"auto\" ? rect.width : unitToPx(style.width),\r\n          style.height === \"auto\" ? rect.height : unitToPx(style.height),\r\n        ),\r\n      ),\r\n    [],\r\n  )\r\n\r\n  const initialize = useCallback(\r\n    async (activeIndex = valueRef.current) => {\r\n      if (!rootRef.current) {\r\n        return\r\n      }\r\n      rectRef.current = await getTrackRect()\r\n      if (count) {\r\n        activeIndex = Math.min(count - 1, activeIndex)\r\n      }\r\n      activeIndexRef.current = activeIndex\r\n      swipingRef.current = true\r\n      const targetOffset = getTargetOffset(activeIndex)\r\n      setOffset(targetOffset)\r\n      // Force update render\r\n      if (targetOffset === offset) {\r\n        update()\r\n      }\r\n      itemInstances.forEach((item) => item.setOffset(0))\r\n    },\r\n    [valueRef, getTrackRect, count, getTargetOffset, offset, itemInstances, update],\r\n  )\r\n\r\n  const resize = useCallback(() => nextTick(() => initialize(activeIndexRef.current)), [initialize])\r\n\r\n  useMounted(initialize)\r\n\r\n  useWindowResize(resize)\r\n\r\n  useMounted(() => {\r\n    startAutoplay()\r\n    return stopAutoplay\r\n  })\r\n\r\n  useEffect(\r\n    () => {\r\n      const valueIndicator = valueIndicatorRef.current\r\n      const activeIndicator = activeIndicatorRef.current\r\n      if (valueIndicator !== activeIndicator) {\r\n        try {\r\n          stopAutoplay()\r\n          swipeTo(valueIndicator)\r\n        } finally {\r\n          startAutoplay()\r\n        }\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [valueIndicatorRef.current],\r\n  )\r\n\r\n  const trackStyle = useRendered(() => {\r\n    const style: CSSProperties = {\r\n      transitionDuration: `${swipingRef.current ? 0 : duration}ms`,\r\n      transform: `translate${vertical ? \"Y\" : \"X\"}(${addUnitPx(offset)})`,\r\n    }\r\n\r\n    if (sizeRef.current) {\r\n      const mainAxis = vertical ? \"height\" : \"width\"\r\n      style[mainAxis] = `${addUnitPx(trackSizeRef.current)}`\r\n      const crossAxis = vertical ? \"width\" : \"height\"\r\n      const crossAxisValue = propRectRef.current[crossAxis]\r\n      style[crossAxis] = crossAxisValue ? addUnitPx(crossAxisValue) : \"\"\r\n    }\r\n    return style\r\n  })\r\n\r\n  return (\r\n    <View ref={rootRef} className={classNames(prefixClassname(\"swiper\"), className)} {...restProps}>\r\n      <SwiperContext.Provider\r\n        value={{\r\n          lazyRender,\r\n          loop,\r\n          direction,\r\n          indicator: activeIndicatorRef.current,\r\n          size: sizeRef.current,\r\n          count,\r\n          itemInstances,\r\n        }}\r\n      >\r\n        <View\r\n          className={classNames(prefixClassname(\"swiper__track\"), {\r\n            [prefixClassname(\"swiper__track--vertical\")]: vertical,\r\n          })}\r\n          catchMove\r\n          onTouchStart={onTouchStart}\r\n          onTouchMove={onTouchMove}\r\n          onTouchEnd={onTouchEnd}\r\n          onTouchCancel={onTouchEnd}\r\n          style={trackStyle}\r\n          children={items}\r\n        />\r\n        {indicator}\r\n      </SwiperContext.Provider>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Swiper\r\n","import SwiperElement, { SwiperProps } from \"./swiper\"\r\nimport SwiperIndicator, { SwiperIndicatorProps } from \"./swiper-indicator\"\r\nimport SwiperItem, { SwiperItemProps } from \"./swiper-item\"\r\nimport { SwiperItemEvent } from \"./swiper.shared\"\r\n\r\ninterface SwiperInterface {\r\n  (props: SwiperProps): JSX.Element\r\n\r\n  Item: typeof SwiperItem\r\n  Indicator: typeof SwiperIndicator\r\n}\r\n\r\nconst Swiper = (SwiperElement as unknown) as SwiperInterface\r\n\r\nSwiper.Item = SwiperItem\r\nSwiper.Indicator = SwiperIndicator\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Swiper {\r\n  export type ItemEvent = SwiperItemEvent\r\n\r\n  export type ItemProps = SwiperItemProps\r\n\r\n  export type IndicatorProps = SwiperIndicatorProps\r\n}\r\n\r\nexport default Swiper\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { getSystemInfo } from \"@tarojs/taro\"\r\nimport { useState } from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\n\r\nconst INITIAL_RECT: SystemRect = {\r\n  screenHeight: 0,\r\n  screenWidth: 0,\r\n  windowHeight: 0,\r\n  windowWidth: 0,\r\n}\r\n\r\nexport interface SystemRect {\r\n  screenHeight: number\r\n  screenWidth: number\r\n  windowHeight: number\r\n  windowWidth: number\r\n}\r\n\r\nexport function getSystemRect(): Promise<SystemRect> {\r\n  return getSystemInfo().then(({ screenHeight, screenWidth, windowHeight, windowWidth }) => ({\r\n    screenHeight,\r\n    screenWidth,\r\n    windowHeight,\r\n    windowWidth,\r\n  }))\r\n}\r\n\r\nexport function useSystemRect(): SystemRect {\r\n  const [rect, setRect] = useState<SystemRect>(INITIAL_RECT)\r\n  useMounted(() => getSystemRect().then(setRect))\r\n  return rect\r\n}\r\n","import Sticky from \"./sticky\"\n\nexport default Sticky\n","import { View } from \"@tarojs/components\"\nimport { ViewProps } from \"@tarojs/components/types/View\"\nimport { PageScrollObject, usePageScroll } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport {\n  CSSProperties,\n  MutableRefObject,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\nimport { useMounted } from \"../hooks\"\nimport { prefixClassname } from \"../styles\"\nimport { getRect } from \"../utils/dom/rect\"\nimport { addUnitPx, unitToPx } from \"../utils/format/unit\"\nimport { getSystemRect } from \"../utils/system\"\n\ninterface RootReact {\n  height?: number\n  width?: number\n}\n\ntype StickyPosition = \"top\" | \"bottom\"\n\ninterface StickyOffset {\n  top?: number | string\n  bottom?: number | string\n}\n\ninterface StickyProps extends ViewProps {\n  className?: string\n  style?: CSSProperties\n  position?: StickyPosition\n  offset?: StickyOffset\n  offsetTop?: number | string\n  offsetBottom?: number | string\n  container?: MutableRefObject<Element | undefined>\n  children?: ReactNode\n\n  onChange?(fixed: boolean): void\n\n  onScroll?(scroll: PageScrollObject): void\n}\n\nexport default function Sticky(props: StickyProps) {\n  const {\n    className,\n    style: styleProp,\n    position = \"top\",\n    offsetTop: offsetTopProp,\n    offsetBottom: offsetBottomProp,\n    offset: offsetProp,\n    container: containerRef,\n    children,\n    onChange,\n    onScroll,\n    ...restProps\n  } = props\n\n  if (offsetProp) {\n    const { top, bottom } = offsetProp\n    if (top) {\n      // eslint-disable-next-line no-console\n      console.warn(\"[Deprecated] Use the 'offsetTop' prop instead of the 'offset.top' prop.\")\n    }\n    if (bottom) {\n      // eslint-disable-next-line no-console\n      console.warn(\"[Deprecated] Use the 'offsetBottom' prop instead of the 'offset.bottom' prop.\")\n    }\n  }\n\n  const offsetTop = offsetTopProp ?? offsetProp?.top\n  const offsetBottom = offsetBottomProp ?? offsetProp?.bottom\n\n  const rootRef = useRef<ViewProps>()\n  const counterRef = useRef(0)\n\n  const [rootRect, setRootRect] = useState<RootReact>({})\n\n  const [fixed, setFixed] = useState(false)\n  const [transform, setTransform] = useState(0)\n\n  const offsetValue = useMemo(\n    () => unitToPx((position === \"top\" ? offsetTop : offsetBottom) ?? 0),\n    [offsetBottom, offsetTop, position],\n  )\n\n  const rootStyle: CSSProperties | undefined = useMemo(() => {\n    if (!fixed) {\n      return {\n        height: \"\",\n        width: \"\",\n      }\n    }\n    const style: CSSProperties = {}\n    if (rootRect.height) {\n      style.height = addUnitPx(rootRect.height)\n    }\n    if (rootRect.width) {\n      style.width = addUnitPx(rootRect.width)\n    }\n    return style\n  }, [fixed, rootRect.height, rootRect.width])\n\n  const stickyStyle: CSSProperties | undefined = useMemo(() => {\n    if (!fixed) {\n      return {\n        height: \"\",\n        width: \"\",\n        [position]: \"\",\n      }\n    }\n    const style: CSSProperties = {}\n    if (rootRect.height) {\n      style.height = addUnitPx(rootRect.height)\n    }\n    if (rootRect.width) {\n      style.width = addUnitPx(rootRect.width)\n    }\n    style.transform = transform ? `translate3d(0, ${addUnitPx(transform)}, 0)` : \"\"\n    style[position] = addUnitPx(offsetValue)\n    return style\n  }, [fixed, rootRect.height, rootRect.width, transform, position, offsetValue])\n\n  async function invokeScroll({ scrollTop }: PageScrollObject) {\n    const __rootRect__ = await getRect(rootRef)\n    if (__rootRect__) {\n      setRootRect(__rootRect__)\n      if (position === \"top\") {\n        if (containerRef) {\n          const containerRect = await getRect(containerRef)\n          const difference = containerRect.bottom - offsetValue - __rootRect__.height\n          setTransform(difference < 0 ? difference : 0)\n          setFixed(offsetValue > __rootRect__.top && containerRect.bottom > 0)\n        } else {\n          setFixed(offsetValue > __rootRect__.top)\n        }\n      } else {\n        const { windowHeight } = await getSystemRect()\n        if (containerRef) {\n          const containerRect = await getRect(containerRef)\n          const difference = windowHeight - containerRect.top - offsetValue - __rootRect__.height\n          setTransform(difference < 0 ? difference : 0)\n          setFixed(\n            windowHeight - offsetValue < __rootRect__.bottom && windowHeight > containerRect.top,\n          )\n        } else {\n          setFixed(windowHeight - offsetValue < __rootRect__.bottom)\n        }\n      }\n    }\n    onScroll?.({ scrollTop })\n  }\n\n  useEffect(() => {\n    if (counterRef.current > 0) {\n      onChange?.(fixed)\n    }\n    counterRef.current++\n  }, [fixed, onChange])\n\n  useMounted(() => invokeScroll({ scrollTop: 0 }))\n\n  usePageScroll(({ scrollTop }) => invokeScroll({ scrollTop }))\n\n  return (\n    <View\n      ref={rootRef}\n      style={{\n        ...styleProp,\n        ...rootStyle,\n      }}\n      {...restProps}\n    >\n      <View\n        style={stickyStyle}\n        className={classNames(\n          prefixClassname(\"sticky\"),\n          {\n            [prefixClassname(\"sticky--fixed\")]: fixed,\n          },\n          className,\n        )}\n        children={children}\n      />\n    </View>\n  )\n}\n","import \"../../styles/style\"\r\nimport \"../../sticky/style\"\r\nimport \"../../swiper/style\"\r\nimport \"../index.scss\"\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\n\r\ninterface TabPaneProps extends ViewProps {\r\n  className?: string\r\n  value?: any\r\n  classNames?: { title: string }\r\n  title?: ReactNode\r\n  disabled?: boolean\r\n  dot?: boolean\r\n  badge?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function TabPane(props: TabPaneProps) {\r\n  return <></>\r\n}\r\n","import { createContext } from \"react\"\r\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\r\n\r\ninterface TabsContextValue {\r\n  index?: number\r\n  value: any\r\n  duration?: number\r\n  lazyRender: boolean\r\n  animated: boolean\r\n  swipeable: boolean\r\n  theme?: TabsTheme\r\n  bordered?: boolean\r\n  ellipsis?: boolean\r\n  tabObjects: TabObject[]\r\n\r\n  onTabClick?(event: TabEvent): void\r\n}\r\n\r\nconst TabsContext = createContext<TabsContextValue>({\r\n  value: undefined,\r\n  lazyRender: true,\r\n  animated: false,\r\n  swipeable: false,\r\n  tabObjects: [],\r\n})\r\n\r\nexport default TabsContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useMemo, useRef } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport Swiper from \"../swiper\"\r\nimport TabsContext from \"./tabs.context\"\r\n\r\ninterface TabPaneBaseProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  index: number\r\n  value?: any\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function TabPaneBase(props: TabPaneBaseProps) {\r\n  const { className, style, index, value, children, ...restProps } = props\r\n  const { index: activeIndex, value: activeValue, lazyRender, animated, swipeable } = useContext(\r\n    TabsContext,\r\n  )\r\n\r\n  const active = activeValue === value\r\n\r\n  const initializedRef = useRef(false)\r\n\r\n  const shouldRender = useMemo(() => {\r\n    if (!lazyRender) {\r\n      return true\r\n    }\r\n\r\n    if (initializedRef.current) {\r\n      return true\r\n    }\r\n\r\n    if ((index - 1 === activeIndex || index + 1 === activeIndex) && !initializedRef.current) {\r\n      initializedRef.current = true\r\n      return true\r\n    }\r\n\r\n    if (active && !initializedRef.current) {\r\n      initializedRef.current = true\r\n    }\r\n    return active\r\n  }, [active, activeIndex, index, lazyRender])\r\n\r\n  const tabPane = (\r\n    <View\r\n      style={{\r\n        ...style,\r\n        display: !(animated || swipeable) && !active ? \"none\" : \"\",\r\n      }}\r\n      className={classNames(prefixClassname(\"tabs__tab-pane\"), className)}\r\n      children={shouldRender ? children : undefined}\r\n      {...restProps}\r\n    />\r\n  )\r\n\r\n  if (animated || swipeable) {\r\n    return (\r\n      <Swiper.Item\r\n        className={classNames(prefixClassname(\"tabs__tab-pane-wrapper\"), {\r\n          [prefixClassname(\"tabs__tab-pane-wrapper--inactive\")]: !active,\r\n        })}\r\n        children={tabPane}\r\n      />\r\n    )\r\n  }\r\n\r\n  return tabPane\r\n}\r\n","import { View } from \"@tarojs/components\"\nimport classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport * as React from \"react\"\nimport { ReactNode, useMemo } from \"react\"\nimport { prefixClassname } from \"../styles\"\nimport Swiper from \"../swiper\"\nimport TabPaneBase from \"./tab-pane-base\"\nimport { TabEvent, TabObject } from \"./tabs.shared\"\n\nfunction useTabPanes(tabObjects?: TabObject[]): ReactNode {\n  return useMemo(() => _.map(tabObjects, (props) => <TabPaneBase {...props} />), [tabObjects])\n}\n\ninterface TabsContentProps {\n  value: any\n  lazyRender: boolean\n  duration?: number\n  animated: boolean\n  swipeable: boolean\n  tabObjects: TabObject[]\n\n  onTabClick?(event: TabEvent): void\n}\n\nexport function TabsContent(props: TabsContentProps) {\n  const { value: activeValue, duration, animated, swipeable, tabObjects, onTabClick } = props\n\n  const panes = useTabPanes(tabObjects)\n\n  function onSwiperChange(index: number) {\n    const tabObject = _.get(tabObjects, index)\n    if (tabObject) {\n      const { value, title, disabled } = tabObject\n      if (!disabled) {\n        onTabClick?.({ value, title, disabled })\n      }\n    }\n  }\n\n  const renderChildren = () => {\n    if (animated || swipeable) {\n      return (\n        <Swiper\n          value={activeValue as number}\n          loop={false}\n          className={prefixClassname(\"tabs__track\")}\n          duration={duration}\n          touchable={swipeable}\n          children={panes}\n          onChange={onSwiperChange}\n        />\n      )\n    }\n\n    return panes\n  }\n\n  return (\n    <View\n      className={classNames(prefixClassname(\"tabs__content\"), {\n        [prefixClassname(\"tabs__content--animated\")]: animated,\n      })}\n      children={renderChildren()}\n    />\n  )\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TabsContext from \"./tabs.context\"\r\n\r\ninterface TabsLineProps {\r\n  active?: boolean\r\n}\r\n\r\nexport default function TabsLine(props: TabsLineProps) {\r\n  const { active } = props\r\n  const { duration } = useContext(TabsContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"tabs__line\"), {\r\n        [prefixClassname(\"tabs__line--active\")]: active,\r\n      })}\r\n      style={{ transitionDuration: `${duration}ms` }}\r\n    />\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TabsLine from \"./tabs-line\"\r\n\r\ninterface TabProps extends ViewProps {\r\n  active?: boolean\r\n  disabled?: boolean\r\n  underline?: boolean\r\n  dot?: boolean\r\n  badge?: ReactNode\r\n  ellipsis?: boolean\r\n  flexBasis?: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Tab(props: TabProps) {\r\n  const {\r\n    className,\r\n    active,\r\n    disabled = false,\r\n    underline,\r\n    ellipsis,\r\n    flexBasis,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      style={{ flexBasis }}\r\n      className={classNames(\r\n        prefixClassname(\"tabs__tab\"),\r\n        {\r\n          [prefixClassname(\"tabs__tab--active\")]: active,\r\n          [prefixClassname(\"tabs__tab--disabled\")]: disabled,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"tabs__tab__content\"), {\r\n          [prefixClassname(\"ellipsis\")]: ellipsis,\r\n        })}\r\n        children={children}\r\n      />\r\n      {underline && <TabsLine active={active} />}\r\n    </View>\r\n  )\r\n}\r\n","import { ScrollView, View } from \"@tarojs/components\"\nimport { nextTick, offWindowResize, onWindowResize } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport * as React from \"react\"\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport { prefixClassname } from \"../styles\"\nimport { HAIRLINE_BORDER_TOP_BOTTOM } from \"../styles/hairline\"\nimport { getRect, getRects } from \"../utils/dom/rect\"\nimport Tab from \"./tab\"\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\n\nexport interface NavOffset {\n  left?: number\n  width?: number\n}\n\nexport interface TabOffset {\n  left?: number\n  width?: number\n}\n\ninterface TabsHeaderProps {\n  value: any\n  theme?: TabsTheme\n  bordered?: boolean\n  ellipsis?: boolean\n  tabObjects: TabObject[]\n\n  onTabClick?(event: TabEvent): void\n}\n\nexport default function TabsHeader(props: TabsHeaderProps) {\n  const { value: activeValue, theme, ellipsis, bordered, tabObjects, onTabClick } = props\n  const themeLine = theme === \"line\"\n  const themeCard = theme === \"card\"\n\n  const navRef = useRef()\n\n  const [navOffset, setNavOffset] = useState<NavOffset>({})\n  const [tabOffsets, setTabOffsets] = useState<TabOffset[]>([])\n\n  const activeIndex = useMemo(() => _.findIndex(tabObjects, (tab) => tab.value === activeValue), [\n    tabObjects,\n    activeValue,\n  ])\n\n  const activeOffset = useMemo(() => {\n    if (_.isEmpty(tabOffsets) || activeIndex === -1 || activeIndex >= _.size(tabOffsets)) {\n      return {}\n    }\n    const { width } = tabOffsets[activeIndex]\n    const left = tabOffsets\n      .slice(0, activeIndex)\n      .reduce((prev: number, curr: TabOffset) => prev + (curr.width ?? 0), 0)\n    return {\n      left,\n      width,\n    }\n  }, [tabOffsets, activeIndex])\n\n  const scrollLeft = useMemo(() => {\n    if (navOffset) {\n      const { width: navOffsetWidth = 0 } = navOffset\n      const { left: offsetLeft = 0, width: offsetWidth = 0 } = activeOffset\n      return offsetLeft - (navOffsetWidth - offsetWidth) / 2\n    }\n    return 0\n  }, [navOffset, activeOffset])\n\n  const resize = useCallback(() => {\n    Promise.all([getRect(navRef), getRects(navRef, ` .${prefixClassname(\"tabs__tab\")}`)]).then(\n      ([navRect, tabRects]) => {\n        setNavOffset(navRect)\n        setTabOffsets(tabRects)\n      },\n    )\n  }, [])\n\n  useEffect(() => nextTick(resize), [resize, tabObjects])\n\n  // resize\n  useEffect(() => {\n    onWindowResize?.(resize)\n    return () => offWindowResize?.(resize)\n  }, [resize])\n\n  return (\n    <View\n      className={classNames(\n        prefixClassname(\"tabs__wrap\"),\n        prefixClassname(\"tabs__wrap--scrollable\"),\n        {\n          [HAIRLINE_BORDER_TOP_BOTTOM]: bordered && themeLine,\n        },\n      )}\n    >\n      <ScrollView\n        scrollX\n        scrollWithAnimation\n        scrollLeft={scrollLeft}\n        className={classNames(prefixClassname(\"tabs__wrap__scroll\"), {\n          [prefixClassname(\"tabs__wrap__scroll--line\")]: themeLine,\n          [prefixClassname(\"tabs__wrap__scroll--card\")]: themeCard,\n        })}\n      >\n        <View\n          ref={navRef}\n          className={classNames(prefixClassname(\"tabs__nav\"), {\n            [prefixClassname(\"tabs__nav--line\")]: themeLine,\n            [prefixClassname(\"tabs__nav--card\")]: themeCard,\n          })}\n        >\n          {\n            //\n            _.map(tabObjects, (tabObject) => (\n              <Tab\n                key={tabObject.key}\n                // TODO swipeThreshold does not support\n                flexBasis={themeLine && ellipsis ? `${88 / 4}%` : \"\"}\n                className={tabObject?.classNames?.title}\n                dot={tabObject.dot}\n                badge={tabObject.badge}\n                active={activeValue === tabObject.value}\n                disabled={tabObject.disabled}\n                underline={themeLine}\n                ellipsis={themeLine && ellipsis}\n                children={tabObject.title}\n                onClick={() =>\n                  onTabClick?.({\n                    value: tabObject.value,\n                    title: tabObject.title,\n                    disabled: tabObject.disabled,\n                  })\n                }\n              />\n            ))\n          }\n        </View>\n      </ScrollView>\n    </View>\n  )\n}\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { PageScrollObject } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\"\r\nimport Sticky from \"../sticky\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useValue } from \"../utils/state\"\r\nimport TabPane from \"./tab-pane\"\r\nimport { TabsContent } from \"./tabs-content\"\r\nimport TabsHeader from \"./tabs-header\"\r\nimport TabsContext from \"./tabs.context\"\r\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\r\n\r\nfunction useTabObjects(children: ReactNode) {\r\n  return useMemo(() => {\r\n    const tabObjects: TabObject[] = []\r\n\r\n    Children.forEach(children, (node: ReactNode) => {\r\n      if (!isValidElement(node)) {\r\n        return node\r\n      }\r\n      const element = node as ReactElement\r\n      if (element.type !== TabPane) {\r\n        return element\r\n      }\r\n      const { key, props } = element\r\n      const index = _.size(tabObjects)\r\n      const { value, ...restProps } = props\r\n      tabObjects.push({\r\n        key: key ?? index,\r\n        index,\r\n        value: value ?? index,\r\n        ...restProps,\r\n      })\r\n    })\r\n\r\n    return tabObjects\r\n  }, [children])\r\n}\r\n\r\ninterface TabsSticky {\r\n  offsetTop?: string | number\r\n}\r\n\r\nfunction useTabsSticky(sticky?: boolean | TabsSticky): TabsSticky | undefined {\r\n  if (sticky === false) {\r\n    return undefined\r\n  }\r\n  if (_.isBoolean(sticky) && sticky) {\r\n    return {\r\n      offsetTop: 0,\r\n    }\r\n  }\r\n  return sticky\r\n}\r\n\r\nexport interface TabsProps extends ViewProps {\r\n  className?: string\r\n  defaultValue?: any\r\n  value?: any\r\n  theme?: TabsTheme\r\n  duration?: number\r\n  lazyRender?: boolean\r\n  animated?: boolean\r\n  swipeable?: boolean\r\n  sticky?: boolean | TabsSticky\r\n  bordered?: boolean\r\n  ellipsis?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any, event: TabEvent): void\r\n\r\n  onTabClick?(event: TabEvent): void\r\n\r\n  onScroll?(scroll: PageScrollObject): void\r\n}\r\n\r\nfunction Tabs(props: TabsProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    duration = 300,\r\n    lazyRender = true,\r\n    animated = false,\r\n    swipeable = false,\r\n    sticky = false,\r\n    theme = \"line\",\r\n    ellipsis = true,\r\n    bordered,\r\n    children: childrenProp,\r\n    onTabClick,\r\n    onChange,\r\n    onScroll,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    defaultValue,\r\n    value: valueProp,\r\n  })\r\n\r\n  const rootRef = useRef()\r\n\r\n  const stickyProps = useTabsSticky(sticky)\r\n\r\n  const tabObjects = useTabObjects(childrenProp)\r\n\r\n  const index = useMemo<number | undefined>(() => {\r\n    for (const tab of tabObjects) {\r\n      if (tab.value === value) {\r\n        return tab.index\r\n      }\r\n    }\r\n  }, [tabObjects, value])\r\n\r\n  const handleTabClick = useCallback(\r\n    (event: TabEvent) => {\r\n      if (!event.disabled) {\r\n        setValue(event.value)\r\n        onChange?.(event.value, event)\r\n      }\r\n      onTabClick?.(event)\r\n    },\r\n    [onChange, onTabClick, setValue],\r\n  )\r\n\r\n  const headerRender = useMemo(\r\n    () => (\r\n      <TabsHeader\r\n        value={value}\r\n        theme={theme}\r\n        bordered={bordered}\r\n        ellipsis={ellipsis}\r\n        tabObjects={tabObjects}\r\n        onTabClick={handleTabClick}\r\n      />\r\n    ),\r\n    [bordered, ellipsis, handleTabClick, tabObjects, theme, value],\r\n  )\r\n\r\n  return (\r\n    <TabsContext.Provider\r\n      value={{\r\n        index,\r\n        value,\r\n        duration,\r\n        lazyRender,\r\n        animated,\r\n        swipeable,\r\n        theme,\r\n        ellipsis,\r\n        bordered,\r\n        tabObjects,\r\n        onTabClick: handleTabClick,\r\n      }}\r\n    >\r\n      <View\r\n        ref={rootRef}\r\n        className={classNames(\r\n          prefixClassname(\"tabs\"),\r\n          {\r\n            [prefixClassname(\"tabs--line\")]: theme === \"line\",\r\n            [prefixClassname(\"tabs--card\")]: theme === \"card\",\r\n          },\r\n          className,\r\n        )}\r\n        {...restProps}\r\n      >\r\n        {stickyProps ? (\r\n          <Sticky\r\n            container={rootRef}\r\n            offsetTop={stickyProps.offsetTop}\r\n            children={headerRender}\r\n            onScroll={onScroll}\r\n          />\r\n        ) : (\r\n          headerRender\r\n        )}\r\n        <TabsContent\r\n          value={value}\r\n          lazyRender={lazyRender}\r\n          duration={duration}\r\n          animated={animated}\r\n          swipeable={swipeable}\r\n          tabObjects={tabObjects}\r\n          onTabClick={handleTabClick}\r\n        />\r\n      </View>\r\n    </TabsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Tabs\r\n","import TabPane from \"./tab-pane\"\r\nimport TabsElement, { TabsProps } from \"./tabs\"\r\nimport { TabEvent as SharedTabEvent } from \"./tabs.shared\"\r\n\r\ninterface TabsInterface {\r\n  (props: TabsProps): JSX.Element\r\n\r\n  TabPane: typeof TabPane\r\n}\r\n\r\nconst Tabs = TabsElement as TabsInterface\r\n\r\nTabs.TabPane = TabPane\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Tabs {\r\n  export type TabEvent = SharedTabEvent\r\n}\r\n\r\nexport default Tabs\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport { default as TaroImage } from \"../image\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nconst PRESET_IMAGES = [\"default\", \"error\", \"search\", \"network\"]\r\n\r\nfunction obtainImageUrl(image?: string) {\r\n  if (image && PRESET_IMAGES.includes(image)) {\r\n    return `https://img.yzcdn.cn/vant/empty-image-${image}.png`\r\n  }\r\n  return image\r\n}\r\n\r\ninterface EmptyProps extends ViewProps {\r\n  className?: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Empty(props: EmptyProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"empty\"), className)} {...restProps} />\r\n}\r\n\r\nnamespace Empty {\r\n  type ImagePreset = \"default\" | \"error\" | \"search\" | \"network\"\r\n\r\n  interface ImageProps {\r\n    className?: string\r\n    style?: CSSProperties\r\n    src?: ImagePreset | string\r\n  }\r\n\r\n  export function Image(props: ImageProps) {\r\n    const { className, style, src = \"default\" } = props\r\n    const __src__ = obtainImageUrl(src)\r\n    return (\r\n      <TaroImage\r\n        className={classNames(prefixClassname(\"empty__image\"), className)}\r\n        style={style}\r\n        src={__src__}\r\n      />\r\n    )\r\n  }\r\n\r\n  interface DescriptionProps extends ViewProps {\r\n    children?: ReactNode\r\n  }\r\n\r\n  export function Description(props: DescriptionProps) {\r\n    const { className, ...restProps } = props\r\n    return (\r\n      <View\r\n        className={classNames(prefixClassname(\"empty__description\"), className)}\r\n        {...restProps}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Empty\r\n","import { Button, Empty, Tabs } from \"@taroify/core\"\r\nimport * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction PresetEmpty() {\r\n  const [tab, setTab] = useState(0)\r\n  return (\r\n    <Block title=\"图片类型\">\r\n      <Tabs value={tab} onChange={setTab}>\r\n        <Tabs.TabPane title=\"通用错误\">\r\n          <Empty>\r\n            <Empty.Image src=\"error\" />\r\n            <Empty.Description>描述文字</Empty.Description>\r\n          </Empty>\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane title=\"网络错误\">\r\n          <Empty>\r\n            <Empty.Image src=\"network\" />\r\n            <Empty.Description>描述文字</Empty.Description>\r\n          </Empty>\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane title=\"搜索提示\">\r\n          <Empty>\r\n            <Empty.Image src=\"search\" />\r\n            <Empty.Description>描述文字</Empty.Description>\r\n          </Empty>\r\n        </Tabs.TabPane>\r\n      </Tabs>\r\n    </Block>\r\n  )\r\n}\r\n\r\nexport default function EmptyDemo() {\r\n  return (\r\n    <Page title=\"Empty 空状态\" className=\"empty-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Empty>\r\n          <Empty.Image />\r\n          <Empty.Description>描述文字</Empty.Description>\r\n        </Empty>\r\n      </Block>\r\n      <PresetEmpty />\r\n      <Block title=\"自定义图片\">\r\n        <Empty>\r\n          <Empty.Image\r\n            className=\"custom-empty__image\"\r\n            src=\"https://img.yzcdn.cn/vant/custom-empty-image.png\"\r\n          />\r\n          <Empty.Description>描述文字</Empty.Description>\r\n        </Empty>\r\n      </Block>\r\n      <Block title=\"底部内容\">\r\n        <Empty>\r\n          <Empty.Image />\r\n          <Empty.Description>描述文字</Empty.Description>\r\n          <Button shape=\"round\" color=\"danger\" className=\"bottom-button\">\r\n            按钮\r\n          </Button>\r\n        </Empty>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}