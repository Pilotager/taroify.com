{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/state.ts","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/core/src/utils/dom/event.ts","webpack:///../../../../packages/core/src/cell/cell-group.context.ts","webpack:///../../../../packages/core/src/cell/cell-base.tsx","webpack:///../../../../packages/core/src/cell/cell-brief.tsx","webpack:///../../../../packages/core/src/cell/cell-title.tsx","webpack:///../../../../packages/core/src/cell/cell-value.tsx","webpack:///../../../../packages/core/src/cell/cell.tsx","webpack:///../../../../packages/core/src/cell/cell-group.tsx","webpack:///../../../../packages/core/src/cell/index.ts","webpack:///../../../../packages/core/src/cell/style/index.ts","webpack:///../../../../packages/core/src/utils/touch.ts","webpack:///../../../../packages/core/src/styles/hairline.ts","webpack:///../../../../packages/core/src/utils/raf.ts","webpack:///../../../../packages/core/src/utils/dom/computed-style.ts","webpack:///../../../../packages/core/src/swiper/swiper.context.ts","webpack:///../../../../packages/core/src/swiper/swiper-indicator.tsx","webpack:///../../../../packages/core/src/swiper/swiper-item.tsx","webpack:///../../../../packages/core/src/swiper/swiper.tsx","webpack:///../../../../packages/core/src/swiper/index.ts","webpack:///../../../../packages/core/src/swiper/style/index.ts","webpack:///../../../../packages/core/src/sticky/style/index.ts","webpack:///../../../../packages/core/src/utils/system.ts","webpack:///../../../../packages/core/src/sticky/index.ts","webpack:///../../../../packages/core/src/sticky/sticky.tsx","webpack:///../../../../packages/core/src/tabs/style/index.ts","webpack:///../../../../packages/core/src/tabs/tab-pane.tsx","webpack:///../../../../packages/core/src/tabs/tabs.context.ts","webpack:///../../../../packages/core/src/tabs/tab-pane-base.tsx","webpack:///../../../../packages/core/src/tabs/tabs-content.tsx","webpack:///../../../../packages/core/src/tabs/tabs-line.tsx","webpack:///../../../../packages/core/src/tabs/tab.tsx","webpack:///../../../../packages/core/src/tabs/tabs-header.tsx","webpack:///../../../../packages/core/src/tabs/tabs.tsx","webpack:///../../../../packages/core/src/tabs/index.ts","webpack:///../../../../packages/core/src/index-list/index-list.context.ts","webpack:///../../../../packages/core/src/index-list/index-list-anchor.tsx","webpack:///../../../../packages/core/src/index-list/index-list-index.tsx","webpack:///../../../../packages/core/src/index-list/index-list-sidebar.tsx","webpack:///../../../../packages/core/src/index-list/index-list.tsx","webpack:///../../../../packages/core/src/index-list/index.ts","webpack:///./src/pages/navigation/index-list/index.tsx"],"names":["previousRef","useRef","useEffect","usePreviousRef","cb","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","defaultValue","value","setValue","emitChange","getValue","isValidElement","element","isIconElement","cloneElement","node","className","oldProps","props","newProps","classNames","event","stopPropagation","touches","clientX","clientY","createContext","CellBase","size","clickable","clickableProp","required","bordered","children","useContext","prefixClassname","align","icon","cloneIconElement","rightIcon","CellBrief","CellTitle","CellValue","alone","inset","CellGroupContext","title","Cell","Object","brief","emptyFunction","touchRef","startX","startY","deltaX","deltaY","offsetX","offsetY","isVertical","isHorizontal","start","move","reset","TouchDirection","touch","Math","getDirection","x","y","HAIRLINE_BORDER","HAIRLINE_BORDER_TOP","HAIRLINE_BORDER_LEFT","HAIRLINE_BORDER_BOTTOM","HAIRLINE_BORDER_SURROUND","HAIRLINE_BORDER_TOP_BOTTOM","HAIRLINE_BORDER_UNSET_TOP_BOTTOM","requestAnimationFrame","rafIds","raf","elementUnref","Promise","window","resolve","queryNodesRef","computedStyle","result","itemInstances","indicator","count","renderIndicator","key","indicators","direction","__dataIndex__","style","childrenProp","vertical","initializedRef","mountedRef","useState","shouldRender","lazyRender","active","maxActive","prevActive","nextActive","useMounted","setOffset","rootStyle","useRendered","addUnitPx","offset","undefined","getIndicatorValue","Swiper","loop","touchable","autoplay","duration","onChangeProp","useValue","valueRef","useToRef","useSwiperChildren","__children__","items","Children","elementType","useTouch","rootRef","rectRef","swipingRef","activeIndexRef","touchStartTimeRef","autoplayTimerRef","valueIndicatorRef","useRenderedRef","activeIndicatorRef","getDelta","getCorrectDirection","customRectRef","width","height","propRectRef","sizeRef","trackSizeRef","minOffsetRef","maxCountRef","getTargetActive","pace","getTargetOffset","currentPosition","targetActive","targetOffset","moveTo","outRightBound","outLeftBound","previousActiveIndex","correctPosition","swipeTo","doubleRaf","targetIndex","next","stopAutoplay","clearTimeout","startAutoplay","setTimeout","onTouchStart","Date","onTouchMove","correctDirection","preventDefault","onTouchEnd","delta","speed","shouldSwipe","getTrackRect","getRect","getComputedStyle","makeRect","rect","unitToPx","initialize","a","activeIndex","current","item","resize","nextTick","useWindowResize","valueIndicator","trackStyle","transitionDuration","transform","crossAxis","crossAxisValue","ref","SwiperContext","catchMove","onTouchCancel","screenHeight","screenWidth","windowHeight","windowWidth","position","offsetTop","offsetBottom","container","onScroll","bottom","console","offsetTopProp","offsetProp","offsetBottomProp","counterRef","offsetValue","rootRect","fixed","stickyStyle","scrollTop","__rootRect__","setRootRect","containerRect","difference","setTransform","setFixed","getSystemRect","invokeScroll","usePageScroll","React","animated","swipeable","tabObjects","activeValue","tabPane","display","onTabClick","panes","useTabPanes","tabObject","disabled","renderChildren","onSwiperChange","flexBasis","ellipsis","underline","themeLine","theme","themeCard","navRef","tab","activeOffset","tabOffsets","left","prev","curr","scrollLeft","navOffsetWidth","offsetLeft","navOffset","getRects","setNavOffset","setTabOffsets","onWindowResize","offWindowResize","scrollX","scrollWithAnimation","dot","badge","onClick","useTabObjects","Tabs","sticky","valueProp","stickyProps","useTabsSticky","handleTabClick","headerRender","TabsContext","activeArrayedIndex","getListRect","getAnchorRects","forwardRef","scrollIntoView","top","pageScrollTo","useImperativeHandle","wrapperStyle","anchorStyle","arrayedIndex","stickyOffsetTop","listRect","anchorRects","currentAnchor","currentOffsetTop","translateY","useIndexBarChildren","anchorRefs","anchorProps","childrenIndexBar","isFragment","indexProp","anchorRef","length","IndexList","scrollTopRef","listRef","sidebarRef","listRectRef","sidebarRectRef","anchorRectsRef","getSidebarRect","scrollToAnchorIndexRef","getActiveAnchor","i","prevHeight","setActiveAnchor","scrollToAnchor","anchorArrayedIndex","matchInstance","getAnchorArrayedIndex","sidebarRect","getClientCoordinates","sidebarLength","itemHeight","scrollToEvent","onSidebarClick","onTouchStop","rects","sidebarIndexes","anchorProp","IndexListContext","activeAnchor","BasicIndexBar","indexList","charCodeOfA","charCodeAt","push","String","fromCharCode","Anchor","CustomIndexBar","IndexBarDemo","setTab","TabPane"],"mappings":"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","file":"chunk/74.014ca61b.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  const stateRef = useRef(defaultValue ?? value ?? initialValue)\r\n\r\n  if (value !== undefined) {\r\n    stateRef.current = value\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(value)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ value: stateRef.current, getValue, setValue }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","import { CommonEvent, ITouchEvent } from \"@tarojs/components\"\nimport { inBrowser } from \"../base\"\n\nexport function stopPropagation(event: CommonEvent) {\n  event.stopPropagation()\n}\n\nexport function preventDefault(event: CommonEvent, isStopPropagation?: boolean) {\n  if (inBrowser) {\n    // @ts-ignore\n    if (typeof event.cancelable !== \"boolean\" || event.cancelable) {\n      event.preventDefault()\n    }\n  } else {\n    event.preventDefault()\n  }\n\n  if (isStopPropagation) {\n    stopPropagation(event)\n  }\n}\n\ninterface ClientCoordinates {\n  clientX: number\n  clientY: number\n}\n\nexport function getClientCoordinates(event: ITouchEvent | MouseEvent): ClientCoordinates {\n  // @ts-ignore\n  const { clientX, clientY, touches } = event\n\n  if (clientX && clientY) {\n    return {\n      clientX,\n      clientY,\n    }\n  }\n  return touches[0]\n}\n","import { createContext } from \"react\"\r\n\r\ninterface CellGroupContextValue {\r\n  clickable?: boolean\r\n}\r\n\r\nconst CellGroupContext = createContext<CellGroupContextValue>({})\r\n\r\nexport default CellGroupContext\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellBaseProps extends ViewProps {\r\n  bordered?: boolean\r\n  required?: boolean\r\n  clickable?: boolean\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellBase(props: CellBaseProps) {\r\n  const {\r\n    className,\r\n    size = \"medium\",\r\n    align,\r\n    clickable: clickableProp = false,\r\n    required = false,\r\n    bordered = true,\r\n    icon,\r\n    rightIcon,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { clickable } = useContext(CellGroupContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell\"),\r\n        {\r\n          [prefixClassname(\"cell--start\")]: align === \"start\",\r\n          [prefixClassname(\"cell--center\")]: align === \"center\",\r\n          [prefixClassname(\"cell--end\")]: align === \"end\",\r\n          [prefixClassname(\"cell--large\")]: size === \"large\",\r\n          [prefixClassname(\"cell--clickable\")]: clickableProp || clickable,\r\n          [prefixClassname(\"cell--required\")]: required,\r\n          [prefixClassname(\"cell--borderless\")]: !bordered,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon && isIconElement(icon)\r\n        ? cloneIconElement(icon, { className: prefixClassname(\"cell__icon\") })\r\n        : icon}\r\n      {children}\r\n      {rightIcon && isIconElement(rightIcon)\r\n        ? cloneIconElement(rightIcon, { className: prefixClassname(\"cell__right-icon\") })\r\n        : rightIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default CellBase\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellBriefProps extends ViewProps {\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellBrief(props: CellBriefProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__brief\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellBrief\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellTitleProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellTitle(props: CellTitleProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__title\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellTitle\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellValueProps extends ViewProps {\r\n  alone?: boolean\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellValue(props: CellValueProps) {\r\n  const { className, alone, ...restProps } = props\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell__value\"),\r\n        {\r\n          [prefixClassname(\"cell__value--alone\")]: alone,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CellValue\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport CellBase from \"./cell-base\"\r\nimport CellBrief from \"./cell-brief\"\r\nimport CellTitle from \"./cell-title\"\r\nimport CellValue from \"./cell-value\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellProps extends ViewProps {\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Cell(props: CellProps) {\r\n  const { title, brief, children, ...restProps } = props\r\n  return (\r\n    <CellBase {...restProps}>\r\n      {title && (\r\n        <CellTitle>\r\n          {title}\r\n          {brief && <CellBrief children={brief} />}\r\n        </CellTitle>\r\n      )}\r\n      <CellValue alone={!title} children={children} />\r\n    </CellBase>\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\n\r\ninterface CellGroupProps extends ViewProps {\r\n  title?: ReactNode\r\n  clickable?: boolean\r\n  inset?: boolean\r\n  bordered?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nexport function CellGroup(props: CellGroupProps) {\r\n  const { title, clickable = false, inset = false, bordered = true, children, ...restProps } = props\r\n  return (\r\n    <CellGroupContext.Provider\r\n      value={{\r\n        clickable,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"cell-group\"), {\r\n          [prefixClassname(\"cell-group--inset\")]: inset,\r\n        })}\r\n        {...restProps}\r\n      >\r\n        {title && (\r\n          <View\r\n            className={classNames(prefixClassname(\"cell-group__title\"), {\r\n              [prefixClassname(\"cell-group__title--inset\")]: inset,\r\n            })}\r\n            children={title}\r\n          />\r\n        )}\r\n        <View\r\n          className={classNames(prefixClassname(\"cell-group\"), {\r\n            [prefixClassname(\"hairline--top-bottom\")]: bordered,\r\n          })}\r\n          children={children}\r\n        />\r\n      </View>\r\n    </CellGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CellGroup\r\n","import CellElement, { CellProps } from \"./cell\"\r\nimport CellGroup from \"./cell-group\"\r\n\r\nexport type { CellAlign, CellSize } from \"./cell.shared\"\r\nexport { default as CellBase } from \"./cell-base\"\r\nexport { default as CellTitle } from \"./cell-title\"\r\nexport { default as CellValue } from \"./cell-value\"\r\nexport type { CellProps } from \"./cell\"\r\n\r\ninterface CellInterface {\r\n  (props: CellProps): JSX.Element\r\n\r\n  Group: typeof CellGroup\r\n}\r\n\r\nconst Cell = CellElement as CellInterface\r\nCell.Group = CellGroup\r\n\r\nexport default Cell\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { ITouchEvent } from \"@tarojs/components\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nconst MIN_DISTANCE = 10\n\nexport enum TouchDirection {\n  Horizontal = \"horizontal\",\n  Vertical = \"vertical\",\n}\n\nfunction getDirection(x: number, y: number): TouchDirection | undefined {\n  if (x > y && x > MIN_DISTANCE) {\n    return TouchDirection.Horizontal\n  }\n  if (y > x && y > MIN_DISTANCE) {\n    return TouchDirection.Vertical\n  }\n}\n\nfunction emptyFunction() {}\n\nexport interface TouchRef {\n  startX: number\n  startY: number\n  deltaX: number\n  deltaY: number\n  offsetX: number\n  offsetY: number\n  direction?: TouchDirection\n\n  isVertical(): boolean\n\n  isHorizontal(): boolean\n\n  start(event: ITouchEvent): void\n\n  move(event: ITouchEvent): void\n\n  reset(): void\n}\n\nexport function useTouch() {\n  const touchRef = useRef<TouchRef>({\n    startX: 0,\n    startY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    isVertical: () => false,\n    isHorizontal: () => false,\n    start: emptyFunction,\n    move: emptyFunction,\n    reset: emptyFunction,\n  })\n\n  const isVertical = useCallback(() => touchRef.current.direction === TouchDirection.Vertical, [])\n\n  const isHorizontal = useCallback(\n    () => touchRef.current.direction === TouchDirection.Horizontal,\n    [],\n  )\n\n  const reset = useCallback(function () {\n    touchRef.current.deltaX = 0\n    touchRef.current.deltaY = 0\n    touchRef.current.offsetX = 0\n    touchRef.current.offsetY = 0\n    touchRef.current.direction = undefined\n  }, [])\n\n  const start = useCallback(\n    function (event: ITouchEvent) {\n      reset()\n      touchRef.current.startX = event.touches[0].clientX\n      touchRef.current.startY = event.touches[0].clientY\n    },\n    [reset],\n  )\n\n  const move = useCallback(function (event: ITouchEvent) {\n    const touch = event.touches[0]\n    // Fix: Safari back will set clientX to negative number\n    touchRef.current.deltaX = touch.clientX < 0 ? 0 : touch.clientX - touchRef.current.startX\n    touchRef.current.deltaY = touch.clientY - touchRef.current.startY\n    touchRef.current.offsetX = Math.abs(touchRef.current.deltaX)\n    touchRef.current.offsetY = Math.abs(touchRef.current.deltaY)\n\n    if (!touchRef.current.direction) {\n      touchRef.current.direction = getDirection(touchRef.current.offsetX, touchRef.current.offsetY)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (touchRef.current.isHorizontal !== isHorizontal) {\n      touchRef.current.isHorizontal = isHorizontal\n    }\n  }, [touchRef, isHorizontal])\n\n  useEffect(() => {\n    if (touchRef.current.isVertical !== isVertical) {\n      touchRef.current.isVertical = isVertical\n    }\n  }, [touchRef, isVertical])\n\n  useEffect(() => {\n    if (touchRef.current.reset !== reset) {\n      touchRef.current.reset = reset\n    }\n  }, [touchRef, reset])\n\n  useEffect(() => {\n    if (touchRef.current.start !== start) {\n      touchRef.current.start = start\n    }\n  }, [touchRef, start])\n\n  useEffect(() => {\n    if (touchRef.current.move !== move) {\n      touchRef.current.move = move\n    }\n  }, [touchRef, move])\n\n  return touchRef.current\n}\n","import { prefixClassname } from \"./prefix\"\n\nexport const HAIRLINE_BORDER = prefixClassname(\"hairline\")\nexport const HAIRLINE_BORDER_TOP = `${HAIRLINE_BORDER}--top`\nexport const HAIRLINE_BORDER_LEFT = `${HAIRLINE_BORDER}--left`\nexport const HAIRLINE_BORDER_BOTTOM = `${HAIRLINE_BORDER}--bottom`\nexport const HAIRLINE_BORDER_SURROUND = `${HAIRLINE_BORDER}--surround`\nexport const HAIRLINE_BORDER_TOP_BOTTOM = `${HAIRLINE_BORDER}--top-bottom`\nexport const HAIRLINE_BORDER_UNSET_TOP_BOTTOM = `${HAIRLINE_BORDER}-unset--top-bottom`\n","import * as _ from \"lodash\"\nimport * as requestAnimationFrame from \"raf\"\n\nexport function cancelRaf(rafId: number | number[]) {\n  if (_.isNumber(rafId)) {\n    requestAnimationFrame.cancel(rafId)\n  } else if (_.isArray(rafId)) {\n    _.forEach(rafId, cancelRaf)\n  }\n}\n\nexport function raf(cb: FrameRequestCallback) {\n  // @ts-ignore\n  return requestAnimationFrame.default(cb)\n}\n\nexport default raf\n\nexport function doubleRaf(cb: FrameRequestCallback): [number, number] {\n  const rafIds: [number, number] = [0, 0]\n  rafIds[1] = raf(() => {\n    rafIds[0] = raf(cb)\n  })\n  return rafIds\n}\n","import { inBrowser } from \"../base\"\r\nimport { elementUnref, queryNodesRef } from \"./element\"\r\n\r\nexport function getComputedStyle(\r\n  elementOrRef: any,\r\n  computedStyle: string[],\r\n): Promise<CSSStyleDeclaration> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      return Promise.resolve(window.getComputedStyle(element as any))\r\n    } else {\r\n      return new Promise<CSSStyleDeclaration>((resolve) => {\r\n        queryNodesRef(element)\r\n          .fields(\r\n            {\r\n              computedStyle,\r\n            },\r\n            (result) => resolve(result as CSSStyleDeclaration),\r\n          )\r\n          .exec()\r\n      })\r\n    }\r\n  }\r\n\r\n  return Promise.resolve({} as CSSStyleDeclaration)\r\n}\r\n","import { createContext } from \"react\"\r\nimport { SwiperDirection } from \"./swiper.shared\"\r\n\r\nexport interface SwiperItemInstance {\r\n  setOffset: (offset: number) => void\r\n}\r\n\r\ninterface SwiperContextValue {\r\n  direction?: SwiperDirection\r\n  lazyRender?: boolean\r\n  loop?: boolean\r\n  size?: number\r\n  indicator?: number\r\n  count?: number\r\n  itemInstances: SwiperItemInstance[]\r\n}\r\n\r\nconst SwiperContext = createContext<SwiperContextValue>({\r\n  itemInstances: [],\r\n})\r\nexport default SwiperContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useCallback, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport SwiperContext from \"./swiper.context\"\r\n\r\nexport interface SwiperIndicatorProps extends ViewProps {\r\n  className?: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function SwiperIndicator(props: SwiperIndicatorProps) {\r\n  const { className, children, ...restProps } = props\r\n  const { indicator = 0, direction, count } = useContext(SwiperContext)\r\n\r\n  const renderIndicator = useCallback(\r\n    (index: number) => (\r\n      <View\r\n        key={index}\r\n        className={classNames(prefixClassname(\"swiper__indicator\"), {\r\n          [prefixClassname(\"swiper__indicator--active\")]: index === indicator,\r\n        })}\r\n      />\r\n    ),\r\n    [indicator],\r\n  )\r\n\r\n  const indicators = useMemo(() => !children && _.range(0, count).map(renderIndicator), [\r\n    children,\r\n    count,\r\n    renderIndicator,\r\n  ])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        {\r\n          [prefixClassname(\"swiper__indicators\")]: !children,\r\n          [prefixClassname(\"swiper__indicators--vertical\")]: !children && direction === \"vertical\",\r\n        },\r\n        className,\r\n      )}\r\n      children={children ?? indicators}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useEffect, useMemo, useRef, useState } from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { useRendered } from \"../utils/state\"\r\nimport SwiperContext from \"./swiper.context\"\r\n\r\nexport interface SwiperItemProps extends ViewProps {\r\n  __dataIndex__?: number\r\n  className?: string\r\n  style?: CSSProperties\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function SwiperItem(props: SwiperItemProps) {\r\n  const {\r\n    __dataIndex__ = 0,\r\n    className,\r\n    style: styleProp,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { lazyRender, size, direction, loop, indicator = 0, count = 0, itemInstances } = useContext(\r\n    SwiperContext,\r\n  )\r\n  const vertical = direction === \"vertical\"\r\n\r\n  const initializedRef = useRef(false)\r\n  const mountedRef = useRef(false)\r\n\r\n  const [offset, setOffset] = useState(0)\r\n\r\n  const shouldRender = useMemo(() => {\r\n    if (!lazyRender || initializedRef.current) {\r\n      return true\r\n    }\r\n\r\n    // wait for all item to mount, so we can get the exact count\r\n    if (!mountedRef.current && indicator !== 0) {\r\n      return false\r\n    }\r\n\r\n    const active = indicator\r\n    const maxActive = count - 1\r\n    const prevActive = active === 0 && loop ? maxActive : active - 1\r\n    const nextActive = active === maxActive && loop ? 0 : active + 1\r\n    initializedRef.current =\r\n      __dataIndex__ === active || __dataIndex__ === prevActive || __dataIndex__ === nextActive\r\n    return initializedRef.current\r\n  }, [__dataIndex__, count, indicator, lazyRender, loop])\r\n\r\n  useMounted(() => {\r\n    mountedRef.current = true\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!itemInstances[__dataIndex__]) {\r\n      itemInstances[__dataIndex__] = { setOffset }\r\n    }\r\n  }, [itemInstances, __dataIndex__])\r\n\r\n  const rootStyle = useRendered(() => {\r\n    const style: CSSProperties = {}\r\n    if (size) {\r\n      const mainAxis = vertical ? \"height\" : \"width\"\r\n      style[mainAxis] = addUnitPx(size)\r\n    }\r\n    style.transform = offset ? `translate${vertical ? \"Y\" : \"X\"}(${addUnitPx(offset)})` : \"\"\r\n    return style\r\n  })\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"swiper-item\"), className)}\r\n      style={{\r\n        ...styleProp,\r\n        ...rootStyle,\r\n      }}\r\n      children={shouldRender ? childrenProp : undefined}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { nextTick } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\"\r\nimport { useMounted, useUpdate, useWindowResize } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getComputedStyle } from \"../utils/dom/computed-style\"\r\nimport { preventDefault } from \"../utils/dom/event\"\r\nimport { getRect, makeRect, Rect } from \"../utils/dom/rect\"\r\nimport { addUnitPx, unitToPx } from \"../utils/format/unit\"\r\nimport { doubleRaf } from \"../utils/raf\"\r\nimport { useRendered, useRenderedRef, useToRef, useValue } from \"../utils/state\"\r\nimport { useTouch } from \"../utils/touch\"\r\nimport SwiperIndicator from \"./swiper-indicator\"\r\nimport SwiperItem from \"./swiper-item\"\r\nimport SwiperContext, { SwiperItemInstance } from \"./swiper.context\"\r\nimport { SwiperDirection } from \"./swiper.shared\"\r\n\r\ninterface SwiperChildren {\r\n  items: ReactNode[]\r\n  indicator: ReactNode\r\n  count: number\r\n}\r\n\r\nfunction useSwiperChildren(children: ReactNode): SwiperChildren {\r\n  const __children__: SwiperChildren = {\r\n    items: [],\r\n    indicator: undefined,\r\n    count: 0,\r\n  }\r\n  let index = 0\r\n  Children.forEach(children, (child: ReactNode, i) => {\r\n    // Skip is not Item of Swiper\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n    const element = child as ReactElement\r\n    const elementType = element.type\r\n    if (elementType === SwiperIndicator) {\r\n      __children__.indicator = element\r\n    } else if (elementType === SwiperItem) {\r\n      const { key } = element\r\n      __children__.items.push(\r\n        cloneElement(element, {\r\n          ...element.props,\r\n          key: key ?? i,\r\n          __dataIndex__: index++,\r\n        }),\r\n      )\r\n    } else {\r\n      __children__.items.push(element)\r\n    }\r\n  })\r\n\r\n  __children__.count = __children__.items.length\r\n  return __children__\r\n}\r\n\r\nfunction getIndicatorValue(value: number, count: number) {\r\n  return (value + count) % count\r\n}\r\n\r\nexport interface SwiperProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  defaultValue?: number\r\n  value?: number\r\n  lazyRender?: boolean\r\n  width?: number\r\n  height?: number\r\n  autoplay?: number\r\n  loop?: boolean\r\n  touchable?: boolean\r\n  duration?: number\r\n  direction?: SwiperDirection\r\n  stopPropagation?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: number): void\r\n}\r\n\r\nfunction Swiper(props: SwiperProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    lazyRender,\r\n    loop = true,\r\n    touchable = true,\r\n    autoplay = 0,\r\n    duration = 500,\r\n    width,\r\n    height,\r\n    direction = \"horizontal\",\r\n    stopPropagation = true,\r\n    children: childrenProp,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    value: valueProp,\r\n    defaultValue,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const valueRef = useToRef(value)\r\n\r\n  const { count, indicator, items } = useSwiperChildren(childrenProp)\r\n\r\n  const itemInstances = useMemo<SwiperItemInstance[]>(() => [], [])\r\n\r\n  const touch = useTouch()\r\n\r\n  const update = useUpdate()\r\n\r\n  const vertical = direction === \"vertical\"\r\n\r\n  const rootRef = useRef()\r\n\r\n  const rectRef = useRef<Rect>()\r\n\r\n  const [offset, setOffset] = useState<number>(0)\r\n\r\n  const swipingRef = useRef(false) // Whether to swiping manually\r\n\r\n  const activeIndexRef = useRef<number>(0)\r\n\r\n  const touchStartTimeRef = useRef(0)\r\n\r\n  const autoplayTimerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const valueIndicatorRef = useRenderedRef(() => getIndicatorValue(value, count))\r\n\r\n  const activeIndicatorRef = useRenderedRef(() => getIndicatorValue(activeIndexRef.current, count))\r\n\r\n  const getDelta = useCallback(\r\n    () => (vertical ? touch.deltaY : touch.deltaX),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getCorrectDirection = useCallback(\r\n    () => touch.direction === direction,\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const customRectRef = useRenderedRef(() => ({\r\n    width: width ?? rectRef.current?.width,\r\n    height: height ?? rectRef.current?.height,\r\n  }))\r\n\r\n  const propRectRef = useRenderedRef(() => ({\r\n    width,\r\n    height,\r\n  }))\r\n\r\n  const sizeRef = useRenderedRef(\r\n    () => (vertical ? customRectRef.current?.height : customRectRef.current?.width) ?? 0,\r\n  )\r\n\r\n  const trackSizeRef = useRenderedRef(() => count * sizeRef.current)\r\n\r\n  const minOffsetRef = useRenderedRef(() => {\r\n    if (rectRef.current) {\r\n      const base = (vertical ? rectRef.current?.height : rectRef.current?.width) ?? 0\r\n      return base - sizeRef.current * count\r\n    }\r\n    return 0\r\n  })\r\n\r\n  const maxCountRef = useRenderedRef(() =>\r\n    Math.ceil(Math.abs(minOffsetRef.current) / sizeRef.current),\r\n  )\r\n\r\n  const getTargetActive = useCallback(\r\n    (pace: number) => {\r\n      if (pace) {\r\n        if (loop) {\r\n          return _.clamp(activeIndexRef.current + pace, -1, count)\r\n        }\r\n        return _.clamp(activeIndexRef.current + pace, 0, maxCountRef.current)\r\n      }\r\n      return activeIndexRef.current\r\n    },\r\n    [loop, maxCountRef, count],\r\n  )\r\n\r\n  const getTargetOffset = useCallback(\r\n    (targetActive: number, offset = 0) => {\r\n      let currentPosition = targetActive * sizeRef.current\r\n      if (!loop) {\r\n        currentPosition = Math.min(currentPosition, -minOffsetRef.current)\r\n      }\r\n\r\n      let targetOffset = offset - currentPosition\r\n      if (!loop) {\r\n        targetOffset = _.clamp(targetOffset, minOffsetRef.current, 0)\r\n      }\r\n      return targetOffset\r\n    },\r\n    [sizeRef, loop, minOffsetRef],\r\n  )\r\n\r\n  const moveTo = useCallback(\r\n    ({ pace = 0, offset = 0, emitChange = false }) => {\r\n      if (count <= 1) {\r\n        return\r\n      }\r\n\r\n      const targetActive = getTargetActive(pace)\r\n      const targetOffset = getTargetOffset(targetActive, offset)\r\n      if (loop) {\r\n        if (itemInstances[0] && targetOffset !== minOffsetRef.current) {\r\n          const outRightBound = targetOffset < minOffsetRef.current\r\n          itemInstances[0].setOffset(outRightBound ? trackSizeRef.current : 0)\r\n        }\r\n\r\n        if (itemInstances[count - 1] && targetOffset !== 0) {\r\n          const outLeftBound = targetOffset > 0\r\n          itemInstances[count - 1].setOffset(outLeftBound ? -trackSizeRef.current : 0)\r\n        }\r\n      }\r\n\r\n      const previousActiveIndex = activeIndexRef.current\r\n      activeIndexRef.current = targetActive\r\n      setOffset(targetOffset)\r\n\r\n      if (emitChange && previousActiveIndex !== targetActive) {\r\n        setValue(getIndicatorValue(targetActive, count))\r\n      }\r\n    },\r\n    [\r\n      count,\r\n      getTargetActive,\r\n      getTargetOffset,\r\n      loop,\r\n      itemInstances,\r\n      minOffsetRef,\r\n      trackSizeRef,\r\n      setValue,\r\n    ],\r\n  )\r\n\r\n  const correctPosition = useCallback(() => {\r\n    swipingRef.current = true\r\n    if (activeIndexRef.current <= -1) {\r\n      moveTo({ pace: count })\r\n    } else if (activeIndexRef.current >= count) {\r\n      moveTo({ pace: -count })\r\n    }\r\n  }, [count, moveTo])\r\n\r\n  const swipeTo = useCallback(\r\n    (index: number) => {\r\n      correctPosition()\r\n      touch.reset()\r\n\r\n      doubleRaf(() => {\r\n        let targetIndex\r\n        if (loop && index === count) {\r\n          targetIndex = activeIndexRef.current === 0 ? 0 : index\r\n        } else {\r\n          targetIndex = index % count\r\n        }\r\n\r\n        swipingRef.current = false\r\n\r\n        moveTo({\r\n          pace: targetIndex - activeIndexRef.current,\r\n          emitChange: true,\r\n        })\r\n      })\r\n    },\r\n    [correctPosition, count, loop, moveTo, touch],\r\n  )\r\n\r\n  // const previous = useCallback(() => {\r\n  //   correctPosition()\r\n  //   doubleRaf(() => {\r\n  //     swipingRef.current = false\r\n  //     moveTo({\r\n  //       pace: -1,\r\n  //       emitChange: true,\r\n  //     })\r\n  //   })\r\n  // }, [correctPosition, moveTo])\r\n\r\n  const next = useCallback(() => {\r\n    correctPosition()\r\n    doubleRaf(() => {\r\n      swipingRef.current = false\r\n      moveTo({\r\n        pace: 1,\r\n        emitChange: true,\r\n      })\r\n    })\r\n  }, [correctPosition, moveTo])\r\n\r\n  const stopAutoplay = useCallback(() => {\r\n    if (autoplayTimerRef.current) {\r\n      clearTimeout(autoplayTimerRef.current)\r\n    }\r\n  }, [])\r\n\r\n  const startAutoplay = useCallback(() => {\r\n    stopAutoplay()\r\n    if (autoplay > 0 && count > 1) {\r\n      autoplayTimerRef.current = setTimeout(() => {\r\n        next()\r\n        startAutoplay()\r\n      }, +autoplay)\r\n    }\r\n  }, [autoplay, count, next, stopAutoplay])\r\n\r\n  const onTouchStart = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (!touchable) {\r\n        return\r\n      }\r\n\r\n      touch.start(event)\r\n      touchStartTimeRef.current = Date.now()\r\n\r\n      stopAutoplay()\r\n      correctPosition()\r\n    },\r\n    [correctPosition, stopAutoplay, touch, touchable],\r\n  )\r\n\r\n  const onTouchMove = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (!touchable || !swipingRef.current) {\r\n        return\r\n      }\r\n\r\n      touch.move(event)\r\n      const correctDirection = getCorrectDirection()\r\n      // if user starting to touchmove, prevent the event bubbling to\r\n      // avoid affecting the parent components\r\n      const shouldPrevent = correctDirection || touch.offsetY > touch.offsetX === vertical\r\n      if (shouldPrevent) {\r\n        preventDefault(event, stopPropagation)\r\n      }\r\n\r\n      if (correctDirection) {\r\n        moveTo({ offset: getDelta() })\r\n      }\r\n    },\r\n    [getCorrectDirection, getDelta, moveTo, stopPropagation, touch, touchable, vertical],\r\n  )\r\n\r\n  const onTouchEnd = useCallback(() => {\r\n    if (!touchable || !swipingRef.current) {\r\n      return\r\n    }\r\n    const duration = Date.now() - touchStartTimeRef.current\r\n\r\n    const delta = getDelta()\r\n    const speed = delta / duration\r\n    const shouldSwipe = Math.abs(speed) > 0.25 || Math.abs(delta) > sizeRef.current / 2\r\n\r\n    swipingRef.current = false\r\n    const correctDirection = getCorrectDirection()\r\n    if (shouldSwipe && correctDirection) {\r\n      const offset = vertical ? touch.offsetY : touch.offsetX\r\n\r\n      let pace: number\r\n\r\n      if (loop) {\r\n        pace = offset > 0 ? (delta > 0 ? -1 : 1) : 0\r\n      } else {\r\n        pace = -Math[delta > 0 ? \"ceil\" : \"floor\"](delta / sizeRef.current)\r\n      }\r\n\r\n      moveTo({\r\n        pace,\r\n        emitChange: true,\r\n      })\r\n    } else if (delta) {\r\n      moveTo({ pace: 0 })\r\n    }\r\n    startAutoplay()\r\n  }, [\r\n    touchable,\r\n    getDelta,\r\n    sizeRef,\r\n    getCorrectDirection,\r\n    startAutoplay,\r\n    vertical,\r\n    touch.offsetY,\r\n    touch.offsetX,\r\n    loop,\r\n    moveTo,\r\n  ])\r\n\r\n  const getTrackRect = useCallback(\r\n    () =>\r\n      Promise.all([\r\n        getRect(rootRef),\r\n        getComputedStyle(rootRef, [\"width\", \"height\"]),\r\n      ]).then(([rect, style]) =>\r\n        makeRect(\r\n          style.width === \"auto\" ? rect.width : unitToPx(style.width),\r\n          style.height === \"auto\" ? rect.height : unitToPx(style.height),\r\n        ),\r\n      ),\r\n    [],\r\n  )\r\n\r\n  const initialize = useCallback(\r\n    async (activeIndex = valueRef.current) => {\r\n      if (!rootRef.current) {\r\n        return\r\n      }\r\n      rectRef.current = await getTrackRect()\r\n      if (count) {\r\n        activeIndex = Math.min(count - 1, activeIndex)\r\n      }\r\n      activeIndexRef.current = activeIndex\r\n      swipingRef.current = true\r\n      const targetOffset = getTargetOffset(activeIndex)\r\n      setOffset(targetOffset)\r\n      // Force update render\r\n      if (targetOffset === offset) {\r\n        update()\r\n      }\r\n      itemInstances.forEach((item) => item.setOffset(0))\r\n    },\r\n    [valueRef, getTrackRect, count, getTargetOffset, offset, itemInstances, update],\r\n  )\r\n\r\n  const resize = useCallback(() => nextTick(() => initialize(activeIndexRef.current)), [initialize])\r\n\r\n  useMounted(initialize)\r\n\r\n  useWindowResize(resize)\r\n\r\n  useMounted(() => {\r\n    startAutoplay()\r\n    return stopAutoplay\r\n  })\r\n\r\n  useEffect(\r\n    () => {\r\n      const valueIndicator = valueIndicatorRef.current\r\n      const activeIndicator = activeIndicatorRef.current\r\n      if (valueIndicator !== activeIndicator) {\r\n        try {\r\n          stopAutoplay()\r\n          swipeTo(valueIndicator)\r\n        } finally {\r\n          startAutoplay()\r\n        }\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [valueIndicatorRef.current],\r\n  )\r\n\r\n  const trackStyle = useRendered(() => {\r\n    const style: CSSProperties = {\r\n      transitionDuration: `${swipingRef.current ? 0 : duration}ms`,\r\n      transform: `translate${vertical ? \"Y\" : \"X\"}(${addUnitPx(offset)})`,\r\n    }\r\n\r\n    if (sizeRef.current) {\r\n      const mainAxis = vertical ? \"height\" : \"width\"\r\n      style[mainAxis] = `${addUnitPx(trackSizeRef.current)}`\r\n      const crossAxis = vertical ? \"width\" : \"height\"\r\n      const crossAxisValue = propRectRef.current[crossAxis]\r\n      style[crossAxis] = crossAxisValue ? addUnitPx(crossAxisValue) : \"\"\r\n    }\r\n    return style\r\n  })\r\n\r\n  return (\r\n    <View ref={rootRef} className={classNames(prefixClassname(\"swiper\"), className)} {...restProps}>\r\n      <SwiperContext.Provider\r\n        value={{\r\n          lazyRender,\r\n          loop,\r\n          direction,\r\n          indicator: activeIndicatorRef.current,\r\n          size: sizeRef.current,\r\n          count,\r\n          itemInstances,\r\n        }}\r\n      >\r\n        <View\r\n          className={classNames(prefixClassname(\"swiper__track\"), {\r\n            [prefixClassname(\"swiper__track--vertical\")]: vertical,\r\n          })}\r\n          catchMove\r\n          onTouchStart={onTouchStart}\r\n          onTouchMove={onTouchMove}\r\n          onTouchEnd={onTouchEnd}\r\n          onTouchCancel={onTouchEnd}\r\n          style={trackStyle}\r\n          children={items}\r\n        />\r\n        {indicator}\r\n      </SwiperContext.Provider>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Swiper\r\n","import SwiperElement, { SwiperProps } from \"./swiper\"\r\nimport SwiperIndicator, { SwiperIndicatorProps } from \"./swiper-indicator\"\r\nimport SwiperItem, { SwiperItemProps } from \"./swiper-item\"\r\nimport { SwiperItemEvent } from \"./swiper.shared\"\r\n\r\ninterface SwiperInterface {\r\n  (props: SwiperProps): JSX.Element\r\n\r\n  Item: typeof SwiperItem\r\n  Indicator: typeof SwiperIndicator\r\n}\r\n\r\nconst Swiper = (SwiperElement as unknown) as SwiperInterface\r\n\r\nSwiper.Item = SwiperItem\r\nSwiper.Indicator = SwiperIndicator\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Swiper {\r\n  export type ItemEvent = SwiperItemEvent\r\n\r\n  export type ItemProps = SwiperItemProps\r\n\r\n  export type IndicatorProps = SwiperIndicatorProps\r\n}\r\n\r\nexport default Swiper\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { getSystemInfo } from \"@tarojs/taro\"\r\nimport { useState } from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\n\r\nconst INITIAL_RECT: SystemRect = {\r\n  screenHeight: 0,\r\n  screenWidth: 0,\r\n  windowHeight: 0,\r\n  windowWidth: 0,\r\n}\r\n\r\nexport interface SystemRect {\r\n  screenHeight: number\r\n  screenWidth: number\r\n  windowHeight: number\r\n  windowWidth: number\r\n}\r\n\r\nexport function getSystemRect(): Promise<SystemRect> {\r\n  return getSystemInfo().then(({ screenHeight, screenWidth, windowHeight, windowWidth }) => ({\r\n    screenHeight,\r\n    screenWidth,\r\n    windowHeight,\r\n    windowWidth,\r\n  }))\r\n}\r\n\r\nexport function useSystemRect(): SystemRect {\r\n  const [rect, setRect] = useState<SystemRect>(INITIAL_RECT)\r\n  useMounted(() => getSystemRect().then(setRect))\r\n  return rect\r\n}\r\n","import Sticky from \"./sticky\"\n\nexport default Sticky\n","import { View } from \"@tarojs/components\"\nimport { ViewProps } from \"@tarojs/components/types/View\"\nimport { PageScrollObject, usePageScroll } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport {\n  CSSProperties,\n  MutableRefObject,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\nimport { useMounted } from \"../hooks\"\nimport { prefixClassname } from \"../styles\"\nimport { getRect } from \"../utils/dom/rect\"\nimport { addUnitPx, unitToPx } from \"../utils/format/unit\"\nimport { getSystemRect } from \"../utils/system\"\n\ninterface RootReact {\n  height?: number\n  width?: number\n}\n\ntype StickyPosition = \"top\" | \"bottom\"\n\ninterface StickyOffset {\n  top?: number | string\n  bottom?: number | string\n}\n\ninterface StickyProps extends ViewProps {\n  className?: string\n  style?: CSSProperties\n  position?: StickyPosition\n  offset?: StickyOffset\n  offsetTop?: number | string\n  offsetBottom?: number | string\n  container?: MutableRefObject<Element | undefined>\n  children?: ReactNode\n\n  onChange?(fixed: boolean): void\n\n  onScroll?(scroll: PageScrollObject): void\n}\n\nexport default function Sticky(props: StickyProps) {\n  const {\n    className,\n    style: styleProp,\n    position = \"top\",\n    offsetTop: offsetTopProp,\n    offsetBottom: offsetBottomProp,\n    offset: offsetProp,\n    container: containerRef,\n    children,\n    onChange,\n    onScroll,\n    ...restProps\n  } = props\n\n  if (offsetProp) {\n    const { top, bottom } = offsetProp\n    if (top) {\n      // eslint-disable-next-line no-console\n      console.warn(\"[Deprecated] Use the 'offsetTop' prop instead of the 'offset.top' prop.\")\n    }\n    if (bottom) {\n      // eslint-disable-next-line no-console\n      console.warn(\"[Deprecated] Use the 'offsetBottom' prop instead of the 'offset.bottom' prop.\")\n    }\n  }\n\n  const offsetTop = offsetTopProp ?? offsetProp?.top\n  const offsetBottom = offsetBottomProp ?? offsetProp?.bottom\n\n  const rootRef = useRef<ViewProps>()\n  const counterRef = useRef(0)\n\n  const [rootRect, setRootRect] = useState<RootReact>({})\n\n  const [fixed, setFixed] = useState(false)\n  const [transform, setTransform] = useState(0)\n\n  const offsetValue = useMemo(\n    () => unitToPx((position === \"top\" ? offsetTop : offsetBottom) ?? 0),\n    [offsetBottom, offsetTop, position],\n  )\n\n  const rootStyle: CSSProperties | undefined = useMemo(() => {\n    if (!fixed) {\n      return {\n        height: \"\",\n        width: \"\",\n      }\n    }\n    const style: CSSProperties = {}\n    if (rootRect.height) {\n      style.height = addUnitPx(rootRect.height)\n    }\n    if (rootRect.width) {\n      style.width = addUnitPx(rootRect.width)\n    }\n    return style\n  }, [fixed, rootRect.height, rootRect.width])\n\n  const stickyStyle: CSSProperties | undefined = useMemo(() => {\n    if (!fixed) {\n      return {\n        height: \"\",\n        width: \"\",\n        [position]: \"\",\n      }\n    }\n    const style: CSSProperties = {}\n    if (rootRect.height) {\n      style.height = addUnitPx(rootRect.height)\n    }\n    if (rootRect.width) {\n      style.width = addUnitPx(rootRect.width)\n    }\n    style.transform = transform ? `translate3d(0, ${addUnitPx(transform)}, 0)` : \"\"\n    style[position] = addUnitPx(offsetValue)\n    return style\n  }, [fixed, rootRect.height, rootRect.width, transform, position, offsetValue])\n\n  async function invokeScroll({ scrollTop }: PageScrollObject) {\n    const __rootRect__ = await getRect(rootRef)\n    if (__rootRect__) {\n      setRootRect(__rootRect__)\n      if (position === \"top\") {\n        if (containerRef) {\n          const containerRect = await getRect(containerRef)\n          const difference = containerRect.bottom - offsetValue - __rootRect__.height\n          setTransform(difference < 0 ? difference : 0)\n          setFixed(offsetValue > __rootRect__.top && containerRect.bottom > 0)\n        } else {\n          setFixed(offsetValue > __rootRect__.top)\n        }\n      } else {\n        const { windowHeight } = await getSystemRect()\n        if (containerRef) {\n          const containerRect = await getRect(containerRef)\n          const difference = windowHeight - containerRect.top - offsetValue - __rootRect__.height\n          setTransform(difference < 0 ? difference : 0)\n          setFixed(\n            windowHeight - offsetValue < __rootRect__.bottom && windowHeight > containerRect.top,\n          )\n        } else {\n          setFixed(windowHeight - offsetValue < __rootRect__.bottom)\n        }\n      }\n    }\n    onScroll?.({ scrollTop })\n  }\n\n  useEffect(() => {\n    if (counterRef.current > 0) {\n      onChange?.(fixed)\n    }\n    counterRef.current++\n  }, [fixed, onChange])\n\n  useMounted(() => invokeScroll({ scrollTop: 0 }))\n\n  usePageScroll(({ scrollTop }) => invokeScroll({ scrollTop }))\n\n  return (\n    <View\n      ref={rootRef}\n      style={{\n        ...styleProp,\n        ...rootStyle,\n      }}\n      {...restProps}\n    >\n      <View\n        style={stickyStyle}\n        className={classNames(\n          prefixClassname(\"sticky\"),\n          {\n            [prefixClassname(\"sticky--fixed\")]: fixed,\n          },\n          className,\n        )}\n        children={children}\n      />\n    </View>\n  )\n}\n","import \"../../styles/style\"\r\nimport \"../../sticky/style\"\r\nimport \"../../swiper/style\"\r\nimport \"../index.scss\"\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\n\r\ninterface TabPaneProps extends ViewProps {\r\n  className?: string\r\n  value?: any\r\n  classNames?: { title: string }\r\n  title?: ReactNode\r\n  disabled?: boolean\r\n  dot?: boolean\r\n  badge?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function TabPane(props: TabPaneProps) {\r\n  return <></>\r\n}\r\n","import { createContext } from \"react\"\r\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\r\n\r\ninterface TabsContextValue {\r\n  index?: number\r\n  value: any\r\n  duration?: number\r\n  lazyRender: boolean\r\n  animated: boolean\r\n  swipeable: boolean\r\n  theme?: TabsTheme\r\n  bordered?: boolean\r\n  ellipsis?: boolean\r\n  tabObjects: TabObject[]\r\n\r\n  onTabClick?(event: TabEvent): void\r\n}\r\n\r\nconst TabsContext = createContext<TabsContextValue>({\r\n  value: undefined,\r\n  lazyRender: true,\r\n  animated: false,\r\n  swipeable: false,\r\n  tabObjects: [],\r\n})\r\n\r\nexport default TabsContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useMemo, useRef } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport Swiper from \"../swiper\"\r\nimport TabsContext from \"./tabs.context\"\r\n\r\ninterface TabPaneBaseProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  index: number\r\n  value?: any\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function TabPaneBase(props: TabPaneBaseProps) {\r\n  const { className, style, index, value, children, ...restProps } = props\r\n  const { index: activeIndex, value: activeValue, lazyRender, animated, swipeable } = useContext(\r\n    TabsContext,\r\n  )\r\n\r\n  const active = activeValue === value\r\n\r\n  const initializedRef = useRef(false)\r\n\r\n  const shouldRender = useMemo(() => {\r\n    if (!lazyRender) {\r\n      return true\r\n    }\r\n\r\n    if (initializedRef.current) {\r\n      return true\r\n    }\r\n\r\n    if ((index - 1 === activeIndex || index + 1 === activeIndex) && !initializedRef.current) {\r\n      initializedRef.current = true\r\n      return true\r\n    }\r\n\r\n    if (active && !initializedRef.current) {\r\n      initializedRef.current = true\r\n    }\r\n    return active\r\n  }, [active, activeIndex, index, lazyRender])\r\n\r\n  const tabPane = (\r\n    <View\r\n      style={{\r\n        ...style,\r\n        display: !(animated || swipeable) && !active ? \"none\" : \"\",\r\n      }}\r\n      className={classNames(prefixClassname(\"tabs__tab-pane\"), className)}\r\n      children={shouldRender ? children : undefined}\r\n      {...restProps}\r\n    />\r\n  )\r\n\r\n  if (animated || swipeable) {\r\n    return (\r\n      <Swiper.Item\r\n        className={classNames(prefixClassname(\"tabs__tab-pane-wrapper\"), {\r\n          [prefixClassname(\"tabs__tab-pane-wrapper--inactive\")]: !active,\r\n        })}\r\n        children={tabPane}\r\n      />\r\n    )\r\n  }\r\n\r\n  return tabPane\r\n}\r\n","import { View } from \"@tarojs/components\"\nimport classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport * as React from \"react\"\nimport { ReactNode, useMemo } from \"react\"\nimport { prefixClassname } from \"../styles\"\nimport Swiper from \"../swiper\"\nimport TabPaneBase from \"./tab-pane-base\"\nimport { TabEvent, TabObject } from \"./tabs.shared\"\n\nfunction useTabPanes(tabObjects?: TabObject[]): ReactNode {\n  return useMemo(() => _.map(tabObjects, (props) => <TabPaneBase {...props} />), [tabObjects])\n}\n\ninterface TabsContentProps {\n  value: any\n  lazyRender: boolean\n  duration?: number\n  animated: boolean\n  swipeable: boolean\n  tabObjects: TabObject[]\n\n  onTabClick?(event: TabEvent): void\n}\n\nexport function TabsContent(props: TabsContentProps) {\n  const { value: activeValue, duration, animated, swipeable, tabObjects, onTabClick } = props\n\n  const panes = useTabPanes(tabObjects)\n\n  function onSwiperChange(index: number) {\n    const tabObject = _.get(tabObjects, index)\n    if (tabObject) {\n      const { value, title, disabled } = tabObject\n      if (!disabled) {\n        onTabClick?.({ value, title, disabled })\n      }\n    }\n  }\n\n  const renderChildren = () => {\n    if (animated || swipeable) {\n      return (\n        <Swiper\n          value={activeValue as number}\n          loop={false}\n          className={prefixClassname(\"tabs__track\")}\n          duration={duration}\n          touchable={swipeable}\n          children={panes}\n          onChange={onSwiperChange}\n        />\n      )\n    }\n\n    return panes\n  }\n\n  return (\n    <View\n      className={classNames(prefixClassname(\"tabs__content\"), {\n        [prefixClassname(\"tabs__content--animated\")]: animated,\n      })}\n      children={renderChildren()}\n    />\n  )\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TabsContext from \"./tabs.context\"\r\n\r\ninterface TabsLineProps {\r\n  active?: boolean\r\n}\r\n\r\nexport default function TabsLine(props: TabsLineProps) {\r\n  const { active } = props\r\n  const { duration } = useContext(TabsContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"tabs__line\"), {\r\n        [prefixClassname(\"tabs__line--active\")]: active,\r\n      })}\r\n      style={{ transitionDuration: `${duration}ms` }}\r\n    />\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TabsLine from \"./tabs-line\"\r\n\r\ninterface TabProps extends ViewProps {\r\n  active?: boolean\r\n  disabled?: boolean\r\n  underline?: boolean\r\n  dot?: boolean\r\n  badge?: ReactNode\r\n  ellipsis?: boolean\r\n  flexBasis?: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Tab(props: TabProps) {\r\n  const {\r\n    className,\r\n    active,\r\n    disabled = false,\r\n    underline,\r\n    ellipsis,\r\n    flexBasis,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      style={{ flexBasis }}\r\n      className={classNames(\r\n        prefixClassname(\"tabs__tab\"),\r\n        {\r\n          [prefixClassname(\"tabs__tab--active\")]: active,\r\n          [prefixClassname(\"tabs__tab--disabled\")]: disabled,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"tabs__tab__content\"), {\r\n          [prefixClassname(\"ellipsis\")]: ellipsis,\r\n        })}\r\n        children={children}\r\n      />\r\n      {underline && <TabsLine active={active} />}\r\n    </View>\r\n  )\r\n}\r\n","import { ScrollView, View } from \"@tarojs/components\"\nimport { nextTick, offWindowResize, onWindowResize } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport * as React from \"react\"\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport { prefixClassname } from \"../styles\"\nimport { HAIRLINE_BORDER_TOP_BOTTOM } from \"../styles/hairline\"\nimport { getRect, getRects } from \"../utils/dom/rect\"\nimport Tab from \"./tab\"\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\n\nexport interface NavOffset {\n  left?: number\n  width?: number\n}\n\nexport interface TabOffset {\n  left?: number\n  width?: number\n}\n\ninterface TabsHeaderProps {\n  value: any\n  theme?: TabsTheme\n  bordered?: boolean\n  ellipsis?: boolean\n  tabObjects: TabObject[]\n\n  onTabClick?(event: TabEvent): void\n}\n\nexport default function TabsHeader(props: TabsHeaderProps) {\n  const { value: activeValue, theme, ellipsis, bordered, tabObjects, onTabClick } = props\n  const themeLine = theme === \"line\"\n  const themeCard = theme === \"card\"\n\n  const navRef = useRef()\n\n  const [navOffset, setNavOffset] = useState<NavOffset>({})\n  const [tabOffsets, setTabOffsets] = useState<TabOffset[]>([])\n\n  const activeIndex = useMemo(() => _.findIndex(tabObjects, (tab) => tab.value === activeValue), [\n    tabObjects,\n    activeValue,\n  ])\n\n  const activeOffset = useMemo(() => {\n    if (_.isEmpty(tabOffsets) || activeIndex === -1 || activeIndex >= _.size(tabOffsets)) {\n      return {}\n    }\n    const { width } = tabOffsets[activeIndex]\n    const left = tabOffsets\n      .slice(0, activeIndex)\n      .reduce((prev: number, curr: TabOffset) => prev + (curr.width ?? 0), 0)\n    return {\n      left,\n      width,\n    }\n  }, [tabOffsets, activeIndex])\n\n  const scrollLeft = useMemo(() => {\n    if (navOffset) {\n      const { width: navOffsetWidth = 0 } = navOffset\n      const { left: offsetLeft = 0, width: offsetWidth = 0 } = activeOffset\n      return offsetLeft - (navOffsetWidth - offsetWidth) / 2\n    }\n    return 0\n  }, [navOffset, activeOffset])\n\n  const resize = useCallback(() => {\n    Promise.all([getRect(navRef), getRects(navRef, ` .${prefixClassname(\"tabs__tab\")}`)]).then(\n      ([navRect, tabRects]) => {\n        setNavOffset(navRect)\n        setTabOffsets(tabRects)\n      },\n    )\n  }, [])\n\n  useEffect(() => nextTick(resize), [resize, tabObjects])\n\n  // resize\n  useEffect(() => {\n    onWindowResize?.(resize)\n    return () => offWindowResize?.(resize)\n  }, [resize])\n\n  return (\n    <View\n      className={classNames(\n        prefixClassname(\"tabs__wrap\"),\n        prefixClassname(\"tabs__wrap--scrollable\"),\n        {\n          [HAIRLINE_BORDER_TOP_BOTTOM]: bordered && themeLine,\n        },\n      )}\n    >\n      <ScrollView\n        scrollX\n        scrollWithAnimation\n        scrollLeft={scrollLeft}\n        className={classNames(prefixClassname(\"tabs__wrap__scroll\"), {\n          [prefixClassname(\"tabs__wrap__scroll--line\")]: themeLine,\n          [prefixClassname(\"tabs__wrap__scroll--card\")]: themeCard,\n        })}\n      >\n        <View\n          ref={navRef}\n          className={classNames(prefixClassname(\"tabs__nav\"), {\n            [prefixClassname(\"tabs__nav--line\")]: themeLine,\n            [prefixClassname(\"tabs__nav--card\")]: themeCard,\n          })}\n        >\n          {\n            //\n            _.map(tabObjects, (tabObject) => (\n              <Tab\n                key={tabObject.key}\n                // TODO swipeThreshold does not support\n                flexBasis={themeLine && ellipsis ? `${88 / 4}%` : \"\"}\n                className={tabObject?.classNames?.title}\n                dot={tabObject.dot}\n                badge={tabObject.badge}\n                active={activeValue === tabObject.value}\n                disabled={tabObject.disabled}\n                underline={themeLine}\n                ellipsis={themeLine && ellipsis}\n                children={tabObject.title}\n                onClick={() =>\n                  onTabClick?.({\n                    value: tabObject.value,\n                    title: tabObject.title,\n                    disabled: tabObject.disabled,\n                  })\n                }\n              />\n            ))\n          }\n        </View>\n      </ScrollView>\n    </View>\n  )\n}\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { PageScrollObject } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\"\r\nimport Sticky from \"../sticky\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useValue } from \"../utils/state\"\r\nimport TabPane from \"./tab-pane\"\r\nimport { TabsContent } from \"./tabs-content\"\r\nimport TabsHeader from \"./tabs-header\"\r\nimport TabsContext from \"./tabs.context\"\r\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\r\n\r\nfunction useTabObjects(children: ReactNode) {\r\n  return useMemo(() => {\r\n    const tabObjects: TabObject[] = []\r\n\r\n    Children.forEach(children, (node: ReactNode) => {\r\n      if (!isValidElement(node)) {\r\n        return node\r\n      }\r\n      const element = node as ReactElement\r\n      if (element.type !== TabPane) {\r\n        return element\r\n      }\r\n      const { key, props } = element\r\n      const index = _.size(tabObjects)\r\n      const { value, ...restProps } = props\r\n      tabObjects.push({\r\n        key: key ?? index,\r\n        index,\r\n        value: value ?? index,\r\n        ...restProps,\r\n      })\r\n    })\r\n\r\n    return tabObjects\r\n  }, [children])\r\n}\r\n\r\ninterface TabsSticky {\r\n  offsetTop?: string | number\r\n}\r\n\r\nfunction useTabsSticky(sticky?: boolean | TabsSticky): TabsSticky | undefined {\r\n  if (sticky === false) {\r\n    return undefined\r\n  }\r\n  if (_.isBoolean(sticky) && sticky) {\r\n    return {\r\n      offsetTop: 0,\r\n    }\r\n  }\r\n  return sticky\r\n}\r\n\r\nexport interface TabsProps extends ViewProps {\r\n  className?: string\r\n  defaultValue?: any\r\n  value?: any\r\n  theme?: TabsTheme\r\n  duration?: number\r\n  lazyRender?: boolean\r\n  animated?: boolean\r\n  swipeable?: boolean\r\n  sticky?: boolean | TabsSticky\r\n  bordered?: boolean\r\n  ellipsis?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any, event: TabEvent): void\r\n\r\n  onTabClick?(event: TabEvent): void\r\n\r\n  onScroll?(scroll: PageScrollObject): void\r\n}\r\n\r\nfunction Tabs(props: TabsProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    duration = 300,\r\n    lazyRender = true,\r\n    animated = false,\r\n    swipeable = false,\r\n    sticky = false,\r\n    theme = \"line\",\r\n    ellipsis = true,\r\n    bordered,\r\n    children: childrenProp,\r\n    onTabClick,\r\n    onChange,\r\n    onScroll,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    defaultValue,\r\n    value: valueProp,\r\n  })\r\n\r\n  const rootRef = useRef()\r\n\r\n  const stickyProps = useTabsSticky(sticky)\r\n\r\n  const tabObjects = useTabObjects(childrenProp)\r\n\r\n  const index = useMemo<number | undefined>(() => {\r\n    for (const tab of tabObjects) {\r\n      if (tab.value === value) {\r\n        return tab.index\r\n      }\r\n    }\r\n  }, [tabObjects, value])\r\n\r\n  const handleTabClick = useCallback(\r\n    (event: TabEvent) => {\r\n      if (!event.disabled) {\r\n        setValue(event.value)\r\n        onChange?.(event.value, event)\r\n      }\r\n      onTabClick?.(event)\r\n    },\r\n    [onChange, onTabClick, setValue],\r\n  )\r\n\r\n  const headerRender = useMemo(\r\n    () => (\r\n      <TabsHeader\r\n        value={value}\r\n        theme={theme}\r\n        bordered={bordered}\r\n        ellipsis={ellipsis}\r\n        tabObjects={tabObjects}\r\n        onTabClick={handleTabClick}\r\n      />\r\n    ),\r\n    [bordered, ellipsis, handleTabClick, tabObjects, theme, value],\r\n  )\r\n\r\n  return (\r\n    <TabsContext.Provider\r\n      value={{\r\n        index,\r\n        value,\r\n        duration,\r\n        lazyRender,\r\n        animated,\r\n        swipeable,\r\n        theme,\r\n        ellipsis,\r\n        bordered,\r\n        tabObjects,\r\n        onTabClick: handleTabClick,\r\n      }}\r\n    >\r\n      <View\r\n        ref={rootRef}\r\n        className={classNames(\r\n          prefixClassname(\"tabs\"),\r\n          {\r\n            [prefixClassname(\"tabs--line\")]: theme === \"line\",\r\n            [prefixClassname(\"tabs--card\")]: theme === \"card\",\r\n          },\r\n          className,\r\n        )}\r\n        {...restProps}\r\n      >\r\n        {stickyProps ? (\r\n          <Sticky\r\n            container={rootRef}\r\n            offsetTop={stickyProps.offsetTop}\r\n            children={headerRender}\r\n            onScroll={onScroll}\r\n          />\r\n        ) : (\r\n          headerRender\r\n        )}\r\n        <TabsContent\r\n          value={value}\r\n          lazyRender={lazyRender}\r\n          duration={duration}\r\n          animated={animated}\r\n          swipeable={swipeable}\r\n          tabObjects={tabObjects}\r\n          onTabClick={handleTabClick}\r\n        />\r\n      </View>\r\n    </TabsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Tabs\r\n","import TabPane from \"./tab-pane\"\r\nimport TabsElement, { TabsProps } from \"./tabs\"\r\nimport { TabEvent as SharedTabEvent } from \"./tabs.shared\"\r\n\r\ninterface TabsInterface {\r\n  (props: TabsProps): JSX.Element\r\n\r\n  TabPane: typeof TabPane\r\n}\r\n\r\nconst Tabs = TabsElement as TabsInterface\r\n\r\nTabs.TabPane = TabPane\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Tabs {\r\n  export type TabEvent = SharedTabEvent\r\n}\r\n\r\nexport default Tabs\r\n","import { createContext } from \"react\"\r\nimport { Rect, makeRect } from \"../utils/dom/rect\"\r\n\r\ninterface IndexListContextValue {\r\n  sticky?: boolean\r\n  stickyOffsetTop?: number\r\n  activeIndex: number | string\r\n  activeArrayedIndex: number\r\n\r\n  getListRect(): Rect\r\n\r\n  getAnchorRects(): Rect[]\r\n}\r\n\r\nconst IndexListContext = createContext<IndexListContextValue>({\r\n  activeIndex: -1,\r\n  activeArrayedIndex: -1,\r\n  getListRect: () => makeRect(0, 0),\r\n  getAnchorRects: () => [],\r\n})\r\nexport default IndexListContext\r\n","import { View } from \"@tarojs/components\"\nimport { TaroElement } from \"@tarojs/runtime\"\nimport { pageScrollTo } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport {\n  CSSProperties,\n  ForwardedRef,\n  forwardRef,\n  ReactNode,\n  useCallback,\n  useContext,\n  useImperativeHandle,\n  useRef,\n} from \"react\"\nimport { prefixClassname } from \"../styles\"\nimport { HAIRLINE_BORDER_BOTTOM } from \"../styles/hairline\"\nimport { getRect } from \"../utils/dom/rect\"\nimport { addUnitPx } from \"../utils/format/unit\"\nimport IndexListContext from \"./index-list.context\"\n\nexport interface IndexListAnchorInstance {\n  scrollIntoView(scrollTop: number): void\n}\n\nexport interface IndexListAnchorProps {\n  index: number | string\n  children?: ReactNode\n}\n\ninterface InternalIndexListAnchorProps extends IndexListAnchorProps {\n  arrayedIndex?: number\n}\n\nconst IndexListAnchor = forwardRef(\n  (props: IndexListAnchorProps, ref: ForwardedRef<IndexListAnchorInstance>) => {\n    const { arrayedIndex, index, children } = props as InternalIndexListAnchorProps\n\n    const {\n      activeArrayedIndex,\n      sticky: stickyProp,\n      stickyOffsetTop,\n      getAnchorRects,\n      getListRect,\n    } = useContext(IndexListContext)\n\n    const rootRef = useRef<TaroElement>()\n\n    const scrollIntoView = useCallback(\n      (scrollTop: number) =>\n        getRect(rootRef).then(({ top }) =>\n          pageScrollTo({\n            duration: 0,\n            scrollTop: Math.ceil(scrollTop + top),\n          }),\n        ),\n      [],\n    )\n\n    useImperativeHandle(ref, () => ({\n      scrollIntoView,\n    }))\n\n    let wrapperStyle: CSSProperties = {}\n\n    let anchorStyle: CSSProperties = {}\n\n    let active: boolean = false\n\n    if (stickyProp) {\n      if (arrayedIndex === activeArrayedIndex) {\n        const { top, height } = getAnchorRects()[arrayedIndex]\n\n        const activeAnchorSticky = top <= 0\n\n        if (activeAnchorSticky) {\n          wrapperStyle = {\n            height: addUnitPx(height),\n          }\n          anchorStyle = {\n            position: \"fixed\",\n            top: addUnitPx(stickyOffsetTop),\n          }\n        }\n\n        active = true\n      } else if (arrayedIndex === activeArrayedIndex - 1) {\n        const listRect = getListRect()\n        const anchorRects = getAnchorRects()\n        const currentAnchor = anchorRects[arrayedIndex]\n        const currentOffsetTop = currentAnchor.top\n        const targetOffsetTop =\n          arrayedIndex === anchorRects.length - 1 ? listRect.top : anchorRects[arrayedIndex + 1].top\n        const parentOffsetHeight = targetOffsetTop - currentOffsetTop\n        const translateY = parentOffsetHeight - currentAnchor.height\n        anchorStyle = {\n          position: \"relative\",\n          transform: `translate3d(0, ${addUnitPx(translateY)}, 0)`,\n        }\n\n        active = true\n      } else {\n        wrapperStyle = {}\n        anchorStyle = {}\n        active = false\n      }\n    }\n\n    return (\n      <View\n        ref={rootRef}\n        className={prefixClassname(\"index-list__anchor-wrapper\")}\n        style={wrapperStyle}\n      >\n        <View\n          className={classNames(prefixClassname(\"index-list__anchor\"), {\n            [prefixClassname(\"index-list__anchor--sticky\")]: active,\n            [HAIRLINE_BORDER_BOTTOM]: active,\n          })}\n          style={anchorStyle}\n          children={children ?? index}\n        />\n      </View>\n    )\n  },\n)\n\nexport default IndexListAnchor\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport IndexListContext from \"./index-list.context\"\r\n\r\ninterface IndexListIndexProps {\r\n  index?: number | string\r\n}\r\n\r\nexport default function IndexListIndex(props: IndexListIndexProps) {\r\n  const { index } = props\r\n  const { activeIndex } = useContext(IndexListContext)\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"index-list__index\"), {\r\n        [prefixClassname(\"index-list__index--active\")]: activeIndex === index,\r\n      })}\r\n      children={index}\r\n    />\r\n  )\r\n}\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { ForwardedRef, forwardRef, ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface IndexListSidebarProps {\r\n  children?: ReactNode\r\n  onClick?: (event: ITouchEvent) => void\r\n  onTouchMove?: (event: ITouchEvent) => void\r\n  onTouchCancel?: (event: ITouchEvent) => void\r\n  onTouchEnd?: (event: ITouchEvent) => void\r\n}\r\n\r\nconst IndexListSidebar = forwardRef(\r\n  (props: IndexListSidebarProps, ref: ForwardedRef<HTMLElement | undefined>) => {\r\n    const { children, onClick, onTouchMove, onTouchCancel, onTouchEnd } = props\r\n    return (\r\n      <View\r\n        ref={ref}\r\n        catchMove\r\n        className={prefixClassname(\"index-list__sidebar\")}\r\n        children={children}\r\n        onClick={onClick}\r\n        onTouchMove={onTouchMove}\r\n        onTouchCancel={onTouchCancel}\r\n        onTouchEnd={onTouchEnd}\r\n      />\r\n    )\r\n  },\r\n)\r\n\r\nexport default IndexListSidebar\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\nimport { ViewProps } from \"@tarojs/components/types/View\"\nimport { usePageScroll } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport * as React from \"react\"\nimport {\n  Children,\n  cloneElement,\n  createRef,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\nimport { isFragment } from \"react-is\"\nimport { prefixClassname } from \"../styles\"\nimport { getClientCoordinates, preventDefault } from \"../utils/dom/event\"\nimport { getRect, getRects, makeRect, Rect } from \"../utils/dom/rect\"\nimport IndexListAnchor, { IndexListAnchorInstance, IndexListAnchorProps } from \"./index-list-anchor\"\nimport IndexListIndex from \"./index-list-index\"\nimport IndexListSidebar from \"./index-list-sidebar\"\nimport IndexListContext from \"./index-list.context\"\n\ninterface IndexBarChildren {\n  children: ReactNode[]\n  anchorRefs: RefObject<IndexListAnchorInstance>[]\n  anchorProps: IndexListAnchorProps[]\n}\n\nfunction childrenIndexBar(\n  children: ReactNode,\n  __children__: IndexBarChildren,\n  parentIndex?: React.Key,\n) {\n  Children.forEach(children, (child: ReactNode, index: number) => {\n    if (!isValidElement(child)) {\n      return\n    }\n\n    const element = child as ReactElement\n    const elementType = element.type\n    const { key, props } = element\n    const { children: childrenProp } = props\n\n    if (isFragment(element)) {\n      childrenIndexBar(childrenProp, __children__, key ?? index)\n      return\n    }\n    if (elementType === IndexListAnchor) {\n      const { index: indexProp } = props\n      const anchorRef = createRef<IndexListAnchorInstance>()\n      const { length: arrayedIndex } = __children__.anchorRefs\n      __children__.anchorRefs.push(anchorRef)\n      __children__.anchorProps.push(props)\n      __children__.children?.push(\n        cloneElement(element, {\n          arrayedIndex,\n          key: indexProp,\n          ref: anchorRef,\n        }),\n      )\n    } else {\n      __children__.children?.push(\n        cloneElement(element, {\n          key: key ?? `${parentIndex}-${index}`,\n        }),\n      )\n    }\n  })\n}\n\nfunction useIndexBarChildren(children?: ReactNode): IndexBarChildren {\n  return useMemo(() => {\n    const __children__: IndexBarChildren = {\n      children: [],\n      anchorRefs: [],\n      anchorProps: [],\n    }\n    childrenIndexBar(children, __children__)\n    return __children__\n  }, [children])\n}\n\nexport interface IndexListProps extends ViewProps {\n  sticky?: boolean\n  stickyOffsetTop?: number\n  children?: ReactNode\n}\n\nfunction IndexList(props: IndexListProps) {\n  const {\n    className,\n    sticky = true,\n    stickyOffsetTop = 0,\n    children: childrenProp,\n    ...restProps\n  } = props\n  const { anchorProps, anchorRefs, children } = useIndexBarChildren(childrenProp)\n\n  const scrollTopRef = useRef(0)\n\n  const listRef = useRef<HTMLElement>()\n\n  const sidebarRef = useRef<HTMLElement>()\n\n  const listRectRef = useRef<Rect>(makeRect(0, 0))\n\n  const sidebarRectRef = useRef<Rect>(makeRect(0, 0))\n\n  const anchorRectsRef = useRef<Rect[]>([])\n\n  const [activeAnchor, setActiveAnchor] = useState<{\n    index?: number | string\n    arrayedIndex?: number\n  }>({})\n\n  const getListRect = useCallback(\n    () =>\n      getRect(listRef).then((rect) => ({\n        ...rect,\n        top: rect.top + scrollTopRef.current,\n      })),\n    [],\n  )\n\n  const getSidebarRect = useCallback(() => getRect(sidebarRef), [])\n\n  const getAnchorRects = useCallback(\n    () => getRects(listRef, ` .${prefixClassname(\"index-list__anchor-wrapper\")}`),\n    [],\n  )\n\n  const scrollToAnchorIndexRef = useRef<number | string>()\n\n  const getActiveAnchor = useCallback(() => {\n    const { current: anchorRects } = anchorRectsRef\n    for (let i = anchorRefs.length - 1; i >= 0; i--) {\n      const prevHeight = i > 0 ? anchorRects[i - 1].height : 0\n      const reachTop = sticky ? prevHeight : 0\n\n      if (reachTop >= anchorRects[i].top) {\n        return i\n      }\n    }\n    return -1\n  }, [anchorRefs.length, sticky])\n\n  const onScroll = useCallback(async () => {\n    const arrayedIndex = getActiveAnchor()\n    if (arrayedIndex >= 0) {\n      setActiveAnchor({\n        arrayedIndex,\n        index: anchorProps[arrayedIndex].index,\n      })\n    } else {\n      setActiveAnchor({})\n    }\n  }, [anchorProps, getActiveAnchor])\n\n  const scrollToAnchor = useCallback(\n    (anchorArrayedIndex: number) => {\n      if (anchorArrayedIndex < 0 || scrollToAnchorIndexRef.current === anchorArrayedIndex) {\n        return\n      }\n\n      scrollToAnchorIndexRef.current = anchorArrayedIndex\n      const { current: matchInstance } = anchorRefs[anchorArrayedIndex]\n      matchInstance?.scrollIntoView(scrollTopRef.current)\n    },\n    [anchorRefs],\n  )\n\n  const getAnchorArrayedIndex = useCallback(\n    (event: ITouchEvent) => {\n      const { current: sidebarRect } = sidebarRectRef\n      const touch = getClientCoordinates(event)\n      const sidebarLength = _.size(anchorRefs)\n      const itemHeight = sidebarRect.height / sidebarLength\n      let index = Math.floor((touch.clientY - sidebarRect.top) / itemHeight)\n      if (index < 0) {\n        index = 0\n      } else if (index > sidebarLength - 1) {\n        index = sidebarLength - 1\n      }\n      return index\n    },\n    [anchorRefs],\n  )\n\n  const scrollToEvent = useCallback(\n    (event: ITouchEvent) => {\n      const arrayedIndex = getAnchorArrayedIndex(event)\n      scrollToAnchor(arrayedIndex)\n    },\n    [getAnchorArrayedIndex, scrollToAnchor],\n  )\n\n  const onSidebarClick = useCallback((event: ITouchEvent) => scrollToEvent(event), [scrollToEvent])\n\n  const onTouchMove = useCallback(\n    (event: ITouchEvent) => {\n      preventDefault(event)\n      scrollToEvent(event)\n    },\n    [scrollToEvent],\n  )\n\n  const onTouchStop = useCallback(() => (scrollToAnchorIndexRef.current = undefined), [])\n\n  usePageScroll(({ scrollTop }) => {\n    scrollTopRef.current = scrollTop\n    setTimeout(() => {\n      Promise.all([getListRect(), getSidebarRect(), getAnchorRects()])\n        .then((rects) => {\n          const [listRect, sidebarRect, anchorRects] = rects\n          listRectRef.current = listRect\n          sidebarRectRef.current = sidebarRect\n          anchorRectsRef.current = anchorRects\n        })\n        .then(onScroll)\n    }, 0)\n  })\n\n  const sidebarIndexes = useMemo(\n    () =>\n      _.map(anchorProps, (anchorProp) => (\n        <IndexListIndex key={anchorProp.index} index={anchorProp.index} />\n      )),\n    [anchorProps],\n  )\n\n  return (\n    <IndexListContext.Provider\n      value={{\n        sticky,\n        stickyOffsetTop,\n        activeIndex: activeAnchor?.index ?? -1,\n        activeArrayedIndex: activeAnchor?.arrayedIndex ?? -1,\n        getListRect: () => listRectRef.current,\n        getAnchorRects: () => anchorRectsRef.current,\n      }}\n    >\n      <View\n        ref={listRef}\n        className={classNames(prefixClassname(\"index-list\"), className)}\n        {...restProps}\n      >\n        <IndexListSidebar\n          ref={sidebarRef}\n          onClick={onSidebarClick}\n          onTouchMove={onTouchMove}\n          onTouchCancel={onTouchStop}\n          onTouchEnd={onTouchStop}\n        >\n          {sidebarIndexes}\n        </IndexListSidebar>\n        {children}\n      </View>\n    </IndexListContext.Provider>\n  )\n}\n\nexport default IndexList\n","import { default as IndexBarElement, IndexListProps } from \"./index-list\"\r\nimport IndexListAnchor from \"./index-list-anchor\"\r\n\r\ninterface IndexListInterface {\r\n  (props: IndexListProps): JSX.Element\r\n\r\n  Anchor: typeof IndexListAnchor\r\n}\r\n\r\nconst IndexList = IndexBarElement as IndexListInterface\r\n\r\nIndexList.Anchor = IndexListAnchor\r\n\r\nexport default IndexList\r\n","import { Cell, IndexList, Tabs } from \"@taroify/core\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { Fragment, useState } from \"react\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction BasicIndexBar() {\r\n  const indexList: string[] = []\r\n  const charCodeOfA = \"A\".charCodeAt(0)\r\n\r\n  for (let i = 0; i < 26; i++) {\r\n    indexList.push(String.fromCharCode(charCodeOfA + i))\r\n  }\r\n\r\n  return (\r\n    <IndexList>\r\n      {_.map(indexList, (index) => {\r\n        return (\r\n          <Fragment key={index}>\r\n            <IndexList.Anchor index={index} />\r\n            <Cell title=\"文本\" />\r\n            <Cell title=\"文本\" />\r\n            <Cell title=\"文本\" />\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </IndexList>\r\n  )\r\n}\r\n\r\nfunction CustomIndexBar() {\r\n  const customIndexList = [1, 2, 3, 4, 5, 6, 8, 9, 10]\r\n\r\n  return (\r\n    <IndexList>\r\n      {_.map(customIndexList, (index) => {\r\n        return (\r\n          <Fragment key={index}>\r\n            <IndexList.Anchor index={index}>标题{index}</IndexList.Anchor>\r\n            <Cell title=\"文本\" />\r\n            <Cell title=\"文本\" />\r\n            <Cell title=\"文本\" />\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </IndexList>\r\n  )\r\n}\r\n\r\nexport default function IndexBarDemo() {\r\n  const [tab, setTab] = useState(0)\r\n  return (\r\n    <Page title=\"IndexList 索引栏\" className=\"index-list-demo\">\r\n      <Tabs value={tab} onChange={setTab}>\r\n        <Tabs.TabPane title=\"基础用法\">\r\n          <BasicIndexBar />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane title=\"自定义索引列表\">\r\n          <CustomIndexBar />\r\n        </Tabs.TabPane>\r\n      </Tabs>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}