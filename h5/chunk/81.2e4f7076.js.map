{"version":3,"sources":["webpack:///../core/src/utils/format/unit.ts","webpack:///./src/components/block.tsx","webpack:///../core/src/image/image.tsx","webpack:///../core/src/image/style/index.ts","webpack:///../core/src/flex/style/index.ts","webpack:///../core/src/flex/flex.context.ts","webpack:///../core/src/flex/index.ts","webpack:///../core/src/flex/flex.tsx","webpack:///../core/src/flex/flex-item.tsx","webpack:///./src/pages/basic/image/index.tsx"],"names":["rootFontSize","addUnitPx","value","undefined","unitToPx","getSizeStyle","originSize","size","width","height","convertRem","replace","getRootFontSize","doc","document","documentElement","fontSize","style","window","getComputedStyle","parseFloat","includes","convertPx","convertVw","innerWidth","convertVh","innerHeight","Block","props","className","variant","title","children","classNames","demoPrefixClassname","ImagePlaceholder","prefix","React","prefixClassname","Image","src","alt","mode","round","lazyLoad","placeholder","fallback","restProps","taroMode","toTaroMode","useState","loading","setLoading","failed","setFailed","useEffect","imgProps","onError","handleError","onLoad","handleLoad","FlexContext","createContext","gutter","Flex","gutterProp","direction","wrap","justify","align","useFlexGutter","useMemo","gutterNumber","horizontalGutter","verticalGutter","gutterStyle","averagePadding","marginLeft","marginRight","Provider","Item","FlexItem","span","offset","gutters","useContext","paddingLeft","paddingRight","ImageDemo","imageUrl","modes","map"],"mappings":"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","file":"chunk/81.2e4f7076.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport type ImageMode =\r\n  | \"scaleToFill\"\r\n  | \"aspectFit\"\r\n  | \"aspectFill\"\r\n  | \"widthFix\"\r\n  | \"heightFix\"\r\n  | \"top\"\r\n  | \"bottom\"\r\n  | \"center\"\r\n  | \"left\"\r\n  | \"right\"\r\n  | \"topLeft\"\r\n  | \"topRight\"\r\n  | \"bottomLeft\"\r\n  | \"bottomRight\"\r\n\r\nfunction toTaroMode(mode: ImageMode): string {\r\n  if (mode === \"topLeft\") {\r\n    return \"top left\"\r\n  }\r\n  if (mode === \"topRight\") {\r\n    return \"top right\"\r\n  }\r\n  if (mode === \"bottomLeft\") {\r\n    return \"bottom left\"\r\n  }\r\n  if (mode === \"bottomRight\") {\r\n    return \"bottom right\"\r\n  }\r\n  return mode\r\n}\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ImagePlaceholder({ prefix = \"placeholder\", children }: ImagePlaceholderProps) {\r\n  // Icon Element\r\n  if (React.isValidElement(children)) {\r\n    return (\r\n      <>\r\n        {React.cloneElement(children as ReactElement, {\r\n          className: classNames(\r\n            prefixClassname(`image__${prefix}`),\r\n            prefixClassname(`image__${prefix}-icon`),\r\n          ),\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n\r\ninterface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round = false,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = toTaroMode(mode)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n  }, [src])\r\n\r\n  function handleLoad() {\r\n    setLoading(false)\r\n  }\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--round\")]: round,\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onError={handleError}\r\n          onLoad={handleLoad}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface FlexContextValue {\r\n  gutter: [number | undefined, number | undefined]\r\n}\r\n\r\nconst FlexContext = createContext<FlexContextValue>({\r\n  gutter: [undefined, undefined],\r\n})\r\n\r\nexport default FlexContext\r\n","import FlexComponent, { FlexProps } from \"./flex\"\r\nimport FlexItem from \"./flex-item\"\r\n\r\nexport type { FlexProps } from \"./flex\"\r\nexport type { FlexItemProps } from \"./flex-item\"\r\n\r\ninterface FlexInterface {\r\n  (props: FlexProps): JSX.Element\r\n\r\n  Item: typeof FlexItem\r\n}\r\n\r\nconst Flex = FlexComponent as FlexInterface\r\n\r\nFlex.Item = FlexItem\r\n\r\nexport default Flex\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\nimport { FlexAlign, FlexDirection, FlexGutter, FlexJustify, FlexWrap } from \"./flex.shared\"\r\n\r\nfunction useFlexGutter(gutter?: FlexGutter): [undefined | number, undefined | number] {\r\n  return useMemo(() => {\r\n    if (gutter === undefined) {\r\n      return [undefined, undefined]\r\n    }\r\n\r\n    if (_.isNumber(gutter)) {\r\n      return [gutter, gutter]\r\n    }\r\n\r\n    if (_.isString(gutter)) {\r\n      const gutterNumber = _.toNumber(gutter)\r\n      return [gutterNumber, gutterNumber]\r\n    }\r\n\r\n    if (_.isArray(gutter)) {\r\n      const [horizontalGutter, verticalGutter] = gutter\r\n      return [_.toNumber(horizontalGutter), _.toNumber(verticalGutter)]\r\n    }\r\n\r\n    return [0, 0]\r\n  }, [gutter])\r\n}\r\n\r\nexport interface FlexProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: FlexDirection\r\n  wrap?: FlexWrap\r\n  justify?: FlexJustify\r\n  align?: FlexAlign\r\n  gutter?: FlexGutter\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Flex(props: FlexProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    gutter: gutterProp,\r\n    direction = \"row\",\r\n    wrap = \"nowrap\",\r\n    justify = \"start\",\r\n    align = \"start\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const gutter = useFlexGutter(gutterProp)\r\n  const [horizontalGutter] = gutter\r\n\r\n  const gutterStyle = useMemo<CSSProperties>(() => {\r\n    const gutterStyle: CSSProperties = {}\r\n    if (horizontalGutter) {\r\n      const averagePadding = _.toNumber(horizontalGutter) / 2\r\n      gutterStyle.marginLeft = addUnitPx(-averagePadding)\r\n      gutterStyle.marginRight = addUnitPx(-averagePadding)\r\n    }\r\n    return {}\r\n  }, [horizontalGutter])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex\"),\r\n        {\r\n          // Set flex style\r\n          [prefixClassname(\"flex--row\")]: direction === \"row\",\r\n          [prefixClassname(\"flex--row-reverse\")]: direction === \"row-reverse\",\r\n          [prefixClassname(\"flex--column\")]: direction === \"column\",\r\n          [prefixClassname(\"flex--column-reverse\")]: direction === \"column-reverse\",\r\n          // Set flex-wrap style\r\n          [prefixClassname(\"flex--nowrap\")]: wrap === \"nowrap\",\r\n          [prefixClassname(\"flex--wrap\")]: wrap === \"wrap\",\r\n          [prefixClassname(\"flex--wrap-reverse\")]: wrap === \"wrap-reverse\",\r\n          // Set justify style\r\n          [prefixClassname(\"flex--justify-start\")]: justify === \"start\",\r\n          [prefixClassname(\"flex--justify-center\")]: justify === \"center\",\r\n          [prefixClassname(\"flex--justify-end\")]: justify === \"end\",\r\n          [prefixClassname(\"flex--justify-space-around\")]: justify === \"space-around\",\r\n          [prefixClassname(\"flex--justify-space-between\")]: justify === \"space-between\",\r\n          // Set align style\r\n          [prefixClassname(\"flex--align-start\")]: align === \"start\",\r\n          [prefixClassname(\"flex--align-center\")]: align === \"center\",\r\n          [prefixClassname(\"flex--align-end\")]: align === \"end\",\r\n          [prefixClassname(\"flex--align-baseline\")]: align === \"baseline\",\r\n          [prefixClassname(\"flex--align-stretch\")]: align === \"stretch\",\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    >\r\n      <FlexContext.Provider\r\n        value={{\r\n          gutter,\r\n        }}\r\n        children={children}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\n\r\nexport interface FlexItemProps extends ViewProps {\r\n  style?: CSSProperties\r\n  span?: number\r\n  offset?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function FlexItem(props: FlexItemProps) {\r\n  const { className, style, span, offset, ...restProps } = props\r\n  const { gutter: gutters } = useContext(FlexContext)\r\n  const [horizontalGutter] = gutters\r\n\r\n  // Horizontal gutter use padding\r\n  const gutterStyle: React.CSSProperties = {}\r\n  if (horizontalGutter) {\r\n    const averagePadding = horizontalGutter / 2\r\n    gutterStyle.paddingLeft = addUnitPx(averagePadding)\r\n    gutterStyle.paddingRight = addUnitPx(averagePadding)\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex-item\"),\r\n        {\r\n          [prefixClassname(`flex-item-${span}`)]: span !== undefined,\r\n          [prefixClassname(`flex-item-offset-${offset}`)]: offset !== undefined,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { Flex, Image } from \"@taroify/core\"\nimport { ImageMode } from \"@taroify/core/image\"\nimport { Photo, PhotoFail } from \"@taroify/icons\"\nimport { Text } from \"@tarojs/components\"\nimport * as React from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\nexport default function ImageDemo() {\n  const imageUrl = \"https://img01.yzcdn.cn/vant/cat.jpeg\"\n\n  const modes: ImageMode[] = [\n    \"scaleToFill\",\n    \"aspectFit\",\n    \"aspectFill\",\n    \"widthFix\",\n    \"heightFix\",\n    \"top\",\n    \"bottom\",\n    \"center\",\n    \"left\",\n    \"right\",\n    \"topLeft\",\n    \"topRight\",\n    \"bottomLeft\",\n    \"bottomRight\",\n  ]\n\n  return (\n    <Page title=\"Image 图片\" className=\"image-demo\">\n      <Block title=\"基础用法\">\n        <Image className=\"basic-image\" src={imageUrl} />\n      </Block>\n      <Block title=\"填充模式\">\n        <Flex wrap=\"wrap\" gutter={20}>\n          {modes.map((mode) => (\n            <Flex.Item span={8} key={mode}>\n              <Image mode={mode} src={imageUrl} />\n              <Text className=\"text\">{mode}</Text>\n            </Flex.Item>\n          ))}\n        </Flex>\n      </Block>\n      <Block title=\"圆形图片\">\n        <Flex wrap=\"wrap\" gutter={20}>\n          {modes.map((mode) => (\n            <Flex.Item span={8} key={mode}>\n              <Image mode={mode} src={imageUrl} round />\n              <Text className=\"text\">{mode}</Text>\n            </Flex.Item>\n          ))}\n        </Flex>\n      </Block>\n      <Block title=\"加载中提示\">\n        <Flex wrap=\"wrap\" gutter={20}>\n          <Flex.Item span={8}>\n            <Image placeholder={<Photo />} />\n            <Text className=\"text\">默认提示</Text>\n          </Flex.Item>\n          <Flex.Item span={8}>\n            <Image placeholder=\"加载中...\" />\n            <Text className=\"text\">自定义提示</Text>\n          </Flex.Item>\n        </Flex>\n      </Block>\n      <Block title=\"加载失败提示\">\n        <Flex wrap=\"wrap\" gutter={20}>\n          <Flex.Item span={8}>\n            <Image src=\"error\" fallback={<PhotoFail />} />\n            <Text className=\"text\">默认提示</Text>\n          </Flex.Item>\n          <Flex.Item span={8}>\n            <Image src=\"error\" fallback=\"加载失败\" />\n            <Text className=\"text\">自定义提示</Text>\n          </Flex.Item>\n        </Flex>\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}