{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/utils/base.ts","webpack:///../../../../packages/core/src/hooks/use-mounted.ts","webpack:///../../../../packages/core/src/hooks/use-rendered-effect.tsx","webpack:///../../../../packages/core/src/utils/state.ts","webpack:///../../../../packages/core/src/hooks/use-placeholder.tsx","webpack:///../../../../packages/core/src/hooks/use-height.ts","webpack:///../../../../packages/core/src/hooks/use-timeout.ts","webpack:///../../../../packages/core/src/hooks/use-unique-id.ts","webpack:///../../../../packages/core/src/hooks/use-update.ts","webpack:///../../../../packages/core/src/hooks/use-window-resize.tsx","webpack:///../../../../packages/core/src/utils/dom/rect.ts","webpack:///../../../../packages/core/src/utils/dom/element.ts","webpack:///./src/components/block.tsx","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///../../../../packages/core/src/button/button.context.ts","webpack:///../../../../packages/core/src/button/style/index.ts","webpack:///../../../../packages/core/src/button/button.tsx","webpack:///../../../../packages/core/src/image/image.tsx","webpack:///../../../../packages/core/src/image/style/index.ts","webpack:///../../../../packages/core/src/uploader/uploader-remove.tsx","webpack:///../../../../packages/core/src/uploader/uploader.utils.ts","webpack:///../../../../packages/core/src/uploader/uploader-image.tsx","webpack:///../../../../packages/core/src/uploader/uploader-mask.tsx","webpack:///../../../../packages/core/src/uploader/uploader.context.ts","webpack:///../../../../packages/core/src/uploader/uploader-upload.tsx","webpack:///../../../../packages/core/src/uploader/uploader.shared.ts","webpack:///../../../../packages/core/src/uploader/uploader.tsx","webpack:///../../../../packages/core/src/uploader/index.ts","webpack:///./src/pages/form/uploader/index.tsx"],"names":["value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","inBrowser","inWechat","process","useRenderedEffect","cb","effect","destructorRef","useRef","useEffect","nextTick","destructor","previousRef","usePreviousRef","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","defaultValue","setValue","emitChange","getValue","className","useState","useMounted","useHeight","children","style","useTimeout","timerRef","cbRef","msRef","argsRef","stop","clearTimeout","start","args","setTimeout","callback","ms","restart","updateReducer","num","useReducer","useWindowResize","onWindowResize","offWindowResize","top","left","right","bottom","element","elementUnref","isWindow","Promise","makeRect","resolve","createNodesRef","isRootElement","rects","oneElement","createSelectorQuery","val","elementOrRef","node","ancestor","Block","props","variant","title","classNames","demoPrefixClassname","isValidElement","isIconElement","cloneElement","oldProps","newProps","SpinIcon","key","prefixClassname","LoadingSpinner","rootStyle","LoadingCircular","type","direction","ButtonContext","createContext","color","formType","loading","onClick","loadingProps","useButtonLoading","onCtxClick","useContext","shape","block","e","disabled","React","Object","ImagePlaceholder","prefix","mode","round","lazyLoad","placeholder","fallback","taroMode","toTaroMode","setLoading","failed","src","imgProps","alt","onError","setFailed","onLoad","UploaderRemove","icon","cloneIconElement","IMAGE_REGEXP","UploaderImage","removable","onRemove","item","isImageFile","url","name","renderFile","UploaderMask","message","renderIcon","UploaderUpload","onUpload","readonly","UploadStatus","renderUploaderMask","file","UploadFilesRender","maxFiles","Number","onChangeProp","useValue","files","__files__","getUploadFiles","multiple","getOneUploadFile","Uploader","UploaderContext","BasicUploader","setFile","chooseImage","count","sizeType","sourceType","then","tempFiles","path","originalFileObj","PreviewUploader","setFiles","map","UploaderWithStatus","status","MaxFilesUploader","CustomUploader","CustomPreviewUploader","image","Image","filter","Upload","DisabledUploader","UploaderDemo"],"mappings":"iOA2BA,E,oCAxBM,sBACJ,YAAOA,mBAA8BC,SAA9BD,GAAP,MAGI,yBACJ,GAAI,QAA0B,IAA9B,GAAsD,CACpD,IAAME,EAAOC,UAAb,GACA,MAAO,CACLC,QADK,EAELC,SAAQH,GAGZ,SA8BF,SAASI,WAAWN,GAElB,QADAA,EAAQA,iBAARA,KAjBF,SAASO,kBACP,MAAmB,CACjB,IAAMC,EAAMC,SAAZ,gBACMC,EAAWF,kBAAsBG,2BAAvC,SAEAC,EAAeC,WAAfD,GAGF,SAUgBL,GAaZ,qBACJ,uBAAWP,EACT,EAGEA,WAAJ,MAzBF,SAASc,UAAUd,GAEjB,QADAA,EAAQA,gBAARA,KAyBSc,CAAP,GAEEd,WAAJ,OACSM,WAAP,GAEEN,WAAJ,MArBF,SAASe,UAAUf,GAEjB,QADAA,EAAQA,gBAARA,KACiBW,OAAV,WAAP,IAoBSI,CAAP,GAEEf,WAAJ,MAnBF,SAASgB,UAAUhB,GAEjB,QADAA,EAAQA,gBAARA,KACiBW,OAAV,YAAP,IAkBSK,CAAP,GAGKH,WAAP,K,mCC9EF,oEAEO,IAAMI,EAAgC,oBAAbR,YAA8BA,SAAvD,QACMS,GAAWC,G,mCCHxB,wDAEc,uBACZC,YAAkBC,EAAlBD,M,yECoBF,IAnBA,SAASA,kBAAkBE,EAA3B,GACE,IAAMC,EAAgBC,mBAEtBC,qBACE,WAQE,OAPAC,oBAAS,WACP,IAAMC,EAAaL,aAAH,EAAGA,IACf,IAAJ,KACEC,gBAIGA,EAAP,UATJE,K,+qCCHI,2BACJ,IAAMG,EAAcJ,iBAApB,GAIA,OAHAC,qBAAU,WACRG,eAEF,EAGI,wBACJ,OAAOC,kBAAP,QAKI,wBACJ,OAAOR,aAAP,EAAOA,IAGH,2BACJ,IAAMS,EAAWN,mBAIjB,OAHA,IACEM,UAAmBT,KAErB,EAGI,qBACJ,IAAMS,EAAWN,mBAEjB,OADAM,YACA,EAGI,mBACJ,IAAMC,EAAOP,iBAAb,IAEMQ,EAAeC,uBAClBC,YAAD,OAAoBC,YACbJ,UAAL,KACEA,aAAsBK,uBAExBL,0BALJ,IAUA,MAAO,CAACA,EAAD,QAAP,GAGI,sBACJ,IAAMM,EAASC,cAETR,EAAWN,iBAAjB,GAEMe,EAAaf,mBACbI,EAAcJ,mBAEf,IAAUe,EAAV,QAAL,KACEX,UAAsBW,EAAtBX,QACAW,YACAT,aAGF,IAAMU,EAAYP,uBACfQ,YACCX,yCAAwBA,EAAxBA,YACAO,MAHJ,IASMK,EAAYT,uBAAY,kBAAMH,EAAP,UAA7B,IAEA,OAAOa,mBACL,iBAAO,CAAEC,SAAQd,EAAV,QAA4BY,cAAWF,iBAE9C,CAACV,EAAD,UAHF,IAqBI,oBAAsD,MAAhCe,EAAgC,uDAAF,GAClD,EAAN,EAAM,eAAN,EAAM,QAAN,EAAM,aAAqCC,EAA3C,EAA2CA,SACrCT,EAASC,cACTR,EAAWN,iBAAM,UAACuB,QAAD,mBAAvB,QAEA,IAAI/C,IACF8B,aAGF,IAAMkB,EAAWf,uBACf,cAAkD,MAC5C,IAAJ,KACEH,YACAO,KAED,UAACY,QAAD,yBAGH,CATF,IAYMC,EAAWjB,uBAAY,kBAAMH,EAAP,UAA5B,IAEA,OAAOa,mBACL,iBAAO,CAAE3C,QAAO8B,EAAT,QAA2BoB,aAAUF,gBAE5C,CAAClB,EAAD,UAHF,M,2TChHY,6BAA8E,IAAlCqB,EAAkC,EAAlCA,UAClD9C,ECNM,sBAAqC,MACrB+C,mBAA5B,GADiD,mBAC3C,EAD2C,KAC3C,EAD2C,KAOjD,OALAC,aAAW,kBACT,qBACQ,qBAAGhD,UADX,KADFgD,MAKA,EDDeC,CAAf,GAEA,OAAO,gBAELC,EAFK,EAELA,SAFK,OAIL,oBAAK,CACHJ,YADG,EAEHK,QAAO,CAAEnD,SAAQA,EAAS,GAAH,OAAMF,YAAN,IAA4B,IACnDoD,WAAUA,K,aEgChB,MA/CA,SAASE,aACP,IAAMC,EAAWlC,mBAEXmC,EAAQnC,mBACRoC,EAAQpC,mBACRqC,EAAUrC,mBAEVsC,EAAO7B,uBAAY,WACnByB,EAAJ,UACEK,aAAaL,EAAbK,SACAL,oBAHJ,IAOMM,EAAQ/B,uBAAY,cACxB,IAAIyB,EAAJ,SAGAC,YACAC,YALsF,2BAAfK,EAAe,iCAAfA,EAAe,kBAMtFJ,YACAH,UAAmBQ,WAAWC,EAAUC,EAAxCV,MAPF,IAUMW,EAAUpC,uBACd,cAEE,GADA6B,IACA,EAAc,4BAFgCG,EAEhC,iCAFgCA,EAEhC,kBACZD,EAAMG,EAAUC,EAAhBJ,QACSL,EAAJ,SACLK,EAAML,EAAD,QAAgBC,EAAhB,QAA+BC,EAApCG,WANN,IAaA,OAAOrB,mBACL,iBAAO,CACL0B,YACAL,UACAF,YAEF,CAACO,EAASL,EANZ,K,OCjCF,ICNMM,EAAiBC,SAAjBD,cAAiBC,GAAD,OAA0BA,EAAD,GAA/C,KAQA,MANA,SAASjC,YAAS,MACGkC,qBAAWF,EAA9B,GAEA,OAHgB,qB,QCwBlB,MAZA,SAASG,gBAAgBN,GACvB1C,qBAAU,WAGR,OAFAiD,8BAAc,IAAdA,8CAEO,yBACLC,wBADK,IACLA,uBADK,EACLA,0BADF,MAKC,CARHlD,M,kMCFI,uBACJ,MAAO,CACLmD,MADK,EAELC,OAFK,EAGLC,QAHK,EAILC,SAJK,EAKL3E,UACAC,YAIE,oBACJ,IAAM2E,EAAUC,YAAhB,GACA,KAAa,CACX,OAAe,CACb,GAAIC,YAAJ,GAAuB,CACrB,IAAM9E,EAAQ4E,EAAd,WACM3E,EAAS2E,EAAf,YACA,OAAOG,gBAAgBC,SAAShF,EAAhC,IAGF,OAAO+E,gBACFH,EADL,yBAIA,OAAO,IAAIG,SAAeE,YACxBC,0CAEQ,YAAW,IAAV,EAAU,oBACf,GAAIC,YAAJ,GAA4B,KACpB,EAAN,EAAQnF,MAAOC,EAAf,EAAeA,OACfgF,EAAQD,SAAS,EAAjBC,SAEAA,WAMZ,OAAOF,gBAAgBC,SAAS,EAAhC,IAGI,uBACJ,IAAMJ,EAAUC,YAAhB,GACA,KAAa,CACX,OAAe,CACb,IAAMO,EAAN,GAMA,OALGR,+BAESS,YAAD,OACPD,OAAYC,EAHbT,4BAKIG,gBAAP,GAEA,OAAO,IAAIA,SAAiBE,YAC1BK,0CACa,IAAMV,EAAN,IADbU,8BAGQ,6CAAaL,EAAb,SAId,OAAOF,gBAAP,M,2SCtEI,qBACJ,OAAOQ,IAAP,OAOI,yBACJ,OAAIC,QACF,EAEE,YAAJ,EACSA,EAAP,QAEF,EAGI,0BACJ,OArBK,KAqBEC,aAAA,EAAAA,EAAA,WAAP,UAA+CA,aAAA,EAAAA,EAAA,SAG3C,4BACJ,OAAO,gBAAP,EAGI,2BACJ,GAAIN,cAAJ,GACE,OAAOG,gCAAP,iBAKF,OAAc,CAEZ,IADA,IAAII,EAAJ,EACOA,eAAwBP,cAAcO,EAA7C,aACEA,EAAWA,EAAXA,WAGF,GAAIA,GAAYA,IAAhB,EACE,OAAOJ,kDAAiCI,EAAjCJ,mBAAoDV,EAA3D,MAIJ,OAAOU,uCAA6B,IAAMV,EAA1C,O,kJCnCa,SAASe,MAAMC,GAAmB,MACvC7C,EAAwC6C,EAAxC7C,UAAW8C,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,MAAO3C,EAAayC,EAAbzC,SACnC,OACE,eAAC,IAAD,CAAMJ,YAAWgD,IAAWC,YAAoB,SAAUjD,GAA1D,YACG+C,GAAS,cAAC,IAAD,CAAM/C,YAAWiD,YAAoB,gBAAiB7C,WAAU2C,IAC1E,cAAC,IAAD,CACE/C,YAAWgD,KAAU,mBAClBC,YAAoB,kBAAgC,SAAZH,GADtB,cAElBG,YAAoB,eAA6B,SAAZH,GAFnB,IADvB,WAMG1C,S,q4CCtBH,0BAEJ,IAAK8C,yBAAL,GACE,SAEF,IAAMrB,EAAN,EACA,OAAO,IAAQA,EAAR,KAAP,KAGI,+BACJ,IAAKsB,cAAL,GACE,OAAO,4BAAuBC,uBAAaV,EAApC,GAAP,EAEI,IAAE1C,EAAR,EAAQA,UAAR,gCACM6B,EAAN,EACewB,EAAf,EAAQR,MACFS,EAAQ,sCAEZtD,YAAWgD,IAAWK,EAAD,cAFvB,GAKA,OAAOD,uBAAavB,EAApB,K,mCC1BF,e,onBCSA,IAAM0B,EAAW,eAAoBC,YAAD,OAClC,oBAAK,CAACA,MAAD,EAAWxD,YAAWyD,YAAgB,+BAG7C,SAASC,eAAeb,GAAmB,IACjC9F,EAAR,EAAQA,KACF4G,EAAYnE,mBAChB,yBAAO,CACLvC,QAAK,UAAED,YAAF,kBADA,GAELE,SAAM,UAAEF,YAAF,kBAAqB,MAE7B,CALF,IAOA,OACE,oBAAK,CAACgD,YAAWyD,YAAZ,oBAAiDpD,QAAOsD,GAD/D,GAOF,SAASC,gBAAgBf,GAAmB,IAClC9F,EAAR,EAAQA,KACF4G,EAAYnE,mBAChB,yBAAO,CACLvC,QAAK,UAAED,YAAF,kBADA,GAELE,SAAM,UAAEF,YAAF,kBAAqB,MAE7B,CALF,IAOA,OAAO,oBAAK,CAACgD,YAAWyD,YAAZ,qBAAkDpD,QAAOsD,IAezD,oBAAqC,IAC3C,EAAN,EAAM,YAAN,EAAM,KAD2C,EACjD,EAGEE,YAJ+C,MAC3C,WAD2C,IACjD,EAIEC,iBAL+C,MAC3C,aAD2C,EAM/C1D,EALF,EAKEA,SALF,gCASA,OACE,oBAAK,eACHJ,YAAWgD,IACTS,YADmB,WAEnBA,YAAgB,YAAD,OAFI,IAGnBA,YAAgB,YAAD,OAHI,QADvB,GASGI,eAAsB,+BAAe,CAAC9G,OAAMA,IAC5C8G,gBAAuB,gCAAgB,CAAC9G,OAAMA,IAC9CqD,GAAY,oBAAK,CAACJ,YAAWyD,YAAZ,iBAA8CrD,WAAUA,O,2DC1EhF,YAOM2D,EAAgBC,wBAAtB,IAEA,O,mCCVA,sB,6yBC0Cc,mBAAmC,MACzC,EAAN,EAAM,YAAN,EAAM,MADyC,EAC/C,EAGElB,eAJ6C,MACzC,YADyC,EACzC,EAAN,EAAM,MADyC,EAC/C,EAKE/F,YAN6C,MACzC,SADyC,IAC/C,EAMEkH,aAP6C,MACzC,UADyC,IAC/C,EAOEC,gBAR6C,MACzC,SADyC,EACzC,EAAN,EAAM,QAAN,EAAM,WAAN,EAAM,WAAN,EAWEC,QAXI,EAAN,EAAM,OAAN,EAAM,SAcJC,EAdF,EAcEA,QAdF,gCAiBMC,EAxCR,SAASC,iBAAiBH,GACxB,OAAI,IAAJ,GACSA,EAAU,QAAjB,EAEF,EAoCqBG,CAArB,GACiBC,EAAeC,qBAAhC,KAAQJ,QAER,OACE,oBAAK,CACHpE,YAAWgD,IACTS,YADmB,8BAIhBA,YAAD,gBAFF,SAEqCX,GAJlB,cAKhBW,YAAD,qBAHF,cAG0CX,GALvB,cAMhBW,YAAD,oBAJF,aAIyCX,GANtB,cAQhBW,YAAgB,WAAD,OAAhB,IANF,GAFmB,cAUhBA,YAAD,iBARF,UAQsCgB,GAVnB,cAWhBhB,YAAD,kBATF,WASuCgB,GAXpB,cAahBhB,YAAD,gBAXF,SAWqC1G,GAblB,cAchB0G,YAAD,iBAZF,UAYsC1G,GAdnB,cAehB0G,YAAD,kBAbF,WAauC1G,GAfpB,cAgBhB0G,YAAD,iBAdF,UAcsC1G,GAhBnB,cAkBhB0G,YAAD,oBAhBF,GAFmB,cAmBhBA,YAAD,sBAjBF,GAFmB,cAoBhBA,YAAD,oBAlBF,GAFmB,cAqBhBA,YAAD,mBAnBF,GAFmB,cAsBhBA,YAAD,iBAAoCiB,GAtBnB,GADlB,GA2BHrE,QA3BG,EA4BH+D,UAAUO,oBACHC,GAAL,IACER,cACAG,WAAU,EAAVA,MAIJ,oBAAK,CAACvE,YAAWyD,YAAgB,oBAC9BY,EACC,oBAAQ,eAACrE,YAAWyD,YAAgB,oBADzB,IADf,EAMGrD,GAAY,oBAAK,CAACJ,YAAWyD,YAAZ,gBAA6CrD,WAAUA,KAE3E,oBAAW,eACTJ,YAAWyD,YADF,kBAETS,WAAUA,sBAAmCA,yBAFpC,EAGTU,WAHS,EAITT,WAAS,GAhDf,KAuDI,2BACJ,OAAI,IAAJ,GACSU,uBAAOC,mBAAd,IAEK,uBAAO,eAAC1E,WAAUA,GAAzB,M,mqBC7EF,SAAS2E,iBAAiB,GAA2D,QAAzDC,cAAyD,MAA3D,cAA2D,EAAjC5E,EAAiC,EAAjCA,SAElD,OAAIyE,iBAAJ,GAEI,gCACG,iBAA6C,CAC5C7E,YAAWgD,IACTS,YAAgB,UAAD,OADI,IAEnBA,YAAgB,UAAD,SAFI,cASzB,QAAwB,IAA5B,GACS,oBAAK,CAACzD,YAAWyD,YAAgB,UAAD,OAA3B,IAAiDrD,WAAUA,IAElEyE,2BAAP,MAaY,kBAAiC,MACvC,EAAN,EAAM,YAAN,EAAM,MAAN,EAAM,IADuC,EAC7C,EAIEI,YAL2C,MACvC,cADuC,IAC7C,EAKEC,aAN2C,WAC7C,EAMEC,gBAP2C,WAC7C,EAOEC,mBAR2C,WAC7C,EAQEC,gBAT2C,SAC7C,gCAWMC,EAhER,SAASC,WAAWN,GAClB,kBAAIA,EACF,WAEF,aAAIA,EACF,YAEF,eAAIA,EACF,cAEF,gBAAIA,EACF,eAEF,EAmDiBM,CAAjB,GAZ6C,EAcftF,oBAA9B,GAd6C,mBAcvC,EAduC,KAcvC,EAduC,OAejBA,oBAA5B,GAf6C,mBAevC,EAfuC,KAevC,EAfuC,KA8B7C,OAbA3B,qBAAU,WACRkH,QACC,CAFHlH,IAcE,iCACImH,GAAUC,GACV,oBAAU,eACRA,MADQ,EAERT,OAFQ,EAGRE,WAHQ,EAIRnF,YAAWgD,IACTS,YADmB,6BAGhBA,YAAD,gBADF,GAFmB,cAIhBA,YAAD,kBAAqCU,GAJpB,GAJb,GAYRwB,WAAU,CAAEC,SACZC,UArBR,uBACEL,MACAM,OAoBMC,SA1BR,sBACEP,QASA,IAoBGrB,MACC,oBAAK,eAACnE,YAAWgD,IAAWS,YAAD,aAA3B,GACE,iCAAiB,CAACuB,SAAD,cAAsB5E,WAAUgF,KAGpDK,MACC,oBAAK,eAACzF,YAAWgD,IAAWS,YAAD,aAA3B,GACE,iCAAiB,CAACuB,SAAD,WAAmB5E,WAAUiF,Q,mCCtIxD,e,qzBC2BA,MAbA,SAASW,eAAenD,GAA0B,IAC1C,EAAN,EAAM,UAD0C,EAChD,EAAmBoD,YAD6B,MACtBpB,8BADsB,EAChD,gCAEA,OACE,oBAAK,eACH7E,YAAWgD,IAAWS,YAAD,gCADvB,GAIGyC,YAAiBD,EAAM,CAAEjG,YAAWyD,YAAgB,qCCpBrD0C,EAAN,8C,oiBC0EA,MAnDA,SAASC,cAAcvD,GAAyB,IACxC,EAAN,EAAM,YAAN,EAAM,OAAN,EAAM,MAAN,EAAM,KADwC,EAC9C,EAKEwD,iBAN4C,SACxC,EAAN,EAAM,OAAN,EAAM,MAAN,EAAM,QAAN,EAAM,SAUJC,EAVF,EAUEA,SAVF,8CAyCA,OACE,oBAAK,eAACtG,YAAWgD,IAAWS,YAAD,yBAA3B,GA5BF,sBACE,ODrCE,wBACJ,OAAI8C,EAAJ,KACE,IAAOA,0BAGLA,EAAJ,KACSJ,OAAkBI,EAAzB,KC+BIC,CAAY,CAAE3C,SAAM4C,UAEpB,oBAAM,CACJzG,YAAWyD,YADP,2BAEJiC,MAFI,EAGJT,OAHI,EAIJW,MAJI,EAKJV,QAAOA,IAMX,oBAAK,CAAClF,YAAWyD,YAAgB,mBAC/B,8BAAY,CAACzD,YAAWyD,YAAgB,yBACxC,oBAAK,CACHzD,YAAWgD,IACTS,YADmB,uBAEnBA,YAHC,aAKHrD,WAAUsG,QAAF,EAAUD,KAQrBE,GADH,EAGGN,GAAa,kBAAe,CAACjC,UAASkC,MCnC7C,MAVA,SAASM,aAAa/D,GAAwB,IACtC,EAAN,EAAM,YAAN,EAAM,KAAmBgE,EAAzB,EAAyBA,QACzB,OACE,oBAAK,CAAC7G,YAAWgD,IAAWS,YAAD,sBArB/B,SAASqD,WAAWb,GAClB,GAAI9C,YAAJ,GACE,OAAO+C,YAAiBD,EAAM,CAAEjG,YAAWyD,YAAgB,yBAE7D,GAAI,6BAAyBwC,SAA7B,IAAqE,KAC3DjG,EAAeiG,EAAvB,MAAQjG,UACR,OAAOoD,uBAAa6C,EAAM,CACxBjG,YAAWgD,IAAWS,YAAD,2BAepBqD,CADH,GAEGD,GAAW,oBAAK,CAAC7G,YAAWyD,YAAZ,0BAAuDrD,WAAUyG,MCnBxF,EAFwB7C,wBAAxB,I,mfCmCA,IC1CA,ED0CA,EA5BA,SAAS+C,eAAelE,GAA0B,IAC1C,EAAN,EAAM,YAAN,EAAM,SAD0C,EAChD,EAA6BoD,YADmB,MACZpB,6BAA9B,MAD0C,EACIT,EAApD,EAAoDA,QAApD,+CADgD,EAEjBI,qBAA/B,GAAM,EAF0C,EAE1C,SAAYwC,EAF8B,EAE9BA,SASlB,OACE,oBAAK,eACHhH,YAAWgD,IACTS,YADmB,mCAGhBA,YAAD,8BAAiDwD,GAJlD,GAQH7C,UAhBJ,wBACEA,cACK6C,GAAL,GACED,eAKF,GAWGd,YAAiBD,EAAM,CAAEjG,YAAWyD,YAAgB,6B,mBCrC3D,YACEyD,wBACAA,yBACAA,kBAHF,CAAYA,MAAZ,K,siBCaA,SAASC,mBAAmBC,GAC1B,QACGA,aAAA,EAAAA,EAAA,UAAiBF,EAAjB,YAA2CE,aAAA,EAAAA,EAAA,UAAiBF,EAA7D,SACE,kBAAa,CACXjB,QACEmB,aAAA,EAAAA,EAAA,UAAiBF,EAAjB,UACErC,oBADF,OAEIuC,aAAA,EAAAA,EAAA,UAAiBF,EAAjB,OACFrC,wBADE,WAJK,EAQXgC,UAASO,EAAKP,UAgBtB,SAASQ,kBAAkBxE,GAAgC,IACnD,EAAN,EAAM,eAAN,EAEEhG,MAFI,EAAN,EAAM,WAAN,EAAM,SADmD,EACzD,EAKEyK,gBANuD,MAM5CC,OALP,UADmD,EAO7CC,EANZ,EAME7H,SAPuD,EAUxB8H,YAAS,CACxC7H,iBACA/C,QAFwC,EAGxC8C,WAAU6H,IAb6C,IAUjD3K,aAViD,MAUnD,GAVmD,EAUrCgD,EAVqC,EAUrCA,SAMd6H,EAAQlI,mBAAQ,WACpB,MACE,SAEF,IAAMmI,EAAY,IDvChB,2BACJ,OAAO,SAA2B,CAAlC,GCsC0BC,CAAN,IAA6C,2BAC7D,kBAAc,CACZpE,MADY,EAEZK,OAAMuD,aAAF,EAAEA,EAFM,KAGZX,MAAKW,aAAF,EAAEA,EAHO,IAIZV,OAAMU,aAAF,EAAEA,EAJM,KAKZf,aAAW,UAACe,aAAD,EAACA,EAAD,6BAA6BA,aAAA,EAAAA,EAAA,UAAiBF,EAL7C,UAMZ9G,WAAU+G,mBANE,GAOZb,WAAU,2BAAO1B,GAAY/E,EAAS,OAAiB0G,YAAD,OAAUA,IAA3B,YAOzC,OAHIoB,SAAJ,GACEA,OAAe,kBAAe,CAACnE,MAAI,YAErC,IACC,CAACoB,EAAU0C,EAAUO,EAAUhI,EApBlC,IAsBA,GAAI,IAAJ,GACE,OAAOgF,kBAAP,MAGF,MAAe,CACb,IAAMuC,EDlEJ,6BACJ,OAAO,OAAmBM,EAAnB,GAAP,ECiEeI,CAAb,GACA,OACE,kBAAc,CACZjE,OAAMuD,EADM,KAEZX,MAAKW,aAAF,EAAEA,EAFO,IAGZV,OAAMU,aAAF,EAAEA,EAHM,KAIZf,aAAWe,aAAA,EAAAA,EAAA,UAAiBF,EAJhB,UAKZ9G,WAAU+G,mBALE,GAMZb,WAAU,2BACP1B,GAED/E,EAAS,SAMjB,SC3FF,IAAMkI,EDwHQ,qBAAuC,IAC7C,EAAN,EAAM,YAAN,EAAM,eAAN,EAAM,MAD6C,EACnD,EAIEnD,gBALiD,SAC7C,EAAN,EAAM,WAAN,EAAM,WAAN,EAAM,WAAN,EAAM,SASJjF,EATF,EASEA,SATF,wCAaA,OACE,gBAACqI,EAAD,SAAyB,CACvBnL,QAAO,CACL+H,aACAoC,eAGF,oBAAK,eAAChH,YAAWgD,IAAWS,YAAD,gBAA3B,GACE,oBAAK,CACHzD,YAAWgD,IAAWS,YAAD,oCAClBA,YAAD,+BAAkDmB,KAGnDxE,QALH,EAMI,kCAAkB,CAChBR,eADgB,EAEhB/C,QAFgB,EAGhB+H,WAHgB,EAIhB0C,WAJgB,EAKhBO,WALgB,EAMhBlI,WAAUA,QCxJxBoI,WACAA,UAOA,Q,mDCZA,SAASE,gBAAgB,MACChI,qBADD,mBAChBmH,EADgB,KACVc,EADU,KAiBvB,OAAO,iBAAUrL,QAAOuK,EAAMJ,WAd9B,SAASA,WACPmB,sBAAY,CACVC,QAAO,EACPC,WAAU,CAAC,WAAY,cACvBC,aAAY,CAAC,QAAS,YACrBC,MAAK,YAAmB,MAAhBC,EAAgB,EAAhBA,UACTN,EAAQ,CACNzB,MAAK+B,EAAU,GAAGC,KAClB5E,OAAM2E,EAAU,GAAG3E,KACnB6C,OAAI,UAAE8B,EAAU,GAAGE,uBAAf,aAAE,EAA8BhC,WAKQ/G,WAAUuI,IAG9D,SAASS,kBAAkB,MACC1I,mBAA0B,CAClD,CACEwG,MAAK,wCAEP,CACEA,MAAK,wCANgB,mBAClBiB,EADkB,KACXkB,EADW,KA2BzB,OAAO,iBAAU/L,QAAO6K,EAAOG,YAAQ,EAACb,WAjBxC,SAASA,WACPmB,sBAAY,CACVC,QAAO,EACPC,WAAU,CAAC,WAAY,cACvBC,aAAY,CAAC,QAAS,YACrBC,MAAK,YAAmB,IAAhBC,EAAgB,EAAhBA,UACTI,EAAS,GAAD,mBACHlB,GADG,YAEHc,EAAUK,KAAI,gBAAGJ,EAAH,EAAGA,KAAM5E,EAAT,EAASA,KAAM6E,EAAf,EAAeA,gBAAf,MAAsC,CACrD7E,SACA4C,MAAKgC,EACL/B,OAAMgC,aAAF,EAAEA,EAAiBhC,gBAM6B/G,WAAUiJ,IAGxE,SAASE,qBAAqB,MACF7I,mBAA0B,CAClD,CACEwG,MAAK,uCACLsC,SAAQ,YACRlC,UAAS,UAEX,CACEJ,MAAK,uCACLsC,SAAQ,SACRlC,UAAS,UAVe,mBACrBa,EADqB,KACdkB,EADc,KA+B5B,OAAO,iBAAU/L,QAAO6K,EAAOG,YAAQ,EAACb,WAjBxC,SAASA,WACPmB,sBAAY,CACVC,QAAO,EACPC,WAAU,CAAC,WAAY,cACvBC,aAAY,CAAC,QAAS,YACrBC,MAAK,YAAmB,IAAhBC,EAAgB,EAAhBA,UACTI,EAAS,GAAD,mBACHlB,GADG,YAEHc,EAAUK,KAAI,gBAAGJ,EAAH,EAAGA,KAAM5E,EAAT,EAASA,KAAM6E,EAAf,EAAeA,gBAAf,MAAsC,CACrD7E,SACA4C,MAAKgC,EACL/B,OAAMgC,aAAF,EAAEA,EAAiBhC,gBAM6B/G,WAAUiJ,IAGxE,SAASI,mBAAmB,MACA/I,mBAA0B,IAD1B,mBACnByH,EADmB,KACZkB,EADY,KAoB1B,OAAO,iBAAU/L,QAAO6K,EAAOG,YAAQ,EAACP,WAAU,EAAGN,WAjBrD,SAASA,WACPmB,sBAAY,CACVC,QAAO,EACPC,WAAU,CAAC,WAAY,cACvBC,aAAY,CAAC,QAAS,YACrBC,MAAK,YAAmB,IAAhBC,EAAgB,EAAhBA,UACTI,EAAS,GAAD,mBACHlB,GADG,YAEHc,EAAUK,KAAI,gBAAGJ,EAAH,EAAGA,KAAM5E,EAAT,EAASA,KAAM6E,EAAf,EAAeA,gBAAf,MAAsC,CACrD7E,SACA4C,MAAKgC,EACL/B,OAAMgC,aAAF,EAAEA,EAAiBhC,gBAM0C/G,WAAUiJ,IAGrF,SAASK,iBACP,OACE,4BACE,mBAAQhD,OAAM,cAAC,OAAD,IAAUhC,QAAM,UAA9B,sBAON,SAASiF,wBAAwB,MACLjJ,mBAA0B,CAClD,CACEwG,MAAK,0CAHsB,mBACxBiB,EADwB,KACjBkB,EADiB,KAuB/B,OACE,kBAAU/L,QAAO6K,EAAOG,YAAQ,EAACb,WAjBnC,SAASA,WACPmB,sBAAY,CACVE,WAAU,CAAC,WAAY,cACvBC,aAAY,CAAC,QAAS,YACrBC,MAAK,YAAmB,IAAhBC,EAAgB,EAAhBA,UACTI,EAAS,GAAD,mBACHlB,GADG,YAEHc,EAAUK,KAAI,gBAAGJ,EAAH,EAAGA,KAAM5E,EAAT,EAASA,KAAM6E,EAAf,EAAeA,gBAAf,MAAsC,CACrD7E,SACA4C,MAAKgC,EACL/B,OAAMgC,aAAF,EAAEA,EAAiBhC,gBAOwB/G,WAAUiJ,EAA/D,YACGlB,EAAMmB,KAAI,SAACM,GAAD,OACT,gBAAUC,MAAV,CAEE3C,MAAK0C,EAAM1C,IACXC,OAAMyC,EAAMzC,KACZ7C,OAAMsF,EAAMtF,KACZyC,WAAU,2BAAMsC,EAASlB,EAAM2B,QAAO,SAAC9C,GAAD,OAAUA,IAAS4C,OAL3D,WAOE,cAAC,IAAD,CAAMnJ,YAAU,iCAAhB,qBANKmJ,EAAM1C,QASf,gBAAU6C,OAAV,OAKN,SAASC,mBACP,OAAO,iBAAU3E,YAAQ,IAGZ,SAAS4E,eACtB,OACE,eAAC,IAAD,CAAMzG,QAAM,gBAAgB/C,YAAU,gBAAtC,YACE,cAAC,IAAD,CAAO+C,QAAM,OAAb,WACE,cAACkF,cAAD,MAEF,cAAC,IAAD,CAAOlF,QAAM,OAAb,WACE,cAAC4F,gBAAD,MAEF,cAAC,IAAD,CAAO5F,QAAM,OAAb,WACE,cAAC+F,mBAAD,MAEF,cAAC,IAAD,CAAO/F,QAAM,SAAb,WACE,cAACiG,iBAAD,MAEF,cAAC,IAAD,CAAOjG,QAAM,UAAb,WACE,cAACkG,eAAD,MAEF,cAAC,IAAD,CAAOlG,QAAM,UAAb,WACE,cAACmG,sBAAD,MAEF,cAAC,IAAD,CAAOnG,QAAM,SAAb,WACE,cAACwG,iBAAD","file":"chunk/68.a833db6d.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","export function noop() {}\r\n\r\nexport const inBrowser = typeof document !== \"undefined\" && !!document.scripts\r\nexport const inWechat = process.env.TARO_ENV === \"weapp\"\r\nexport const inSwan = process.env.TARO_ENV === \"swan\"\r\nexport const inAlipay = process.env.TARO_ENV === \"alipay\"\r\nexport const inQQ = process.env.TARO_ENV === \"qq\"\r\nexport const inToutiao = process.env.TARO_ENV === \"tt\"\r\n","import useRenderedEffect from \"./use-rendered-effect\"\r\n\r\nexport default function useMounted(cb: (...args: any[]) => any) {\r\n  useRenderedEffect(cb, [])\r\n}\r\n","import { nextTick } from \"@tarojs/taro\"\nimport * as _ from \"lodash\"\nimport { DependencyList, EffectCallback, useEffect, useRef } from \"react\"\n\nfunction useRenderedEffect(effect: EffectCallback, deps?: DependencyList) {\n  const destructorRef = useRef<() => void>()\n\n  useEffect(\n    () => {\n      nextTick(() => {\n        const destructor = effect?.()\n        if (_.isFunction(destructor)) {\n          destructorRef.current = destructor\n        }\n      })\n\n      return destructorRef.current\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  )\n}\n\nexport default useRenderedEffect\n","import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  const stateRef = useRef(defaultValue ?? value ?? initialValue)\r\n\r\n  if (value !== undefined) {\r\n    stateRef.current = value\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(value)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ value: stateRef.current, getValue, setValue }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport useHeight from \"./use-height\"\r\n\r\ninterface UsePlaceholderOptions {\r\n  className?: string\r\n}\r\n\r\nexport default function usePlaceholder(contentRef: any, { className }: UsePlaceholderOptions) {\r\n  const height = useHeight(contentRef)\r\n\r\n  return ({\r\n    // @ts-ignore\r\n    children,\r\n  }) => (\r\n    <View\r\n      className={className}\r\n      style={{ height: height ? `${addUnitPx(height)}` : \"\" }}\r\n      children={children}\r\n    />\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport useMounted from \"./use-mounted\"\r\n\r\nexport default function useHeight(elementOrRef: any) {\r\n  const [height, setHeight] = useState<number>(0)\r\n  useMounted(() =>\r\n    getRect(elementOrRef)\r\n      .then(({ height }) => height)\r\n      .then(setHeight),\r\n  )\r\n  return height\r\n}\r\n","import { useCallback, useMemo, useRef } from \"react\"\r\n\r\ntype UseTimeoutCallback = (...args: any[]) => void\r\n\r\nfunction useTimeout() {\r\n  const timerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const cbRef = useRef<UseTimeoutCallback>()\r\n  const msRef = useRef<number>()\r\n  const argsRef = useRef<any[]>()\r\n\r\n  const stop = useCallback(() => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current)\r\n      timerRef.current = undefined\r\n    }\r\n  }, [])\r\n\r\n  const start = useCallback((callback: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n    if (timerRef.current) {\r\n      return\r\n    }\r\n    cbRef.current = callback\r\n    msRef.current = ms\r\n    argsRef.current = args\r\n    timerRef.current = setTimeout(callback, ms, args)\r\n  }, [])\r\n\r\n  const restart = useCallback(\r\n    (callback?: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n      stop()\r\n      if (callback) {\r\n        start(callback, ms, args)\r\n      } else if (cbRef.current) {\r\n        start(cbRef.current, msRef.current, argsRef.current)\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  return useMemo(\r\n    () => ({\r\n      restart,\r\n      start,\r\n      stop,\r\n    }),\r\n    [restart, start, stop],\r\n  )\r\n}\r\n\r\nexport default useTimeout\r\n","import * as _ from \"lodash\"\r\nimport { useRef } from \"react\"\r\n\r\nfunction useUniqueId() {\r\n  const uniqueIdRef = useRef(_.uniqueId(\"t_\"))\r\n  return uniqueIdRef.current\r\n}\r\n\r\nexport default useUniqueId\r\n","import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useUpdate\r\n","import { offWindowResize, onWindowResize } from \"@tarojs/taro\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Size {\r\n  /** 变化后的窗口高度，单位 px */\r\n  windowHeight: number\r\n  /** 变化后的窗口宽度，单位 px */\r\n  windowWidth: number\r\n}\r\n\r\ninterface CallbackResult {\r\n  size: Size\r\n}\r\n\r\ntype WindowResizeCallback = (result: CallbackResult) => void\r\n\r\nfunction useWindowResize(callback: WindowResizeCallback) {\r\n  useEffect(() => {\r\n    onWindowResize?.(callback)\r\n\r\n    return () =>\r\n      offWindowResize?.(\r\n        // @ts-ignore\r\n        callback,\r\n      )\r\n  }, [callback])\r\n}\r\n\r\nexport default useWindowResize\r\n","import { createSelectorQuery } from \"@tarojs/taro\"\nimport { inBrowser } from \"../base\"\nimport { createNodesRef, elementUnref, isRootElement, isWindow } from \"./element\"\n\nexport interface Rect {\n  dataset: Record<string, any>\n  id: string\n  top: number\n  right: number\n  bottom: number\n  left: number\n  width: number\n  height: number\n}\n\nexport function makeRect(width: number, height: number) {\n  return {\n    top: 0,\n    left: 0,\n    right: width,\n    bottom: height,\n    width,\n    height,\n  } as Rect\n}\n\nexport function getRect(elementOrRef: any): Promise<Rect> {\n  const element = elementUnref(elementOrRef)\n  if (element) {\n    if (inBrowser) {\n      if (isWindow(element)) {\n        const width = element.innerWidth\n        const height = element.innerHeight\n        return Promise.resolve(makeRect(width, height))\n      }\n\n      return Promise.resolve(\n        (((element as unknown) as HTMLElement).getBoundingClientRect() as unknown) as Rect,\n      )\n    } else {\n      return new Promise<Rect>((resolve) => {\n        createNodesRef(element)\n          .boundingClientRect()\n          .exec(([rect]) => {\n            if (isRootElement(element)) {\n              const { width, height } = rect\n              resolve(makeRect(width, height))\n            } else {\n              resolve(rect)\n            }\n          })\n      })\n    }\n  }\n  return Promise.resolve(makeRect(0, 0))\n}\n\nexport function getRects(elementOrRef: any, selector: string): Promise<Rect[]> {\n  const element = elementUnref(elementOrRef)\n  if (element) {\n    if (inBrowser) {\n      const rects: Rect[] = []\n      ;((element as unknown) as HTMLElement)\n        .querySelectorAll(selector)\n        .forEach((oneElement) =>\n          rects.push((oneElement.getBoundingClientRect() as unknown) as Rect),\n        )\n      return Promise.resolve(rects)\n    } else {\n      return new Promise<Rect[]>((resolve) => {\n        createSelectorQuery()\n          .selectAll(\"#\" + element.uid + selector)\n          .boundingClientRect()\n          .exec(([rects]) => resolve((rects as unknown) as Rect[]))\n      })\n    }\n  }\n  return Promise.resolve([])\n}\n","import { TaroElement } from \"@tarojs/runtime\"\nimport { createSelectorQuery } from \"@tarojs/taro\"\nimport * as _ from \"lodash\"\nimport { inWechat } from \"../base\"\n\nexport const ELEMENT_NODE_TYPE = 1\n\nexport function isWindow(val: unknown): val is Window {\n  return val === window\n}\n\nexport function isBodyElement(val: unknown): boolean {\n  return val === document.body\n}\n\nexport function elementUnref(elementOrRef: any): TaroElement {\n  if (elementOrRef === undefined || elementOrRef === null) {\n    return elementOrRef\n  }\n  if (\"current\" in elementOrRef) {\n    return elementOrRef.current\n  }\n  return elementOrRef\n}\n\nexport function isRootElement(node?: TaroElement) {\n  return node?.nodeType === ELEMENT_NODE_TYPE && node?.tagName === \"ROOT\"\n}\n\nexport function matchSelector(aSelector?: string, bSelector?: string) {\n  return _.replace(aSelector as string, \"#\", \"\") === bSelector\n}\n\nexport function createNodesRef(element: TaroElement) {\n  if (isRootElement(element)) {\n    return createSelectorQuery().selectViewport()\n  }\n\n  // Fix nested in CustomWrapper is undefined\n  // See: https://github.com/mallfoundry/taroify/pull/143\n  if (inWechat) {\n    let ancestor = element\n    while (ancestor.parentNode && !isRootElement(ancestor.parentNode as TaroElement)) {\n      ancestor = ancestor.parentNode as TaroElement\n    }\n\n    if (ancestor && ancestor !== element) {\n      return createSelectorQuery().select(`#${ancestor.uid}>>>#${element.uid}`)\n    }\n  }\n\n  return createSelectorQuery().select(\"#\" + element.uid)\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport { ICON_TYPE, IconProps } from \"../shared\"\r\n\r\nexport function isIconElement(node?: ReactNode): boolean {\r\n  // Is`t not ReactElement\r\n  if (!isValidElement(node)) {\r\n    return false\r\n  }\r\n  const element = node as ReactElement\r\n  return _.hasIn(element.type, ICON_TYPE)\r\n}\r\n\r\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\r\n  if (!isIconElement(node)) {\r\n    return isValidElement(node) ? cloneElement(node, props) : node\r\n  }\r\n  const { className, ...restProps } = props\r\n  const element = node as ReactElement\r\n  const { props: oldProps } = element\r\n  const newProps: IconProps = {\r\n    ...oldProps,\r\n    className: classNames(oldProps.className, className),\r\n    ...restProps,\r\n  }\r\n  return cloneElement(element, newProps)\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\ninterface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\nimport { ButtonProps } from \"./button\"\r\n\r\ninterface ButtonContextValue {\r\n  onClick?(event: ITouchEvent, props: ButtonProps): void\r\n}\r\n\r\nconst ButtonContext = createContext<ButtonContextValue>({})\r\n\r\nexport default ButtonContext\r\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\n\r\nimport \"../index.scss\"\r\n","import { Button as TaroButton, ButtonProps as TaroButtonProps, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport Loading, { LoadingType } from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport ButtonContext from \"./button.context\"\r\nimport {\r\n  ButtonColor,\r\n  ButtonFormType,\r\n  ButtonShape,\r\n  ButtonSize,\r\n  ButtonVariant,\r\n} from \"./button.shared\"\r\n\r\ninterface ButtonLoadingProps {\r\n  type?: LoadingType\r\n}\r\n\r\nfunction useButtonLoading(loading?: boolean | ButtonLoadingProps): ButtonLoadingProps | undefined {\r\n  if (_.isBoolean(loading)) {\r\n    return loading ? {} : undefined\r\n  }\r\n  return loading\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends Omit<TaroButtonProps, \"size\" | \"formType\" | \"type\" | \"loading\" | \"plain\"> {\r\n  variant?: ButtonVariant\r\n  shape?: ButtonShape\r\n  size?: ButtonSize\r\n  color?: ButtonColor\r\n  formType?: ButtonFormType\r\n  loading?: boolean | ButtonLoadingProps\r\n  block?: boolean\r\n  hairline?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    variant = \"contained\",\r\n    shape,\r\n    size = \"medium\",\r\n    color = \"default\",\r\n    formType = \"button\",\r\n    block,\r\n    hairline,\r\n    disabled,\r\n    loading: loadingProp,\r\n    icon,\r\n    children,\r\n    onClick,\r\n    ...restProps\r\n  } = props\r\n  const loadingProps = useButtonLoading(loadingProp)\r\n  const { onClick: onCtxClick } = useContext(ButtonContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"button\"),\r\n        {\r\n          // Set variant style\r\n          [prefixClassname(\"button--text\")]: variant === \"text\",\r\n          [prefixClassname(\"button--contained\")]: variant === \"contained\",\r\n          [prefixClassname(\"button--outlined\")]: variant === \"outlined\",\r\n          // Set color style\r\n          [prefixClassname(`button--${color}`)]: color,\r\n          // Set shape style\r\n          [prefixClassname(\"button--round\")]: shape === \"round\",\r\n          [prefixClassname(\"button--square\")]: shape === \"square\",\r\n          // Set size style\r\n          [prefixClassname(\"button--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"button--small\")]: size === \"small\",\r\n          [prefixClassname(\"button--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"button--large\")]: size === \"large\",\r\n          // Set hairline style\r\n          [prefixClassname(\"button--hairline\")]: hairline,\r\n          [prefixClassname(\"hairline--surround\")]: hairline,\r\n          [prefixClassname(\"button--disabled\")]: disabled,\r\n          [prefixClassname(\"button--loading\")]: loadingProps,\r\n          [prefixClassname(\"button--block\")]: block,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={(e) => {\r\n        if (!disabled && !loadingProps) {\r\n          onClick?.(e)\r\n          onCtxClick?.(e, props)\r\n        }\r\n      }}\r\n    >\r\n      <View className={prefixClassname(\"button__content\")}>\r\n        {loadingProps ? (\r\n          <Loading className={prefixClassname(\"button__loading\")} {...loadingProps} />\r\n        ) : (\r\n          icon\r\n        )}\r\n        {children && <View className={prefixClassname(\"button__text\")} children={children} />}\r\n      </View>\r\n      <TaroButton\r\n        className={prefixClassname(\"button__button\")}\r\n        formType={formType === \"submit\" ? \"submit\" : formType === \"reset\" ? \"reset\" : undefined}\r\n        disabled={disabled}\r\n        loading={false}\r\n        {...restProps}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function createButton(children: ReactNode | ButtonProps, props?: ButtonProps) {\r\n  if (_.isPlainObject(children)) {\r\n    return <Button {...(children as ButtonProps)} {...props} />\r\n  }\r\n  return <Button children={children} {...props} />\r\n}\r\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport type ImageMode =\r\n  | \"scaleToFill\"\r\n  | \"aspectFit\"\r\n  | \"aspectFill\"\r\n  | \"widthFix\"\r\n  | \"heightFix\"\r\n  | \"top\"\r\n  | \"bottom\"\r\n  | \"center\"\r\n  | \"left\"\r\n  | \"right\"\r\n  | \"topLeft\"\r\n  | \"topRight\"\r\n  | \"bottomLeft\"\r\n  | \"bottomRight\"\r\n\r\nfunction toTaroMode(mode: ImageMode): string {\r\n  if (mode === \"topLeft\") {\r\n    return \"top left\"\r\n  }\r\n  if (mode === \"topRight\") {\r\n    return \"top right\"\r\n  }\r\n  if (mode === \"bottomLeft\") {\r\n    return \"bottom left\"\r\n  }\r\n  if (mode === \"bottomRight\") {\r\n    return \"bottom right\"\r\n  }\r\n  return mode\r\n}\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ImagePlaceholder({ prefix = \"placeholder\", children }: ImagePlaceholderProps) {\r\n  // Icon Element\r\n  if (React.isValidElement(children)) {\r\n    return (\r\n      <>\r\n        {React.cloneElement(children as ReactElement, {\r\n          className: classNames(\r\n            prefixClassname(`image__${prefix}`),\r\n            prefixClassname(`image__${prefix}-icon`),\r\n          ),\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n\r\ninterface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round = false,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = toTaroMode(mode)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n  }, [src])\r\n\r\n  function handleLoad() {\r\n    setLoading(false)\r\n  }\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--round\")]: round,\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onError={handleError}\r\n          onLoad={handleLoad}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { Cross } from \"@taroify/icons\"\r\nimport { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface UploaderRemoveProps extends ViewProps {\r\n  className?: string\r\n  icon?: ReactNode\r\n}\r\n\r\nfunction UploaderRemove(props: UploaderRemoveProps) {\r\n  const { className, icon = <Cross />, ...restProps } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"uploader__preview-remove\"), className)}\r\n      {...restProps}\r\n    >\r\n      {cloneIconElement(icon, { className: prefixClassname(\"uploader__preview-remove-icon\") })}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default UploaderRemove\r\n","import { UploadFile } from \"./uploader.shared\"\n\nconst IMAGE_REGEXP = /\\.(jpeg|jpg|gif|png|svg|webp|jfif|bmp|dpg)/i\n\nexport function isImageFile(item: UploadFile): boolean {\n  if (item.type) {\n    return item.type.indexOf(\"image\") === 0\n  }\n\n  if (item.url) {\n    return IMAGE_REGEXP.test(item.url)\n  }\n  return false\n}\n","import { Description } from \"@taroify/icons\"\nimport { ITouchEvent, View } from \"@tarojs/components\"\nimport { ViewProps } from \"@tarojs/components/types/View\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { ReactNode } from \"react\"\nimport Image, { ImageMode } from \"../image\"\nimport { prefixClassname } from \"../styles\"\nimport UploaderRemove from \"./uploader-remove\"\nimport { isImageFile } from \"./uploader.utils\"\n\ninterface UploaderImageProps extends ViewProps {\n  className?: string\n  type?: string\n  url?: string\n  name?: string\n  removable?: boolean\n  mode?: ImageMode\n  alt?: string\n  round?: boolean\n  children?: ReactNode\n\n  onRemove?(event: ITouchEvent): void\n}\n\nfunction UploaderImage(props: UploaderImageProps) {\n  const {\n    className,\n    type,\n    url,\n    name,\n    removable = true,\n    mode,\n    alt,\n    round,\n    children,\n    onRemove,\n    ...restProps\n  } = props\n\n  function renderFile() {\n    if (isImageFile({ type, url })) {\n      return (\n        <Image\n          className={prefixClassname(\"uploader__preview-image\")}\n          src={url}\n          mode={mode}\n          alt={alt}\n          round={round}\n        />\n      )\n    }\n\n    return (\n      <View className={prefixClassname(\"uploader__file\")}>\n        <Description className={prefixClassname(\"uploader__file-icon\")} />\n        <View\n          className={classNames(\n            prefixClassname(\"uploader__file-name\"),\n            prefixClassname(\"ellipsis\"),\n          )}\n          children={name ?? url}\n        />\n      </View>\n    )\n  }\n\n  return (\n    <View className={classNames(prefixClassname(\"uploader__preview\"), className)} {...restProps}>\n      {renderFile()}\n      {children}\n      {removable && <UploaderRemove onClick={onRemove} />}\n    </View>\n  )\n}\n\nexport default UploaderImage\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport Loading from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nfunction renderIcon(icon?: ReactNode) {\r\n  if (isIconElement(icon)) {\r\n    return cloneIconElement(icon, { className: prefixClassname(\"uploader__mask-icon\") })\r\n  }\r\n  if (isValidElement(icon) && (icon as ReactElement).type === Loading) {\r\n    const { className } = (icon as ReactElement).props\r\n    return cloneElement(icon, {\r\n      className: classNames(prefixClassname(\"uploader__loading\"), className),\r\n    })\r\n  }\r\n}\r\n\r\ninterface UploaderMaskProps {\r\n  className?: string\r\n  icon?: ReactNode\r\n  message?: ReactNode\r\n}\r\n\r\nfunction UploaderMask(props: UploaderMaskProps) {\r\n  const { className, icon, message } = props\r\n  return (\r\n    <View className={classNames(prefixClassname(\"uploader__mask\"), className)}>\r\n      {renderIcon(icon)}\r\n      {message && <View className={prefixClassname(\"uploader__mask-message\")} children={message} />}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default UploaderMask\r\n","import { createContext } from \"react\"\n\ninterface UploaderContextValue {\n  disabled?: boolean\n\n  onUpload?(): void\n\n  onRemove?(): void\n}\n\nconst UploaderContext = createContext<UploaderContextValue>({})\n\nexport default UploaderContext\n","import { Photograph } from \"@taroify/icons\"\r\nimport { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport UploaderContext from \"./uploader.context\"\r\n\r\ninterface UploaderUploadProps extends ViewProps {\r\n  readonly?: boolean\r\n  icon?: ReactNode\r\n\r\n  onClick?(event: ITouchEvent): void\r\n}\r\n\r\nfunction UploaderUpload(props: UploaderUploadProps) {\r\n  const { className, readonly, icon = <Photograph />, onClick, ...restProps } = props\r\n  const { disabled, onUpload } = useContext(UploaderContext)\r\n\r\n  function handleClick(event: ITouchEvent) {\r\n    onClick?.(event)\r\n    if (!readonly && !disabled) {\r\n      onUpload?.()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"uploader__upload\"),\r\n        {\r\n          [prefixClassname(\"uploader__upload--readonly\")]: readonly,\r\n        },\r\n        className,\r\n      )}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      {cloneIconElement(icon, { className: prefixClassname(\"uploader__upload-icon\") })}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default UploaderUpload\r\n","import * as _ from \"lodash\"\r\nimport { ReactNode } from \"react\"\r\n\r\nexport enum UploadStatus {\r\n  Uploading = \"uploading\",\r\n  Completed = \"completed \",\r\n  Failed = \"failed\",\r\n}\r\n\r\nexport type UploadStatusString = \"uploading\" | \"completed\" | \"failed\"\r\n\r\nexport interface UploadFile {\r\n  url?: string\r\n  type?: string\r\n  name?: string\r\n  removable?: boolean\r\n  status?: UploadStatus | UploadStatusString\r\n  message?: ReactNode\r\n}\r\n\r\nexport function getOneUploadFile(files: UploadFile | UploadFile[]) {\r\n  return _.isArray(files) ? files[0] : (files as UploadFile)\r\n}\r\n\r\nexport function getUploadFiles(files: UploadFile | UploadFile[]) {\r\n  return _.isArray(files) ? files : [files as UploadFile]\r\n}\r\n","import { Close } from \"@taroify/icons\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport Loading from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useValue } from \"../utils/state\"\r\nimport UploaderImage from \"./uploader-image\"\r\nimport UploaderMask from \"./uploader-mask\"\r\nimport UploaderUpload from \"./uploader-upload\"\r\nimport UploaderContext from \"./uploader.context\"\r\nimport { getOneUploadFile, getUploadFiles, UploadFile, UploadStatus } from \"./uploader.shared\"\r\n\r\nfunction renderUploaderMask(file: UploadFile) {\r\n  return (\r\n    (file?.status === UploadStatus.Uploading || file?.status === UploadStatus.Failed) && (\r\n      <UploaderMask\r\n        icon={\r\n          file?.status === UploadStatus.Uploading ? (\r\n            <Loading />\r\n          ) : file?.status === UploadStatus.Failed ? (\r\n            <Close />\r\n          ) : undefined\r\n        }\r\n        message={file.message}\r\n      />\r\n    )\r\n  )\r\n}\r\n\r\ninterface UseUploadFilesRenderProps {\r\n  defaultValue?: UploadFile[] | UploadFile\r\n  value?: UploadFile[] | UploadFile\r\n  disabled?: boolean\r\n  multiple?: boolean\r\n  maxFiles?: number\r\n\r\n  onChange?(file?: any): void\r\n}\r\n\r\nfunction UploadFilesRender(props: UseUploadFilesRenderProps): JSX.Element {\r\n  const {\r\n    defaultValue,\r\n    value: valueProp,\r\n    disabled,\r\n    multiple,\r\n    maxFiles = Number.MAX_VALUE,\r\n    onChange: onChangeProp,\r\n  } = props\r\n\r\n  const { value = [], setValue } = useValue({\r\n    defaultValue,\r\n    value: valueProp,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const files = useMemo(() => {\r\n    if (!multiple) {\r\n      return []\r\n    }\r\n    const __files__ = _.map(getUploadFiles(value) as UploadFile[], (file, index) => (\r\n      <UploaderImage\r\n        key={index}\r\n        type={file?.type}\r\n        url={file?.url}\r\n        name={file?.name}\r\n        removable={(file?.removable ?? true) && file?.status !== UploadStatus.Uploading}\r\n        children={renderUploaderMask(file)}\r\n        onRemove={() => !disabled && setValue(_.filter(value, (item) => item !== file))}\r\n      />\r\n    ))\r\n\r\n    if (__files__.length < maxFiles) {\r\n      __files__.push(<UploaderUpload key=\"upload\" />)\r\n    }\r\n    return __files__ as ReactNode\r\n  }, [disabled, maxFiles, multiple, setValue, value])\r\n\r\n  if (_.isEmpty(value)) {\r\n    return <UploaderUpload />\r\n  }\r\n\r\n  if (!multiple) {\r\n    const file = getOneUploadFile(value)\r\n    return (\r\n      <UploaderImage\r\n        type={file.type}\r\n        url={file?.url}\r\n        name={file?.name}\r\n        removable={file?.status !== UploadStatus.Uploading}\r\n        children={renderUploaderMask(file)}\r\n        onRemove={() =>\r\n          !disabled &&\r\n          // @ts-ignore\r\n          setValue(null)\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return files as JSX.Element\r\n}\r\n\r\ninterface BaseUploaderProps extends ViewProps {\r\n  className?: string\r\n  defaultValue?: UploadFile[] | UploadFile\r\n  value?: UploadFile[] | UploadFile\r\n  disabled?: boolean\r\n  multiple?: boolean\r\n  maxFiles?: number\r\n  children?: ReactNode\r\n\r\n  onUpload?(): void\r\n}\r\n\r\nexport interface Uploader1Props extends BaseUploaderProps {\r\n  onChange?(file?: UploadFile): void\r\n}\r\n\r\nexport interface Uploader2Props extends BaseUploaderProps {\r\n  onChange?(files: UploadFile[]): void\r\n}\r\n\r\nexport interface Uploader3Props extends BaseUploaderProps {\r\n  onChange?(files?: UploadFile[]): void\r\n}\r\n\r\nexport type UploaderProps = Uploader1Props | Uploader2Props | Uploader3Props\r\n\r\nexport default function Uploader(props: UploaderProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value,\r\n    disabled = false,\r\n    maxFiles,\r\n    multiple,\r\n    children,\r\n    onUpload,\r\n    onChange,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <UploaderContext.Provider\r\n      value={{\r\n        disabled,\r\n        onUpload,\r\n      }}\r\n    >\r\n      <View className={classNames(prefixClassname(\"uploader\"), className)} {...restProps}>\r\n        <View\r\n          className={classNames(prefixClassname(\"uploader__wrapper\"), {\r\n            [prefixClassname(\"uploader__wrapper--disabled\")]: disabled,\r\n          })}\r\n        >\r\n          {children ?? (\r\n            <UploadFilesRender\r\n              defaultValue={defaultValue}\r\n              value={value}\r\n              disabled={disabled}\r\n              maxFiles={maxFiles}\r\n              multiple={multiple}\r\n              onChange={onChange}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </UploaderContext.Provider>\r\n  )\r\n}\r\n","import UploaderElement, { UploaderProps } from \"./uploader\"\nimport UploaderImage from \"./uploader-image\"\nimport UploaderUpload from \"./uploader-upload\"\nimport { UploadFile } from \"./uploader.shared\"\n\ninterface UploaderInterface {\n  (props: UploaderProps): JSX.Element\n\n  Upload: typeof UploaderUpload\n  Image: typeof UploaderImage\n}\n\nconst Uploader = UploaderElement as UploaderInterface\n\nUploader.Upload = UploaderUpload\nUploader.Image = UploaderImage\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nnamespace Uploader {\n  export type File = UploadFile\n}\n\nexport default Uploader\n","import { Button, Uploader } from \"@taroify/core\"\nimport { Plus } from \"@taroify/icons\"\nimport { View } from \"@tarojs/components\"\nimport { chooseImage } from \"@tarojs/taro\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\nfunction BasicUploader() {\n  const [file, setFile] = useState<Uploader.File>()\n\n  function onUpload() {\n    chooseImage({\n      count: 1,\n      sizeType: [\"original\", \"compressed\"],\n      sourceType: [\"album\", \"camera\"],\n    }).then(({ tempFiles }) => {\n      setFile({\n        url: tempFiles[0].path,\n        type: tempFiles[0].type,\n        name: tempFiles[0].originalFileObj?.name,\n      })\n    })\n  }\n\n  return <Uploader value={file} onUpload={onUpload} onChange={setFile} />\n}\n\nfunction PreviewUploader() {\n  const [files, setFiles] = useState<Uploader.File[]>([\n    {\n      url: \"https://img01.yzcdn.cn/vant/leaf.jpg\",\n    },\n    {\n      url: \"https://img.yzcdn.cn/vant/tree.jpg\",\n    },\n  ])\n\n  function onUpload() {\n    chooseImage({\n      count: 1,\n      sizeType: [\"original\", \"compressed\"],\n      sourceType: [\"album\", \"camera\"],\n    }).then(({ tempFiles }) => {\n      setFiles([\n        ...files,\n        ...tempFiles.map(({ path, type, originalFileObj }) => ({\n          type,\n          url: path,\n          name: originalFileObj?.name,\n        })),\n      ])\n    })\n  }\n\n  return <Uploader value={files} multiple onUpload={onUpload} onChange={setFiles} />\n}\n\nfunction UploaderWithStatus() {\n  const [files, setFiles] = useState<Uploader.File[]>([\n    {\n      url: \"https://img01.yzcdn.cn/vant/leaf.jpg\",\n      status: \"uploading\",\n      message: \"上传中...\",\n    },\n    {\n      url: \"https://img01.yzcdn.cn/vant/tree.jpg\",\n      status: \"failed\",\n      message: \"上传失败\",\n    },\n  ])\n\n  function onUpload() {\n    chooseImage({\n      count: 1,\n      sizeType: [\"original\", \"compressed\"],\n      sourceType: [\"album\", \"camera\"],\n    }).then(({ tempFiles }) => {\n      setFiles([\n        ...files,\n        ...tempFiles.map(({ path, type, originalFileObj }) => ({\n          type,\n          url: path,\n          name: originalFileObj?.name,\n        })),\n      ])\n    })\n  }\n\n  return <Uploader value={files} multiple onUpload={onUpload} onChange={setFiles} />\n}\n\nfunction MaxFilesUploader() {\n  const [files, setFiles] = useState<Uploader.File[]>([])\n\n  function onUpload() {\n    chooseImage({\n      count: 1,\n      sizeType: [\"original\", \"compressed\"],\n      sourceType: [\"album\", \"camera\"],\n    }).then(({ tempFiles }) => {\n      setFiles([\n        ...files,\n        ...tempFiles.map(({ path, type, originalFileObj }) => ({\n          type,\n          url: path,\n          name: originalFileObj?.name,\n        })),\n      ])\n    })\n  }\n\n  return <Uploader value={files} multiple maxFiles={2} onUpload={onUpload} onChange={setFiles} />\n}\n\nfunction CustomUploader() {\n  return (\n    <Uploader>\n      <Button icon={<Plus />} color=\"primary\">\n        上传文件\n      </Button>\n    </Uploader>\n  )\n}\n\nfunction CustomPreviewUploader() {\n  const [files, setFiles] = useState<Uploader.File[]>([\n    {\n      url: \"https://img01.yzcdn.cn/vant/leaf.jpg\",\n    },\n  ])\n\n  function onUpload() {\n    chooseImage({\n      sizeType: [\"original\", \"compressed\"],\n      sourceType: [\"album\", \"camera\"],\n    }).then(({ tempFiles }) => {\n      setFiles([\n        ...files,\n        ...tempFiles.map(({ path, type, originalFileObj }) => ({\n          type,\n          url: path,\n          name: originalFileObj?.name,\n        })),\n      ])\n    })\n  }\n\n  return (\n    <Uploader value={files} multiple onUpload={onUpload} onChange={setFiles}>\n      {files.map((image) => (\n        <Uploader.Image\n          key={image.url}\n          url={image.url}\n          name={image.name}\n          type={image.type}\n          onRemove={() => setFiles(files.filter((item) => item !== image))}\n        >\n          <View className=\"preview-cover taroify-ellipsis\">图片名称</View>\n        </Uploader.Image>\n      ))}\n      <Uploader.Upload />\n    </Uploader>\n  )\n}\n\nfunction DisabledUploader() {\n  return <Uploader disabled />\n}\n\nexport default function UploaderDemo() {\n  return (\n    <Page title=\"Uploader 文件上传\" className=\"uploader-demo\">\n      <Block title=\"基础用法\">\n        <BasicUploader />\n      </Block>\n      <Block title=\"文件预览\">\n        <PreviewUploader />\n      </Block>\n      <Block title=\"上传状态\">\n        <UploaderWithStatus />\n      </Block>\n      <Block title=\"限制上传数量\">\n        <MaxFilesUploader />\n      </Block>\n      <Block title=\"自定义上传样式\">\n        <CustomUploader />\n      </Block>\n      <Block title=\"自定义预览样式\">\n        <CustomPreviewUploader />\n      </Block>\n      <Block title=\"禁用文件上传\">\n        <DisabledUploader />\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}