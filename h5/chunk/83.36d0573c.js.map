{"version":3,"sources":["webpack:///../icons/src/utils/index.ts","webpack:///../core/src/cell/style/index.ts","webpack:///../core/src/cell/cell-group.context.ts","webpack:///../core/src/cell/base-cell.tsx","webpack:///../core/src/cell/cell-group.tsx","webpack:///../core/src/cell/index.ts","webpack:///../core/src/cell/cell.tsx","webpack:///../core/src/stepper/stepper.context.ts","webpack:///../core/src/stepper/stepper-button.tsx","webpack:///../core/src/stepper/stepper-input.tsx","webpack:///../core/src/stepper/stepper.tsx","webpack:///../core/src/stepper/index.ts","webpack:///./src/pages/form/stepper/index.tsx"],"names":["isIconElement","node","isValidElement","element","type","ICON_TYPE","cloneIconElement","props","cloneElement","className","restProps","oldProps","newProps","classNames","CellGroupContext","createContext","BaseCell","titleClassName","briefClassName","valueClassName","size","align","title","brief","clickable","clickableProp","required","bordered","icon","rightIcon","children","useContext","prefixClassname","CellGroup","inset","Provider","value","Cell","Group","StepperContext","StepperButton","style","disabledProp","disabled","onClick","onTouchStart","onTouchEnd","onTouchCancel","min","max","disabledCtx","longPress","onStep","longPressRef","useRef","longPressTimerRef","longPressStep","useCallback","current","setTimeout","handleTouchStart","clearTimeout","handleTouchEnd","event","preventDefault","getSizeStyle","StepperInput","width","onFocus","valueProp","precision","formatValue","onChange","digit","rootRef","useState","setValue","useEffect","handleFocus","blur","onInput","inputValue","target","formatted","formatNumber","String","includes","pair","split","slice","isNumeric","onBlur","input","ref","addUnitPx","height","Stepper","defaultValue","Number","MAX_VALUE","step","shape","childrenProp","onChangeProp","useStepperChildren","useMemo","__children__","Children","forEach","child","elementType","undefined","decrease","increase","useValue","isNaN","Math","toFixed","valueRef","useToRef","actionType","diff","addNumber","Input","Button","StepperDemo","variant"],"mappings":"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","file":"chunk/83.36d0573c.js","sourcesContent":["import classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport { ICON_TYPE, IconProps } from \"../shared\"\r\n\r\nexport function isIconElement(node?: ReactNode): boolean {\r\n  // Is`t not ReactElement\r\n  if (!isValidElement(node)) {\r\n    return false\r\n  }\r\n  const element = node as ReactElement\r\n  return _.hasIn(element.type, ICON_TYPE)\r\n}\r\n\r\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\r\n  if (!isIconElement(node)) {\r\n    return isValidElement(node) ? cloneElement(node, props) : node\r\n  }\r\n  const { className, ...restProps } = props\r\n  const element = node as ReactElement\r\n  const { props: oldProps } = element\r\n  const newProps: IconProps = {\r\n    ...oldProps,\r\n    className: classNames(oldProps.className, className),\r\n    ...restProps,\r\n  }\r\n  return cloneElement(element, newProps)\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface CellGroupContextValue {\r\n  clickable?: boolean\r\n}\r\n\r\nconst CellGroupContext = createContext<CellGroupContextValue>({})\r\n\r\nexport default CellGroupContext\r\n","import { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface BaseCellProps extends ViewProps {\r\n  titleClassName?: string\r\n  briefClassName?: string\r\n  valueClassName?: string\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  required?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction BaseCell(props: BaseCellProps) {\r\n  const {\r\n    className,\r\n    titleClassName,\r\n    briefClassName,\r\n    valueClassName,\r\n    size = \"medium\",\r\n    align,\r\n    title,\r\n    brief,\r\n    clickable: clickableProp = false,\r\n    required = false,\r\n    bordered = true,\r\n    icon,\r\n    rightIcon,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { clickable } = useContext(CellGroupContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell\"),\r\n        {\r\n          [prefixClassname(\"cell--start\")]: align === \"start\",\r\n          [prefixClassname(\"cell--center\")]: align === \"center\",\r\n          [prefixClassname(\"cell--end\")]: align === \"end\",\r\n          [prefixClassname(\"cell--large\")]: size === \"large\",\r\n          [prefixClassname(\"cell--clickable\")]: clickableProp || clickable,\r\n          [prefixClassname(\"cell--required\")]: required,\r\n          [prefixClassname(\"cell--borderless\")]: !bordered,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon && cloneIconElement(icon, { className: prefixClassname(\"cell__icon\") })}\r\n      {title && (\r\n        <View className={classNames(prefixClassname(\"cell__title\"), titleClassName)}>\r\n          {title}\r\n          {brief && (\r\n            <View\r\n              className={classNames(prefixClassname(\"cell__brief\"), briefClassName)}\r\n              children={brief}\r\n            />\r\n          )}\r\n        </View>\r\n      )}\r\n      {children && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"cell__value\"),\r\n            {\r\n              [prefixClassname(\"cell__value--alone\")]: !title,\r\n            },\r\n            valueClassName,\r\n          )}\r\n          children={children}\r\n        />\r\n      )}\r\n      {rightIcon && cloneIconElement(rightIcon, { className: prefixClassname(\"cell__right-icon\") })}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default BaseCell\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\n\r\ninterface CellGroupProps extends ViewProps {\r\n  title?: ReactNode\r\n  clickable?: boolean\r\n  inset?: boolean\r\n  bordered?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nexport function CellGroup(props: CellGroupProps) {\r\n  const { title, clickable = false, inset = false, bordered = true, children, ...restProps } = props\r\n  return (\r\n    <CellGroupContext.Provider\r\n      value={{\r\n        clickable,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"cell-group\"), {\r\n          [prefixClassname(\"cell-group--inset\")]: inset,\r\n        })}\r\n        {...restProps}\r\n      >\r\n        {title && (\r\n          <View\r\n            className={classNames(prefixClassname(\"cell-group__title\"), {\r\n              [prefixClassname(\"cell-group__title--inset\")]: inset,\r\n            })}\r\n            children={title}\r\n          />\r\n        )}\r\n        <View\r\n          className={classNames(prefixClassname(\"cell-group\"), {\r\n            [prefixClassname(\"hairline--top-bottom\")]: bordered,\r\n          })}\r\n          children={children}\r\n        />\r\n      </View>\r\n    </CellGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CellGroup\r\n","import CellElement, { CellProps } from \"./cell\"\r\nimport CellGroup from \"./cell-group\"\r\n\r\nexport type { CellAlign, CellSize } from \"./cell.shared\"\r\nexport { default as BaseCell } from \"./base-cell\"\r\n\r\ninterface CellInterface {\r\n  (props: CellProps): JSX.Element\r\n\r\n  Group: typeof CellGroup\r\n}\r\n\r\nconst Cell = CellElement as CellInterface\r\nCell.Group = CellGroup\r\n\r\nexport default Cell\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport BaseCell from \"./base-cell\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellProps extends ViewProps {\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Cell(props: CellProps) {\r\n  return <BaseCell {...props} />\r\n}\r\n\r\nexport default Cell\r\n","import { createContext } from \"react\"\r\nimport { StepperActionType } from \"./stepper.shared\"\r\n\r\ninterface StepperContextValue {\r\n  value?: number | string\r\n  min?: number\r\n  max?: number\r\n  size?: number | string\r\n  disabled?: boolean\r\n  precision?: number\r\n  longPress?: boolean\r\n\r\n  formatValue?(value?: number | string): number | string\r\n\r\n  onStep?(action: StepperActionType): void\r\n\r\n  onChange?(value?: number | string): void\r\n}\r\n\r\nconst StepperContext = createContext<StepperContextValue>({})\r\n\r\nexport default StepperContext\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { useCallback, useContext, useRef } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { preventDefault } from \"../utils/dom/event\"\r\nimport { getSizeStyle } from \"../utils/format/unit\"\r\nimport StepperContext from \"./stepper.context\"\r\nimport { StepperActionType } from \"./stepper.shared\"\r\n\r\nconst LONG_PRESS_INTERVAL = 200\r\n\r\nconst LONG_PRESS_START_TIME = 600\r\n\r\ninterface StepperButtonProps extends ViewProps {\r\n  disabled?: boolean\r\n\r\n  onClick?(event: ITouchEvent): void\r\n}\r\n\r\ninterface InternalStepperButtonProps extends StepperButtonProps {\r\n  type?: StepperActionType\r\n}\r\n\r\nfunction StepperButton(props: StepperButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    type = \"decrease\",\r\n    disabled: disabledProp,\r\n    onClick,\r\n    onTouchStart,\r\n    onTouchEnd,\r\n    onTouchCancel,\r\n    ...restProps\r\n  } = props as InternalStepperButtonProps\r\n\r\n  const {\r\n    value = 0,\r\n    min = 0,\r\n    max = 0,\r\n    size,\r\n    disabled: disabledCtx,\r\n    longPress,\r\n    onStep,\r\n  } = useContext(StepperContext)\r\n\r\n  const disabled =\r\n    disabledProp ||\r\n    disabledCtx ||\r\n    (type === \"decrease\" && value <= min) ||\r\n    (type === \"increase\" && value >= max)\r\n\r\n  const longPressRef = useRef(false)\r\n\r\n  let longPressTimerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const longPressStep = useCallback(() => {\r\n    longPressTimerRef.current = setTimeout(() => {\r\n      onStep?.(type)\r\n      longPressStep()\r\n    }, LONG_PRESS_INTERVAL)\r\n  }, [onStep, type])\r\n\r\n  const handleTouchStart = useCallback(() => {\r\n    if (longPress) {\r\n      longPressRef.current = false\r\n      if (longPressTimerRef.current) {\r\n        clearTimeout(longPressTimerRef.current)\r\n      }\r\n      longPressTimerRef.current = setTimeout(() => {\r\n        longPressRef.current = true\r\n        onStep?.(type)\r\n        longPressStep()\r\n      }, LONG_PRESS_START_TIME)\r\n    }\r\n  }, [longPress, longPressStep, onStep, type])\r\n\r\n  const handleTouchEnd = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (longPress) {\r\n        if (longPressTimerRef.current) {\r\n          clearTimeout(longPressTimerRef.current)\r\n        }\r\n        if (longPressRef.current) {\r\n          preventDefault(event)\r\n        }\r\n      }\r\n    },\r\n    [longPress],\r\n  )\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(`stepper__${type}`),\r\n        {\r\n          [prefixClassname(`stepper__${type}--disabled`)]: disabled,\r\n        },\r\n        className,\r\n      )}\r\n      style={getSizeStyle(size)}\r\n      onClick={(event) => {\r\n        preventDefault(event)\r\n        onClick?.(event)\r\n        if (!disabled) {\r\n          onStep?.(type)\r\n        }\r\n      }}\r\n      onTouchStart={(event) => {\r\n        onTouchStart?.(event)\r\n        if (!disabled) {\r\n          handleTouchStart()\r\n        }\r\n      }}\r\n      onTouchEnd={(event) => {\r\n        onTouchEnd?.(event)\r\n        handleTouchEnd(event)\r\n      }}\r\n      onTouchCancel={(event) => {\r\n        onTouchCancel?.(event)\r\n        handleTouchEnd(event)\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default StepperButton\r\n","import { Input } from \"@tarojs/components\"\r\nimport { BaseEventOrig, CommonEventFunction, ITouchEvent } from \"@tarojs/components/types/common\"\r\nimport { InputProps } from \"@tarojs/components/types/Input\"\r\nimport * as React from \"react\"\r\nimport { useCallback, useContext, useEffect, useRef, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { preventDefault } from \"../utils/dom/event\"\r\nimport { formatNumber } from \"../utils/format/number\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport StepperContext from \"./stepper.context\"\r\n\r\ninterface StepperInputProps {\r\n  width?: number | string\r\n  disabled?: boolean\r\n  onFocus?: CommonEventFunction<InputProps.inputForceEventDetail>\r\n}\r\n\r\nfunction StepperInput(props: StepperInputProps) {\r\n  const { width, disabled: disabledProp, onFocus } = props\r\n  const { value: valueProp, size, disabled, precision = 0, formatValue, onChange } = useContext(\r\n    StepperContext,\r\n  )\r\n  const digit = precision > 0\r\n\r\n  const rootRef = useRef<HTMLElement>()\r\n\r\n  const [value, setValue] = useState<string | number>()\r\n\r\n  useEffect(() => setValue(valueProp), [valueProp])\r\n\r\n  const onTouchEnd = useCallback(\r\n    (event: ITouchEvent) => {\r\n      // fix mobile safari page scroll down issue\r\n      // see: https://github.com/youzan/vant/issues/7690\r\n      if (disabledProp) {\r\n        preventDefault(event)\r\n      }\r\n    },\r\n    [disabledProp],\r\n  )\r\n\r\n  const handleFocus = useCallback(\r\n    (event: BaseEventOrig<InputProps.inputForceEventDetail>) => {\r\n      // readonly not work in legacy mobile safari\r\n      if (disabledProp) {\r\n        rootRef.current?.blur()\r\n      } else {\r\n        onFocus?.(event)\r\n      }\r\n    },\r\n    [disabledProp, onFocus],\r\n  )\r\n\r\n  const onInput = useCallback(\r\n    (event: BaseEventOrig<InputProps.inputEventDetail>) => {\r\n      const input = event.target as HTMLInputElement\r\n      const { value: inputValue } = input\r\n\r\n      let formatted = formatNumber(String(inputValue), digit)\r\n\r\n      // limit max decimal length\r\n      if (precision > 0 && formatted.includes(\".\")) {\r\n        const pair = formatted.split(\".\")\r\n        formatted = `${pair[0]}.${pair[1].slice(0, precision)}`\r\n      }\r\n\r\n      // prefer number type\r\n      const isNumeric = formatted === String(+formatted)\r\n      setValue(isNumeric ? +formatted : formatted)\r\n    },\r\n    [digit, precision],\r\n  )\r\n\r\n  const onBlur = useCallback(\r\n    (event: BaseEventOrig<InputProps.inputValueEventDetail>) => {\r\n      const input = event.target as HTMLInputElement\r\n      const value = formatValue?.(input.value)\r\n      setValue(value)\r\n      onChange?.(value)\r\n    },\r\n    [formatValue, onChange],\r\n  )\r\n\r\n  return (\r\n    <Input\r\n      ref={rootRef}\r\n      className={prefixClassname(\"stepper__input\")}\r\n      style={{\r\n        width: width ? addUnitPx(width) : \"\",\r\n        height: size ? addUnitPx(size) : \"\",\r\n      }}\r\n      disabled={disabledProp || disabled}\r\n      type={digit ? \"digit\" : \"number\"}\r\n      value={(value as unknown) as string}\r\n      onTouchEnd={onTouchEnd}\r\n      onFocus={handleFocus}\r\n      onInput={onInput}\r\n      onBlur={onBlur}\r\n    />\r\n  )\r\n}\r\n\r\nexport default StepperInput\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addNumber, formatNumber } from \"../utils/format/number\"\r\nimport { useToRef, useValue } from \"../utils/state\"\r\nimport StepperButton from \"./stepper-button\"\r\nimport StepperInput from \"./stepper-input\"\r\nimport StepperContext from \"./stepper.context\"\r\nimport { StepperActionType } from \"./stepper.shared\"\r\n\r\ninterface StepperChildren {\r\n  decrease?: ReactNode\r\n  input?: ReactNode\r\n  increase?: ReactNode\r\n}\r\n\r\nfunction useStepperChildren(children?: ReactNode): StepperChildren {\r\n  return useMemo(() => {\r\n    const __children__: StepperChildren = {}\r\n\r\n    Children.forEach(children, (child: ReactNode) => {\r\n      if (!isValidElement(child)) {\r\n        return\r\n      }\r\n\r\n      const element = child as ReactElement\r\n      const elementType = element.type\r\n\r\n      if (elementType === StepperButton) {\r\n        if (__children__.decrease === undefined) {\r\n          __children__.decrease = cloneElement(element, {\r\n            type: \"decrease\",\r\n          })\r\n        } else if (__children__.increase === undefined) {\r\n          __children__.increase = cloneElement(element, {\r\n            type: \"increase\",\r\n          })\r\n        }\r\n      } else if (elementType === StepperInput) {\r\n        __children__.input = element\r\n      }\r\n    })\r\n\r\n    if (!children) {\r\n      const element = <StepperButton />\r\n      if (__children__.decrease === undefined) {\r\n        __children__.decrease = cloneElement(element, { type: \"decrease\" })\r\n      }\r\n\r\n      if (__children__.input === undefined) {\r\n        __children__.input = <StepperInput />\r\n      }\r\n\r\n      if (__children__.increase === undefined) {\r\n        __children__.increase = cloneElement(element, { type: \"increase\" })\r\n      }\r\n    }\r\n\r\n    return __children__\r\n  }, [children])\r\n}\r\n\r\ntype StepperShape = \"square\" | \"round\"\r\n\r\nexport interface StepperProps extends ViewProps {\r\n  defaultValue?: number | string\r\n  value?: number | string\r\n  min?: number\r\n  max?: number\r\n  step?: number\r\n  size?: number | string\r\n  disabled?: boolean\r\n  precision?: number\r\n  longPress?: boolean\r\n  shape?: StepperShape\r\n  children?: ReactNode\r\n\r\n  onChange?(value: number | string): void\r\n}\r\n\r\nfunction Stepper(props: StepperProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    min = 1,\r\n    max = Number.MAX_VALUE,\r\n    step = 1,\r\n    size,\r\n    disabled,\r\n    precision = 0,\r\n    longPress = true,\r\n    shape = \"square\",\r\n    children: childrenProp,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { decrease, input, increase } = useStepperChildren(childrenProp)\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    value: valueProp,\r\n    defaultValue,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const formatValue = useCallback(\r\n    (value: string | number) => {\r\n      if (value === \"\") {\r\n        return value\r\n      }\r\n\r\n      value = formatNumber(String(value), precision > 0)\r\n      value = value === \"\" ? 0 : +value\r\n      value = Number.isNaN(value) ? +min : value\r\n      value = Math.max(Math.min(+max, value), +min)\r\n\r\n      // format decimal\r\n      if (precision > 0) {\r\n        value = value.toFixed(+precision)\r\n      }\r\n\r\n      return value\r\n    },\r\n    [max, min, precision],\r\n  )\r\n\r\n  const valueRef = useToRef(formatValue(value))\r\n\r\n  const onStep = useCallback(\r\n    (actionType: StepperActionType) => {\r\n      const diff = actionType === \"decrease\" ? -step : +step\r\n      setValue(formatValue(addNumber(valueRef.current as number, diff)))\r\n    },\r\n    [formatValue, setValue, step, valueRef],\r\n  )\r\n\r\n  return (\r\n    <StepperContext.Provider\r\n      value={{\r\n        value: valueRef.current,\r\n        min,\r\n        max,\r\n        size,\r\n        disabled,\r\n        precision,\r\n        longPress,\r\n        formatValue,\r\n        onChange: setValue,\r\n        onStep,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(\r\n          prefixClassname(\"stepper\"),\r\n          {\r\n            [prefixClassname(\"stepper--round\")]: shape === \"round\",\r\n          },\r\n          className,\r\n        )}\r\n        {...restProps}\r\n      >\r\n        {decrease}\r\n        {input}\r\n        {increase}\r\n      </View>\r\n    </StepperContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Stepper\r\n","import { default as StepperElement, StepperProps } from \"./stepper\"\nimport StepperButton from \"./stepper-button\"\nimport StepperInput from \"./stepper-input\"\n\ninterface StepperInterface {\n  (props: StepperProps): JSX.Element\n\n  Input: typeof StepperInput\n  Button: typeof StepperButton\n}\n\nconst Stepper = StepperElement as StepperInterface\n\nStepper.Input = StepperInput\nStepper.Button = StepperButton\n\nexport default Stepper\n","import { Cell, Stepper } from \"@taroify/core\"\r\nimport * as React from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nexport default function StepperDemo() {\r\n  return (\r\n    <Page title=\"Stepper 步进器\" className=\"stepper-demo\">\r\n      <Block variant=\"card\">\r\n        <Cell title=\"基本用法\">\r\n          <Stepper />\r\n        </Cell>\r\n        <Cell title=\"步长设置\">\r\n          <Stepper step={2} />\r\n        </Cell>\r\n        <Cell title=\"限制输入范围\">\r\n          <Stepper min={5} max={8} />\r\n        </Cell>\r\n        <Cell title=\"禁用状态\">\r\n          <Stepper disabled />\r\n        </Cell>\r\n        <Cell title=\"禁用输入框\">\r\n          <Stepper>\r\n            <Stepper.Button />\r\n            <Stepper.Input disabled />\r\n            <Stepper.Button />\r\n          </Stepper>\r\n        </Cell>\r\n        <Cell title=\"固定小数位数\">\r\n          <Stepper precision={2} />\r\n        </Cell>\r\n        <Cell align=\"center\" title=\"自定义大小\">\r\n          <Stepper size=\"32\">\r\n            <Stepper.Button />\r\n            <Stepper.Input disabled width=\"40\" />\r\n            <Stepper.Button />\r\n          </Stepper>\r\n        </Cell>\r\n        <Cell title=\"圆角风格\">\r\n          <Stepper shape=\"round\" size=\"22\" />\r\n        </Cell>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}