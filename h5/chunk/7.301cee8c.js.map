{"version":3,"sources":["webpack:///../icons/src/utils/unit.ts","webpack:///../icons/src/van/VanIcon.tsx","webpack:///../core/src/styles/index.ts","webpack:///../core/src/styles/prefix.ts","webpack:///./src/styles/prefix.ts","webpack:///../icons/src/shared.ts","webpack:///../icons/src/ArrowLeft.tsx","webpack:///./src/components/target.tsx","webpack:///./src/components/page.tsx","webpack:///../core/src/transition/transition.tsx","webpack:///../core/src/transition/style/index.ts"],"names":["rootFontSize","addUnitPx","value","undefined","unitToPx","includes","convertPx","replace","convertRem","getRootFontSize","doc","document","documentElement","fontSize","style","window","getComputedStyle","parseFloat","convertVw","innerWidth","convertVh","innerHeight","VanIcon","props","className","name","size","color","restProps","presetColor","ICON_PRESET_COLORS","presetSize","ICON_PRESET_SIZES","classNames","createVanIconComponent","VanIconWrapper","ICON_TYPE","prefixClassname","component","demoPrefixClassname","Symbol","ArrowLeft","TargetType","Target","type","children","process","Page","title","onClick","navigateBack","TransitionName","TRANSITION_PRESETS","Fade","SlideUp","SlideDown","SlideLeft","SlideRight","Transition","in","inProp","appear","mountOnEnter","unmountOnExit","timeout","childrenProp","onEnter","onEntering","onEntered","onExit","onExiting","onExited","useMemo","childrenStyle","useElementStyle","isValidElement","transactionName","isTransitionPreset","useState","enter","setEnter","exited","setExited","CSSTransition","display","node","isAppearing"],"mappings":"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","file":"chunk/7.301cee8c.js","sourcesContent":["export function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport {\r\n  ICON_PRESET_COLORS,\r\n  ICON_PRESET_SIZES,\r\n  ICON_TYPE,\r\n  IconColor,\r\n  IconProps,\r\n  IconSize,\r\n} from \"../shared\"\r\nimport { addUnitPx } from \"../utils/unit\"\r\n\r\ninterface VanIconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  name?: string\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function VanIcon(props: VanIconProps) {\r\n  const { className, style, name, size = \"inherit\", color = \"inherit\", ...restProps } = props\r\n  const presetColor = ICON_PRESET_COLORS.includes(color as IconColor)\r\n  const presetSize = ICON_PRESET_SIZES.includes(size as IconSize)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        \"van-icon\",\r\n        `van-icon-${name}`,\r\n        \"taroify-icon\",\r\n        {\r\n          [`taroify-icon--${color}`]: presetColor,\r\n          [`taroify-icon--${size}`]: presetSize,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        color: presetColor ? \"\" : color,\r\n        fontSize: presetSize ? \"\" : addUnitPx(size),\r\n        ...style,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport function createVanIconComponent(name: string) {\r\n  function VanIconWrapper(props: IconProps) {\r\n    return <VanIcon name={name} {...props} />\r\n  }\r\n\r\n  // @ts-ignore\r\n  VanIconWrapper[ICON_TYPE] = ICON_TYPE\r\n  return VanIconWrapper\r\n}\r\n","export { prefixClassname } from \"./prefix\"\n","const COMPONENT_PREFIX = \"taroify-\"\n\nexport function prefixClassname(component: string) {\n  return `${COMPONENT_PREFIX}${component}`\n}\n","const DEMO_PREFIX = \"taroify-demo-\"\n\nexport function demoPrefixClassname(component: string) {\n  return `${DEMO_PREFIX}${component}`\n}\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\n\r\nexport const ICON_TYPE = Symbol(\"__iconType__\")\r\n\r\nexport type IconSize = \"inherit\" | \"mini\" | \"small\" | \"medium\" | \"large\"\r\n\r\nexport const ICON_PRESET_SIZES = [\"inherit\", \"mini\", \"small\", \"medium\", \"large\"]\r\n\r\nexport type IconColor =\r\n  | \"inherit\"\r\n  | \"default\"\r\n  | \"primary\"\r\n  | \"info\"\r\n  | \"success\"\r\n  | \"warning\"\r\n  | \"danger\"\r\n\r\nexport const ICON_PRESET_COLORS = [\r\n  \"inherit\",\r\n  \"default\",\r\n  \"primary\",\r\n  \"info\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n]\r\n\r\nexport interface IconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n","import { createVanIconComponent } from \"./van\"\r\n\r\nconst ArrowLeft = createVanIconComponent(\"arrow-left\")\r\nexport default ArrowLeft\r\n","import * as React from \"react\"\nimport { ReactNode } from \"react\"\n\n/* eslint-disable  no-shadow */\nexport enum TargetType {\n  /* eslint-enable  no-shadow */\n  H5 = \"h5\",\n}\n\ntype TargetTypeString = \"h5\"\n\ninterface TargetProps {\n  type?: TargetType | TargetTypeString\n  children?: ReactNode\n}\n\nexport default function Target(props: TargetProps) {\n  const { type, children } = props\n  return <>{type === process.env.TARO_ENV && children}</>\n}\n","import ArrowLeft from \"@taroify/icons/ArrowLeft\"\nimport { View } from \"@tarojs/components\"\nimport { navigateBack } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { ReactNode } from \"react\"\nimport { demoPrefixClassname } from \"../styles/prefix\"\nimport \"./page.scss\"\nimport Target from \"./target\"\n\ninterface PageProps {\n  className?: string\n  title?: string\n  children: ReactNode\n}\n\nexport default function Page(props: PageProps) {\n  const { className, title, children } = props\n\n  return (\n    <View className={classNames(demoPrefixClassname(\"page\"), className)}>\n      <Target type=\"h5\">\n        <View className={demoPrefixClassname(\"page__nav\")}>\n          <ArrowLeft\n            className={demoPrefixClassname(\"page__nav__back\")}\n            onClick={() => navigateBack()}\n          />\n          <View className={demoPrefixClassname(\"page__nav__title\")}>{title} </View>\n        </View>\n      </Target>\n      <View className={demoPrefixClassname(\"page__content\")}>{children}</View>\n    </View>\n  )\n}\n","import * as React from \"react\"\r\nimport { isValidElement, ReactElement, ReactNode, useMemo, useState } from \"react\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport { EnterHandler, ExitHandler } from \"react-transition-group/Transition\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport enum TransitionName {\r\n  Fade = \"fade\",\r\n  SlideUp = \"slide-up\",\r\n  SlideDown = \"slide-down\",\r\n  SlideLeft = \"slide-left\",\r\n  SlideRight = \"slide-right\",\r\n}\r\n\r\nconst TRANSITION_PRESETS: string[] = [\r\n  TransitionName.Fade,\r\n  TransitionName.SlideUp,\r\n  TransitionName.SlideDown,\r\n  TransitionName.SlideLeft,\r\n  TransitionName.SlideRight,\r\n]\r\n\r\nfunction isTransitionPreset(name?: string) {\r\n  return name && TRANSITION_PRESETS.includes(name)\r\n}\r\n\r\nfunction useElementStyle(children?: ReactNode) {\r\n  return useMemo(() => {\r\n    if (!isValidElement(children)) {\r\n      return {}\r\n    }\r\n    const element = children as ReactElement\r\n    const { style } = element.props\r\n    return style ?? {}\r\n  }, [children])\r\n}\r\n\r\ninterface TransitionProps {\r\n  name?: TransitionName | string\r\n  in?: boolean\r\n  appear?: boolean\r\n  mountOnEnter?: boolean\r\n  unmountOnExit?: boolean\r\n  timeout?: number | { appear?: number; enter?: number; exit?: number }\r\n  children?: ReactNode\r\n  onEnter?: EnterHandler<HTMLElement>\r\n  onEntering?: EnterHandler<HTMLElement>\r\n  onEntered?: EnterHandler<HTMLElement>\r\n  onExit?: ExitHandler<HTMLElement>\r\n  onExiting?: ExitHandler<HTMLElement>\r\n  onExited?: ExitHandler<HTMLElement>\r\n}\r\n\r\nexport default function Transition(props: TransitionProps) {\r\n  const {\r\n    name,\r\n    in: inProp = false,\r\n    appear = false,\r\n    mountOnEnter = false,\r\n    unmountOnExit,\r\n    timeout = 300,\r\n    children: childrenProp,\r\n    onEnter,\r\n    onEntering,\r\n    onEntered,\r\n    onExit,\r\n    onExiting,\r\n    onExited,\r\n  } = props\r\n  const children = useMemo(() => childrenProp, [childrenProp])\r\n  const childrenStyle = useElementStyle(children)\r\n  const transactionName = isTransitionPreset(name) ? prefixClassname(`transition-${name}`) : name\r\n  const [enter, setEnter] = useState(false)\r\n  const [exited, setExited] = useState(false)\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={inProp}\r\n      mountOnEnter={mountOnEnter}\r\n      unmountOnExit={unmountOnExit}\r\n      timeout={timeout}\r\n      appear={appear}\r\n      classNames={transactionName}\r\n      style={{\r\n        ...childrenStyle,\r\n        display: enter && !exited ? \"\" : \"none\",\r\n      }}\r\n      children={children}\r\n      onEnter={(node, isAppearing) => {\r\n        setEnter(true)\r\n        setExited(false)\r\n        // @ts-ignore\r\n        onEnter?.(node, isAppearing)\r\n      }}\r\n      onEntering={onEntering}\r\n      onEntered={onEntered}\r\n      onExit={onExit}\r\n      onExiting={onExiting}\r\n      onExited={(node) => {\r\n        setEnter(false)\r\n        setExited(true)\r\n        // @ts-ignore\r\n        onExited?.(node)\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n"],"sourceRoot":""}