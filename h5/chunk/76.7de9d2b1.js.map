{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/state.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isNumber.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isString.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isUndefined.js","webpack:///../../../../packages/core/src/utils/dom/event.ts","webpack:///./src/components/block.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toNumber.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isEqual.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseTrim.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_trimmedEndIndex.js","webpack:///../../../../packages/core/src/utils/touch.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseClamp.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/replace.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/uniqueId.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/clamp.js","webpack:///../../../../packages/core/src/utils/format/number.ts","webpack:///../../../../packages/core/src/slider/slider.context.ts","webpack:///../../../../packages/core/src/slider/slider-thumb.tsx","webpack:///../../../../packages/core/src/slider/slider.tsx","webpack:///../../../../packages/core/src/slider/index.ts","webpack:///../../../../packages/core/src/slider/style/index.ts","webpack:///./src/pages/form/slider/index.tsx"],"names":["previousRef","useRef","useEffect","usePreviousRef","cb","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","defaultValue","value","setValue","emitChange","getValue","baseGetTag","require","isObjectLike","module","exports","isNumber","isArray","isString","isUndefined","undefined","event","stopPropagation","touches","clientX","clientY","Block","props","className","variant","title","children","classNames","demoPrefixClassname","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","test","slice","baseIsEqual","isEqual","trimmedEndIndex","reTrimStart","string","replace","reWhitespace","length","charAt","emptyFunction","touchRef","startX","startY","deltaX","deltaY","offsetX","offsetY","isVertical","isHorizontal","start","move","reset","TouchDirection","touch","Math","getDirection","x","y","baseClamp","number","lower","upper","toString","args","arguments","idCounter","uniqueId","prefix","id","clamp","trimExtraChar","char","allowDot","allowMinus","regExp","cardinal","createContext","SliderThumb","useContext","onTouchStart","onTouchMove","onTouchEnd","prefixClassname","style","getSizeStyle","catchMove","onTouchCancel","onClick","SliderDragStatus","Slider","valueProp","min","max","step","range","orientation","disabled","onChangeProp","useValue","useSliderChildren","__children__","thumb1","thumb2","Children","child","isValidElement","element","React","cloneElement","key","vertical","rootRef","dragStatusRef","startValueRef","currentValueRef","buttonIndexRef","useTouch","scope","Number","isRange","val","Array","calcMainAxis","calcOffset","wrapperStyle","crossAxis","addUnitPx","size","trackStyle","mainAxis","formatValue","diff","addNumber","updateValue","newValue","isSameValue","JSON","handleOverlap","ref","handleClick","getRect","rect","getClientCoordinates","delta","total","left","SliderContext","preventDefault","StyledThumbSlider","useState","Thumb","SliderDemo","marginLeft"],"mappings":"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","file":"chunk/76.7de9d2b1.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  const stateRef = useRef(defaultValue ?? value ?? initialValue)\r\n\r\n  if (value !== undefined) {\r\n    stateRef.current = value\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(value)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ value: stateRef.current, getValue, setValue }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","import { CommonEvent, ITouchEvent } from \"@tarojs/components\"\nimport { inBrowser } from \"../base\"\n\nexport function stopPropagation(event: CommonEvent) {\n  event.stopPropagation()\n}\n\nexport function preventDefault(event: CommonEvent, isStopPropagation?: boolean) {\n  if (inBrowser) {\n    // @ts-ignore\n    if (typeof event.cancelable !== \"boolean\" || event.cancelable) {\n      event.preventDefault()\n    }\n  } else {\n    event.preventDefault()\n  }\n\n  if (isStopPropagation) {\n    stopPropagation(event)\n  }\n}\n\ninterface ClientCoordinates {\n  clientX: number\n  clientY: number\n}\n\nexport function getClientCoordinates(event: ITouchEvent | MouseEvent): ClientCoordinates {\n  // @ts-ignore\n  const { clientX, clientY, touches } = event\n\n  if (clientX && clientY) {\n    return {\n      clientX,\n      clientY,\n    }\n  }\n  return touches[0]\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","import { ITouchEvent } from \"@tarojs/components\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nconst MIN_DISTANCE = 10\n\nexport enum TouchDirection {\n  Horizontal = \"horizontal\",\n  Vertical = \"vertical\",\n}\n\nfunction getDirection(x: number, y: number): TouchDirection | undefined {\n  if (x > y && x > MIN_DISTANCE) {\n    return TouchDirection.Horizontal\n  }\n  if (y > x && y > MIN_DISTANCE) {\n    return TouchDirection.Vertical\n  }\n}\n\nfunction emptyFunction() {}\n\nexport interface TouchRef {\n  startX: number\n  startY: number\n  deltaX: number\n  deltaY: number\n  offsetX: number\n  offsetY: number\n  direction?: TouchDirection\n\n  isVertical(): boolean\n\n  isHorizontal(): boolean\n\n  start(event: ITouchEvent): void\n\n  move(event: ITouchEvent): void\n\n  reset(): void\n}\n\nexport function useTouch() {\n  const touchRef = useRef<TouchRef>({\n    startX: 0,\n    startY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    isVertical: () => false,\n    isHorizontal: () => false,\n    start: emptyFunction,\n    move: emptyFunction,\n    reset: emptyFunction,\n  })\n\n  const isVertical = useCallback(() => touchRef.current.direction === TouchDirection.Vertical, [])\n\n  const isHorizontal = useCallback(\n    () => touchRef.current.direction === TouchDirection.Horizontal,\n    [],\n  )\n\n  const reset = useCallback(function () {\n    touchRef.current.deltaX = 0\n    touchRef.current.deltaY = 0\n    touchRef.current.offsetX = 0\n    touchRef.current.offsetY = 0\n    touchRef.current.direction = undefined\n  }, [])\n\n  const start = useCallback(\n    function (event: ITouchEvent) {\n      reset()\n      touchRef.current.startX = event.touches[0].clientX\n      touchRef.current.startY = event.touches[0].clientY\n    },\n    [reset],\n  )\n\n  const move = useCallback(function (event: ITouchEvent) {\n    const touch = event.touches[0]\n    // Fix: Safari back will set clientX to negative number\n    touchRef.current.deltaX = touch.clientX < 0 ? 0 : touch.clientX - touchRef.current.startX\n    touchRef.current.deltaY = touch.clientY - touchRef.current.startY\n    touchRef.current.offsetX = Math.abs(touchRef.current.deltaX)\n    touchRef.current.offsetY = Math.abs(touchRef.current.deltaY)\n\n    if (!touchRef.current.direction) {\n      touchRef.current.direction = getDirection(touchRef.current.offsetX, touchRef.current.offsetY)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (touchRef.current.isHorizontal !== isHorizontal) {\n      touchRef.current.isHorizontal = isHorizontal\n    }\n  }, [touchRef, isHorizontal])\n\n  useEffect(() => {\n    if (touchRef.current.isVertical !== isVertical) {\n      touchRef.current.isVertical = isVertical\n    }\n  }, [touchRef, isVertical])\n\n  useEffect(() => {\n    if (touchRef.current.reset !== reset) {\n      touchRef.current.reset = reset\n    }\n  }, [touchRef, reset])\n\n  useEffect(() => {\n    if (touchRef.current.start !== start) {\n      touchRef.current.start = start\n    }\n  }, [touchRef, start])\n\n  useEffect(() => {\n    if (touchRef.current.move !== move) {\n      touchRef.current.move = move\n    }\n  }, [touchRef, move])\n\n  return touchRef.current\n}\n","/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nmodule.exports = baseClamp;\n","var toString = require('./toString');\n\n/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */\nfunction replace() {\n  var args = arguments,\n      string = toString(args[0]);\n\n  return args.length < 3 ? string : string.replace(args[1], args[2]);\n}\n\nmodule.exports = replace;\n","var toString = require('./toString');\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;\n","var baseClamp = require('./_baseClamp'),\n    toNumber = require('./toNumber');\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber(number), lower, upper);\n}\n\nmodule.exports = clamp;\n","import * as _ from \"lodash\"\r\n\r\nfunction trimExtraChar(value: string, char: string, regExp: RegExp) {\r\n  const index = value.indexOf(char)\r\n\r\n  if (index === -1) {\r\n    return value\r\n  }\r\n\r\n  if (char === \"-\" && index !== 0) {\r\n    return value.slice(0, index)\r\n  }\r\n\r\n  return value.slice(0, index + 1) + value.slice(index).replace(regExp, \"\")\r\n}\r\n\r\nexport function formatNumber(value: string, allowDot = true, allowMinus = true) {\r\n  if (allowDot) {\r\n    value = trimExtraChar(value, \".\", /\\./g)\r\n  } else {\r\n    value = value.split(\".\")[0]\r\n  }\r\n\r\n  if (allowMinus) {\r\n    value = trimExtraChar(value, \"-\", /-/g)\r\n  } else {\r\n    value = value.replace(/-/, \"\")\r\n  }\r\n\r\n  const regExp = allowDot ? /[^-0-9.]/g : /[^-0-9]/g\r\n\r\n  return value.replace(regExp, \"\")\r\n}\r\n\r\n// add num and avoid float number\r\nexport function addNumber(num1: number, num2: number) {\r\n  const cardinal = 10 ** 10\r\n  return Math.round((_.toNumber(num1) + _.toNumber(num2)) * cardinal) / cardinal\r\n}\r\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\n\r\ninterface SliderContextValue {\r\n  onTouchStart?(event: ITouchEvent, index?: number): void\r\n\r\n  onTouchMove?(event: ITouchEvent, index?: number): void\r\n\r\n  onTouchEnd?(event: ITouchEvent, index?: number): void\r\n}\r\n\r\nconst SliderContext = createContext<SliderContextValue>({})\r\n\r\nexport default SliderContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { stopPropagation } from \"../utils/dom/event\"\r\nimport { getSizeStyle } from \"../utils/format/unit\"\r\nimport SliderContext from \"./slider.context\"\r\n\r\nexport interface SliderThumbProps extends ViewProps {\r\n  size?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport interface InternalSliderThumbProps extends SliderThumbProps {\r\n  index?: number\r\n}\r\n\r\nfunction SliderThumb(props: SliderThumbProps) {\r\n  const { className, size, index, children, ...restProps } = props as InternalSliderThumbProps\r\n  const { onTouchStart, onTouchMove, onTouchEnd } = useContext(SliderContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames({\r\n        [prefixClassname(\"slider__thumb-wrapper\")]: index === undefined,\r\n        [prefixClassname(\"slider__thumb-wrapper-left\")]: index === 0,\r\n        [prefixClassname(\"slider__thumb-wrapper-right\")]: index === 1,\r\n      })}\r\n      style={{\r\n        ...getSizeStyle(size),\r\n      }}\r\n      catchMove\r\n      onTouchStart={(event) => onTouchStart?.(event, index)}\r\n      onTouchMove={(event) => onTouchMove?.(event, index)}\r\n      onTouchEnd={(event) => onTouchEnd?.(event, index)}\r\n      onTouchCancel={(event) => onTouchEnd?.(event, index)}\r\n      onClick={stopPropagation}\r\n    >\r\n      {\r\n        //\r\n        children ?? (\r\n          <View\r\n            className={classNames(prefixClassname(\"slider__thumb\"), className)}\r\n            {...restProps}\r\n          />\r\n        )\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default SliderThumb\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getClientCoordinates, preventDefault, stopPropagation } from \"../utils/dom/event\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport { addNumber } from \"../utils/format/number\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { useValue } from \"../utils/state\"\r\nimport { useTouch } from \"../utils/touch\"\r\nimport SliderThumb from \"./slider-thumb\"\r\nimport SliderContext from \"./slider.context\"\r\n\r\ntype SliderValue = number | [number, number] | number[]\r\n\r\nenum SliderDragStatus {\r\n  Start = \"start\",\r\n  Dragging = \"dragging\",\r\n  End = \"end\",\r\n}\r\n\r\ntype SliderOrientation = \"horizontal\" | \"vertical\"\r\n\r\ninterface SliderChildren {\r\n  thumb1: ReactNode\r\n  thumb2: ReactNode\r\n}\r\n\r\nfunction useSliderChildren(children?: ReactNode, range?: boolean): SliderChildren {\r\n  return useMemo(() => {\r\n    const __children__: SliderChildren = {\r\n      thumb1: undefined,\r\n      thumb2: undefined,\r\n    }\r\n\r\n    Children.forEach(children, (child: ReactNode) => {\r\n      if (!isValidElement(child)) {\r\n        return\r\n      }\r\n      const element = child as ReactElement\r\n\r\n      if (__children__.thumb1 === undefined) {\r\n        __children__.thumb1 = element\r\n      } else if (__children__.thumb2 === undefined) {\r\n        __children__.thumb2 = element\r\n      }\r\n    })\r\n\r\n    __children__.thumb1 = __children__.thumb1 ?? <SliderThumb />\r\n\r\n    if (range) {\r\n      __children__.thumb1 = cloneElement(__children__.thumb1 as ReactElement, {\r\n        key: 0,\r\n        index: 0,\r\n      })\r\n\r\n      __children__.thumb2 = __children__.thumb2 ?? <SliderThumb />\r\n      __children__.thumb2 = cloneElement(__children__.thumb2 as ReactElement, {\r\n        key: 1,\r\n        index: 1,\r\n      })\r\n    } else {\r\n      __children__.thumb1 = cloneElement(__children__.thumb1 as ReactElement, {\r\n        index: undefined,\r\n      })\r\n    }\r\n\r\n    return __children__\r\n  }, [children, range])\r\n}\r\n\r\nexport interface SliderProps extends ViewProps {\r\n  style?: CSSProperties\r\n  step?: number\r\n  min?: number\r\n  max?: number\r\n  defaultValue?: any\r\n  value?: any\r\n  range?: boolean\r\n  size?: number\r\n  orientation?: SliderOrientation\r\n  disabled?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any): void\r\n}\r\n\r\nfunction Slider(props: SliderProps) {\r\n  const {\r\n    className,\r\n    style = {},\r\n    defaultValue,\r\n    value: valueProp = undefined,\r\n    min = 0,\r\n    max = 100,\r\n    step = 1,\r\n    range = false,\r\n    size,\r\n    orientation = \"horizontal\",\r\n    disabled = false,\r\n    children,\r\n    onClick,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    defaultValue,\r\n    value: valueProp,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const { thumb1, thumb2 } = useSliderChildren(children, range)\r\n\r\n  const vertical = orientation === \"vertical\"\r\n\r\n  const rootRef = useRef<HTMLElement>()\r\n\r\n  const dragStatusRef = useRef<SliderDragStatus>()\r\n\r\n  const startValueRef = useRef<SliderValue>(0)\r\n\r\n  const currentValueRef = useRef<SliderValue>(0)\r\n\r\n  const buttonIndexRef = useRef<number>()\r\n\r\n  const touch = useTouch()\r\n\r\n  const scope = useMemo(() => Number(max) - Number(min), [max, min])\r\n\r\n  const isRange = useCallback(\r\n    (val: unknown): val is [number, number] => range && Array.isArray(val),\r\n    [range],\r\n  )\r\n\r\n  // 计算选中条的长度百分比\r\n  const calcMainAxis = useCallback(() => {\r\n    if (isRange(value)) {\r\n      return `${((value[1] - value[0]) * 100) / scope}%`\r\n    }\r\n    return `${(((value as number) - Number(min)) * 100) / scope}%`\r\n  }, [isRange, min, scope, value])\r\n\r\n  // 计算选中条的开始位置的偏移量\r\n  const calcOffset = useCallback(() => {\r\n    if (isRange(value)) {\r\n      return `${((value[0] - Number(min)) * 100) / scope}%`\r\n    }\r\n    return \"0%\"\r\n  }, [isRange, min, scope, value])\r\n\r\n  const wrapperStyle = useMemo<CSSProperties>(() => {\r\n    const crossAxis = vertical ? \"width\" : \"height\"\r\n    return {\r\n      ...style,\r\n      [crossAxis]: addUnitPx(size) ?? \"\",\r\n    }\r\n  }, [size, style, vertical])\r\n\r\n  const trackStyle = useMemo<CSSProperties>(() => {\r\n    const mainAxis = vertical ? \"height\" : \"width\"\r\n    return {\r\n      [mainAxis]: calcMainAxis(),\r\n      left: vertical ? \"\" : calcOffset(),\r\n      top: vertical ? calcOffset() : \"\",\r\n      transition: dragStatusRef.current ? \"none\" : \"\",\r\n    }\r\n  }, [calcMainAxis, calcOffset, vertical])\r\n\r\n  const formatValue = (value: number) => {\r\n    value = _.clamp(value, min, max)\r\n    const diff = Math.round((value - min) / step) * step\r\n    return addNumber(min, diff)\r\n  }\r\n\r\n  const isSameValue = (newValue: SliderValue, oldValue: SliderValue) =>\r\n    JSON.stringify(newValue) === JSON.stringify(oldValue)\r\n\r\n  const handleOverlap = (value: [number, number]) => {\r\n    if (value[0] > value[1]) {\r\n      return value.slice(0).reverse()\r\n    }\r\n    return value\r\n  }\r\n\r\n  const updateValue = (newValue: SliderValue) => {\r\n    if (isRange(newValue)) {\r\n      newValue = handleOverlap(newValue).map(formatValue) as [number, number]\r\n    } else {\r\n      newValue = formatValue(newValue as number)\r\n    }\r\n\r\n    if (!isSameValue(newValue, value)) {\r\n      setValue(newValue as any)\r\n    }\r\n  }\r\n\r\n  const handleClick = (event: ITouchEvent) => {\r\n    onClick?.(event)\r\n    stopPropagation(event)\r\n\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    getRect(rootRef).then((rect) => {\r\n      const { clientX, clientY } = getClientCoordinates(event)\r\n\r\n      const delta = vertical ? clientY - rect.top : clientX - rect.left\r\n      const total = vertical ? rect.height : rect.width\r\n      const newValue = Number(min) + (delta / total) * scope\r\n\r\n      if (isRange(value)) {\r\n        const [left, right] = value\r\n        const middle = (left + right) / 2\r\n\r\n        if (newValue <= middle) {\r\n          updateValue([newValue, right])\r\n        } else {\r\n          updateValue([left, newValue])\r\n        }\r\n      } else {\r\n        updateValue(newValue)\r\n      }\r\n    })\r\n  }\r\n\r\n  const onTouchStart = (event: ITouchEvent, index?: number) => {\r\n    if (typeof index === \"number\") {\r\n      // save index of current button\r\n      buttonIndexRef.current = index\r\n    }\r\n\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    touch.start(event)\r\n    currentValueRef.current = value\r\n\r\n    if (isRange(currentValueRef.current)) {\r\n      startValueRef.current = currentValueRef.current.map(formatValue) as [number, number]\r\n    } else {\r\n      startValueRef.current = formatValue(currentValueRef.current as number)\r\n    }\r\n\r\n    dragStatusRef.current = SliderDragStatus.Start\r\n  }\r\n\r\n  const onTouchMove = (event: ITouchEvent) => {\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    preventDefault(event, true)\r\n    touch.move(event)\r\n    dragStatusRef.current = SliderDragStatus.Dragging\r\n\r\n    getRect(rootRef).then((rect) => {\r\n      const delta = vertical ? touch.deltaY : touch.deltaX\r\n      const total = vertical ? rect.height : rect.width\r\n      const diff = (delta / total) * scope\r\n\r\n      if (isRange(startValueRef.current)) {\r\n        ;(currentValueRef.current as [number, number])[buttonIndexRef.current as number] =\r\n          startValueRef.current[buttonIndexRef.current as number] + diff\r\n      } else {\r\n        currentValueRef.current = (startValueRef.current as number) + diff\r\n      }\r\n      updateValue(currentValueRef.current)\r\n    })\r\n  }\r\n\r\n  const onTouchEnd = () => {\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    if (dragStatusRef.current === SliderDragStatus.Dragging) {\r\n      updateValue(currentValueRef.current)\r\n    }\r\n\r\n    dragStatusRef.current = SliderDragStatus.End\r\n  }\r\n\r\n  return (\r\n    <View\r\n      ref={rootRef}\r\n      className={classNames(\r\n        classNames(prefixClassname(\"slider\"), {\r\n          [prefixClassname(\"slider--vertical\")]: vertical,\r\n          [prefixClassname(\"slider--disabled\")]: disabled,\r\n        }),\r\n        className,\r\n      )}\r\n      style={wrapperStyle}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      <SliderContext.Provider\r\n        value={{\r\n          onTouchStart,\r\n          onTouchMove,\r\n          onTouchEnd,\r\n        }}\r\n      >\r\n        <View className={prefixClassname(\"slider__track\")} style={trackStyle}>\r\n          {range ? [thumb1, thumb2] : thumb1}\r\n        </View>\r\n      </SliderContext.Provider>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Slider\r\n","import SliderComponent, { SliderProps } from \"./slider\"\r\nimport SliderThumb from \"./slider-thumb\"\r\n\r\nexport type { SliderProps } from \"./slider\"\r\n\r\ninterface SliderInterface {\r\n  (props: SliderProps): JSX.Element\r\n\r\n  Thumb: typeof SliderThumb\r\n}\r\n\r\nconst Slider = SliderComponent as SliderInterface\r\n\r\nSlider.Thumb = SliderThumb\r\n\r\nexport default Slider\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { Slider } from \"@taroify/core\"\r\nimport { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction StyledThumbSlider() {\r\n  const [value, setValue] = useState(50)\r\n  return (\r\n    <Slider className=\"custom-color\" value={value} onChange={setValue}>\r\n      <Slider.Thumb>\r\n        <View className=\"custom-thumb\">{value}</View>\r\n      </Slider.Thumb>\r\n    </Slider>\r\n  )\r\n}\r\n\r\nexport default function SliderDemo() {\r\n  return (\r\n    <Page title=\"Slider 滑块\" className=\"slider-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Slider defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"双滑块\">\r\n        <Slider range defaultValue={[20, 60]} />\r\n      </Block>\r\n      <Block title=\"指定选择范围\">\r\n        <Slider min={-50} max={50} defaultValue={0} />\r\n      </Block>\r\n      <Block title=\"禁用\">\r\n        <Slider disabled defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"指定步长\">\r\n        <Slider step={10} defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"自定义样式\">\r\n        <Slider className=\"custom-color\" size={4} defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"自定义按钮\">\r\n        <StyledThumbSlider />\r\n      </Block>\r\n      <Block title=\"自定义样式\" className=\"vertical-slider\">\r\n        <Slider orientation=\"vertical\" defaultValue={50} />\r\n        <Slider\r\n          style={{ marginLeft: \"100px\" }}\r\n          range\r\n          orientation=\"vertical\"\r\n          defaultValue={[20, 60]}\r\n        />\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}