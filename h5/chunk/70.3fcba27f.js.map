{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///../../../../packages/core/src/button/button.context.ts","webpack:///../../../../packages/core/src/button-base/button-base.tsx","webpack:///../../../../packages/core/src/button/style/index.ts","webpack:///../../../../packages/core/src/button-base/style/index.ts","webpack:///../../../../packages/core/src/button/button.tsx","webpack:///../../../../packages/core/src/flex/style/index.ts","webpack:///../../../../packages/core/src/flex/flex.context.ts","webpack:///../../../../packages/core/src/flex/index.ts","webpack:///../../../../packages/core/src/flex/flex.tsx","webpack:///../../../../packages/core/src/flex/flex-item.tsx","webpack:///../../../../packages/core/src/space/style/index.ts","webpack:///../../../../packages/core/src/space/index.ts","webpack:///../../../../packages/core/src/space/space.tsx","webpack:///../../../../packages/core/src/white-space/style/index.ts","webpack:///../../../../packages/core/src/white-space/white-space.tsx","webpack:///../../../../packages/core/src/white-space/index.ts","webpack:///./src/pages/basic/button/index.tsx"],"names":["value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","Block","props","className","variant","title","children","classNames","demoPrefixClassname","SpinIcon","key","prefixClassname","LoadingSpinner","rootStyle","useMemo","style","LoadingCircular","type","direction","ButtonContext","createContext","ButtonBase","color","formType","loading","onClick","useButtonLoading","onCtxClick","useContext","shape","block","e","disabled","React","Object","gutter","undefined","Flex","wrap","justify","align","useFlexGutter","gutterNumber","gutterStyle","averagePadding","FlexContext","offset","gutters","horizontalGutter","span","item","WhiteSpaceSize","SIZE_PRESETS","isPresetSize","Medium","ButtonDemo","hairline","icon","backgroundColor","borderColor","background"],"mappings":"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","file":"chunk/70.3fcba27f.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\nimport { ButtonProps } from \"./button\"\r\n\r\ninterface ButtonContextValue {\r\n  onClick?(event: ITouchEvent, props: ButtonProps): void\r\n}\r\n\r\nconst ButtonContext = createContext<ButtonContextValue>({})\r\n\r\nexport default ButtonContext\r\n","import { Button, ButtonProps } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface ButtonBaseProps extends ButtonProps {}\r\n\r\nfunction ButtonBase(props: ButtonBaseProps) {\r\n  const { className, ...restProps } = props\r\n  return <Button className={classNames(prefixClassname(\"button-base\"), className)} {...restProps} />\r\n}\r\n\r\nexport default ButtonBase\r\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../../button-base/style\"\r\n\r\nimport \"../index.scss\"\r\n","import \"../index.scss\"\r\n","import { ButtonProps as TaroButtonProps, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport ButtonBase from \"../button-base\"\r\nimport Loading, { LoadingProps } from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport ButtonContext from \"./button.context\"\r\nimport {\r\n  ButtonColor,\r\n  ButtonFormType,\r\n  ButtonShape,\r\n  ButtonSize,\r\n  ButtonVariant,\r\n} from \"./button.shared\"\r\n\r\nfunction useButtonLoading(loading?: boolean | LoadingProps): ReactNode {\r\n  return useMemo(() => {\r\n    if (_.isBoolean(loading) && loading) {\r\n      return <Loading className={prefixClassname(\"button__loading\")} />\r\n    } else if (_.isPlainObject(loading)) {\r\n      const { className, ...restProps } = loading as LoadingProps\r\n      return (\r\n        <Loading\r\n          className={classNames(prefixClassname(\"button__loading\"), className)}\r\n          {...restProps}\r\n        />\r\n      )\r\n    }\r\n    return loading\r\n  }, [loading])\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends Omit<TaroButtonProps, \"size\" | \"formType\" | \"type\" | \"loading\" | \"plain\"> {\r\n  variant?: ButtonVariant\r\n  shape?: ButtonShape\r\n  size?: ButtonSize\r\n  color?: ButtonColor\r\n  formType?: ButtonFormType\r\n  loading?: boolean | LoadingProps\r\n  block?: boolean\r\n  hairline?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    variant = \"contained\",\r\n    shape,\r\n    size = \"medium\",\r\n    color = \"default\",\r\n    formType = \"button\",\r\n    block,\r\n    hairline,\r\n    disabled,\r\n    loading: loadingProp,\r\n    icon,\r\n    children,\r\n    onClick,\r\n    ...restProps\r\n  } = props\r\n\r\n  const loading = useButtonLoading(loadingProp)\r\n\r\n  const { onClick: onCtxClick } = useContext(ButtonContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"button\"),\r\n        {\r\n          // Set variant style\r\n          [prefixClassname(\"button--text\")]: variant === \"text\",\r\n          [prefixClassname(\"button--contained\")]: variant === \"contained\",\r\n          [prefixClassname(\"button--outlined\")]: variant === \"outlined\",\r\n          // Set color style\r\n          [prefixClassname(`button--${color}`)]: color,\r\n          // Set shape style\r\n          [prefixClassname(\"button--round\")]: shape === \"round\",\r\n          [prefixClassname(\"button--square\")]: shape === \"square\",\r\n          // Set size style\r\n          [prefixClassname(\"button--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"button--small\")]: size === \"small\",\r\n          [prefixClassname(\"button--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"button--large\")]: size === \"large\",\r\n          // Set hairline style\r\n          [prefixClassname(\"button--hairline\")]: hairline,\r\n          [prefixClassname(\"hairline--surround\")]: hairline,\r\n          [prefixClassname(\"button--disabled\")]: disabled,\r\n          [prefixClassname(\"button--loading\")]: loading,\r\n          [prefixClassname(\"button--block\")]: block,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={(e) => {\r\n        if (!disabled && !loading) {\r\n          onClick?.(e)\r\n          onCtxClick?.(e, props)\r\n        }\r\n      }}\r\n    >\r\n      <View className={prefixClassname(\"button__content\")}>\r\n        {loading ?? icon}\r\n        {children && <View className={prefixClassname(\"button__text\")} children={children} />}\r\n      </View>\r\n      <ButtonBase\r\n        className={prefixClassname(\"button__button\")}\r\n        formType={formType === \"submit\" ? \"submit\" : formType === \"reset\" ? \"reset\" : undefined}\r\n        disabled={disabled || !!loading}\r\n        loading={false}\r\n        {...restProps}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function createButton(children: ReactNode | ButtonProps, props?: ButtonProps) {\r\n  if (_.isPlainObject(children)) {\r\n    return <Button {...(children as ButtonProps)} {...props} />\r\n  }\r\n  return <Button children={children} {...props} />\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface FlexContextValue {\r\n  gutter: [number | undefined, number | undefined]\r\n}\r\n\r\nconst FlexContext = createContext<FlexContextValue>({\r\n  gutter: [undefined, undefined],\r\n})\r\n\r\nexport default FlexContext\r\n","import FlexComponent, { FlexProps } from \"./flex\"\r\nimport FlexItem from \"./flex-item\"\r\n\r\nexport type { FlexProps } from \"./flex\"\r\nexport type { FlexItemProps } from \"./flex-item\"\r\n\r\ninterface FlexInterface {\r\n  (props: FlexProps): JSX.Element\r\n\r\n  Item: typeof FlexItem\r\n}\r\n\r\nconst Flex = FlexComponent as FlexInterface\r\n\r\nFlex.Item = FlexItem\r\n\r\nexport default Flex\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\nimport { FlexAlign, FlexDirection, FlexGutter, FlexJustify, FlexWrap } from \"./flex.shared\"\r\n\r\nfunction useFlexGutter(gutter?: FlexGutter): [undefined | number, undefined | number] {\r\n  return useMemo(() => {\r\n    if (gutter === undefined) {\r\n      return [undefined, undefined]\r\n    }\r\n\r\n    if (_.isNumber(gutter)) {\r\n      return [gutter, gutter]\r\n    }\r\n\r\n    if (_.isString(gutter)) {\r\n      const gutterNumber = _.toNumber(gutter)\r\n      return [gutterNumber, gutterNumber]\r\n    }\r\n\r\n    if (_.isArray(gutter)) {\r\n      const [horizontalGutter, verticalGutter] = gutter\r\n      return [_.toNumber(horizontalGutter), _.toNumber(verticalGutter)]\r\n    }\r\n\r\n    return [0, 0]\r\n  }, [gutter])\r\n}\r\n\r\nexport interface FlexProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: FlexDirection\r\n  wrap?: FlexWrap\r\n  justify?: FlexJustify\r\n  align?: FlexAlign\r\n  gutter?: FlexGutter\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Flex(props: FlexProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    gutter: gutterProp,\r\n    direction = \"row\",\r\n    wrap = \"nowrap\",\r\n    justify = \"start\",\r\n    align = \"start\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const gutter = useFlexGutter(gutterProp)\r\n  const [horizontalGutter] = gutter\r\n\r\n  const gutterStyle = useMemo<CSSProperties>(() => {\r\n    const gutterStyle: CSSProperties = {}\r\n    if (horizontalGutter) {\r\n      const averagePadding = _.toNumber(horizontalGutter) / 2\r\n      gutterStyle.marginLeft = addUnitPx(-averagePadding)\r\n      gutterStyle.marginRight = addUnitPx(-averagePadding)\r\n    }\r\n    return {}\r\n  }, [horizontalGutter])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex\"),\r\n        {\r\n          // Set flex style\r\n          [prefixClassname(\"flex--row\")]: direction === \"row\",\r\n          [prefixClassname(\"flex--row-reverse\")]: direction === \"row-reverse\",\r\n          [prefixClassname(\"flex--column\")]: direction === \"column\",\r\n          [prefixClassname(\"flex--column-reverse\")]: direction === \"column-reverse\",\r\n          // Set flex-wrap style\r\n          [prefixClassname(\"flex--nowrap\")]: wrap === \"nowrap\",\r\n          [prefixClassname(\"flex--wrap\")]: wrap === \"wrap\",\r\n          [prefixClassname(\"flex--wrap-reverse\")]: wrap === \"wrap-reverse\",\r\n          // Set justify style\r\n          [prefixClassname(\"flex--justify-start\")]: justify === \"start\",\r\n          [prefixClassname(\"flex--justify-center\")]: justify === \"center\",\r\n          [prefixClassname(\"flex--justify-end\")]: justify === \"end\",\r\n          [prefixClassname(\"flex--justify-space-around\")]: justify === \"space-around\",\r\n          [prefixClassname(\"flex--justify-space-between\")]: justify === \"space-between\",\r\n          // Set align style\r\n          [prefixClassname(\"flex--align-start\")]: align === \"start\",\r\n          [prefixClassname(\"flex--align-center\")]: align === \"center\",\r\n          [prefixClassname(\"flex--align-end\")]: align === \"end\",\r\n          [prefixClassname(\"flex--align-baseline\")]: align === \"baseline\",\r\n          [prefixClassname(\"flex--align-stretch\")]: align === \"stretch\",\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    >\r\n      <FlexContext.Provider\r\n        value={{\r\n          gutter,\r\n        }}\r\n        children={children}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\n\r\nexport interface FlexItemProps extends ViewProps {\r\n  style?: CSSProperties\r\n  span?: number\r\n  offset?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function FlexItem(props: FlexItemProps) {\r\n  const { className, style, span, offset, ...restProps } = props\r\n  const { gutter: gutters } = useContext(FlexContext)\r\n  const [horizontalGutter] = gutters\r\n\r\n  // Horizontal gutter use padding\r\n  const gutterStyle: React.CSSProperties = {}\r\n  if (horizontalGutter) {\r\n    const averagePadding = horizontalGutter / 2\r\n    gutterStyle.paddingLeft = addUnitPx(averagePadding)\r\n    gutterStyle.paddingRight = addUnitPx(averagePadding)\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex-item\"),\r\n        {\r\n          [prefixClassname(`flex-item-${span}`)]: span !== undefined,\r\n          [prefixClassname(`flex-item-offset-${offset}`)]: offset !== undefined,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../../flex/style\"\r\nimport \"../index.scss\"\r\n","import Space from \"./space\"\n\nexport default Space\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { Children, CSSProperties, ReactNode } from \"react\"\r\nimport Flex from \"../flex\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { SpaceAlign, SpaceDirection, SpaceJustify, SpaceSize, SpaceWrap } from \"./space.shared\"\r\n\r\ninterface SpaceProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: SpaceDirection\r\n  size?: SpaceSize\r\n  align?: SpaceAlign\r\n  justify?: SpaceJustify\r\n  wrap?: SpaceWrap\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Space(props: SpaceProps) {\r\n  const {\r\n    className,\r\n    size = \"small\",\r\n    justify,\r\n    align,\r\n    direction = \"horizontal\",\r\n    wrap = \"wrap\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <Flex\r\n      className={classNames(\r\n        prefixClassname(\"space\"),\r\n        {\r\n          [prefixClassname(\"space--horizontal\")]: direction === \"horizontal\",\r\n          [prefixClassname(\"space--vertical\")]: direction === \"vertical\",\r\n\r\n          [prefixClassname(\"space--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"space--small\")]: size === \"small\",\r\n          [prefixClassname(\"space--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"space--large\")]: size === \"large\",\r\n        },\r\n        className,\r\n      )}\r\n      direction={\r\n        direction === \"horizontal\" ? \"row\" : direction === \"vertical\" ? \"column\" : undefined\r\n      }\r\n      justify={justify}\r\n      align={align}\r\n      wrap={wrap}\r\n      {...restProps}\r\n    >\r\n      {\r\n        //\r\n        Children.map(children, (item, index) => (\r\n          <Flex.Item\r\n            key={index}\r\n            className={classNames(prefixClassname(\"space__item\"), {\r\n              [prefixClassname(\"space__item--mini\")]: size === \"mini\",\r\n              [prefixClassname(\"space__item--small\")]: size === \"small\",\r\n              [prefixClassname(\"space__item--medium\")]: size === \"medium\",\r\n              [prefixClassname(\"space__item--large\")]: size === \"large\",\r\n            })}\r\n            children={item}\r\n          />\r\n        ))\r\n      }\r\n    </Flex>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport enum WhiteSpaceSize {\r\n  Mini = \"mini\",\r\n  Small = \"small\",\r\n  Medium = \"medium\",\r\n  Large = \"large\",\r\n}\r\n\r\nconst SIZE_PRESETS = [\r\n  WhiteSpaceSize.Mini,\r\n  WhiteSpaceSize.Small,\r\n  WhiteSpaceSize.Medium,\r\n  WhiteSpaceSize.Large,\r\n]\r\n\r\nfunction isPresetSize(size?: WhiteSpaceSize | string | number) {\r\n  return SIZE_PRESETS.includes(size as WhiteSpaceSize)\r\n}\r\n\r\ntype WhiteSpaceSizeString = \"mini\" | \"small\" | \"medium\" | \"large\"\r\n\r\ninterface WhiteSpaceProps {\r\n  size?: WhiteSpaceSize | WhiteSpaceSizeString | string | number\r\n}\r\n\r\nexport default function WhiteSpace(props: WhiteSpaceProps) {\r\n  const { size = WhiteSpaceSize.Medium } = props\r\n\r\n  const rootStyle = useMemo<CSSProperties>(\r\n    () => ({ height: isPresetSize(size) ? \"\" : size }), //\r\n    [size],\r\n  )\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"white-space\"), {\r\n        [prefixClassname(`white-space-size-${size}`)]: isPresetSize(size),\r\n      })}\r\n      style={rootStyle}\r\n    />\r\n  )\r\n}\r\n","import WhiteSpace from \"./white-space\"\n\nexport { WhiteSpaceSize } from \"./white-space\"\n\nexport default WhiteSpace\n","import { Button, Space, WhiteSpace } from \"@taroify/core\"\nimport { ShopOutlined } from \"@taroify/icons\"\nimport * as React from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\nexport default function ButtonDemo() {\n  return (\n    <Page title=\"Button 按钮\" className=\"button-demo\">\n      <Block title=\"按钮颜色\">\n        <Space>\n          <Button variant=\"contained\" color=\"primary\">\n            主要按钮\n          </Button>\n          <Button variant=\"contained\" color=\"info\">\n            信息按钮\n          </Button>\n          <Button variant=\"contained\" color=\"success\">\n            成功按钮\n          </Button>\n          <Button variant=\"contained\" color=\"warning\">\n            警告按钮\n          </Button>\n          <Button variant=\"contained\" color=\"danger\">\n            危险按钮\n          </Button>\n          <Button variant=\"contained\" color=\"default\">\n            默认按钮\n          </Button>\n        </Space>\n      </Block>\n      <Block title=\"文本按钮\">\n        <Space>\n          <Button variant=\"text\" color=\"primary\">\n            主要按钮\n          </Button>\n          <Button variant=\"text\" color=\"info\">\n            信息按钮\n          </Button>\n          <Button variant=\"text\" color=\"success\">\n            成功按钮\n          </Button>\n          <Button variant=\"text\" color=\"warning\">\n            警告按钮\n          </Button>\n          <Button variant=\"text\" color=\"danger\">\n            危险按钮\n          </Button>\n          <Button variant=\"text\" color=\"default\">\n            默认按钮\n          </Button>\n        </Space>\n      </Block>\n      <Block title=\"轮廓按钮\">\n        <Space>\n          <Button variant=\"outlined\" color=\"primary\">\n            主要按钮\n          </Button>\n          <Button variant=\"outlined\" color=\"info\">\n            信息按钮\n          </Button>\n          <Button variant=\"outlined\" color=\"success\">\n            成功按钮\n          </Button>\n          <Button variant=\"outlined\" color=\"warning\">\n            警告按钮\n          </Button>\n          <Button variant=\"outlined\" color=\"danger\">\n            危险按钮\n          </Button>\n          <Button variant=\"outlined\" color=\"default\">\n            默认按钮\n          </Button>\n        </Space>\n      </Block>\n      <Block title=\"细边框按钮\">\n        <Space>\n          <Button variant=\"outlined\" color=\"primary\" hairline>\n            主要按钮\n          </Button>\n          <Button variant=\"outlined\" color=\"info\" hairline>\n            信息按钮\n          </Button>\n          <Button variant=\"outlined\" color=\"success\" hairline>\n            成功按钮\n          </Button>\n          <Button variant=\"outlined\" color=\"warning\" hairline>\n            警告按钮\n          </Button>\n          <Button variant=\"outlined\" color=\"danger\" hairline>\n            危险按钮\n          </Button>\n          <Button variant=\"outlined\" color=\"default\" hairline>\n            默认按钮\n          </Button>\n        </Space>\n      </Block>\n      <Block title=\"禁止状态\">\n        <Space>\n          <Button variant=\"contained\" color=\"primary\" disabled>\n            主要按钮\n          </Button>\n          <Button variant=\"contained\" color=\"info\" disabled>\n            信息按钮\n          </Button>\n          <Button variant=\"contained\" color=\"success\" disabled>\n            成功按钮\n          </Button>\n          <Button variant=\"contained\" color=\"warning\" disabled>\n            警告按钮\n          </Button>\n          <Button variant=\"contained\" color=\"danger\" disabled>\n            危险按钮\n          </Button>\n          <Button variant=\"contained\" color=\"default\" disabled>\n            默认按钮\n          </Button>\n        </Space>\n      </Block>\n      <Block title=\"加载状态\">\n        <Space>\n          <Button color=\"success\" loading />\n          <Button color=\"success\" loading={{ type: \"spinner\" }} />\n          <Button color=\"primary\" loading>\n            加载中...\n          </Button>\n        </Space>\n      </Block>\n      <Block title=\"按钮形状\">\n        <Space>\n          <Button variant=\"contained\" color=\"primary\" shape=\"square\">\n            方形按钮\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" shape=\"round\">\n            圆形按钮\n          </Button>\n        </Space>\n      </Block>\n      <Block title=\"图标按钮\">\n        <Space>\n          <Button variant=\"contained\" color=\"primary\" icon={<ShopOutlined />} />\n          <Button variant=\"contained\" color=\"primary\" icon={<ShopOutlined />}>\n            主要按钮\n          </Button>\n          <Button variant=\"outlined\" color=\"primary\" icon={<ShopOutlined />}>\n            轮廓按钮\n          </Button>\n        </Space>\n      </Block>\n      <Block title=\"按钮尺寸\">\n        <Button variant=\"contained\" color=\"primary\" size=\"large\">\n          大号按钮\n        </Button>\n        <WhiteSpace />\n        <Space>\n          <Button variant=\"contained\" color=\"primary\" size=\"medium\">\n            普通按钮\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" size=\"small\">\n            小型按钮\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" size=\"mini\">\n            迷你按钮\n          </Button>\n        </Space>\n      </Block>\n      <Block title=\"块级按钮\">\n        <Button color=\"primary\" block>\n          块级按钮\n        </Button>\n      </Block>\n      <Block title=\"按钮尺寸\">\n        <Space>\n          <Button style={{ backgroundColor: \"#7232dd\", color: \"#fff\" }}>单色按钮</Button>\n          <Button style={{ borderColor: \"#7232dd\", color: \"#7232dd\" }}>单色按钮</Button>\n          <Button\n            style={{\n              background: \"linear-gradient(to right, #ff6034, #ee0a24)\",\n              color: \"#fff\",\n            }}\n          >\n            渐变色按钮\n          </Button>\n        </Space>\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}