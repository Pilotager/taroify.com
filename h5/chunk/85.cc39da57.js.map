{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/touch.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/clamp.js","webpack:///../../../../packages/core/src/slider/style/index.ts","webpack:///../../../../packages/core/src/slider/slider.context.ts","webpack:///../../../../packages/core/src/slider/slider-thumb.tsx","webpack:///../../../../packages/core/src/slider/slider.tsx","webpack:///../../../../packages/core/src/slider/index.ts","webpack:///./src/pages/form/slider/index.tsx"],"names":["emptyFunction","touchRef","useRef","startX","startY","deltaX","deltaY","offsetX","offsetY","isVertical","isHorizontal","start","move","reset","useCallback","TouchDirection","event","touch","Math","getDirection","x","y","useEffect","baseClamp","require","toNumber","module","exports","clamp","number","lower","upper","undefined","createContext","SliderThumb","props","children","useContext","onTouchStart","onTouchMove","onTouchEnd","className","classNames","prefixClassname","index","style","getSizeStyle","catchMove","onTouchCancel","onClick","stopPropagation","SliderDragStatus","Slider","value","valueProp","min","max","step","range","orientation","disabled","onChangeProp","onChange","useValue","defaultValue","setValue","useSliderChildren","useMemo","__children__","thumb1","thumb2","Children","child","isValidElement","element","React","cloneElement","key","vertical","rootRef","dragStatusRef","startValueRef","currentValueRef","buttonIndexRef","useTouch","scope","Number","isRange","val","Array","calcMainAxis","calcOffset","wrapperStyle","crossAxis","addUnitPx","size","trackStyle","mainAxis","formatValue","diff","addNumber","updateValue","newValue","isSameValue","JSON","handleOverlap","ref","handleClick","getRect","rect","getClientCoordinates","clientY","delta","clientX","total","left","SliderContext","preventDefault","StyledThumbSlider","useState","Thumb","SliderDemo","title","marginLeft"],"mappings":"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","file":"chunk/85.cc39da57.js","sourcesContent":["import { ITouchEvent } from \"@tarojs/components\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nconst MIN_DISTANCE = 10\n\nexport enum TouchDirection {\n  Horizontal = \"horizontal\",\n  Vertical = \"vertical\",\n}\n\nfunction getDirection(x: number, y: number): TouchDirection | undefined {\n  if (x > y && x > MIN_DISTANCE) {\n    return TouchDirection.Horizontal\n  }\n  if (y > x && y > MIN_DISTANCE) {\n    return TouchDirection.Vertical\n  }\n}\n\nfunction emptyFunction() {}\n\nexport interface TouchRef {\n  startX: number\n  startY: number\n  deltaX: number\n  deltaY: number\n  offsetX: number\n  offsetY: number\n  direction?: TouchDirection\n\n  isVertical(): boolean\n\n  isHorizontal(): boolean\n\n  start(event: ITouchEvent): void\n\n  move(event: ITouchEvent): void\n\n  reset(): void\n}\n\nexport function useTouch() {\n  const touchRef = useRef<TouchRef>({\n    startX: 0,\n    startY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    isVertical: () => false,\n    isHorizontal: () => false,\n    start: emptyFunction,\n    move: emptyFunction,\n    reset: emptyFunction,\n  })\n\n  const isVertical = useCallback(() => touchRef.current.direction === TouchDirection.Vertical, [])\n\n  const isHorizontal = useCallback(\n    () => touchRef.current.direction === TouchDirection.Horizontal,\n    [],\n  )\n\n  const reset = useCallback(function () {\n    touchRef.current.deltaX = 0\n    touchRef.current.deltaY = 0\n    touchRef.current.offsetX = 0\n    touchRef.current.offsetY = 0\n    touchRef.current.direction = undefined\n  }, [])\n\n  const start = useCallback(\n    function (event: ITouchEvent) {\n      reset()\n      touchRef.current.startX = event.touches[0].clientX\n      touchRef.current.startY = event.touches[0].clientY\n    },\n    [reset],\n  )\n\n  const move = useCallback(function (event: ITouchEvent) {\n    const touch = event.touches[0]\n    // Fix: Safari back will set clientX to negative number\n    touchRef.current.deltaX = touch.clientX < 0 ? 0 : touch.clientX - touchRef.current.startX\n    touchRef.current.deltaY = touch.clientY - touchRef.current.startY\n    touchRef.current.offsetX = Math.abs(touchRef.current.deltaX)\n    touchRef.current.offsetY = Math.abs(touchRef.current.deltaY)\n\n    if (!touchRef.current.direction) {\n      touchRef.current.direction = getDirection(touchRef.current.offsetX, touchRef.current.offsetY)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (touchRef.current.isHorizontal !== isHorizontal) {\n      touchRef.current.isHorizontal = isHorizontal\n    }\n  }, [touchRef, isHorizontal])\n\n  useEffect(() => {\n    if (touchRef.current.isVertical !== isVertical) {\n      touchRef.current.isVertical = isVertical\n    }\n  }, [touchRef, isVertical])\n\n  useEffect(() => {\n    if (touchRef.current.reset !== reset) {\n      touchRef.current.reset = reset\n    }\n  }, [touchRef, reset])\n\n  useEffect(() => {\n    if (touchRef.current.start !== start) {\n      touchRef.current.start = start\n    }\n  }, [touchRef, start])\n\n  useEffect(() => {\n    if (touchRef.current.move !== move) {\n      touchRef.current.move = move\n    }\n  }, [touchRef, move])\n\n  return touchRef.current\n}\n","var baseClamp = require('./_baseClamp'),\n    toNumber = require('./toNumber');\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber(number), lower, upper);\n}\n\nmodule.exports = clamp;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\n\r\ninterface SliderContextValue {\r\n  onTouchStart?(event: ITouchEvent, index?: number): void\r\n\r\n  onTouchMove?(event: ITouchEvent, index?: number): void\r\n\r\n  onTouchEnd?(event: ITouchEvent, index?: number): void\r\n}\r\n\r\nconst SliderContext = createContext<SliderContextValue>({})\r\n\r\nexport default SliderContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { stopPropagation } from \"../utils/dom/event\"\r\nimport { getSizeStyle } from \"../utils/format/unit\"\r\nimport SliderContext from \"./slider.context\"\r\n\r\nexport interface SliderThumbProps extends ViewProps {\r\n  size?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport interface InternalSliderThumbProps extends SliderThumbProps {\r\n  index?: number\r\n}\r\n\r\nfunction SliderThumb(props: SliderThumbProps) {\r\n  const { className, size, index, children, ...restProps } = props as InternalSliderThumbProps\r\n  const { onTouchStart, onTouchMove, onTouchEnd } = useContext(SliderContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames({\r\n        [prefixClassname(\"slider__thumb-wrapper\")]: index === undefined,\r\n        [prefixClassname(\"slider__thumb-wrapper-left\")]: index === 0,\r\n        [prefixClassname(\"slider__thumb-wrapper-right\")]: index === 1,\r\n      })}\r\n      style={{\r\n        ...getSizeStyle(size),\r\n      }}\r\n      catchMove\r\n      onTouchStart={(event) => onTouchStart?.(event, index)}\r\n      onTouchMove={(event) => onTouchMove?.(event, index)}\r\n      onTouchEnd={(event) => onTouchEnd?.(event, index)}\r\n      onTouchCancel={(event) => onTouchEnd?.(event, index)}\r\n      onClick={stopPropagation}\r\n    >\r\n      {\r\n        //\r\n        children ?? (\r\n          <View\r\n            className={classNames(prefixClassname(\"slider__thumb\"), className)}\r\n            {...restProps}\r\n          />\r\n        )\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default SliderThumb\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getClientCoordinates, preventDefault, stopPropagation } from \"../utils/dom/event\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport { addNumber } from \"../utils/format/number\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { useValue } from \"../utils/state\"\r\nimport { useTouch } from \"../utils/touch\"\r\nimport SliderThumb from \"./slider-thumb\"\r\nimport SliderContext from \"./slider.context\"\r\n\r\ntype SliderValue = number | [number, number] | number[]\r\n\r\nenum SliderDragStatus {\r\n  Start = \"start\",\r\n  Dragging = \"dragging\",\r\n  End = \"end\",\r\n}\r\n\r\ntype SliderOrientation = \"horizontal\" | \"vertical\"\r\n\r\ninterface SliderChildren {\r\n  thumb1: ReactNode\r\n  thumb2: ReactNode\r\n}\r\n\r\nfunction useSliderChildren(children?: ReactNode, range?: boolean): SliderChildren {\r\n  return useMemo(() => {\r\n    const __children__: SliderChildren = {\r\n      thumb1: undefined,\r\n      thumb2: undefined,\r\n    }\r\n\r\n    Children.forEach(children, (child: ReactNode) => {\r\n      if (!isValidElement(child)) {\r\n        return\r\n      }\r\n      const element = child as ReactElement\r\n\r\n      if (__children__.thumb1 === undefined) {\r\n        __children__.thumb1 = element\r\n      } else if (__children__.thumb2 === undefined) {\r\n        __children__.thumb2 = element\r\n      }\r\n    })\r\n\r\n    __children__.thumb1 = __children__.thumb1 ?? <SliderThumb />\r\n\r\n    if (range) {\r\n      __children__.thumb1 = cloneElement(__children__.thumb1 as ReactElement, {\r\n        key: 0,\r\n        index: 0,\r\n      })\r\n\r\n      __children__.thumb2 = __children__.thumb2 ?? <SliderThumb />\r\n      __children__.thumb2 = cloneElement(__children__.thumb2 as ReactElement, {\r\n        key: 1,\r\n        index: 1,\r\n      })\r\n    } else {\r\n      __children__.thumb1 = cloneElement(__children__.thumb1 as ReactElement, {\r\n        index: undefined,\r\n      })\r\n    }\r\n\r\n    return __children__\r\n  }, [children, range])\r\n}\r\n\r\nexport interface SliderProps extends ViewProps {\r\n  style?: CSSProperties\r\n  step?: number\r\n  min?: number\r\n  max?: number\r\n  defaultValue?: any\r\n  value?: any\r\n  range?: boolean\r\n  size?: number\r\n  orientation?: SliderOrientation\r\n  disabled?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any): void\r\n}\r\n\r\nfunction Slider(props: SliderProps) {\r\n  const {\r\n    className,\r\n    style = {},\r\n    defaultValue,\r\n    value: valueProp = undefined,\r\n    min = 0,\r\n    max = 100,\r\n    step = 1,\r\n    range = false,\r\n    size,\r\n    orientation = \"horizontal\",\r\n    disabled = false,\r\n    children,\r\n    onClick,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    defaultValue,\r\n    value: valueProp,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const { thumb1, thumb2 } = useSliderChildren(children, range)\r\n\r\n  const vertical = orientation === \"vertical\"\r\n\r\n  const rootRef = useRef<HTMLElement>()\r\n\r\n  const dragStatusRef = useRef<SliderDragStatus>()\r\n\r\n  const startValueRef = useRef<SliderValue>(0)\r\n\r\n  const currentValueRef = useRef<SliderValue>(0)\r\n\r\n  const buttonIndexRef = useRef<number>()\r\n\r\n  const touch = useTouch()\r\n\r\n  const scope = useMemo(() => Number(max) - Number(min), [max, min])\r\n\r\n  const isRange = useCallback(\r\n    (val: unknown): val is [number, number] => range && Array.isArray(val),\r\n    [range],\r\n  )\r\n\r\n  // 计算选中条的长度百分比\r\n  const calcMainAxis = useCallback(() => {\r\n    if (isRange(value)) {\r\n      return `${((value[1] - value[0]) * 100) / scope}%`\r\n    }\r\n    return `${(((value as number) - Number(min)) * 100) / scope}%`\r\n  }, [isRange, min, scope, value])\r\n\r\n  // 计算选中条的开始位置的偏移量\r\n  const calcOffset = useCallback(() => {\r\n    if (isRange(value)) {\r\n      return `${((value[0] - Number(min)) * 100) / scope}%`\r\n    }\r\n    return \"0%\"\r\n  }, [isRange, min, scope, value])\r\n\r\n  const wrapperStyle = useMemo<CSSProperties>(() => {\r\n    const crossAxis = vertical ? \"width\" : \"height\"\r\n    return {\r\n      ...style,\r\n      [crossAxis]: addUnitPx(size) ?? \"\",\r\n    }\r\n  }, [size, style, vertical])\r\n\r\n  const trackStyle = useMemo<CSSProperties>(() => {\r\n    const mainAxis = vertical ? \"height\" : \"width\"\r\n    return {\r\n      [mainAxis]: calcMainAxis(),\r\n      left: vertical ? \"\" : calcOffset(),\r\n      top: vertical ? calcOffset() : \"\",\r\n      transition: dragStatusRef.current ? \"none\" : \"\",\r\n    }\r\n  }, [calcMainAxis, calcOffset, vertical])\r\n\r\n  const formatValue = (value: number) => {\r\n    value = _.clamp(value, min, max)\r\n    const diff = Math.round((value - min) / step) * step\r\n    return addNumber(min, diff)\r\n  }\r\n\r\n  const isSameValue = (newValue: SliderValue, oldValue: SliderValue) =>\r\n    JSON.stringify(newValue) === JSON.stringify(oldValue)\r\n\r\n  const handleOverlap = (value: [number, number]) => {\r\n    if (value[0] > value[1]) {\r\n      return value.slice(0).reverse()\r\n    }\r\n    return value\r\n  }\r\n\r\n  const updateValue = (newValue: SliderValue) => {\r\n    if (isRange(newValue)) {\r\n      newValue = handleOverlap(newValue).map(formatValue) as [number, number]\r\n    } else {\r\n      newValue = formatValue(newValue as number)\r\n    }\r\n\r\n    if (!isSameValue(newValue, value)) {\r\n      setValue(newValue as any)\r\n    }\r\n  }\r\n\r\n  const handleClick = (event: ITouchEvent) => {\r\n    onClick?.(event)\r\n    stopPropagation(event)\r\n\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    getRect(rootRef).then((rect) => {\r\n      const { clientX, clientY } = getClientCoordinates(event)\r\n\r\n      const delta = vertical ? clientY - rect.top : clientX - rect.left\r\n      const total = vertical ? rect.height : rect.width\r\n      const newValue = Number(min) + (delta / total) * scope\r\n\r\n      if (isRange(value)) {\r\n        const [left, right] = value\r\n        const middle = (left + right) / 2\r\n\r\n        if (newValue <= middle) {\r\n          updateValue([newValue, right])\r\n        } else {\r\n          updateValue([left, newValue])\r\n        }\r\n      } else {\r\n        updateValue(newValue)\r\n      }\r\n    })\r\n  }\r\n\r\n  const onTouchStart = (event: ITouchEvent, index?: number) => {\r\n    if (typeof index === \"number\") {\r\n      // save index of current button\r\n      buttonIndexRef.current = index\r\n    }\r\n\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    touch.start(event)\r\n    currentValueRef.current = value\r\n\r\n    if (isRange(currentValueRef.current)) {\r\n      startValueRef.current = currentValueRef.current.map(formatValue) as [number, number]\r\n    } else {\r\n      startValueRef.current = formatValue(currentValueRef.current as number)\r\n    }\r\n\r\n    dragStatusRef.current = SliderDragStatus.Start\r\n  }\r\n\r\n  const onTouchMove = (event: ITouchEvent) => {\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    preventDefault(event, true)\r\n    touch.move(event)\r\n    dragStatusRef.current = SliderDragStatus.Dragging\r\n\r\n    getRect(rootRef).then((rect) => {\r\n      const delta = vertical ? touch.deltaY : touch.deltaX\r\n      const total = vertical ? rect.height : rect.width\r\n      const diff = (delta / total) * scope\r\n\r\n      if (isRange(startValueRef.current)) {\r\n        ;(currentValueRef.current as [number, number])[buttonIndexRef.current as number] =\r\n          startValueRef.current[buttonIndexRef.current as number] + diff\r\n      } else {\r\n        currentValueRef.current = (startValueRef.current as number) + diff\r\n      }\r\n      updateValue(currentValueRef.current)\r\n    })\r\n  }\r\n\r\n  const onTouchEnd = () => {\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    if (dragStatusRef.current === SliderDragStatus.Dragging) {\r\n      updateValue(currentValueRef.current)\r\n    }\r\n\r\n    dragStatusRef.current = SliderDragStatus.End\r\n  }\r\n\r\n  return (\r\n    <View\r\n      ref={rootRef}\r\n      className={classNames(\r\n        classNames(prefixClassname(\"slider\"), {\r\n          [prefixClassname(\"slider--vertical\")]: vertical,\r\n          [prefixClassname(\"slider--disabled\")]: disabled,\r\n        }),\r\n        className,\r\n      )}\r\n      style={wrapperStyle}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      <SliderContext.Provider\r\n        value={{\r\n          onTouchStart,\r\n          onTouchMove,\r\n          onTouchEnd,\r\n        }}\r\n      >\r\n        <View className={prefixClassname(\"slider__track\")} style={trackStyle}>\r\n          {range ? [thumb1, thumb2] : thumb1}\r\n        </View>\r\n      </SliderContext.Provider>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Slider\r\n","import SliderComponent, { SliderProps } from \"./slider\"\r\nimport SliderThumb from \"./slider-thumb\"\r\n\r\ninterface SliderInterface {\r\n  (props: SliderProps): JSX.Element\r\n\r\n  Thumb: typeof SliderThumb\r\n}\r\n\r\nconst Slider = SliderComponent as SliderInterface\r\n\r\nSlider.Thumb = SliderThumb\r\n\r\nexport default Slider\r\n","import { Slider } from \"@taroify/core\"\r\nimport { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction StyledThumbSlider() {\r\n  const [value, setValue] = useState(50)\r\n  return (\r\n    <Slider className=\"custom-color\" value={value} onChange={setValue}>\r\n      <Slider.Thumb>\r\n        <View className=\"custom-thumb\">{value}</View>\r\n      </Slider.Thumb>\r\n    </Slider>\r\n  )\r\n}\r\n\r\nexport default function SliderDemo() {\r\n  return (\r\n    <Page title=\"Slider 滑块\" className=\"slider-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Slider defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"双滑块\">\r\n        <Slider range defaultValue={[20, 60]} />\r\n      </Block>\r\n      <Block title=\"指定选择范围\">\r\n        <Slider min={-50} max={50} defaultValue={0} />\r\n      </Block>\r\n      <Block title=\"禁用\">\r\n        <Slider disabled defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"指定步长\">\r\n        <Slider step={10} defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"自定义样式\">\r\n        <Slider className=\"custom-color\" size={4} defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"自定义按钮\">\r\n        <StyledThumbSlider />\r\n      </Block>\r\n      <Block title=\"自定义样式\" className=\"vertical-slider\">\r\n        <Slider orientation=\"vertical\" defaultValue={50} />\r\n        <Slider\r\n          style={{ marginLeft: \"100px\" }}\r\n          range\r\n          orientation=\"vertical\"\r\n          defaultValue={[20, 60]}\r\n        />\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}