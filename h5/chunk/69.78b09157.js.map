{"version":3,"sources":["webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_toKey.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isUndefined.js","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_castPath.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toNumber.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_isKey.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/hasIn.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_stringToPath.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_memoizeCapped.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/memoize.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseHasIn.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_hasPath.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isEqual.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseTrim.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_trimmedEndIndex.js","webpack:///../../../../packages/core/src/cell/cell-group.context.ts","webpack:///../../../../packages/core/src/cell/cell-base.tsx","webpack:///../../../../packages/core/src/cell/cell-brief.tsx","webpack:///../../../../packages/core/src/cell/cell-title.tsx","webpack:///../../../../packages/core/src/cell/cell-value.tsx","webpack:///../../../../packages/core/src/cell/cell.tsx","webpack:///../../../../packages/core/src/cell/cell-group.tsx","webpack:///../../../../packages/core/src/cell/index.ts","webpack:///../../../../packages/core/src/cell/style/index.ts","webpack:///../../../../packages/core/src/stepper/stepper.context.ts","webpack:///../../../../packages/core/src/stepper/stepper-button.tsx","webpack:///../../../../packages/core/src/stepper/stepper-input.tsx","webpack:///../../../../packages/core/src/stepper/stepper.tsx","webpack:///../../../../packages/core/src/stepper/index.ts","webpack:///../../../../packages/core/src/stepper/style/index.ts","webpack:///./src/pages/form/stepper/index.tsx"],"names":["isSymbol","require","module","exports","toKey","value","result","isUndefined","undefined","isValidElement","element","isIconElement","cloneElement","node","className","oldProps","props","newProps","classNames","isArray","isKey","stringToPath","toString","castPath","object","baseTrim","isObject","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","test","slice","reIsDeepProp","reIsPlainProp","type","Object","baseHasIn","hasPath","hasIn","path","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","push","replace","match","number","quote","subString","memoize","func","key","cache","size","clear","MapCache","resolver","TypeError","memoized","args","arguments","apply","this","has","get","set","Cache","isArguments","isIndex","isLength","hasFunc","index","length","baseIsEqual","isEqual","trimmedEndIndex","reTrimStart","reWhitespace","charAt","createContext","CellBase","clickable","clickableProp","required","bordered","children","useContext","prefixClassname","align","icon","cloneIconElement","rightIcon","CellBrief","CellTitle","CellValue","alone","inset","CellGroupContext","title","Cell","brief","StepperButton","disabled","onClick","onTouchStart","onTouchEnd","onTouchCancel","min","max","onStep","disabledProp","longPressRef","useRef","longPressTimerRef","longPressStep","useCallback","setTimeout","handleTouchStart","clearTimeout","longPress","handleTouchEnd","event","preventDefault","style","getSizeStyle","StepperInput","onFocus","precision","onChange","digit","rootRef","useState","useEffect","setValue","handleFocus","onInput","inputValue","formatted","formatNumber","String","pair","isNumeric","onBlur","input","formatValue","ref","width","addUnitPx","height","Stepper","Number","step","shape","onChangeProp","useStepperChildren","useMemo","__children__","Children","child","elementType","React","increase","useValue","defaultValue","Math","valueRef","useToRef","actionType","diff","addNumber","StepperContext","StepperDemo","variant","Button","Input"],"mappings":"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","file":"chunk/69.78b09157.js","sourcesContent":["var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","import { createContext } from \"react\"\r\n\r\ninterface CellGroupContextValue {\r\n  clickable?: boolean\r\n}\r\n\r\nconst CellGroupContext = createContext<CellGroupContextValue>({})\r\n\r\nexport default CellGroupContext\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellBaseProps extends ViewProps {\r\n  bordered?: boolean\r\n  required?: boolean\r\n  clickable?: boolean\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellBase(props: CellBaseProps) {\r\n  const {\r\n    className,\r\n    size = \"medium\",\r\n    align,\r\n    clickable: clickableProp = false,\r\n    required = false,\r\n    bordered = true,\r\n    icon,\r\n    rightIcon,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { clickable } = useContext(CellGroupContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell\"),\r\n        {\r\n          [prefixClassname(\"cell--start\")]: align === \"start\",\r\n          [prefixClassname(\"cell--center\")]: align === \"center\",\r\n          [prefixClassname(\"cell--end\")]: align === \"end\",\r\n          [prefixClassname(\"cell--large\")]: size === \"large\",\r\n          [prefixClassname(\"cell--clickable\")]: clickableProp || clickable,\r\n          [prefixClassname(\"cell--required\")]: required,\r\n          [prefixClassname(\"cell--borderless\")]: !bordered,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon && isIconElement(icon)\r\n        ? cloneIconElement(icon, { className: prefixClassname(\"cell__icon\") })\r\n        : icon}\r\n      {children}\r\n      {rightIcon && isIconElement(rightIcon)\r\n        ? cloneIconElement(rightIcon, { className: prefixClassname(\"cell__right-icon\") })\r\n        : rightIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default CellBase\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellBriefProps extends ViewProps {\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellBrief(props: CellBriefProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__brief\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellBrief\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellTitleProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellTitle(props: CellTitleProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__title\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellTitle\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellValueProps extends ViewProps {\r\n  alone?: boolean\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellValue(props: CellValueProps) {\r\n  const { className, alone, ...restProps } = props\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell__value\"),\r\n        {\r\n          [prefixClassname(\"cell__value--alone\")]: alone,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CellValue\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport CellBase from \"./cell-base\"\r\nimport CellBrief from \"./cell-brief\"\r\nimport CellTitle from \"./cell-title\"\r\nimport CellValue from \"./cell-value\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellProps extends ViewProps {\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Cell(props: CellProps) {\r\n  const { title, brief, children, ...restProps } = props\r\n  return (\r\n    <CellBase {...restProps}>\r\n      {title && (\r\n        <CellTitle>\r\n          {title}\r\n          {brief && <CellBrief children={brief} />}\r\n        </CellTitle>\r\n      )}\r\n      <CellValue alone={!title} children={children} />\r\n    </CellBase>\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\n\r\ninterface CellGroupProps extends ViewProps {\r\n  title?: ReactNode\r\n  clickable?: boolean\r\n  inset?: boolean\r\n  bordered?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nexport function CellGroup(props: CellGroupProps) {\r\n  const { title, clickable = false, inset = false, bordered = true, children, ...restProps } = props\r\n  return (\r\n    <CellGroupContext.Provider\r\n      value={{\r\n        clickable,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"cell-group\"), {\r\n          [prefixClassname(\"cell-group--inset\")]: inset,\r\n        })}\r\n        {...restProps}\r\n      >\r\n        {title && (\r\n          <View\r\n            className={classNames(prefixClassname(\"cell-group__title\"), {\r\n              [prefixClassname(\"cell-group__title--inset\")]: inset,\r\n            })}\r\n            children={title}\r\n          />\r\n        )}\r\n        <View\r\n          className={classNames(prefixClassname(\"cell-group\"), {\r\n            [prefixClassname(\"hairline--top-bottom\")]: bordered,\r\n          })}\r\n          children={children}\r\n        />\r\n      </View>\r\n    </CellGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CellGroup\r\n","import CellElement, { CellProps } from \"./cell\"\r\nimport CellGroup from \"./cell-group\"\r\n\r\nexport type { CellAlign, CellSize } from \"./cell.shared\"\r\nexport { default as CellBase } from \"./cell-base\"\r\nexport { default as CellTitle } from \"./cell-title\"\r\nexport { default as CellValue } from \"./cell-value\"\r\nexport type { CellProps } from \"./cell\"\r\n\r\ninterface CellInterface {\r\n  (props: CellProps): JSX.Element\r\n\r\n  Group: typeof CellGroup\r\n}\r\n\r\nconst Cell = CellElement as CellInterface\r\nCell.Group = CellGroup\r\n\r\nexport default Cell\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\nimport { StepperActionType } from \"./stepper.shared\"\r\n\r\ninterface StepperContextValue {\r\n  value?: number | string\r\n  min?: number\r\n  max?: number\r\n  size?: number | string\r\n  disabled?: boolean\r\n  precision?: number\r\n  longPress?: boolean\r\n\r\n  formatValue?(value?: number | string): number | string\r\n\r\n  onStep?(action: StepperActionType): void\r\n\r\n  onChange?(value?: number | string): void\r\n}\r\n\r\nconst StepperContext = createContext<StepperContextValue>({})\r\n\r\nexport default StepperContext\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { useCallback, useContext, useRef } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { preventDefault } from \"../utils/dom/event\"\r\nimport { getSizeStyle } from \"../utils/format/unit\"\r\nimport StepperContext from \"./stepper.context\"\r\nimport { StepperActionType } from \"./stepper.shared\"\r\n\r\nconst LONG_PRESS_INTERVAL = 200\r\n\r\nconst LONG_PRESS_START_TIME = 600\r\n\r\ninterface StepperButtonProps extends ViewProps {\r\n  disabled?: boolean\r\n\r\n  onClick?(event: ITouchEvent): void\r\n}\r\n\r\ninterface InternalStepperButtonProps extends StepperButtonProps {\r\n  type?: StepperActionType\r\n}\r\n\r\nfunction StepperButton(props: StepperButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    type = \"decrease\",\r\n    disabled: disabledProp,\r\n    onClick,\r\n    onTouchStart,\r\n    onTouchEnd,\r\n    onTouchCancel,\r\n    ...restProps\r\n  } = props as InternalStepperButtonProps\r\n\r\n  const {\r\n    value = 0,\r\n    min = 0,\r\n    max = 0,\r\n    size,\r\n    disabled: disabledCtx,\r\n    longPress,\r\n    onStep,\r\n  } = useContext(StepperContext)\r\n\r\n  const disabled =\r\n    disabledProp ||\r\n    disabledCtx ||\r\n    (type === \"decrease\" && value <= min) ||\r\n    (type === \"increase\" && value >= max)\r\n\r\n  const longPressRef = useRef(false)\r\n\r\n  let longPressTimerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const longPressStep = useCallback(() => {\r\n    longPressTimerRef.current = setTimeout(() => {\r\n      onStep?.(type)\r\n      longPressStep()\r\n    }, LONG_PRESS_INTERVAL)\r\n  }, [onStep, type])\r\n\r\n  const handleTouchStart = useCallback(() => {\r\n    if (longPress) {\r\n      longPressRef.current = false\r\n      if (longPressTimerRef.current) {\r\n        clearTimeout(longPressTimerRef.current)\r\n      }\r\n      longPressTimerRef.current = setTimeout(() => {\r\n        longPressRef.current = true\r\n        onStep?.(type)\r\n        longPressStep()\r\n      }, LONG_PRESS_START_TIME)\r\n    }\r\n  }, [longPress, longPressStep, onStep, type])\r\n\r\n  const handleTouchEnd = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (longPress) {\r\n        if (longPressTimerRef.current) {\r\n          clearTimeout(longPressTimerRef.current)\r\n        }\r\n        if (longPressRef.current) {\r\n          preventDefault(event)\r\n        }\r\n      }\r\n    },\r\n    [longPress],\r\n  )\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(`stepper__${type}`),\r\n        {\r\n          [prefixClassname(`stepper__${type}--disabled`)]: disabled,\r\n        },\r\n        className,\r\n      )}\r\n      style={getSizeStyle(size)}\r\n      onClick={(event) => {\r\n        preventDefault(event)\r\n        onClick?.(event)\r\n        if (!disabled) {\r\n          onStep?.(type)\r\n        }\r\n      }}\r\n      onTouchStart={(event) => {\r\n        onTouchStart?.(event)\r\n        if (!disabled) {\r\n          handleTouchStart()\r\n        }\r\n      }}\r\n      onTouchEnd={(event) => {\r\n        onTouchEnd?.(event)\r\n        handleTouchEnd(event)\r\n      }}\r\n      onTouchCancel={(event) => {\r\n        onTouchCancel?.(event)\r\n        handleTouchEnd(event)\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default StepperButton\r\n","import { Input } from \"@tarojs/components\"\r\nimport { BaseEventOrig, CommonEventFunction, ITouchEvent } from \"@tarojs/components/types/common\"\r\nimport { InputProps } from \"@tarojs/components/types/Input\"\r\nimport * as React from \"react\"\r\nimport { useCallback, useContext, useEffect, useRef, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { preventDefault } from \"../utils/dom/event\"\r\nimport { formatNumber } from \"../utils/format/number\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport StepperContext from \"./stepper.context\"\r\n\r\ninterface StepperInputProps {\r\n  width?: number | string\r\n  disabled?: boolean\r\n  onFocus?: CommonEventFunction<InputProps.inputForceEventDetail>\r\n}\r\n\r\nfunction StepperInput(props: StepperInputProps) {\r\n  const { width, disabled: disabledProp, onFocus } = props\r\n  const { value: valueProp, size, disabled, precision = 0, formatValue, onChange } = useContext(\r\n    StepperContext,\r\n  )\r\n  const digit = precision > 0\r\n\r\n  const rootRef = useRef<HTMLElement>()\r\n\r\n  const [value, setValue] = useState<string | number>()\r\n\r\n  useEffect(() => setValue(valueProp), [valueProp])\r\n\r\n  const onTouchEnd = useCallback(\r\n    (event: ITouchEvent) => {\r\n      // fix mobile safari page scroll down issue\r\n      // see: https://github.com/youzan/vant/issues/7690\r\n      if (disabledProp) {\r\n        preventDefault(event)\r\n      }\r\n    },\r\n    [disabledProp],\r\n  )\r\n\r\n  const handleFocus = useCallback(\r\n    (event: BaseEventOrig<InputProps.inputForceEventDetail>) => {\r\n      // readonly not work in legacy mobile safari\r\n      if (disabledProp) {\r\n        rootRef.current?.blur()\r\n      } else {\r\n        onFocus?.(event)\r\n      }\r\n    },\r\n    [disabledProp, onFocus],\r\n  )\r\n\r\n  const onInput = useCallback(\r\n    (event: BaseEventOrig<InputProps.inputEventDetail>) => {\r\n      const input = event.target as HTMLInputElement\r\n      const { value: inputValue } = input\r\n\r\n      let formatted = formatNumber(String(inputValue), digit)\r\n\r\n      // limit max decimal length\r\n      if (precision > 0 && formatted.includes(\".\")) {\r\n        const pair = formatted.split(\".\")\r\n        formatted = `${pair[0]}.${pair[1].slice(0, precision)}`\r\n      }\r\n\r\n      // prefer number type\r\n      const isNumeric = formatted === String(+formatted)\r\n      setValue(isNumeric ? +formatted : formatted)\r\n    },\r\n    [digit, precision],\r\n  )\r\n\r\n  const onBlur = useCallback(\r\n    (event: BaseEventOrig<InputProps.inputValueEventDetail>) => {\r\n      const input = event.target as HTMLInputElement\r\n      const value = formatValue?.(input.value)\r\n      setValue(value)\r\n      onChange?.(value)\r\n    },\r\n    [formatValue, onChange],\r\n  )\r\n\r\n  return (\r\n    <Input\r\n      ref={rootRef}\r\n      className={prefixClassname(\"stepper__input\")}\r\n      style={{\r\n        width: width ? addUnitPx(width) : \"\",\r\n        height: size ? addUnitPx(size) : \"\",\r\n      }}\r\n      disabled={disabledProp || disabled}\r\n      type={digit ? \"digit\" : \"number\"}\r\n      value={(value as unknown) as string}\r\n      onTouchEnd={onTouchEnd}\r\n      onFocus={handleFocus}\r\n      onInput={onInput}\r\n      onBlur={onBlur}\r\n    />\r\n  )\r\n}\r\n\r\nexport default StepperInput\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addNumber, formatNumber } from \"../utils/format/number\"\r\nimport { useToRef, useValue } from \"../utils/state\"\r\nimport StepperButton from \"./stepper-button\"\r\nimport StepperInput from \"./stepper-input\"\r\nimport StepperContext from \"./stepper.context\"\r\nimport { StepperActionType } from \"./stepper.shared\"\r\n\r\ninterface StepperChildren {\r\n  decrease?: ReactNode\r\n  input?: ReactNode\r\n  increase?: ReactNode\r\n}\r\n\r\nfunction useStepperChildren(children?: ReactNode): StepperChildren {\r\n  return useMemo(() => {\r\n    const __children__: StepperChildren = {}\r\n\r\n    Children.forEach(children, (child: ReactNode) => {\r\n      if (!isValidElement(child)) {\r\n        return\r\n      }\r\n\r\n      const element = child as ReactElement\r\n      const elementType = element.type\r\n\r\n      if (elementType === StepperButton) {\r\n        if (__children__.decrease === undefined) {\r\n          __children__.decrease = cloneElement(element, {\r\n            type: \"decrease\",\r\n          })\r\n        } else if (__children__.increase === undefined) {\r\n          __children__.increase = cloneElement(element, {\r\n            type: \"increase\",\r\n          })\r\n        }\r\n      } else if (elementType === StepperInput) {\r\n        __children__.input = element\r\n      }\r\n    })\r\n\r\n    if (!children) {\r\n      const element = <StepperButton />\r\n      if (__children__.decrease === undefined) {\r\n        __children__.decrease = cloneElement(element, { type: \"decrease\" })\r\n      }\r\n\r\n      if (__children__.input === undefined) {\r\n        __children__.input = <StepperInput />\r\n      }\r\n\r\n      if (__children__.increase === undefined) {\r\n        __children__.increase = cloneElement(element, { type: \"increase\" })\r\n      }\r\n    }\r\n\r\n    return __children__\r\n  }, [children])\r\n}\r\n\r\ntype StepperShape = \"square\" | \"round\"\r\n\r\nexport interface StepperProps extends ViewProps {\r\n  defaultValue?: number | string\r\n  value?: number | string\r\n  min?: number\r\n  max?: number\r\n  step?: number\r\n  size?: number | string\r\n  disabled?: boolean\r\n  precision?: number\r\n  longPress?: boolean\r\n  shape?: StepperShape\r\n  children?: ReactNode\r\n\r\n  onChange?(value: number | string): void\r\n}\r\n\r\nfunction Stepper(props: StepperProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    min = 1,\r\n    max = Number.MAX_VALUE,\r\n    step = 1,\r\n    size,\r\n    disabled,\r\n    precision = 0,\r\n    longPress = true,\r\n    shape = \"square\",\r\n    children: childrenProp,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { decrease, input, increase } = useStepperChildren(childrenProp)\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    value: valueProp,\r\n    defaultValue,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const formatValue = useCallback(\r\n    (value: string | number) => {\r\n      if (value === \"\") {\r\n        return value\r\n      }\r\n\r\n      value = formatNumber(String(value), precision > 0)\r\n      value = value === \"\" ? 0 : +value\r\n      value = Number.isNaN(value) ? +min : value\r\n      value = Math.max(Math.min(+max, value), +min)\r\n\r\n      // format decimal\r\n      if (precision > 0) {\r\n        value = value.toFixed(+precision)\r\n      }\r\n\r\n      return value\r\n    },\r\n    [max, min, precision],\r\n  )\r\n\r\n  const valueRef = useToRef(formatValue(value))\r\n\r\n  const onStep = useCallback(\r\n    (actionType: StepperActionType) => {\r\n      const diff = actionType === \"decrease\" ? -step : +step\r\n      setValue(formatValue(addNumber(valueRef.current as number, diff)))\r\n    },\r\n    [formatValue, setValue, step, valueRef],\r\n  )\r\n\r\n  return (\r\n    <StepperContext.Provider\r\n      value={{\r\n        value: valueRef.current,\r\n        min,\r\n        max,\r\n        size,\r\n        disabled,\r\n        precision,\r\n        longPress,\r\n        formatValue,\r\n        onChange: setValue,\r\n        onStep,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(\r\n          prefixClassname(\"stepper\"),\r\n          {\r\n            [prefixClassname(\"stepper--round\")]: shape === \"round\",\r\n          },\r\n          className,\r\n        )}\r\n        {...restProps}\r\n      >\r\n        {decrease}\r\n        {input}\r\n        {increase}\r\n      </View>\r\n    </StepperContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Stepper\r\n","import { default as StepperComponent, StepperProps } from \"./stepper\"\r\nimport StepperButton from \"./stepper-button\"\r\nimport StepperInput from \"./stepper-input\"\r\n\r\nexport type { StepperProps } from \"./stepper\"\r\n\r\ninterface StepperInterface {\r\n  (props: StepperProps): JSX.Element\r\n\r\n  Input: typeof StepperInput\r\n  Button: typeof StepperButton\r\n}\r\n\r\nconst Stepper = StepperComponent as StepperInterface\r\n\r\nStepper.Input = StepperInput\r\nStepper.Button = StepperButton\r\n\r\nexport default Stepper\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { Cell, Stepper } from \"@taroify/core\"\r\nimport * as React from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nexport default function StepperDemo() {\r\n  return (\r\n    <Page title=\"Stepper 步进器\" className=\"stepper-demo\">\r\n      <Block variant=\"card\">\r\n        <Cell title=\"基本用法\">\r\n          <Stepper />\r\n        </Cell>\r\n        <Cell title=\"步长设置\">\r\n          <Stepper step={2} />\r\n        </Cell>\r\n        <Cell title=\"限制输入范围\">\r\n          <Stepper min={5} max={8} />\r\n        </Cell>\r\n        <Cell title=\"禁用状态\">\r\n          <Stepper disabled />\r\n        </Cell>\r\n        <Cell title=\"禁用输入框\">\r\n          <Stepper>\r\n            <Stepper.Button />\r\n            <Stepper.Input disabled />\r\n            <Stepper.Button />\r\n          </Stepper>\r\n        </Cell>\r\n        <Cell title=\"固定小数位数\">\r\n          <Stepper precision={2} />\r\n        </Cell>\r\n        <Cell align=\"center\" title=\"自定义大小\">\r\n          <Stepper size=\"32\">\r\n            <Stepper.Button />\r\n            <Stepper.Input disabled width=\"40\" />\r\n            <Stepper.Button />\r\n          </Stepper>\r\n        </Cell>\r\n        <Cell title=\"圆角风格\">\r\n          <Stepper shape=\"round\" size=\"22\" />\r\n        </Cell>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}