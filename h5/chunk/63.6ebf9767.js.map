{"version":3,"sources":["webpack:///../../../../packages/icons/src/utils/unit.ts","webpack:///../../../../packages/icons/src/van/VanIcon.tsx","webpack:///../../../../packages/core/src/styles/index.ts","webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isNumber.js","webpack:///../../../../packages/core/src/styles/prefix.ts","webpack:///./src/styles/prefix.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isArrayLike.js","webpack:///../../../../packages/icons/src/shared.ts","webpack:///../../../../packages/icons/src/ArrowLeft.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isString.js","webpack:///./src/components/block.tsx","webpack:///./src/components/target.tsx","webpack:///./src/components/page.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toFinite.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_isIterateeCall.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toNumber.js","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/range.js","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_createRange.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseRange.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseTrim.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_trimmedEndIndex.js","webpack:///../../../../packages/core/src/space/style/index.ts","webpack:///../../../../packages/core/src/space/space.tsx","webpack:///../../../../packages/core/src/space/index.ts","webpack:///./src/pages/action/loading/index.tsx"],"names":["value","convertPx","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertVw","convertVh","unitToPx","size","color","presetColor","ICON_PRESET_COLORS","presetSize","ICON_PRESET_SIZES","className","classNames","style","addUnitPx","name","VanIconWrapper","width","height","baseGetTag","require","isObjectLike","module","exports","isNumber","demoPrefixClassname","component","isFunction","isLength","isArrayLike","length","ICON_TYPE","Symbol","ArrowLeft","createVanIconComponent","isArray","isString","Block","props","variant","title","children","TargetType","Target","type","process","Page","onClick","navigateBack","toNumber","toFinite","eq","isIndex","isObject","isIterateeCall","index","object","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","test","slice","range","createRange","SpinIcon","key","prefixClassname","LoadingSpinner","rootStyle","useMemo","LoadingCircular","direction","baseRange","fromRight","start","end","step","undefined","nativeCeil","Math","ceil","nativeMax","max","result","Array","trimmedEndIndex","reTrimStart","string","replace","reWhitespace","charAt","SpaceItem","SpaceDirection","SpaceSize","Vertical","item","LoadingDemo"],"mappings":"wJAKA,E,mDALM,sBACJ,YAAOA,mBAqCH,qBACJ,oBAAWA,EACT,SAGF,GAAIA,WAAJ,MACE,OA1BJ,SAASC,UAAUD,GAEjB,QADAA,EAAQA,gBAARA,KAyBSC,CAAP,GAEF,GAAID,WAAJ,OACE,OAxBJ,SAASE,WAAWF,GAElB,QADAA,EAAQA,iBAARA,KAjBF,SAASG,kBACP,MAAmB,CACjB,IAAMC,EAAMC,SAAZ,gBACMC,EAAWF,kBAAsBG,2BAAvC,SAEAC,EAAeC,WAAfD,GAGF,SAUgBL,GAsBPD,CAAP,GAEF,GAAIF,WAAJ,MACE,OAtBJ,SAASU,UAAUV,GAEjB,QADAA,EAAQA,gBAARA,KACiBO,OAAV,WAAP,IAoBSG,CAAP,GAEF,GAAIV,WAAJ,MACE,OApBJ,SAASW,UAAUX,GAEjB,QADAA,EAAQA,gBAARA,KACiBO,OAAV,YAAP,IAkBSI,CAAP,GAGF,OAAOF,WAAP,GAvDqCG,CAA9BZ,GAAP,M,otCCuBY,oBAAqC,MAC3C,EAAN,EAAM,YAAN,EAAM,QAAN,EAAM,KAD2C,EACjD,EAAgCa,YADiB,MAC3C,UAD2C,IACjD,EAAkDC,aADD,MACS,UADT,EACjD,gCACMC,EAAcC,aAApB,GACMC,EAAaC,aAAnB,GAEA,OACE,oBAAK,eACHC,YAAWC,IAAW,WAAD,yDAKjB,2BADF,GAJmB,cAMjB,2BAA2BH,GANV,GADlB,GAWHI,QAAK,eACHP,QAAOC,EAAc,GADlB,EAEHT,WAAUW,EAAa,GAAKK,UAAUT,IAFnC,IAZT,IAsBI,mCACJ,2BACE,OAAO,wBAAQ,eAACU,OAAMA,GAAtB,IAKF,OADAC,wBACA,iB,mCC1DF,kD,gOC2BA,E,oCAxBM,sBACJ,YAAOxB,mBAA8BY,SAA9BZ,GAAP,MAGI,yBACJ,GAAI,QAA0B,IAA9B,GAAsD,CACpD,IAAMa,EAAOS,UAAb,GACA,MAAO,CACLG,QADK,EAELC,SAAQb,GAGZ,SA8BF,SAASX,WAAWF,GAElB,QADAA,EAAQA,iBAARA,KAjBF,SAASG,kBACP,MAAmB,CACjB,IAAMC,EAAMC,SAAZ,gBACMC,EAAWF,kBAAsBG,2BAAvC,SAEAC,EAAeC,WAAfD,GAGF,SAUgBL,GAaZ,qBACJ,uBAAWH,EACT,EAGEA,WAAJ,MAzBF,SAASC,UAAUD,GAEjB,QADAA,EAAQA,gBAARA,KAyBSC,CAAP,GAEED,WAAJ,OACSE,WAAP,GAEEF,WAAJ,MArBF,SAASU,UAAUV,GAEjB,QADAA,EAAQA,gBAARA,KACiBO,OAAV,WAAP,IAoBSG,CAAP,GAEEV,WAAJ,MAnBF,SAASW,UAAUX,GAEjB,QADAA,EAAQA,gBAARA,KACiBO,OAAV,YAAP,IAkBSI,CAAP,GAGKF,WAAP,K,sBC9EF,IAAIkB,EAAaC,EAAQ,KACrBC,EAAeD,EAAQ,KAoC3BE,EAAOC,QALP,SAASC,SAAShC,GAChB,MAAuB,iBAATA,GACX6B,EAAa7B,IA9BF,mBA8BY2B,EAAW3B,K,mCClCvC,gDAEM,4BACJ,gBAHF,YAGE,Y,mCCHF,oDAEO,SAASiC,oBAAoBC,GAClC,gBAHkB,iBAGlB,OAAwBA,K,sBCH1B,IAAIC,EAAaP,EAAQ,KACrBQ,EAAWR,EAAQ,KA+BvBE,EAAOC,QAJP,SAASM,YAAYrC,GACnB,OAAgB,MAATA,GAAiBoC,EAASpC,EAAMsC,UAAYH,EAAWnC,K,mCC1BhE,sGAAO,IAAMuC,EAAYC,OAAlB,gBAIMtB,EAAoB,CAAC,UAAW,OAAQ,QAAS,SAAvD,SAWMF,EAAqB,CAAC,UAAD,+CAA3B,W,mCClBP,aAEMyB,EAAYC,YAAlB,cACA,O,sBCHA,IAAIf,EAAaC,EAAQ,KACrBe,EAAUf,EAAQ,KAClBC,EAAeD,EAAQ,KA2B3BE,EAAOC,QALP,SAASa,SAAS5C,GAChB,MAAuB,iBAATA,IACV2C,EAAQ3C,IAAU6B,EAAa7B,IArBrB,mBAqB+B2B,EAAW3B,K,kJCV3C,SAAS6C,MAAMC,GAAmB,MACvC3B,EAAwC2B,EAAxC3B,UAAW4B,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SACnC,OACE,eAAC,IAAD,CAAM9B,YAAWC,IAAWa,YAAoB,SAAUd,GAA1D,YACG6B,GAAS,cAAC,IAAD,CAAM7B,YAAWc,YAAoB,gBAAiBgB,WAAUD,IAC1E,cAAC,IAAD,CACE7B,YAAWC,KAAU,mBAClBa,YAAoB,kBAAgC,SAAZc,GADtB,cAElBd,YAAoB,eAA6B,SAAZc,GAFnB,IADvB,WAMGE,S,oGCvBGC,E,+EAYG,SAASC,OAAOL,GAAoB,IACzCM,EAAmBN,EAAnBM,KAAMH,EAAaH,EAAbG,SACd,OAAO,qCAAYI,OAATD,GAAiCH,ICF9B,SAASK,KAAKR,GAAkB,IACrC3B,EAA+B2B,EAA/B3B,UAAW6B,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SAE1B,OACE,eAAC,IAAD,CAAM9B,YAAWC,IAAWa,YAAoB,QAASd,GAAzD,YACE,cAACgC,OAAD,CAAQC,OAAK,KAAb,WACE,eAAC,IAAD,CAAMjC,YAAWc,YAAoB,aAArC,YACE,cAACQ,EAAA,EAAD,CACEtB,YAAWc,YAAoB,mBAC/BsB,UAAS,0BAAM,UAAAC,kBAEjB,eAAC,IAAD,CAAMrC,YAAWc,YAAoB,oBAArC,YAA2De,EAA3D,YAGJ,cAAC,IAAD,CAAM7B,YAAWc,YAAoB,iBAArC,WAAwDgB,Q,SD1BlDC,K,SAAAA,M,4BEJZ,IAAIO,EAAW7B,EAAQ,KAyCvBE,EAAOC,QAZP,SAAS2B,SAAS1D,GAChB,OAAKA,GAGLA,EAAQyD,EAASzD,MA9BJ,KA+BaA,KA/Bb,IACG,uBA+BFA,EAAQ,GAAK,EAAI,GAGxBA,GAAUA,EAAQA,EAAQ,EAPd,IAAVA,EAAcA,EAAQ,I,0DC/B7B2D,EAAK/B,EAAQ,KACbS,EAAcT,EAAQ,KACtBgC,EAAUhC,EAAQ,KAClBiC,EAAWjC,EAAQ,KA0BvBE,EAAOC,QAdP,SAAS+B,eAAe9D,EAAO+D,EAAOC,GACpC,IAAKH,EAASG,GACZ,OAAO,EAET,IAAIZ,EAAO,EAAOW,GAClB,SAAY,UAARX,EACKf,EAAY2B,IAAWJ,EAAQG,EAAOC,EAAO1B,QACrC,UAARc,GAAoBW,KAASC,IAE7BL,EAAGK,EAAOD,GAAQ/D,K,sBCxB7B,IAAIiE,EAAWrC,EAAQ,KACnBiC,EAAWjC,EAAQ,KACnBsC,EAAWtC,EAAQ,KAMnBuC,EAAa,qBAGbC,EAAa,aAGbC,EAAY,cAGZC,EAAeC,SA8CnBzC,EAAOC,QArBP,SAAS0B,SAASzD,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAIkE,EAASlE,GACX,OA1CM,IA4CR,GAAI6D,EAAS7D,GAAQ,CACnB,IAAIwE,EAAgC,mBAAjBxE,EAAMyE,QAAwBzE,EAAMyE,UAAYzE,EACnEA,EAAQ6D,EAASW,GAAUA,EAAQ,GAAMA,EAE3C,GAAoB,iBAATxE,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQiE,EAASjE,GACjB,IAAI0E,EAAWN,EAAWO,KAAK3E,GAC/B,OAAQ0E,GAAYL,EAAUM,KAAK3E,GAC/BsE,EAAatE,EAAM4E,MAAM,GAAIF,EAAW,EAAI,GAC3CP,EAAWQ,KAAK3E,GAvDb,KAuD6BA,I,2GC5DvC,e,sBCAA,IA2CI6E,EA3CcjD,EAAQ,IA2CdkD,GAEZhD,EAAOC,QAAU8C,G,onBCpCjB,IAAME,EAAW,eAAoBC,YAAD,OAClC,oBAAK,CAACA,MAAD,EAAW7D,YAAW8D,YAAgB,+BAG7C,SAASC,eAAepC,GAAmB,IACjCjC,EAAR,EAAQA,KACFsE,EAAYC,mBAChB,yBAAO,CACL3D,QAAK,UAAEH,YAAF,kBADA,GAELI,SAAM,UAAEJ,YAAF,kBAAqB,MAE7B,CALF,IAOA,OACE,oBAAK,CAACH,YAAW8D,YAAZ,oBAAiD5D,QAAO8D,GAD/D,GAOF,SAASE,gBAAgBvC,GAAmB,IAClCjC,EAAR,EAAQA,KACFsE,EAAYC,mBAChB,yBAAO,CACL3D,QAAK,UAAEH,YAAF,kBADA,GAELI,SAAM,UAAEJ,YAAF,kBAAqB,MAE7B,CALF,IAOA,OAAO,oBAAK,CAACH,YAAW8D,YAAZ,qBAAkD5D,QAAO8D,IAezD,oBAAqC,IAC3C,EAAN,EAAM,YAAN,EAAM,KAD2C,EACjD,EAGE/B,YAJ+C,MAC3C,WAD2C,IACjD,EAIEkC,iBAL+C,MAC3C,aAD2C,EAM/CrC,EALF,EAKEA,SALF,gCASA,OACE,oBAAK,eACH9B,YAAWC,IACT6D,YADmB,WAEnBA,YAAgB,YAAD,OAFI,IAGnBA,YAAgB,YAAD,OAHI,QADvB,GASG7B,eAAsB,+BAAe,CAACvC,OAAMA,IAC5CuC,gBAAuB,gCAAgB,CAACvC,OAAMA,IAC9CoC,GAAY,oBAAK,CAAC9B,YAAW8D,YAAZ,iBAA8ChC,WAAUA,O,8CC3EhF,IAAIsC,EAAY3D,EAAQ,KACpBkC,EAAiBlC,EAAQ,KACzB8B,EAAW9B,EAAQ,KA2BvBE,EAAOC,QAlBP,SAAS+C,YAAYU,GACnB,OAAO,SAASC,EAAOC,EAAKC,GAa1B,OAZIA,GAAuB,iBAARA,GAAoB7B,EAAe2B,EAAOC,EAAKC,KAChED,EAAMC,OAAOC,GAGfH,EAAQ/B,EAAS+B,QACLG,IAARF,GACFA,EAAMD,EACNA,EAAQ,GAERC,EAAMhC,EAASgC,GAEjBC,OAAgBC,IAATD,EAAsBF,EAAQC,EAAM,GAAK,EAAKhC,EAASiC,GACvDJ,EAAUE,EAAOC,EAAKC,EAAMH,M,oBCxBvC,IAAIK,EAAaC,KAAKC,KAClBC,EAAYF,KAAKG,IAyBrBnE,EAAOC,QAZP,SAASwD,UAAUE,EAAOC,EAAKC,EAAMH,GAKnC,IAJA,IAAIzB,GAAS,EACTzB,EAAS0D,EAAUH,GAAYH,EAAMD,IAAUE,GAAQ,IAAK,GAC5DO,EAASC,MAAM7D,GAEZA,KACL4D,EAAOV,EAAYlD,IAAWyB,GAAS0B,EACvCA,GAASE,EAEX,OAAOO,I,sBCxBT,IAAIE,EAAkBxE,EAAQ,KAG1ByE,EAAc,OAelBvE,EAAOC,QANP,SAASkC,SAASqC,GAChB,OAAOA,EACHA,EAAO1B,MAAM,EAAGwB,EAAgBE,GAAU,GAAGC,QAAQF,EAAa,IAClEC,I,oBCdN,IAAIE,EAAe,KAiBnB1E,EAAOC,QAPP,SAASqE,gBAAgBE,GAGvB,IAFA,IAAIvC,EAAQuC,EAAOhE,OAEZyB,KAAWyC,EAAa7B,KAAK2B,EAAOG,OAAO1C,MAClD,OAAOA,I,mCCfT,e,+DCgBA,EAOA,E,mDAbA,SAAS2C,UAAU5D,GAAqB,IAC9BG,EAAR,EAAQA,SAER,OAAO,oBAAK,CAAC9B,YAAWC,IAAW6D,YAAD,iBAAlC,IAGF,YACE0B,0BACAA,sBAFF,CAAYA,MAAZ,KAOA,YACEC,gBACAA,kBACAA,gBAHF,CAAYA,MAAZ,KCrBA,IDmCc,kBAAiC,MAC7C,EAAQtB,iBADqC,MACzBqB,EAAd,WADuC,EACE1D,EAA/C,EAA+CA,SAC/C,OACE,oBAAK,CACH9B,YAAWC,IAAW6D,YAAD,wBAClBA,YAAgB,UAAD,OAAhB,IACEK,IAAcqB,EAAdrB,YAA2CA,IAAcqB,EAAeE,YAG3E,kBAA6B,qBAC5B,0BAAU,CAAC7B,MAAD,EAAa/B,WAAU6D,U,sMEzC1B,SAASC,cACtB,OACE,eAAC,IAAD,CAAM/D,QAAM,aAAa7B,YAAU,eAAnC,YACE,cAAC,IAAD,CAAO6B,QAAM,OAAb,WACE,gCACE,sBACA,mBAASI,OAAK,iBAGlB,cAAC,IAAD,CAAOJ,QAAM,QAAb,WACE,gCACE,mBAAS7B,YAAU,iBACnB,mBAASA,YAAU,eAAeiC,OAAK,iBAG3C,cAAC,IAAD,CAAOJ,QAAM,QAAb,WACE,gCACE,mBAASnC,OAAK,OACd,mBAASuC,OAAK,UAAUvC,OAAK,YAGjC,cAAC,IAAD,CAAOmC,QAAM,OAAb,WACE,mBAASnC,OAAK,KAAd,wBAEF,cAAC,IAAD,CAAOmC,QAAM,OAAb,WACE,mBAASsC,YAAU,WAAWzE,OAAK,KAAnC,wBAIF,cAAC,IAAD,CAAOmC,QAAM,OAAb,WACE,oBAAOnC,OAAK,QAAZ,YACE,mBAASM,YAAU,eAAemE,YAAU,WAA5C,sBAGA,mBAASnE,YAAU,oBAAoBmE,YAAU,WAAjD","file":"chunk/63.6ebf9767.js","sourcesContent":["export function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport {\r\n  ICON_PRESET_COLORS,\r\n  ICON_PRESET_SIZES,\r\n  ICON_TYPE,\r\n  IconColor,\r\n  IconProps,\r\n  IconSize,\r\n} from \"../shared\"\r\nimport { addUnitPx } from \"../utils/unit\"\r\n\r\ninterface VanIconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  name?: string\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function VanIcon(props: VanIconProps) {\r\n  const { className, style, name, size = \"inherit\", color = \"inherit\", ...restProps } = props\r\n  const presetColor = ICON_PRESET_COLORS.includes(color as IconColor)\r\n  const presetSize = ICON_PRESET_SIZES.includes(size as IconSize)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        \"van-icon\",\r\n        `van-icon-${name}`,\r\n        \"taroify-icon\",\r\n        {\r\n          [`taroify-icon--${color}`]: presetColor,\r\n          [`taroify-icon--${size}`]: presetSize,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        color: presetColor ? \"\" : color,\r\n        fontSize: presetSize ? \"\" : addUnitPx(size),\r\n        ...style,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport function createVanIconComponent(name: string) {\r\n  function VanIconWrapper(props: IconProps) {\r\n    return <VanIcon name={name} {...props} />\r\n  }\r\n\r\n  // @ts-ignore\r\n  VanIconWrapper[ICON_TYPE] = ICON_TYPE\r\n  return VanIconWrapper\r\n}\r\n","export { prefixClassname } from \"./prefix\"\n","import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","const COMPONENT_PREFIX = \"taroify-\"\n\nexport function prefixClassname(component: string) {\n  return `${COMPONENT_PREFIX}${component}`\n}\n","const DEMO_PREFIX = \"taroify-demo-\"\n\nexport function demoPrefixClassname(component: string) {\n  return `${DEMO_PREFIX}${component}`\n}\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\n\r\nexport const ICON_TYPE = Symbol(\"__iconType__\")\r\n\r\nexport type IconSize = \"inherit\" | \"mini\" | \"small\" | \"medium\" | \"large\"\r\n\r\nexport const ICON_PRESET_SIZES = [\"inherit\", \"mini\", \"small\", \"medium\", \"large\"]\r\n\r\nexport type IconColor =\r\n  | \"inherit\"\r\n  | \"default\"\r\n  | \"primary\"\r\n  | \"info\"\r\n  | \"success\"\r\n  | \"warning\"\r\n  | \"danger\"\r\n\r\nexport const ICON_PRESET_COLORS = [\r\n  \"inherit\",\r\n  \"default\",\r\n  \"primary\",\r\n  \"info\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n]\r\n\r\nexport interface IconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n","import { createVanIconComponent } from \"./van\"\r\n\r\nconst ArrowLeft = createVanIconComponent(\"arrow-left\")\r\nexport default ArrowLeft\r\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import * as React from \"react\"\nimport { ReactNode } from \"react\"\n\n/* eslint-disable  no-shadow */\nexport enum TargetType {\n  /* eslint-enable  no-shadow */\n  H5 = \"h5\",\n}\n\ntype TargetTypeString = \"h5\"\n\ninterface TargetProps {\n  type?: TargetType | TargetTypeString\n  children?: ReactNode\n}\n\nexport default function Target(props: TargetProps) {\n  const { type, children } = props\n  return <>{type === process.env.TARO_ENV && children}</>\n}\n","import ArrowLeft from \"@taroify/icons/ArrowLeft\"\nimport { View } from \"@tarojs/components\"\nimport { navigateBack } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { ReactNode } from \"react\"\nimport { demoPrefixClassname } from \"../styles/prefix\"\nimport \"./page.scss\"\nimport Target from \"./target\"\n\ninterface PageProps {\n  className?: string\n  title?: string\n  children: ReactNode\n}\n\nexport default function Page(props: PageProps) {\n  const { className, title, children } = props\n\n  return (\n    <View className={classNames(demoPrefixClassname(\"page\"), className)}>\n      <Target type=\"h5\">\n        <View className={demoPrefixClassname(\"page__nav\")}>\n          <ArrowLeft\n            className={demoPrefixClassname(\"page__nav__back\")}\n            onClick={() => navigateBack()}\n          />\n          <View className={demoPrefixClassname(\"page__nav__title\")}>{title} </View>\n        </View>\n      </Target>\n      <View className={demoPrefixClassname(\"page__content\")}>{children}</View>\n    </View>\n  )\n}\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\ninterface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface SpaceItemProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction SpaceItem(props: SpaceItemProps) {\r\n  const { children } = props\r\n\r\n  return <View className={classNames(prefixClassname(\"space__item\"))}>{children}</View>\r\n}\r\n\r\nexport enum SpaceDirection {\r\n  Horizontal = \"horizontal\",\r\n  Vertical = \"vertical\",\r\n}\r\n\r\ntype SpaceDirectionString = \"horizontal\" | \"vertical\"\r\n\r\nexport enum SpaceSize {\r\n  Small = \"small\",\r\n  Medium = \"medium\",\r\n  Large = \"large\",\r\n}\r\n\r\ntype SpaceSizeString = \"small\" | \"medium\" | \"large\"\r\n\r\ninterface SpaceProps {\r\n  direction?: SpaceDirection | SpaceDirectionString\r\n  size?: SpaceSize | SpaceSizeString | number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Space(props: SpaceProps) {\r\n  const { direction = SpaceDirection.Horizontal, children } = props\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"space\"), {\r\n        [prefixClassname(`space--${direction}`)]:\r\n          direction === SpaceDirection.Horizontal || direction === SpaceDirection.Vertical,\r\n      })}\r\n    >\r\n      {React.Children.map(children, (item, index) => (\r\n        <SpaceItem key={index} children={item} />\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n","import Space from \"./space\"\n\nexport default Space\n","import { Loading, Space } from \"@taroify/core\"\r\nimport * as React from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nexport default function LoadingDemo() {\r\n  return (\r\n    <Page title=\"Loading 加载\" className=\"loading-demo\">\r\n      <Block title=\"加载类型\">\r\n        <Space>\r\n          <Loading />\r\n          <Loading type=\"spinner\" />\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"自定义颜色\">\r\n        <Space>\r\n          <Loading className=\"custom-color\" />\r\n          <Loading className=\"custom-color\" type=\"spinner\" />\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"自定义大小\">\r\n        <Space>\r\n          <Loading size=\"24\" />\r\n          <Loading type=\"spinner\" size=\"24\" />\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"加载文案\">\r\n        <Loading size=\"24\">加载中...</Loading>\r\n      </Block>\r\n      <Block title=\"垂直排列\">\r\n        <Loading direction=\"vertical\" size=\"24\">\r\n          加载中...\r\n        </Loading>\r\n      </Block>\r\n      <Block title=\"垂直排列\">\r\n        <Space size=\"large\">\r\n          <Loading className=\"custom-color\" direction=\"vertical\">\r\n            加载中...\r\n          </Loading>\r\n          <Loading className=\"custom-text-color\" direction=\"vertical\">\r\n            加载中...\r\n          </Loading>\r\n        </Space>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}