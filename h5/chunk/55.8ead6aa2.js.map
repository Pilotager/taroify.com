{"version":3,"sources":["webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.shared.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.new.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.old.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.ts","webpack:///../../../../packages/hooks/src/use-uncontrolled/use-uncontrolled.ts","webpack:///../../../../packages/hooks/src/use-to-ref/use-to-ref.ts","webpack:///../../../../packages/hooks/src/use-force-update/use-force-update.ts","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/core/src/utils/validate/index.ts","webpack:///../../../../packages/hooks/src/use-area/use-area.ts","webpack:///../../../../packages/hooks/src/use-area/area.shared.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isBoolean.js","webpack:///./src/components/block.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isNull.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/endsWith.js","webpack:///../../../../packages/core/src/utils/logger.ts","webpack:///../../../../packages/core/src/image/image-placeholder.tsx","webpack:///../../../../packages/core/src/image/image.tsx","webpack:///../../../../packages/core/src/image/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_createRelationalOperation.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/values.js","webpack:///../../../../packages/core/src/badge/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/gt.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseGt.js","webpack:///../../../../packages/core/src/badge/badge-wrapper.context.ts","webpack:///../../../../packages/core/src/badge/badge-wrapper.tsx","webpack:///../../../../packages/core/src/badge/badge.tsx","webpack:///../../../../packages/core/src/badge/create-badge-wrapper.tsx","webpack:///../../../../packages/core/src/badge/use-badge.tsx","webpack:///../../../../packages/core/src/badge/create-badge.tsx","webpack:///../../../../packages/core/src/badge/use-badge-wrapper.tsx","webpack:///../../../../packages/core/src/badge/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseValues.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/includes.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseIndexOf.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseIsNaN.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_strictIndexOf.js","webpack:///../../../../packages/core/src/sidebar/sidebar-tab.tsx","webpack:///../../../../packages/core/src/sidebar/sidebar.context.ts","webpack:///../../../../packages/core/src/sidebar/style/index.tsx","webpack:///../../../../packages/core/src/sidebar/sidebar.tsx","webpack:///../../../../packages/core/src/sidebar/index.ts","webpack:///../../../../packages/core/src/tree-select/tree-select.context.ts","webpack:///../../../../packages/core/src/tree-select/tree-select-option.tsx","webpack:///../../../../packages/core/src/tree-select/tree-select-tab.tsx","webpack:///../../../../packages/core/src/tree-select/tree-select.tsx","webpack:///../../../../packages/core/src/tree-select/index.ts","webpack:///./src/pages/navigation/tree-select/index.tsx"],"names":["defaultFirst","option","useCascadeSelect","options","depth","useMemo","doCascadeSelect","value","data","newValues","newColumns","children","cursorOptions","nextOption","findCascadeOption","nextOptions","values","maxDepth","onChange","onChangeRef","useToRef","useEffect","e","columns","useState","setColumns","useCascader","useCascaderNew","forceUpdate","useForceUpdate","valueRef","stateRef","useRef","defaultValue","setValue","useCallback","emitChange","getValue","updateReducer","num","useReducer","isValidElement","element","isIconElement","cloneElement","node","className","oldProps","props","newProps","classNames","displayName","DEFAULT_AREA_DATA","province_list","city_list","county_list","defaultFormatter","list","index","label","getAreaPrefix","getFirstDivisionPrefix","divisions","getAreaPrefixDivision","valuePrefix","prefixes","valueSuperiorPrefix","superiorPrefix","valuePad","padAreaPrefixToValue","prefix","division","doAreaSelect","formatter","dataArray","getAreaData","dataPrimitive","nextValueOptions","nextValues","filterAreaList","newRecord","record","unverifiedValues","valueOptions","useAreaSelect","useAreaValues","unverifiedValue","unverifiedValueRef","valuesRef","valueOptionsRef","getValues","getValueOptions","setValues","baseGetTag","require","isObjectLike","module","exports","isBoolean","Block","variant","title","demoPrefixClassname","isNull","baseClamp","baseToString","toInteger","toString","endsWith","string","target","position","length","end","undefined","slice","logConfig","warn","infoLevel","optionalParams","console","prefixClassname","React","getLogger","mode","shape","lazyLoad","placeholder","fallback","taroMode","useImageMode","useImageShape","shapeProp","setLoading","failed","src","loading","imgProps","alt","onLoad","onError","setFailed","toNumber","createRelationalOperation","operator","other","baseValues","keys","object","baseGt","gt","createContext","BadgeWrapper","BadgeWrapperContext","Badge","content","fixed","inWrapper","useContext","hasChildren","noChildren","fixedProp","contentProp","badge","dot","badgeProps","isElementOf","wrapper","createBadgeWrapper","acquireCloneElement","arrayMap","key","baseIndexOf","isArrayLike","isString","nativeMax","Math","max","includes","collection","fromIndex","guard","indexOf","baseFindIndex","baseIsNaN","strictIndexOf","array","SidebarTabContent","ContentBadgeWrapper","useBadgeWrapper","useBadge","SidebarTab","onClick","onTabClick","active","activeValue","handleClick","event","disabled","SidebarContext","Sidebar","childrenProp","useUncontrolled","useSidebarChildren","oldValue","tab","TreeSelectOption","onOptionClick","ctxValue","style","cloneIconElement","activeIcon","TreeSelectTab","useTreeSelectChildren","__children__","tabs","Children","tabValue","getTreeSelectOptions","__dataKey__","__dataIndex__","TreeSelect","onTabChange","onChangeProp","onTabChangeProp","setTabValue","evtValue","multiselect","aValue","TreeSelectContext","newTab","RadioTreeSelect","Tab","Option","MultiselectTreeSelect","TreeSelectWithCustomContent","BadgeTreeSelect","TreeSelectDemo"],"mappings":"6bAWM,gCAGyB,IAA7BA,EAA6B,wDAEvBC,EAAS,OAAiBA,YAAD,OAAYA,UAA3C,KACA,OAAO,UAAwC,IAAxC,GAAP,ECqBF,SAASC,iBAAiBC,GACxB,IAAM,EAAN,EAAM,QAAN,EAAM,KAAeC,EAArB,EAAqBA,MACrB,OAAOC,mBACL,kBA9BJ,SAASC,gBAAgB,SAAyD,EAAvDC,MAAqBJ,EAAkC,EAAxCK,KAClCC,EAAN,GACMC,EAAN,GACAA,OAAgB,CAAEC,WAAUR,IAK5B,IAHA,IAAIS,EAAJ,EACIR,EAAJ,IAES,CACP,IACMS,EAAaC,kBAAkBF,EADvB,MAAd,IACA,GACA,GAAI,IAAJ,GACE,MAEF,IAAM,EAAN,EAAQL,MAA2BQ,EAAnC,EAAyBJ,SAEzB,GADAF,WACKM,GAAe,IAApB,GACE,MAEFL,UACAE,IACAR,IAGF,MAAO,CAACM,EAAR,GAOIJ,CAAgB,CACdC,UACAC,SACAJ,cAEJ,CAACI,EAAMJ,EAPT,IAuBY,2BAAyB,MAKf,EAJtBG,MAAOS,OAD8B,aAKf,EAHtBZ,MAAOa,OAF8B,YAKf,EAFtBT,YAHqC,WAIrCU,EACsB,EADtBA,SAEAD,EAAW,QAAXA,GACA,IAAME,EAAcC,YAApB,GACA,EAA6BlB,iBAAiB,CAAEK,QAAF,EAAiBH,QAAjB,EAAkCI,WAAhF,mBAAM,EAAN,KAAM,EAAN,KAcA,OAZAa,qBAAU,WAO2B,OAN/BJ,OAAkBA,EAAW,IAAjC,IACE,IAAQA,EAAW,IAAnB,SACO,iBADP,eAEYK,YAAD,OAAOC,OAFlB,MAKG,MAAL,MACE,UAAAJ,EAAA,6BAAAA,EAAA,MAED,CAACI,EAASN,EAAUR,EAAWU,EAVlCE,IAYO,CACLE,a,aCxEU,2BAAyB,MAIf,EAHtBhB,MAAOS,OAD8B,aAIf,EAFtBZ,aAFqC,YAIf,EADtBD,eAHqC,MAG3B,GAH2B,EAKrCC,EAAQ,QAARA,GACA,MAA8BoB,mBAA9B,uBAAM,EAAN,KAAM,EAAN,KA8BA,OA5BAH,qBAAU,WACR,IAAMX,EAAN,GAGA,GAFAA,WAEK,IAAL,GAAwB,CACtB,IADsB,EAClBE,EAAJ,EADsB,cAGtB,GAHsB,IAGtB,2BAA4B,KACpBC,EAAaC,kBAAkBF,EADX,SAE1B,GAAI,IAAJ,GACE,MAEF,IAAkBG,EAAlB,EAAQJ,SACR,IAAKI,GAAe,IAApB,GACE,MAEFH,IACAF,WAboB,+BAgBpBN,OAAeA,EAAQ,IAA3B,IACE,IAAQA,EAAQ,IAAhB,SACO,iBADP,eAEYkB,YAAD,OAAOZ,OAFlB,MAIFe,OACC,CAACrB,EAAOD,EA1BXkB,IA4BO,CACLE,a,0yBChCJ,MARA,SAASG,YAAY,OAAElB,EAA0C,EAA1CA,KAErB,OAD8BA,EAAOmB,eAArC,gB,uYAC6B,CAAD,CAC1BnB,UAH6D,iC,SCCnD,2BAAoE,IAAvCL,EAAuC,uDAAF,GACxE,EAAN,EAAM,eAAN,EAAsBI,MAAkBW,EAAxC,EAAwCA,SAClCU,EAAcC,cAEdC,EAAWV,YAAjB,GACMW,EAAWC,iBAAOC,QAAD,EAAiBH,EAAxC,cAEA,IAAIA,YACFC,UAAmBD,EAAnBC,SAGF,IAAMG,EAAWC,uBACf,cAAkD,MAC5C,IAAcL,EAAlB,WACEC,YACAH,KAED,UAACQ,QAAD,yBAGH,CATF,IAYMC,EAAWF,uBAAY,kBAAMJ,EAAP,UAA5B,IAEA,OAAO1B,mBACL,iBAAO,CACLE,QAAOwB,EADF,QAELM,aACAH,gBAGF,CAACH,EAAD,UAPF,M,wFCnCY,qBACZ,IAAMA,EAAWC,mBAEjB,OADAD,YACA,I,yFCHIO,EAAiBC,SAAjBD,cAAiBC,GAAD,OAA0BA,EAAD,GAA/C,KAQA,MANA,SAASV,iBACP,MAAmBW,qBAAWF,EAA9B,GAEA,OAFA,sB,62CCAI,0BAEJ,IAAKG,yBAAL,GACE,SAEF,IAAMC,EAAN,EACA,OAAO,IAAQA,EAAR,KAAP,KAGI,+BACJ,IAAKC,cAAL,GACE,OAAO,4BAAuBC,uBAAaC,EAApC,GAAP,EAEI,IAAEC,EAAR,EAAQA,UAAR,gCACMJ,EAAN,EACeK,EAAf,EAAQC,MACFC,EAAQ,sCAEZH,YAAWI,IAAWH,EAAD,cAFvB,GAKA,OAAOH,uBAAaF,EAApB,K,yVCnBI,0BACJ,OAAO,QAAoB,IAA3B,GAGI,4BACJ,OAAQD,yBAAD,IAAyB,IAAzB,KAA8C,IAArD,GAGI,0BACJ,GAAIA,yBAAJ,GAA0B,CACxB,IAAMC,EAAN,EACA,GAAIA,SAAJ,EACE,SAGF,IAAMS,EAAc,IAAMT,EAAN,KAApB,eACA,GACE,IAAaA,EAAb,QACC,IADD,IAEA,MAAwB,MAH1B,gBAKE,SAGJ,W,6RCvBF,IAAMU,EAA8B,CAClCC,gBADkC,GAElCC,YAFkC,GAGlCC,cAAa,IAGf,SAASC,iBAAiBC,GACxB,IAAIC,EAAJ,EACA,OAAO,OAAY,oBAAmB,CAAEA,QAAOA,IAASnD,UAAOoD,UAAOhD,WAAUgD,MAiBlF,SAASC,cAAcrD,EAAvB,GACE,OAAOA,aAAP,EAAOA,cAAP,EAA2BH,GAG7B,SAASyD,uBAAuBC,EAAhC,GAAwE,MACtE,OAAOF,cAAa,UAAC,IAAD,uBAAC,EAAD,MAApB,GAGF,SAASG,sBAAsB,EAA/B,OAME,IAAMxD,EAAQ,MAAd,GACMH,EAAQsD,EAAd,EACMM,EAAcJ,cAAcrD,EAAlC,GAEA,OAAImD,EACFO,KAAkBD,QAAlBC,EAAiCJ,uBAAuBC,EAAxDG,OACK,CACL,IAAMC,EAAsB3D,aAAH,EAAGA,cAA5B,EAAgDmD,GAC1CS,EAAiBF,EAASP,EAAhC,GAGEO,KADEE,IAAJ,EACoBN,uBAAuBC,EAAzCG,GAEAA,EAGJ,IAAMG,EA5CR,SAASC,qBAAqBC,GAC5B,OAAO,QAAP,KA2CiBD,CAAqBJ,EAAtC,IACA,OAAO,OAAmBM,YAAD,OAAcA,UAAvC,KAWF,SAASC,aAAarE,GACpB,IAAM,EAAN,EAAM,mBAAN,EAA0BK,KAApB,EAAN,EAAM,MAAgDiE,EAAtD,EAAsDA,UAChDjE,EC7DF,0BACJ,IAAM,EAAN,EAAM,gBAAN,EAAM,UAA4B+C,EAAlC,EAAkCA,YAC5BmB,EAAN,GAUA,OATIzD,OAAkB,IAAtB,KACEyD,UACIzD,OAAkB,IAAtB,KACEyD,UACIzD,OAAkB,IAAtB,IACEyD,YAIN,EDiDaC,CAAYC,EAAzB,GAEMX,EAAN,GACM1C,EAAN,GACMsD,EAAN,GACMC,EAAN,GAmBA,OAjBA,OAAgB,cAGd,MAEEhB,EADF,IAAIJ,EACUe,aAAH,EAAGA,EAAZX,GAEYW,aAAH,EAAGA,EApElB,SAASM,eAAetB,EAAxB,GACE,IAAMuB,EAAN,GAMA,OALA,OAAgB,cACV,MAAJ,KACEA,WAGJ,EA6D4BD,CAAeE,EAAQhB,EAASP,EAAxDI,KAEF,IAAMS,EAAWR,sBAAsBE,EAAUH,EAAWoB,EAA5D,GACAL,OACAC,KAAoBP,EAApBO,MACAvD,KAAiB,CACfmC,UACA/C,WAAUmD,MAGP,CACLvC,YACAP,SAFK,EAGLmE,eAAcN,GAIlB,SAASO,cAAcjF,GACrB,IAAM,EAAN,EAAM,mBAAN,EAAM,OAAN,EAAM,MAAiCsE,EAAvC,EAAuCA,UACvC,OAAOpE,mBACL,kBACEmE,aAAa,CACXU,qBACA1E,SACAJ,UACAqE,kBAEJ,CAACjE,EAAMJ,EAAOqE,EARhB,IAYF,SAASY,cAAc9E,GACrB,OAAOF,mBAAQ,kBAAO,SAA2B,CAAnC,KAA6C,CAA3D,IAUY,mBAA2E,IAAzDiF,EAAyD,uDAAhC,GAAInF,EAA4B,uDAAF,GACrF,IAAQK,YAAR,MAAM,EAAN,MAAkCJ,aAAlC,MAAM,EAAN,MAA6CqE,iBAA7C,MAAyDjB,iBAAzD,EACM+B,EAAqBvD,iBAA3B,GACMJ,EAAcC,cACdqD,EAAmBG,cAAcE,EAAvC,SAEA,EAA0CH,cAAc,CACtDF,qBACA1E,SACAJ,UACAqE,gBAJI,EAAN,EAAM,UAAN,EAAM,OAAmBU,EAAzB,EAAyBA,aAOnBK,EAAYpE,YAAlB,GACMqE,EAAkBrE,YAAxB,GACMsE,EAAYvD,uBAAY,kBAAMqD,EAAP,UAA0B,CAAvD,IACMG,EAAkBxD,uBAAY,kBAAMsD,EAAP,UAAgC,CAAnE,IAEMG,EAAYzD,uBACf1B,YACC8E,YACA3D,MAEF,CALF,IAcA,OANAP,qBAAU,WACH,IAAUmE,EAAV,QAAL,IACEI,OAED,CAACA,EAAWN,EAJfjE,IAMOhB,mBACL,iBAAO,CACLkB,YACAP,WACAmE,iBACAO,cACAC,oBACAC,iBAEF,CAACrE,EAASoE,EAAiBD,EAAWE,EAAWT,EATnD,M,sBErKF,IAAIU,EAAaC,EAAQ,KACrBC,EAAeD,EAAQ,KA2B3BE,EAAOC,QALP,SAASC,UAAU3F,GACjB,OAAiB,IAAVA,IAA4B,IAAVA,GACtBwF,EAAaxF,IArBJ,oBAqBcsF,EAAWtF,K,kJCTxB,SAAS4F,MAAMnD,GAAmB,MACvCF,EAAwCE,EAAxCF,UAAWsD,EAA6BpD,EAA7BoD,QAASC,EAAoBrD,EAApBqD,MAAO1F,EAAaqC,EAAbrC,SACnC,OACE,eAAC,IAAD,CAAMmC,YAAWI,IAAWoD,YAAoB,SAAUxD,GAA1D,YACGuD,GAAS,cAAC,IAAD,CAAMvD,YAAWwD,YAAoB,gBAAiB3F,WAAU0F,IAC1E,cAAC,IAAD,CACEvD,YAAWI,KAAU,mBAClBoD,YAAoB,kBAAgC,SAAZF,GADtB,cAElBE,YAAoB,eAA6B,SAAZF,GAFnB,IADvB,WAMGzF,S,4CCNTqF,EAAOC,QAJP,SAASM,OAAOhG,GACd,OAAiB,OAAVA,I,sBClBT,IAAIiG,EAAYV,EAAQ,KACpBW,EAAeX,EAAQ,KACvBY,EAAYZ,EAAQ,KACpBa,EAAWb,EAAQ,KAuCvBE,EAAOC,QAdP,SAASW,SAASC,EAAQC,EAAQC,GAChCF,EAASF,EAASE,GAClBC,EAASL,EAAaK,GAEtB,IAAIE,EAASH,EAAOG,OAKhBC,EAJJF,OAAwBG,IAAbH,EACPC,EACAR,EAAUE,EAAUK,GAAW,EAAGC,GAItC,OADAD,GAAYD,EAAOE,SACA,GAAKH,EAAOM,MAAMJ,EAAUE,IAAQH,I,mCC/BzD,8CAIMM,EAJN,EAQM,sBACJ,MAAO,CACLC,OADK,cACD,GACF,GAAID,GATQE,GASsB,8BADbC,EACa,iCADbA,EACa,mBAEhCC,iF,uMCTM,6BACZ,QAAQlD,cAAR,MAAM,cAAN,EAAgC3D,EAAhC,EAAgCA,SAEhC,OAAI8B,yBAAJ,GACSG,uBAAajC,EAA0B,CAC5CmC,YAAWI,IACTuE,YAAgB,UAAD,OADI,IAEnBA,YAAgB,UAAD,SAFI,aAOrB,QAAwB,IAA5B,GACS,oBAAK,CAAC3E,YAAW2E,YAAgB,UAAD,OAA3B,IAAiD9G,WAAUA,IAElE+G,2BAAP,M,6vCChBF,IAAQL,EAASM,YAAjB,SAAQN,KA0CM,kBAAiC,UACvC,EAAN,EAAM,YAAN,EAAM,MAAN,EAAM,IAAN,IAIEO,YAJF,MAAM,cAAN,EAAM,EAAN,EAAM,QAAN,EAMEC,MANF,IAOEC,gBAPF,aAQEC,mBARF,aASEC,gBATF,yCAYMC,EArDR,SAASC,aAAaN,GACpB,OAAOvH,mBAAQ,WACb,kBAAIuH,EACF,WAEF,aAAIA,EACF,YAEF,eAAIA,EACF,cAEF,gBAAIA,EACF,eAEF,IACC,CAdH,IAoDiBM,CAAjB,GACML,EApCR,SAASM,cAAcN,EAAvB,GACE,OAAI,QAAJ,GAEER,EAAK,kBAAD,OADJQ,WACAR,qCAEE,EA+BUc,CAAcC,EAA5B,GACA,EAA8B5G,oBAA9B,sBAAM,EAAN,KAAM,EAAN,KACA,EAA4BA,oBAA5B,sBAAM,EAAN,KAAM,EAAN,KASA,OAPAH,qBAAU,kBAAMgH,GAAP,KAAyB,CAAlChH,IAQE,iCACIiH,GAAUC,GACV,mCACEA,MADF,EAEEX,OAFF,EAGEE,WAHF,EAIEhF,YAAWI,IACTuE,YADmB,6BAGhBA,YAAD,iBADF,WACsCI,GAHnB,cAIhBJ,YAAD,kBAFF,YAEuCI,GAJpB,cAKhBJ,YAAD,iBAHF,WAGsCI,GALnB,cAMhBJ,YAAD,kBAAqCe,GANpB,GAJvB,GAcEC,WAAU,CAAEC,SACZC,SAAQ,yBAAMN,GAfhB,IAgBEO,UAxBR,uBACEP,MACAQ,QAIA,IAsBGL,MACC,mCACE1F,YAAWI,IACTuE,YADmB,6BAGhBA,YAAD,iBADF,WACsCI,GAHnB,cAIhBJ,YAAD,kBAFF,YAEuCI,GAJpB,cAKhBJ,YAAD,iBAA8C,WAAVI,GALnB,OADvB,GAYE,iCAAiB,CAACvD,SAAD,cAAsB3D,WAAUoH,KAGpDO,MACC,mCACExF,YAAWI,IACTuE,YADmB,6BAGhBA,YAAD,iBADF,WACsCI,GAHnB,cAIhBJ,YAAD,kBAFF,YAEuCI,GAJpB,cAKhBJ,YAAD,iBAA8C,WAAVI,GALnB,OADvB,GAYE,iCAAiB,CAACvD,SAAD,WAAmB3D,WAAUqH,Q,mCClIxD,e,sBCAA,IAAIc,EAAWhD,EAAQ,KAmBvBE,EAAOC,QAVP,SAAS8C,0BAA0BC,GACjC,OAAO,SAASzI,EAAO0I,GAKrB,MAJsB,iBAAT1I,GAAqC,iBAAT0I,IACvC1I,EAAQuI,EAASvI,GACjB0I,EAAQH,EAASG,IAEZD,EAASzI,EAAO0I,M,8CCf3B,IAAIC,EAAapD,EAAQ,KACrBqD,EAAOrD,EAAQ,KAgCnBE,EAAOC,QAJP,SAASjF,OAAOoI,GACd,OAAiB,MAAVA,EAAiB,GAAKF,EAAWE,EAAQD,EAAKC,M,mCC9BvD,e,8CCAA,IAAIC,EAASvD,EAAQ,KA0BjBwD,EAzB4BxD,EAAQ,IAyB/BiD,CAA0BM,GAEnCrD,EAAOC,QAAUqD,G,oBCfjBtD,EAAOC,QAJP,SAASoD,OAAO9I,EAAO0I,GACrB,OAAO1I,EAAQ0I,I,oNCJjB,EAF4BM,6BAA5B,G,2yBCmBA,MAVA,SAASC,aAAaxG,GACd,IAAEF,EAAR,EAAQA,UAAR,gCAEA,OACE,gBAAC2G,EAAD,SAA6B,CAAClJ,QAAO,IACnC,oB,uYAAA,EAAMuC,YAAWI,IAAWuE,YAAD,qBAF/B,M,o3BC+DF,MAxDA,SAASiC,MAAM1G,GAAiB,MACxB,EAAN,EAAM,YAAN,EAEE2G,QAFI,EAAN,EAAM,MAAN,EAAM,MAAN,EAKEC,MALF,IAME7C,gBANF,MAAM,YAAN,EAOEpG,EAPF,EAOEA,SAPF,qCAUMkJ,EAAYC,qBAAlB,GACMC,OAAN,IAAoBpJ,EACdqJ,OAAN,IAAmBrJ,EACbiJ,EAAQK,QAAH,IAAX,EAEMN,EAAUtJ,mBACd,kBACE,OACI,IAAW,0BADf,GAFmB,IAKrB,CAAC6J,EALH,IAQMC,EACJ,oB,6ZAAA,EACErH,YAAWI,IACTuE,YADmB,oCAGhBA,YAAD,cADF,GAFmB,cAIhBA,YAAD,kBAFF,GAFmB,cAKhBA,YAAD,gBAAmCmC,GAHrC,GAFmB,cAMhBnC,YAAD,mBAJF,aAIwCV,GANrB,cAOhBU,YAAD,oBALF,cAKyCV,GAPtB,cAQhBU,YAAD,sBANF,gBAM2CV,GARxB,cAShBU,YAAD,uBAAuD,iBAAbV,GATzB,GADvB,GAcEpG,YAAWyJ,GAAOT,GAftB,IAoBA,SACE,EAIAjC,0BAEI0C,GAAD,IAHL,I,0vDCpDF,ICjBA,ECIc,wBAA8D,IAAtBpH,EAAsB,uDAAF,GACxE,OAAI,QAAJ,EACUqH,YAAD,OAA4B,gFAAkBD,OAAG,GAAxD,KAGE,QAAqB,IAAzB,GACUC,YAAD,OAA4B,gFAAkBV,UAASQ,GAA9D,KAGEG,YAAYH,EAAhB,GACUE,YAAD,OACLzH,uBAAauH,EAAD,0DADd,KAMME,YAAD,OAA4B3C,4EAAnC,MCpBF,EHkB2D6C,SADrDC,mBACqDD,GAAzD,OACCvH,YACO,IAAEF,EAAR,EAAQA,UAAR,oDACMF,EAbV,SAAS6H,oBAAoBF,GAC3B,OAAI5H,YAAJ,GACE,IAEEF,yBAAJ,GACE,oBADF,EASuBgI,CAArB,GAYA,OAVA,IACEF,EAAU3H,EAAa,E,ydAAD,EAGlBE,YAAWI,IAAWuE,YAAD,qBAHzB8C,KASK,gBAACd,EAAD,SAA6B,CAAClJ,QAAD,GAAYI,WAAU4J,MIrBxDb,EAAN,EAEAA,YAEA,O,sBClBA,IAAIgB,EAAW5E,EAAQ,KAkBvBE,EAAOC,QANP,SAASiD,WAAWE,EAAQpG,GAC1B,OAAO0H,EAAS1H,GAAO,SAAS2H,GAC9B,OAAOvB,EAAOuB,Q,sBCdlB,IAAIC,EAAc9E,EAAQ,KACtB+E,EAAc/E,EAAQ,KACtBgF,EAAWhF,EAAQ,KACnBY,EAAYZ,EAAQ,KACpB9E,EAAS8E,EAAQ,KAGjBiF,EAAYC,KAAKC,IA6CrBjF,EAAOC,QAbP,SAASiF,SAASC,EAAY5K,EAAO6K,EAAWC,GAC9CF,EAAaN,EAAYM,GAAcA,EAAanK,EAAOmK,GAC3DC,EAAaA,IAAcC,EAAS3E,EAAU0E,GAAa,EAE3D,IAAIpE,EAASmE,EAAWnE,OAIxB,OAHIoE,EAAY,IACdA,EAAYL,EAAU/D,EAASoE,EAAW,IAErCN,EAASK,GACXC,GAAapE,GAAUmE,EAAWG,QAAQ/K,EAAO6K,IAAc,IAC7DpE,GAAU4D,EAAYO,EAAY5K,EAAO6K,IAAc,I,sBCjDhE,IAAIG,EAAgBzF,EAAQ,KACxB0F,EAAY1F,EAAQ,KACpB2F,EAAgB3F,EAAQ,KAiB5BE,EAAOC,QANP,SAAS2E,YAAYc,EAAOnL,EAAO6K,GACjC,OAAO7K,GAAUA,EACbkL,EAAcC,EAAOnL,EAAO6K,GAC5BG,EAAcG,EAAOF,EAAWJ,K,oBCLtCpF,EAAOC,QAJP,SAASuF,UAAUjL,GACjB,OAAOA,GAAUA,I,oBCcnByF,EAAOC,QAZP,SAASwF,cAAcC,EAAOnL,EAAO6K,GAInC,IAHA,IAAI1H,EAAQ0H,EAAY,EACpBpE,EAAS0E,EAAM1E,SAEVtD,EAAQsD,GACf,GAAI0E,EAAMhI,KAAWnD,EACnB,OAAOmD,EAGX,OAAQ,I,u8BCLV,SAASiI,kBAAkB3I,GACzB,IAAM,EAAN,EAAM,MAASrC,EAAf,EAAeA,SACTiL,EAAsBC,YAAgBnE,oBAA5C,OACMgC,EAAQoC,YAAd,GAEA,OACE,kBAAoB,CAAChJ,YAAW2E,YAAgB,yBAAhD,EAEEC,kBAHJ,OA+CF,IA/BA,SAASqE,WAAW/I,GAAsB,MAClC,EAAN,EAAM,QAAN,EAAM,YAAN,EAAM,WAAN,EAAM,QAAN,EAAM,SAA+CgJ,EAArD,EAAqDA,QAArD,gCACA,EAA2ClC,qBAA3C,KAAM,EAAN,EAAQvJ,MAAoB0L,EAA5B,EAA4BA,WACtBC,EAASC,IAAf,EAEMC,EAAcjK,uBACjBkK,YACCL,cACAC,WAAa,CAAE1L,UAAO+L,aAAU3L,iBAElC,CAACA,EAAU2L,EAAUN,EAASC,EALhC,IAQA,OACE,oB,uYAAA,EACEnJ,YAAWI,IACTuE,YADmB,mCAGhBA,YAAD,uBADF,GAFmB,cAIhBA,YAAD,yBAA4C6E,GAJ3B,GADvB,GASEN,UAASI,GATX,GAYE,kCAAkB,CAACjC,QAAD,EAAexJ,WAAUA,O,mCC7DjD,YASM4L,EAAiBhD,wBAAvB,IAEA,O,mCCXA,sB,i3CCsFA,IC5EMiD,ED4CN,SAASA,QAAQxJ,GACf,IAAM,EAAN,EAAM,YAAN,EAAM,eAAN,EAGEzC,MAHI,EAAN,EAAM,SAKMkM,EALZ,EAKE9L,SALF,gCASA,EAAgC+L,YAAgB,CAAEnM,QAAF,EAAoB0B,mBAApE,IAAQ1B,aAAR,MAAM,EAAN,EAAmB2B,EAAnB,EAAmBA,SAEbvB,EA9CR,SAASgM,mBAAmBhM,GAC1B,OAAON,mBACL,kBACE,kBAAuB,cACrB,IAAKoC,yBAAL,GACE,SAEF,IAAMC,EAAN,EACA,GAAIA,SAAJ,IACE,SAEF,IAAM,EAAN,EAAM,IAAOM,EAAb,EAAaA,MACE4J,EAAf,EAAQrM,MAAR,gCACMA,EAAQqM,QAAH,EAAX,EACA,OAAOhK,uBAAaF,EAAS,cAAV,CACjBiI,MAAKA,QAAF,EADc,EAEjBpK,QAAOA,GAFT,SAMJ,CAnBF,IA6CiBoM,CAAjB,GAEMV,EAAa9J,uBAChB0K,YACC,IAAM,EAAN,EAAM,SAAYtM,EAAlB,EAAkBA,MAClB,IACE2B,KACAhB,WAAQ,EAARA,MAGJ,CAACA,EARH,IAWA,OACE,mCAAM4B,YAAWI,IAAWuE,YAAD,eAA3B,GACE,gBAAC8E,IAAD,SAAwB,CAAChM,QAAO,CAAEA,UAAO0L,gBAActL,WAAUA,MCtEvE6L,UAOA,O,6TCNA,EAF0BjD,wBAA1B,I,21BCyDA,MAjDA,SAASuD,iBAAiB9J,GAA4B,MAC9C,EAAN,EAAM,YAAN,EAAM,MAAN,IAA0BsJ,gBAA1B,SAAM,EAAN,EAAM,QAAN,EAAM,SAAuDN,EAA7D,EAA6DA,QAA7D,gCACA,EAAuDlC,qBAAvD,GAAM,EAAN,EAAM,aAAN,EAAoBvJ,MAAiBwM,EAArC,EAAqCA,cAE/Bb,EAAS7L,mBACb,kBAAO,OAAsB,MAAtB,GAAoDE,IADvC,IAEpB,CAACyM,EAFH,IAKMZ,EAAcjK,uBACjBkK,YACCL,cACAe,WAAgB,CACdb,UADc,EAEdI,aACA/L,UACAI,iBAGJ,CAACuL,EAAQvL,EAAU2L,EAAUN,EAASe,EAVxC,IAaA,OACE,oB,uYAAA,EACEjK,YAAWI,IACTuE,YADmB,YAEnBA,YAFmB,0CAIhBA,YAAD,gCADF,GAHmB,cAKhBA,YAAD,8BAAiDyE,GALhC,GADvB,GAUEe,QAVF,EAWEjB,UAASI,GAXX,KAiBIF,GACEgB,YAAiBC,EAAY,CAC3BrK,YAAW2E,YAAgB,gC,o4BC7BvC,MAdA,SAAS2F,cAAcpK,GACrB,IAAM,EAAN,EAAM,YAAN,EAAM,MAAN,KAA0BrC,SAA1B,8CACA,OACE,oB,qcAAA,EACEmC,YAAWI,IACTuE,YADmB,mBADvB,GAKE9G,WAAU0F,GANd,K,y4CC4BF,SAASgH,sBAAsB1M,EAA/B,GACE,IAAM2M,EAAmC,CACvCC,OADuC,GAEvCpN,UAAS,IA+BX,OA5BAqN,sBAA2B,cAEzB,GAAK/K,yBAAL,IAIA,IAAMC,EAAN,EAGA,GADoBA,EAApB,OACA,EAAmC,CACjC,IAawB,EAblB,EAAN,EAAM,IAAOM,EAAb,EAAaA,MACP,EAAN,EAAQzC,MAA2BkM,EAAnC,EAAyB9L,SAAzB,2CACMJ,EAAQqM,QAAH,EAAX,EAWA,GATAU,YACE1K,uBAAaF,EAAS,yBAAV,CACViI,MAAKA,QAAF,EADO,EAEVpK,QAFU,EAGVI,WAAU8L,GAJda,KASIG,IAAJ,GACEH,sCAzDR,SAASI,qBAAqB/M,GAC5B,IAAMR,EAAN,GAuBA,OAtBAqN,sBAA2B,cAEzB,GAAK/K,yBAAL,IAIA,IAAMC,EAAN,EAGA,GADoBA,EAApB,OACA,EAAsC,CACpC,IAAQiI,EAAR,EAAQA,IACRxK,OACEyC,uBAAaF,EAAS,CACpBiI,MAAKA,QAAF,EADiB,EAEpBgD,cAAahD,QAAF,EAFS,EAGpBiD,gBAAelK,UAInBvD,cAGJ,EAiCmCuN,CAA7BJ,UAIN,EAsFF,IC3JMO,EDqFN,SAASA,WAAW7K,GAClB,IAAM,EAAN,EAAM,YAAN,EAAM,kBAAN,EAGEyK,SAHI,EAAN,EAAM,eAAN,EAKElN,MALF,IAME4M,kBANF,MAMezF,0BANT,MAAN,EAAM,EAAN,EAOE/G,SAPI,EAAN,EAQEmN,YACUC,EATZ,EASE7M,SATF,2CAaA,EAAuDwL,YAAgB,CACrEnM,QADqE,EAErE0B,eAFqE,EAGrEf,WAAU8M,IAHZ,IAAQzN,MAAOkN,OAAf,MAAM,EAAN,EAAuCQ,EAAvC,EAA6B/L,SAM7B,EAAgCwK,YAAgB,CAC9CnM,QAD8C,EAE9C0B,iBACAf,WAAU6M,IAHZ,IAAQxN,aAAR,MAAM,EAAN,EAAmB2B,EAAnB,EAAmBA,SAMnB,EAA0BmL,sBAAsBZ,EAAhD,GAAM,EAAN,EAAM,KAAQtM,EAAd,EAAcA,QAER4M,EAAgB5K,uBACpB,YAAC,MAAiE,EAAjE,WAAiE,EAAjE,OAA2B+L,EAAsC,EAA7C3N,MACnB,OAGA,IAAM4N,EAAc,IAApB,GAIIjM,EAFJ,EACE,EACY3B,SAAV2B,GAEU3B,UAAwB6N,YAAD,OAAYA,IAA7ClM,KAGO3B,SAAT2B,OAAS3B,MAGb,CAACA,EAjBH,IAoBA,OACE,gBAAC8N,EAAD,SAA2B,CACzB9N,QAAO,CACL4M,eACA5M,UACAwM,oBAGF,8CAAMjK,YAAWI,IAAWuE,YAAD,mBAA3B,GACE,oBAAQ,CACN3E,YAAW2E,YADL,wBAENxF,eAFM,EAGN1B,QAHM,EAINW,WAAWoN,qBAAD,OAAYL,EAJhB,IAKNtN,WAAU4M,IAEZ,oBAAK,CAACzK,YAAW2E,YAAZ,wBAAqD9G,WAAUR,OCnJ5E0N,QACAA,WAOA,Q,oCCfA,SAASU,kBACP,OACE,8BACE,iBAAYC,IAAZ,CAAgBnI,QAAM,KAAtB,YACE,gBAAYoI,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAAG+L,YAAQ,EAArC,kBAGA,gBAAYmC,OAAZ,CAAmBlO,QAAO,EAA1B,qBAEF,iBAAYiO,IAAZ,CAAgBnI,QAAM,KAAtB,YACE,gBAAYoI,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,qBAEF,iBAAYiO,IAAZ,CAAgBnI,QAAM,KAAKiG,YAAQ,EAAnC,YACE,gBAAYmC,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,wBAMR,SAASmO,wBACP,OACE,kBAAYzM,eAAc,CAAC,EAAG,GAA9B,YACE,iBAAYuM,IAAZ,CAAgBnI,QAAM,KAAtB,YACE,gBAAYoI,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAAG+L,YAAQ,EAArC,kBAGA,gBAAYmC,OAAZ,CAAmBlO,QAAO,EAA1B,qBAEF,iBAAYiO,IAAZ,CAAgBnI,QAAM,KAAtB,YACE,gBAAYoI,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,qBAEF,iBAAYiO,IAAZ,CAAgBnI,QAAM,KAAKiG,YAAQ,EAAnC,YACE,gBAAYmC,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,wBAMR,SAASoO,8BACP,OACE,8BACE,gBAAYH,IAAZ,CAAgBnI,QAAM,OAAtB,WACE,mBAAOkC,MAAI,4CAEb,gBAAYiG,IAAZ,CAAgBnI,QAAM,OAAtB,WACE,mBAAOkC,MAAI,+CAMnB,SAASqG,kBACP,OACE,8BACE,iBAAYJ,IAAZ,CAAgBrE,SAAK,EAAC9D,QAAM,KAA5B,YACE,gBAAYoI,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAAG+L,YAAQ,EAArC,kBAGA,gBAAYmC,OAAZ,CAAmBlO,QAAO,EAA1B,qBAEF,iBAAYiO,IAAZ,CAAgBrE,QAAM,IAAI9D,QAAM,KAAhC,YACE,gBAAYoI,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,qBAEF,iBAAYiO,IAAZ,CAAgBnI,QAAM,KAAKiG,YAAQ,EAAnC,YACE,gBAAYmC,OAAZ,CAAmBlO,QAAO,EAA1B,kBACA,gBAAYkO,OAAZ,CAAmBlO,QAAO,EAA1B,kBAFF,UAQS,SAASsO,iBACtB,OACE,eAAC,IAAD,CAAMxI,QAAM,kBAAkBvD,YAAU,mBAAxC,YACE,cAAC,IAAD,CAAOuD,QAAM,OAAb,WACE,cAACkI,gBAAD,MAEF,cAAC,IAAD,CAAOlI,QAAM,OAAb,WACE,cAACqI,sBAAD,MAEF,cAAC,IAAD,CAAOrI,QAAM,QAAb,WACE,cAACsI,4BAAD,MAEF,cAAC,IAAD,CAAOtI,QAAM,OAAb,WACE,cAACuI,gBAAD","file":"chunk/55.8ead6aa2.js","sourcesContent":["import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as _ from \"lodash\"\r\nimport { ReactNode } from \"react\"\r\n\r\nexport interface CascaderOption extends ViewProps {\r\n  value?: any\r\n  label?: ReactNode\r\n  disabled?: boolean\r\n  children?: CascaderOption[]\r\n}\r\n\r\nexport function findCascadeOption(\r\n  options: CascaderOption[],\r\n  value: any,\r\n  defaultFirst: boolean = false,\r\n): CascaderOption | undefined {\r\n  const option = _.find(options, (option) => option.value === value)\r\n  return _.isUndefined(option) && defaultFirst ? _.first(options) : option\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { useEffect, useMemo } from \"react\"\r\nimport useToRef from \"../use-to-ref\"\r\nimport { CascaderOption, findCascadeOption } from \"./use-cascader.shared\"\r\n\r\ninterface UseCascadeSelectOptions {\r\n  data: CascaderOption[]\r\n  value: any[]\r\n  depth: number\r\n}\r\n\r\nfunction doCascadeSelect({ value: values, data: options }: UseCascadeSelectOptions) {\r\n  const newValues: any[] = []\r\n  const newColumns: CascaderOption[] = []\r\n  newColumns.push({ children: options })\r\n\r\n  let cursorOptions: CascaderOption[] = options\r\n  let depth = 0\r\n\r\n  for (;;) {\r\n    const value = _.get(values, depth)\r\n    const nextOption = findCascadeOption(cursorOptions, value, true)\r\n    if (_.isUndefined(nextOption)) {\r\n      break\r\n    }\r\n    const { value: newValue, children: nextOptions } = nextOption\r\n    newValues.push(newValue)\r\n    if (!nextOptions || _.isEmpty(nextOptions)) {\r\n      break\r\n    }\r\n    newColumns.push(nextOption)\r\n    cursorOptions = nextOptions\r\n    depth++\r\n  }\r\n\r\n  return [newColumns, newValues]\r\n}\r\n\r\nfunction useCascadeSelect(options: UseCascadeSelectOptions) {\r\n  const { value, data, depth } = options\r\n  return useMemo(\r\n    () =>\r\n      doCascadeSelect({\r\n        value,\r\n        data,\r\n        depth,\r\n      }),\r\n    [data, depth, value],\r\n  )\r\n}\r\n\r\nexport interface UseCascaderNewOptions {\r\n  value?: any[]\r\n  depth?: number\r\n  data?: CascaderOption[]\r\n\r\n  onChange?(value: any[]): void\r\n}\r\n\r\nexport interface CascaderObjectNew {\r\n  columns: CascaderOption[]\r\n}\r\n\r\nexport default function useCascaderNew({\r\n  value: values = [],\r\n  depth: maxDepth = 0,\r\n  data = [],\r\n  onChange,\r\n}: UseCascaderNewOptions): CascaderObjectNew {\r\n  maxDepth = _.clamp(maxDepth, 0, maxDepth)\r\n  const onChangeRef = useToRef(onChange)\r\n  const [columns, newValues] = useCascadeSelect({ value: values, depth: maxDepth, data })\r\n\r\n  useEffect(() => {\r\n    if (maxDepth !== 0 && maxDepth > _.size(columns)) {\r\n      _.range(maxDepth - _.size(columns))\r\n        .map(() => [])\r\n        .forEach((e) => columns.push(e))\r\n    }\r\n\r\n    if (!_.isEqual(values, newValues)) {\r\n      onChangeRef.current?.(newValues)\r\n    }\r\n  }, [columns, maxDepth, newValues, onChangeRef, values])\r\n\r\n  return {\r\n    columns,\r\n  }\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { CascaderOption, findCascadeOption } from \"./use-cascader.shared\"\r\n\r\nexport interface UseCascaderOldOptions {\r\n  value?: any[]\r\n  depth?: number\r\n  options?: CascaderOption[]\r\n}\r\n\r\nexport interface CascaderObjectOld {\r\n  columns: CascaderOption[][]\r\n}\r\n\r\nexport default function useCascaderOld({\r\n  value: values = [],\r\n  depth = 0,\r\n  options = [],\r\n}: UseCascaderOldOptions): CascaderObjectOld {\r\n  depth = _.clamp(depth, 0, depth)\r\n  const [columns, setColumns] = useState<CascaderOption[][]>([])\r\n\r\n  useEffect(() => {\r\n    const newColumns: CascaderOption[][] = []\r\n    newColumns.push(options)\r\n\r\n    if (!_.isEmpty(values)) {\r\n      let cursorOptions: CascaderOption[] = options\r\n\r\n      for (const value of values) {\r\n        const nextOption = findCascadeOption(cursorOptions, value)\r\n        if (_.isUndefined(nextOption)) {\r\n          break\r\n        }\r\n        const { children: nextOptions } = nextOption\r\n        if (!nextOptions || _.isEmpty(nextOptions)) {\r\n          break\r\n        }\r\n        cursorOptions = nextOptions\r\n        newColumns.push(nextOptions)\r\n      }\r\n    }\r\n    if (depth !== 0 && depth > _.size(newColumns)) {\r\n      _.range(depth - _.size(newColumns))\r\n        .map(() => [])\r\n        .forEach((e) => newColumns.push(e))\r\n    }\r\n    setColumns(newColumns)\r\n  }, [depth, options, values])\r\n\r\n  return {\r\n    columns,\r\n  }\r\n}\r\n","import useCascaderNew, { CascaderObjectNew, UseCascaderNewOptions } from \"./use-cascader.new\"\r\nimport useCascaderOld, { CascaderObjectOld, UseCascaderOldOptions } from \"./use-cascader.old\"\r\nimport { CascaderOption } from \"./use-cascader.shared\"\r\n\r\ninterface UseCascaderOptions {\r\n  options?: CascaderOption[]\r\n  data?: CascaderOption[]\r\n}\r\n\r\nfunction useCascader(options: UseCascaderOldOptions): CascaderObjectOld\r\nfunction useCascader(options: UseCascaderNewOptions): CascaderObjectNew\r\nfunction useCascader({ data, ...restOptions }: UseCascaderOptions) {\r\n  const useCompatibleCascader = data ? useCascaderNew : useCascaderOld\r\n  return useCompatibleCascader({\r\n    data,\r\n    ...restOptions,\r\n  })\r\n}\r\n\r\nexport default useCascader\r\n","import * as _ from \"lodash\"\r\nimport { useCallback, useMemo, useRef } from \"react\"\r\nimport useForceUpdate from \"../use-force-update\"\r\nimport useToRef from \"../use-to-ref\"\r\n\r\ninterface UseUncontrolledOptions<S> {\r\n  defaultValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\nexport default function useUncontrolled<S>(options: UseUncontrolledOptions<S> = {}) {\r\n  const { defaultValue, value: valueProp, onChange } = options\r\n  const forceUpdate = useForceUpdate()\r\n  //\r\n  const valueRef = useToRef(valueProp)\r\n  const stateRef = useRef(defaultValue ?? valueRef.current)\r\n\r\n  if (valueRef.current !== undefined) {\r\n    stateRef.current = valueRef.current\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(valueRef.current)) {\r\n        stateRef.current = newValue\r\n        forceUpdate()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({\r\n      value: stateRef.current,\r\n      getValue,\r\n      setValue,\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","import { MutableRefObject, useRef } from \"react\"\r\n\r\nexport default function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n","import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useForceUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useForceUpdate\r\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","import * as _ from \"lodash\"\r\nimport { isValidElement, JSXElementConstructor, ReactElement, ReactNode } from \"react\"\r\n\r\nexport function isNoneElement(node: ReactNode) {\r\n  return _.isUndefined(node) || _.isNull(node)\r\n}\r\n\r\nexport function isTextElement(node: ReactNode) {\r\n  return _.isNumber(node) || _.isString(node)\r\n}\r\n\r\nexport function isObjectElement(node?: ReactNode) {\r\n  return !isValidElement(node) && _.isObject(node) && !_.isArray(node)\r\n}\r\n\r\nexport function isElementOf(node?: ReactNode, type?: JSXElementConstructor<any>) {\r\n  if (isValidElement(node)) {\r\n    const element = node as ReactElement\r\n    if (element.type === type) {\r\n      return true\r\n    }\r\n\r\n    const displayName = _.get(element.type, \"displayName\")\r\n    if (\r\n      _.isFunction(element.type) &&\r\n      !_.isEmpty(displayName) &&\r\n      _.endsWith(displayName, _.get(type, \"displayName\"))\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport useForceUpdate from \"../use-force-update\"\r\nimport useToRef from \"../use-to-ref\"\r\nimport { AreaData, AreaDivision, getAreaData } from \"./area.shared\"\r\n\r\nexport type AreaFormatter = (record?: Record<string, string>, prefix?: any) => AreaDivision[]\r\n\r\nconst DEFAULT_AREA_DATA: AreaData = {\r\n  province_list: {},\r\n  city_list: {},\r\n  county_list: {},\r\n}\r\n\r\nfunction defaultFormatter(list?: Record<string, string>): AreaDivision[] {\r\n  let index = 0\r\n  return _.map(list, (label, value) => ({ index: index++, value, label, children: label }))\r\n}\r\n\r\nfunction padAreaPrefixToValue(prefix: any) {\r\n  return _.padEnd(prefix, 6, \"0\")\r\n}\r\n\r\nfunction filterAreaList(list?: Record<string, string>, prefix?: string) {\r\n  const newRecord: Record<string, string> = {}\r\n  _.forEach(list, (name, code) => {\r\n    if (_.startsWith(code, prefix)) {\r\n      newRecord[code] = name\r\n    }\r\n  })\r\n  return newRecord\r\n}\r\n\r\nfunction getAreaPrefix(value: any, depth: number) {\r\n  return value?.substring(0, depth * 2)\r\n}\r\n\r\nfunction getFirstDivisionPrefix(divisions: AreaDivision[], depth: number) {\r\n  return getAreaPrefix(_.first(divisions)?.value, depth)\r\n}\r\n\r\nfunction getAreaPrefixDivision(\r\n  prefixes: string[],\r\n  divisions: AreaDivision[],\r\n  values: any[],\r\n  index: number,\r\n): AreaDivision {\r\n  const value = _.get(values, index)\r\n  const depth = index + 1\r\n  const valuePrefix = getAreaPrefix(value, depth)\r\n\r\n  if (index === 0) {\r\n    prefixes[index] = valuePrefix ?? getFirstDivisionPrefix(divisions, depth)\r\n  } else {\r\n    const valueSuperiorPrefix = value?.substring(0, index * 2)\r\n    const superiorPrefix = prefixes[index - 1]\r\n    // Easy to debug code\r\n    if (superiorPrefix !== valueSuperiorPrefix) {\r\n      prefixes[index] = getFirstDivisionPrefix(divisions, depth)\r\n    } else {\r\n      prefixes[index] = valuePrefix\r\n    }\r\n  }\r\n  const valuePad = padAreaPrefixToValue(prefixes[index])\r\n  return _.find(divisions, (division) => division.value === valuePad) as AreaDivision\r\n}\r\n\r\ninterface UseAreaSelectOptions {\r\n  data: AreaData\r\n  unverifiedValues: any[]\r\n  depth: number\r\n\r\n  formatter: AreaFormatter\r\n}\r\n\r\nfunction doAreaSelect(options: UseAreaSelectOptions) {\r\n  const { unverifiedValues, data: dataPrimitive, depth, formatter } = options\r\n  const data = getAreaData(dataPrimitive, depth)\r\n  //\r\n  const prefixes: string[] = []\r\n  const columns: AreaDivision[] = []\r\n  const nextValueOptions: AreaDivision[] = []\r\n  const nextValues: string[] = []\r\n\r\n  _.forEach(data, (record, index) => {\r\n    // const divisions = formatter?.(index === 0 ? record : filterAreaList(record, prefixes[index - 1]))\r\n    // Easy to debug code\r\n    let divisions: AreaDivision[]\r\n    if (index === 0) {\r\n      divisions = formatter?.(record)\r\n    } else {\r\n      divisions = formatter?.(filterAreaList(record, prefixes[index - 1]))\r\n    }\r\n    const division = getAreaPrefixDivision(prefixes, divisions, unverifiedValues, index)\r\n    nextValueOptions[index] = division\r\n    nextValues[index] = division.value\r\n    columns[index] = {\r\n      index,\r\n      children: divisions,\r\n    }\r\n  })\r\n  return {\r\n    columns,\r\n    values: nextValues,\r\n    valueOptions: nextValueOptions,\r\n  }\r\n}\r\n\r\nfunction useAreaSelect(options: UseAreaSelectOptions) {\r\n  const { unverifiedValues, data, depth, formatter } = options\r\n  return useMemo(\r\n    () =>\r\n      doAreaSelect({\r\n        unverifiedValues,\r\n        data,\r\n        depth,\r\n        formatter,\r\n      }),\r\n    [data, depth, formatter, unverifiedValues],\r\n  )\r\n}\r\n\r\nfunction useAreaValues(value: any | any[]) {\r\n  return useMemo(() => (_.isArray(value) ? value : [value]), [value])\r\n}\r\n\r\ninterface UseAreaOptions {\r\n  depth?: number\r\n  data?: AreaData\r\n\r\n  formatter?: AreaFormatter\r\n}\r\n\r\nexport default function useArea(unverifiedValue: any[] = [], options: UseAreaOptions = {}) {\r\n  const { data = DEFAULT_AREA_DATA, depth = 3, formatter = defaultFormatter } = options\r\n  const unverifiedValueRef = useRef(unverifiedValue)\r\n  const forceUpdate = useForceUpdate()\r\n  const unverifiedValues = useAreaValues(unverifiedValueRef.current)\r\n  //\r\n  const { columns, values, valueOptions } = useAreaSelect({\r\n    unverifiedValues,\r\n    data,\r\n    depth,\r\n    formatter,\r\n  })\r\n  //\r\n  const valuesRef = useToRef(values)\r\n  const valueOptionsRef = useToRef(valueOptions)\r\n  const getValues = useCallback(() => valuesRef.current, [valuesRef])\r\n  const getValueOptions = useCallback(() => valueOptionsRef.current, [valueOptionsRef])\r\n\r\n  const setValues = useCallback(\r\n    (newValues: any[]) => {\r\n      unverifiedValueRef.current = newValues\r\n      forceUpdate()\r\n    },\r\n    [forceUpdate],\r\n  )\r\n  //\r\n  useEffect(() => {\r\n    if (!_.isEqual(valuesRef.current, unverifiedValue)) {\r\n      setValues(unverifiedValue)\r\n    }\r\n  }, [setValues, unverifiedValue, valuesRef])\r\n  //\r\n  return useMemo(\r\n    () => ({\r\n      columns,\r\n      values,\r\n      valueOptions,\r\n      getValues,\r\n      getValueOptions,\r\n      setValues,\r\n    }),\r\n    [columns, getValueOptions, getValues, setValues, valueOptions, values],\r\n  )\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { ReactNode } from \"react\"\r\n\r\nexport interface AreaData {\r\n  province_list: Record<string, string>\r\n  city_list: Record<string, string>\r\n  county_list: Record<string, string>\r\n}\r\n\r\nexport interface AreaDivision extends Record<any, any> {\r\n  index: number\r\n  value?: any\r\n  label?: ReactNode\r\n  children?: AreaDivision[] | ReactNode\r\n}\r\n\r\nexport function getAreaData(data: AreaData, maxDepth: number) {\r\n  const { province_list, city_list, county_list } = data\r\n  const dataArray: Record<any, any>[] = []\r\n  if (maxDepth >= 1 && !_.isEmpty(province_list)) {\r\n    dataArray.push(province_list)\r\n    if (maxDepth >= 2 && !_.isEmpty(city_list)) {\r\n      dataArray.push(city_list)\r\n      if (maxDepth >= 3 && !_.isEmpty(county_list)) {\r\n        dataArray.push(county_list)\r\n      }\r\n    }\r\n  }\r\n  return dataArray\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nmodule.exports = isNull;\n","var baseClamp = require('./_baseClamp'),\n    baseToString = require('./_baseToString'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Checks if `string` ends with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @example\n *\n * _.endsWith('abc', 'c');\n * // => true\n *\n * _.endsWith('abc', 'b');\n * // => false\n *\n * _.endsWith('abc', 'b', 2);\n * // => true\n */\nfunction endsWith(string, target, position) {\n  string = toString(string);\n  target = baseToString(target);\n\n  var length = string.length;\n  position = position === undefined\n    ? length\n    : baseClamp(toInteger(position), 0, length);\n\n  var end = position;\n  position -= target.length;\n  return position >= 0 && string.slice(position, end) == target;\n}\n\nmodule.exports = endsWith;\n","// type LogLevel = \"debug\" | \"info\" | \"warn\" | \"error\"\r\n\r\n// export function configure(level: LogLevel) {\r\n//   if (level === \"debug\") {\r\n//     logLevel = debugLevel\r\n//   }\r\n// }\r\n\r\nconst debugLevel = 1\r\nconst infoLevel = debugLevel << 2\r\nconst warnLevel = infoLevel << 2\r\n\r\nconst logConfig = {\r\n  level: debugLevel,\r\n}\r\n\r\nexport function getLogger(name: string) {\r\n  return {\r\n    warn(message?: any, ...optionalParams: any[]) {\r\n      if (logConfig.level <= warnLevel) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`Taroify - ${name} : ${message}`, ...optionalParams)\r\n      }\r\n    },\r\n  }\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function ImagePlaceholder(props: ImagePlaceholderProps): JSX.Element {\r\n  const { prefix = \"placeholder\", children } = props\r\n  // Icon Element\r\n  if (isValidElement(children)) {\r\n    return cloneElement(children as ReactElement, {\r\n      className: classNames(\r\n        prefixClassname(`image__${prefix}`),\r\n        prefixClassname(`image__${prefix}-icon`),\r\n      ),\r\n    })\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useEffect, useMemo, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getLogger } from \"../utils/logger\"\r\nimport ImagePlaceholder from \"./image-placeholder\"\r\nimport { ImageMode, ImageShape } from \"./image.shared\"\r\n\r\nconst { warn } = getLogger(\"Image\")\r\n\r\nfunction useImageMode(mode: ImageMode) {\r\n  return useMemo(() => {\r\n    if (mode === \"topLeft\") {\r\n      return \"top left\"\r\n    }\r\n    if (mode === \"topRight\") {\r\n      return \"top right\"\r\n    }\r\n    if (mode === \"bottomLeft\") {\r\n      return \"bottom left\"\r\n    }\r\n    if (mode === \"bottomRight\") {\r\n      return \"bottom right\"\r\n    }\r\n    return mode\r\n  }, [mode])\r\n}\r\n\r\nfunction useImageShape(shape?: ImageShape, round?: boolean) {\r\n  if (_.isBoolean(round) && round) {\r\n    shape = \"circle\"\r\n    warn(`Use the shape=\"${shape}\" prop instead of the round prop`)\r\n    if (round) {\r\n      return shape\r\n    }\r\n  }\r\n  return shape\r\n}\r\n\r\nexport interface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  shape?: ImageShape\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round,\r\n    shape: shapeProp,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = useImageMode(mode)\r\n  const shape = useImageShape(shapeProp, round)\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => setLoading(true), [src])\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onLoad={() => setLoading(false)}\r\n          onError={handleError}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n            },\r\n            className,\r\n          )}\r\n          {...restProps}\r\n        >\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n            },\r\n            className,\r\n          )}\r\n          {...restProps}\r\n        >\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var toNumber = require('./toNumber');\n\n/**\n * Creates a function that performs a relational operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @returns {Function} Returns the new relational operation function.\n */\nfunction createRelationalOperation(operator) {\n  return function(value, other) {\n    if (!(typeof value == 'string' && typeof other == 'string')) {\n      value = toNumber(value);\n      other = toNumber(other);\n    }\n    return operator(value, other);\n  };\n}\n\nmodule.exports = createRelationalOperation;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var baseGt = require('./_baseGt'),\n    createRelationalOperation = require('./_createRelationalOperation');\n\n/**\n * Checks if `value` is greater than `other`.\n *\n * @static\n * @memberOf _\n * @since 3.9.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n * @see _.lt\n * @example\n *\n * _.gt(3, 1);\n * // => true\n *\n * _.gt(3, 3);\n * // => false\n *\n * _.gt(1, 3);\n * // => false\n */\nvar gt = createRelationalOperation(baseGt);\n\nmodule.exports = gt;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;\n","import { createContext } from \"react\"\r\n\r\ninterface BadgeWrapperContextValue {}\r\n\r\nconst BadgeWrapperContext = createContext<BadgeWrapperContextValue | undefined>(undefined)\r\n\r\nexport default BadgeWrapperContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport BadgeWrapperContext from \"./badge-wrapper.context\"\r\n\r\nexport interface BadgeWrapperProps extends ViewProps {\r\n  style?: CSSProperties\r\n  children?: ReactNode\r\n}\r\n\r\nfunction BadgeWrapper(props: BadgeWrapperProps) {\r\n  const { className, ...restProps } = props\r\n\r\n  return (\r\n    <BadgeWrapperContext.Provider value={{}}>\r\n      <View className={classNames(prefixClassname(\"badge-wrapper\"), className)} {...restProps} />\r\n    </BadgeWrapperContext.Provider>\r\n  )\r\n}\r\n\r\nexport default BadgeWrapper\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport BadgeWrapper from \"./badge-wrapper\"\r\nimport BadgeWrapperContext from \"./badge-wrapper.context\"\r\n\r\nexport type BadgePosition = \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\"\r\n\r\nexport interface BadgeProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  content?: ReactNode\r\n  fixed?: boolean\r\n  dot?: boolean\r\n  max?: number\r\n  position?: BadgePosition\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Badge(props: BadgeProps): JSX.Element {\r\n  const {\r\n    className,\r\n    content: contentProp,\r\n    max,\r\n    dot,\r\n    fixed: fixedProp,\r\n    position = \"top-right\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const inWrapper = useContext(BadgeWrapperContext)\r\n  const hasChildren = children !== undefined\r\n  const noChildren = children === undefined\r\n  const fixed = fixedProp ?? !!inWrapper\r\n\r\n  const content = useMemo(\r\n    () =>\r\n      _.isNumber(contentProp)\r\n        ? _.toString(_.gt(contentProp, max) ? `${max}+` : contentProp)\r\n        : contentProp,\r\n    [contentProp, max],\r\n  )\r\n\r\n  const badge = (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"badge__badge\"),\r\n        {\r\n          [prefixClassname(\"badge--dot\")]: dot,\r\n          [prefixClassname(\"badge--content\")]: content,\r\n          [prefixClassname(\"badge--fixed\")]: fixed || hasChildren,\r\n          [prefixClassname(\"badge--top-left\")]: position === \"top-left\",\r\n          [prefixClassname(\"badge--top-right\")]: position === \"top-right\",\r\n          [prefixClassname(\"badge--bottom-left\")]: position === \"bottom-left\",\r\n          [prefixClassname(\"badge--bottom-right\")]: position === \"bottom-right\",\r\n        },\r\n        className,\r\n      )}\r\n      children={!dot && content}\r\n      {...restProps}\r\n    />\r\n  )\r\n\r\n  if (noChildren) {\r\n    return badge\r\n  }\r\n\r\n  return (\r\n    <BadgeWrapper>\r\n      {children}\r\n      {(dot || content) && badge}\r\n    </BadgeWrapper>\r\n  )\r\n}\r\n\r\nexport default Badge\r\n","import { IconProps } from \"@taroify/icons/shared\"\r\nimport { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, isValidElement, PropsWithChildren, ReactElement, ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport BadgeWrapperContext from \"./badge-wrapper.context\"\r\n\r\nfunction acquireCloneElement(wrapper: ReactNode) {\r\n  if (isIconElement(wrapper)) {\r\n    return cloneIconElement\r\n  }\r\n  if (isValidElement(wrapper)) {\r\n    return cloneElement\r\n  }\r\n}\r\n\r\nconst createBadgeWrapper =\r\n  <P extends StandardProps = PropsWithChildren<ViewProps>>(wrapper: ReactNode) =>\r\n  (props: P): JSX.Element => {\r\n    const { className, ...restProps } = props\r\n    const cloneElement = acquireCloneElement(wrapper)\r\n\r\n    if (cloneElement) {\r\n      wrapper = cloneElement(\r\n        wrapper as ReactElement,\r\n        {\r\n          className: classNames(prefixClassname(\"badge-wrapper\"), className),\r\n          ...restProps,\r\n        } as IconProps,\r\n      )\r\n    }\r\n\r\n    return <BadgeWrapperContext.Provider value={{}} children={wrapper} />\r\n  }\r\n\r\nexport default createBadgeWrapper\r\n","import { default as useBadge } from \"./create-badge\"\r\n\r\nexport default useBadge\r\n","import * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, ReactElement, ReactNode } from \"react\"\r\nimport { isElementOf } from \"../utils/validate\"\r\nimport Badge, { BadgeProps } from \"./badge\"\r\n\r\nexport default function createBadge(badge: ReactNode, props: BadgeProps = {}) {\r\n  if (_.isBoolean(badge) && badge) {\r\n    return (badgeProps: BadgeProps) => <Badge {...props} dot {...badgeProps} />\r\n  }\r\n\r\n  if (_.isNumber(badge) || _.isString(badge)) {\r\n    return (badgeProps: BadgeProps) => <Badge {...props} content={badge} {...badgeProps} />\r\n  }\r\n\r\n  if (isElementOf(badge, Badge)) {\r\n    return (badgeProps: BadgeProps) =>\r\n      cloneElement(badge as ReactElement, {\r\n        ...props,\r\n        ...badgeProps,\r\n      })\r\n  }\r\n  return (badgeProps: BadgeProps) => <Badge {...props} {...badgeProps} />\r\n}\r\n","import { default as useBadgeWrapper } from \"./create-badge-wrapper\"\r\n\r\nexport default useBadgeWrapper\r\n","import { FunctionComponent } from \"react\"\r\nimport BadgeComponent, { BadgeProps } from \"./badge\"\r\nimport BadgeWrapper from \"./badge-wrapper\"\r\n\r\nexport { default as createBadge } from \"./create-badge\"\r\nexport { default as createBadgeWrapper } from \"./create-badge-wrapper\"\r\n\r\nexport { default as useBadge } from \"./use-badge\"\r\nexport { default as useBadgeWrapper } from \"./use-badge-wrapper\"\r\n\r\ninterface BadgeInterface extends FunctionComponent<BadgeProps> {\r\n  Wrapper: typeof BadgeWrapper\r\n}\r\n\r\nconst Badge = BadgeComponent as BadgeInterface\r\n\r\nBadge.Wrapper = BadgeWrapper\r\n\r\nexport default Badge\r\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseIndexOf = require('./_baseIndexOf'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    toInteger = require('./toInteger'),\n    values = require('./values');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useCallback, useContext } from \"react\"\r\nimport { useBadge, useBadgeWrapper } from \"../badge\"\r\nimport SidebarContext from \"../sidebar/sidebar.context\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface SidebarTabContentProps {\r\n  badge?: boolean | string | number | ReactNode\r\n  children: ReactNode\r\n}\r\n\r\nfunction SidebarTabContent(props: SidebarTabContentProps) {\r\n  const { badge, children } = props\r\n  const ContentBadgeWrapper = useBadgeWrapper(<View />)\r\n  const Badge = useBadge(badge)\r\n\r\n  return (\r\n    <ContentBadgeWrapper className={prefixClassname(\"sidebar-tab__content\")}>\r\n      {children}\r\n      <Badge />\r\n    </ContentBadgeWrapper>\r\n  )\r\n}\r\n\r\ninterface SidebarTabProps extends ViewProps {\r\n  className?: string\r\n  value?: any\r\n  disabled?: boolean\r\n  badge?: boolean | string | number | ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction SidebarTab(props: SidebarTabProps) {\r\n  const { value, className, disabled, badge, children, onClick, ...restProps } = props\r\n  const { value: activeValue, onTabClick } = useContext(SidebarContext)\r\n  const active = activeValue === value\r\n\r\n  const handleClick = useCallback(\r\n    (event: ITouchEvent) => {\r\n      onClick?.(event)\r\n      onTabClick?.({ value, disabled, children })\r\n    },\r\n    [children, disabled, onClick, onTabClick, value],\r\n  )\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"sidebar-tab\"),\r\n        {\r\n          [prefixClassname(\"sidebar-tab--active\")]: active,\r\n          [prefixClassname(\"sidebar-tab--disabled\")]: disabled,\r\n        },\r\n        className,\r\n      )}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      <SidebarTabContent badge={badge} children={children} />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default SidebarTab\r\n","import { createContext } from \"react\"\r\nimport { SidebarTabObject } from \"./sidebar-tab.shared\"\r\n\r\ninterface SidebarContextProps {\r\n  value?: any\r\n\r\n  onTabClick?(tab: SidebarTabObject): void\r\n}\r\n\r\nconst SidebarContext = createContext<SidebarContextProps>({})\r\n\r\nexport default SidebarContext\r\n","import \"../../styles/style\"\r\nimport \"../../badge/style\"\r\nimport \"../index.scss\"\r\n","import { useUncontrolled } from \"@taroify/hooks\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport SidebarTab from \"./sidebar-tab\"\r\nimport { SidebarTabObject } from \"./sidebar-tab.shared\"\r\nimport SidebarContext from \"./sidebar.context\"\r\n\r\nfunction useSidebarChildren(children: ReactNode) {\r\n  return useMemo(\r\n    () =>\r\n      Children.map(children, (node: ReactNode, index) => {\r\n        if (!isValidElement(node)) {\r\n          return node\r\n        }\r\n        const element = node as ReactElement\r\n        if (element.type !== SidebarTab) {\r\n          return element\r\n        }\r\n        const { key, props } = element\r\n        const { value: oldValue, ...restProps } = props\r\n        const value = oldValue ?? index\r\n        return cloneElement(element, {\r\n          key: key ?? value,\r\n          value: value,\r\n          ...restProps,\r\n        })\r\n      }),\r\n    [children],\r\n  )\r\n}\r\n\r\nexport interface SidebarProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  defaultValue?: any\r\n  value?: any\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any, tab: SidebarTabObject): void\r\n}\r\n\r\nfunction Sidebar(props: SidebarProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    onChange,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useUncontrolled({ value: valueProp, defaultValue })\r\n\r\n  const children = useSidebarChildren(childrenProp)\r\n\r\n  const onTabClick = useCallback(\r\n    (tab: SidebarTabObject) => {\r\n      const { disabled, value } = tab\r\n      if (!disabled) {\r\n        setValue(value)\r\n        onChange?.(value, tab)\r\n      }\r\n    },\r\n    [onChange, setValue],\r\n  )\r\n\r\n  return (\r\n    <View className={classNames(prefixClassname(\"sidebar\"), className)} {...restProps}>\r\n      <SidebarContext.Provider value={{ value, onTabClick }} children={children} />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import SidebarElement, { SidebarProps } from \"./sidebar\"\r\nimport SidebarTab from \"./sidebar-tab\"\r\nimport { SidebarTabObject } from \"./sidebar-tab.shared\"\r\n\r\ninterface SidebarInterface {\r\n  (props: SidebarProps): JSX.Element\r\n\r\n  Tab: typeof SidebarTab\r\n}\r\n\r\nconst Sidebar = SidebarElement as SidebarInterface\r\nSidebar.Tab = SidebarTab\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Sidebar {\r\n  export type TabObject = SidebarTabObject\r\n}\r\n\r\nexport default Sidebar\r\n","import { createContext, ReactNode } from \"react\"\r\nimport { TreeSelectOptionObject } from \"./tree-select.shared\"\r\n\r\ninterface TreeSelectContextValue {\r\n  activeIcon?: ReactNode\r\n  value?: any | any[]\r\n\r\n  onOptionClick?(event: TreeSelectOptionObject): void\r\n}\r\n\r\nconst TreeSelectContext = createContext<TreeSelectContextValue>({})\r\n\r\nexport default TreeSelectContext\r\n","import { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useCallback, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TreeSelectContext from \"./tree-select.context\"\r\n\r\ninterface TreeSelectOptionProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  disabled?: boolean\r\n  value?: any\r\n  children?: ReactNode\r\n}\r\n\r\nfunction TreeSelectOption(props: TreeSelectOptionProps) {\r\n  const { className, style, disabled = false, value, children, onClick, ...restProps } = props\r\n  const { activeIcon, value: ctxValue, onOptionClick } = useContext(TreeSelectContext)\r\n\r\n  const active = useMemo(\r\n    () => (_.isArray(ctxValue) ? _.includes(ctxValue, value) : value === ctxValue),\r\n    [ctxValue, value],\r\n  )\r\n\r\n  const handleClick = useCallback(\r\n    (event: ITouchEvent) => {\r\n      onClick?.(event)\r\n      onOptionClick?.({\r\n        active: !active,\r\n        disabled,\r\n        value,\r\n        children,\r\n      })\r\n    },\r\n    [active, children, disabled, onClick, onOptionClick, value],\r\n  )\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"ellipsis\"), //\r\n        prefixClassname(\"tree-select-option\"),\r\n        {\r\n          [prefixClassname(\"tree-select-option--disabled\")]: disabled,\r\n          [prefixClassname(\"tree-select-option--active\")]: active,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n      {\r\n        //\r\n        active &&\r\n          cloneIconElement(activeIcon, {\r\n            className: prefixClassname(\"tree-select-option__icon\"),\r\n          })\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default TreeSelectOption\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport SidebarTab from \"../sidebar/sidebar-tab\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface TreeSelectTabProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  value?: any\r\n  disabled?: boolean\r\n  badge?: boolean | string | number | ReactNode\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction TreeSelectTab(props: TreeSelectTabProps) {\r\n  const { className, title, children, ...restProps } = props\r\n  return (\r\n    <SidebarTab\r\n      className={classNames(\r\n        prefixClassname(\"tree-select-tab\"), //\r\n        className,\r\n      )}\r\n      children={title}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TreeSelectTab\r\n","import { useUncontrolled } from \"@taroify/hooks\"\r\nimport { Success } from \"@taroify/icons\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { Children, cloneElement, isValidElement, ReactElement, ReactNode, useCallback } from \"react\"\r\nimport Sidebar from \"../sidebar\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TreeSelectOption from \"./tree-select-option\"\r\nimport TreeSelectTab from \"./tree-select-tab\"\r\nimport TreeSelectContext from \"./tree-select.context\"\r\nimport { TreeSelectOptionObject, TreeSelectTabObject } from \"./tree-select.shared\"\r\n\r\ninterface TreeSelectChildren {\r\n  tabs: ReactNode[]\r\n  options: ReactNode[]\r\n}\r\n\r\nfunction getTreeSelectOptions(children: ReactNode) {\r\n  const options: ReactNode[] = []\r\n  Children.forEach(children, (child: ReactNode, index) => {\r\n    // Skip is not Option of TreeSelect\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n\r\n    const element = child as ReactElement\r\n\r\n    const elementType = element.type\r\n    if (elementType === TreeSelectOption) {\r\n      const { key } = element\r\n      options.push(\r\n        cloneElement(element, {\r\n          key: key ?? index,\r\n          __dataKey__: key ?? index,\r\n          __dataIndex__: index,\r\n        }),\r\n      )\r\n    } else {\r\n      options.push(element)\r\n    }\r\n  })\r\n  return options\r\n}\r\n\r\nfunction useTreeSelectChildren(children: ReactNode, tabValue?: any): TreeSelectChildren {\r\n  const __children__: TreeSelectChildren = {\r\n    tabs: [],\r\n    options: [],\r\n  }\r\n\r\n  Children.forEach(children, (child: ReactNode, index) => {\r\n    // Skip is not Tab of TreeSelect\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n\r\n    const element = child as ReactElement\r\n\r\n    const elementType = element.type\r\n    if (elementType === TreeSelectTab) {\r\n      const { key, props } = element\r\n      const { value: oldValue, children: childrenProp, ...restProps } = props\r\n      const value = oldValue ?? index\r\n\r\n      __children__.tabs.push(\r\n        cloneElement(element, {\r\n          key: key ?? value,\r\n          value: value,\r\n          children: childrenProp,\r\n          ...restProps,\r\n        }),\r\n      )\r\n\r\n      if (tabValue === value) {\r\n        __children__.options.push(...getTreeSelectOptions(childrenProp))\r\n      }\r\n    }\r\n  })\r\n  return __children__\r\n}\r\n\r\nexport interface TreeSelectProps extends ViewProps {\r\n  defaultTabValue?: any\r\n  tabValue?: any\r\n  defaultValue?: any | any[]\r\n  value?: any | any[]\r\n  activeIcon?: ReactNode\r\n  children?: ReactNode\r\n\r\n  onTabChange?(value: any, tabObject: TreeSelectTabObject): void\r\n\r\n  onChange?(values: any | any[]): void\r\n}\r\n\r\nfunction TreeSelect(props: TreeSelectProps) {\r\n  const {\r\n    className,\r\n    defaultTabValue,\r\n    tabValue: tabValueProp,\r\n    defaultValue,\r\n    value: valueProp,\r\n    activeIcon = <Success />,\r\n    children: childrenProp,\r\n    onTabChange: onTabChangeProp,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value: tabValue = 0, setValue: setTabValue } = useUncontrolled({\r\n    value: tabValueProp,\r\n    defaultValue: defaultTabValue,\r\n    onChange: onTabChangeProp,\r\n  })\r\n\r\n  const { value = 0, setValue } = useUncontrolled({\r\n    value: valueProp,\r\n    defaultValue,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const { tabs, options } = useTreeSelectChildren(childrenProp, tabValue)\r\n\r\n  const onOptionClick = useCallback(\r\n    ({ disabled, active, value: evtValue }: TreeSelectOptionObject) => {\r\n      if (disabled) {\r\n        return\r\n      }\r\n      const multiselect = _.isArray(value)\r\n\r\n      if (multiselect) {\r\n        if (active) {\r\n          setValue((value as any[]).concat(evtValue))\r\n        } else {\r\n          setValue((value as any[]).filter((aValue) => aValue !== evtValue))\r\n        }\r\n      } else {\r\n        setValue(value === evtValue && !active ? undefined : evtValue)\r\n      }\r\n    },\r\n    [value, setValue],\r\n  )\r\n\r\n  return (\r\n    <TreeSelectContext.Provider\r\n      value={{\r\n        activeIcon,\r\n        value,\r\n        onOptionClick,\r\n      }}\r\n    >\r\n      <View className={classNames(prefixClassname(\"tree-select\"), className)} {...restProps}>\r\n        <Sidebar\r\n          className={prefixClassname(\"tree-select__sidebar\")}\r\n          defaultValue={defaultTabValue}\r\n          value={tabValue}\r\n          onChange={(newTab) => setTabValue(newTab)}\r\n          children={tabs}\r\n        />\r\n        <View className={prefixClassname(\"tree-select__content\")} children={options} />\r\n      </View>\r\n    </TreeSelectContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TreeSelect\r\n","import TreeSelectElement, { TreeSelectProps } from \"./tree-select\"\r\nimport TreeSelectOption from \"./tree-select-option\"\r\nimport TreeSelectTab from \"./tree-select-tab\"\r\nimport { TreeSelectTabObject } from \"./tree-select.shared\"\r\n\r\ninterface TreeSelectInterface {\r\n  (props: TreeSelectProps): JSX.Element\r\n\r\n  Tab: typeof TreeSelectTab\r\n  Option: typeof TreeSelectOption\r\n}\r\n\r\nconst TreeSelect = TreeSelectElement as TreeSelectInterface\r\n\r\nTreeSelect.Tab = TreeSelectTab\r\nTreeSelect.Option = TreeSelectOption\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace TreeSelect {\r\n  export type TabObject = TreeSelectTabObject\r\n}\r\n\r\nexport default TreeSelect\r\n","import { Image, TreeSelect } from \"@taroify/core\"\r\nimport * as React from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\n\r\nimport \"./index.scss\"\r\n\r\nfunction RadioTreeSelect() {\r\n  return (\r\n    <TreeSelect>\r\n      <TreeSelect.Tab title=\"浙江\">\r\n        <TreeSelect.Option value={0}>杭州</TreeSelect.Option>\r\n        <TreeSelect.Option value={1}>温州</TreeSelect.Option>\r\n        <TreeSelect.Option value={2} disabled>\r\n          宁波\r\n        </TreeSelect.Option>\r\n        <TreeSelect.Option value={3}>义乌</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"江苏\">\r\n        <TreeSelect.Option value={4}>南京</TreeSelect.Option>\r\n        <TreeSelect.Option value={5}>无锡</TreeSelect.Option>\r\n        <TreeSelect.Option value={6}>徐州</TreeSelect.Option>\r\n        <TreeSelect.Option value={7}>苏州</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"福建\" disabled>\r\n        <TreeSelect.Option value={8}>泉州</TreeSelect.Option>\r\n        <TreeSelect.Option value={9}>厦门</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n    </TreeSelect>\r\n  )\r\n}\r\n\r\nfunction MultiselectTreeSelect() {\r\n  return (\r\n    <TreeSelect defaultValue={[0, 1]}>\r\n      <TreeSelect.Tab title=\"浙江\">\r\n        <TreeSelect.Option value={0}>杭州</TreeSelect.Option>\r\n        <TreeSelect.Option value={1}>温州</TreeSelect.Option>\r\n        <TreeSelect.Option value={2} disabled>\r\n          宁波\r\n        </TreeSelect.Option>\r\n        <TreeSelect.Option value={3}>义乌</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"江苏\">\r\n        <TreeSelect.Option value={4}>南京</TreeSelect.Option>\r\n        <TreeSelect.Option value={5}>无锡</TreeSelect.Option>\r\n        <TreeSelect.Option value={6}>徐州</TreeSelect.Option>\r\n        <TreeSelect.Option value={7}>苏州</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"福建\" disabled>\r\n        <TreeSelect.Option value={8}>泉州</TreeSelect.Option>\r\n        <TreeSelect.Option value={9}>厦门</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n    </TreeSelect>\r\n  )\r\n}\r\n\r\nfunction TreeSelectWithCustomContent() {\r\n  return (\r\n    <TreeSelect>\r\n      <TreeSelect.Tab title=\"分组 1\">\r\n        <Image src=\"https://img.yzcdn.cn/vant/apple-1.jpg\" />\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"分组 2\">\r\n        <Image src=\"https://img.yzcdn.cn/vant/apple-2.jpg\" />\r\n      </TreeSelect.Tab>\r\n    </TreeSelect>\r\n  )\r\n}\r\n\r\nfunction BadgeTreeSelect() {\r\n  return (\r\n    <TreeSelect>\r\n      <TreeSelect.Tab badge title=\"浙江\">\r\n        <TreeSelect.Option value={0}>杭州</TreeSelect.Option>\r\n        <TreeSelect.Option value={1}>温州</TreeSelect.Option>\r\n        <TreeSelect.Option value={2} disabled>\r\n          宁波\r\n        </TreeSelect.Option>\r\n        <TreeSelect.Option value={3}>义乌</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab badge=\"5\" title=\"江苏\">\r\n        <TreeSelect.Option value={4}>南京</TreeSelect.Option>\r\n        <TreeSelect.Option value={5}>无锡</TreeSelect.Option>\r\n        <TreeSelect.Option value={6}>徐州</TreeSelect.Option>\r\n        <TreeSelect.Option value={7}>苏州</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"福建\" disabled>\r\n        <TreeSelect.Option value={8}>泉州</TreeSelect.Option>\r\n        <TreeSelect.Option value={9}>厦门</TreeSelect.Option>n\r\n      </TreeSelect.Tab>\r\n    </TreeSelect>\r\n  )\r\n}\r\n\r\nexport default function TreeSelectDemo() {\r\n  return (\r\n    <Page title=\"TreeSelect 分类选择\" className=\"tree-select-demo\">\r\n      <Block title=\"单选模式\">\r\n        <RadioTreeSelect />\r\n      </Block>\r\n      <Block title=\"多选模式\">\r\n        <MultiselectTreeSelect />\r\n      </Block>\r\n      <Block title=\"自定义内容\">\r\n        <TreeSelectWithCustomContent />\r\n      </Block>\r\n      <Block title=\"徽标提示\">\r\n        <BadgeTreeSelect />\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}