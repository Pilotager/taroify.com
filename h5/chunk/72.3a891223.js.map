{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toNumber.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isBoolean.js","webpack:///./src/components/block.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseTrim.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_trimmedEndIndex.js","webpack:///../../../../packages/core/src/utils/logger.ts","webpack:///../../../../packages/core/src/image/image-placeholder.tsx","webpack:///../../../../packages/core/src/image/image.tsx","webpack:///../../../../packages/core/src/image/style/index.ts","webpack:///../../../../packages/core/src/flex/flex.context.ts","webpack:///../../../../packages/core/src/flex/flex.tsx","webpack:///../../../../packages/core/src/flex/index.ts","webpack:///../../../../packages/core/src/flex/flex-item.tsx","webpack:///../../../../packages/core/src/flex/style/index.ts","webpack:///./src/pages/basic/image/index.tsx"],"names":["value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertRpx","getSystemInfoSync","windowWidth","convertPx","convertVw","convertVh","baseTrim","require","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","module","exports","toNumber","other","valueOf","isBinary","test","slice","baseGetTag","isObjectLike","isBoolean","Block","props","className","variant","title","children","classNames","demoPrefixClassname","trimmedEndIndex","reTrimStart","string","replace","reWhitespace","index","length","charAt","logConfig","warn","infoLevel","optionalParams","console","deprecated","prefix","isValidElement","cloneElement","prefixClassname","React","getLogger","mode","shape","lazyLoad","placeholder","fallback","onError","taroMode","useImageMode","useMemo","useImageShape","shapeProp","useState","useEffect","setLoading","handleLoad","useCallback","onLoad","handleError","setFailed","failed","src","loading","imgProps","alt","createContext","gutter","undefined","Flex","forwardRef","direction","wrap","justify","align","useFlexGutter","gutterNumber","gutterStyle","averagePadding","ref","style","FlexContext","offset","gutters","useContext","horizontalGutter","span","ImageDemo","imageUrl","modes","map","Item","round"],"mappings":"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","file":"chunk/72.3a891223.js","sourcesContent":["import { getSystemInfoSync } from \"@tarojs/taro\"\r\nimport * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertRpx(value: string) {\r\n  value = value.replace(/rpx/g, \"\")\r\n  const { windowWidth } = getSystemInfoSync()\r\n  const pixelRatio = 750 / windowWidth\r\n  return +value / pixelRatio\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"rpx\")) {\r\n    return convertRpx(value)\r\n  }\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","// type LogLevel = \"debug\" | \"info\" | \"warn\" | \"error\"\r\n\r\n// export function configure(level: LogLevel) {\r\n//   if (level === \"debug\") {\r\n//     logLevel = debugLevel\r\n//   }\r\n// }\r\n\r\nconst debugLevel = 1\r\nconst infoLevel = debugLevel << 2\r\nconst warnLevel = infoLevel << 2\r\n\r\nconst logConfig = {\r\n  level: debugLevel,\r\n}\r\n\r\nexport function getLogger(name: string) {\r\n  return {\r\n    warn(message?: any, ...optionalParams: any[]) {\r\n      if (logConfig.level <= warnLevel) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`Taroify - ${name} : ${message}`, ...optionalParams)\r\n      }\r\n    },\r\n\r\n    deprecated(message?: any, ...optionalParams: any[]) {\r\n      if (logConfig.level <= warnLevel) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`[Deprecated] Taroify - ${name} : ${message}`, ...optionalParams)\r\n      }\r\n    },\r\n  }\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function ImagePlaceholder(props: ImagePlaceholderProps): JSX.Element {\r\n  const { prefix = \"placeholder\", children } = props\r\n  // Icon Element\r\n  if (isValidElement(children)) {\r\n    return cloneElement(children as ReactElement, {\r\n      className: classNames(\r\n        prefixClassname(`image__${prefix}`),\r\n        prefixClassname(`image__${prefix}-icon`),\r\n      ),\r\n    })\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useCallback, useEffect, useMemo, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getLogger } from \"../utils/logger\"\r\nimport ImagePlaceholder from \"./image-placeholder\"\r\nimport { ImageMode, ImageShape } from \"./image.shared\"\r\n\r\nconst { warn } = getLogger(\"Image\")\r\n\r\nfunction useImageMode(mode: ImageMode) {\r\n  return useMemo(() => {\r\n    if (mode === \"topLeft\") {\r\n      return \"top left\"\r\n    }\r\n    if (mode === \"topRight\") {\r\n      return \"top right\"\r\n    }\r\n    if (mode === \"bottomLeft\") {\r\n      return \"bottom left\"\r\n    }\r\n    if (mode === \"bottomRight\") {\r\n      return \"bottom right\"\r\n    }\r\n    return mode\r\n  }, [mode])\r\n}\r\n\r\nfunction useImageShape(shape?: ImageShape, round?: boolean) {\r\n  if (_.isBoolean(round) && round) {\r\n    shape = \"circle\"\r\n    warn(`Use the shape=\"${shape}\" prop instead of the round prop`)\r\n    if (round) {\r\n      return shape\r\n    }\r\n  }\r\n  return shape\r\n}\r\n\r\nexport interface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  shape?: ImageShape\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n\r\n  onLoad?(): void\r\n\r\n  onError?(): void\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round,\r\n    shape: shapeProp,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    onLoad,\r\n    onError,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = useImageMode(mode)\r\n  const shape = useImageShape(shapeProp, round)\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => setLoading(true), [src])\r\n\r\n  const handleLoad = useCallback(() => {\r\n    onLoad?.()\r\n    setLoading(false)\r\n  }, [onLoad])\r\n\r\n  const handleError = useCallback(() => {\r\n    onError?.()\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }, [onError])\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onLoad={handleLoad}\r\n          onError={handleError}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n            },\r\n            className,\r\n          )}\r\n          {...restProps}\r\n        >\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n            },\r\n            className,\r\n          )}\r\n          {...restProps}\r\n        >\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface FlexContextValue {\r\n  gutter: [number | undefined, number | undefined]\r\n}\r\n\r\nconst FlexContext = createContext<FlexContextValue>({\r\n  gutter: [undefined, undefined],\r\n})\r\n\r\nexport default FlexContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, forwardRef, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\nimport { FlexAlign, FlexDirection, FlexGutter, FlexJustify, FlexWrap } from \"./flex.shared\"\r\n\r\nfunction useFlexGutter(gutter?: FlexGutter): [undefined | number, undefined | number] {\r\n  return useMemo(() => {\r\n    if (gutter === undefined) {\r\n      return [undefined, undefined]\r\n    }\r\n\r\n    if (_.isNumber(gutter)) {\r\n      return [gutter, gutter]\r\n    }\r\n\r\n    if (_.isString(gutter)) {\r\n      const gutterNumber = _.toNumber(gutter)\r\n      return [gutterNumber, gutterNumber]\r\n    }\r\n\r\n    if (_.isArray(gutter)) {\r\n      const [horizontalGutter, verticalGutter] = gutter\r\n      return [_.toNumber(horizontalGutter), _.toNumber(verticalGutter)]\r\n    }\r\n\r\n    return [0, 0]\r\n  }, [gutter])\r\n}\r\n\r\nexport interface FlexProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: FlexDirection\r\n  wrap?: FlexWrap\r\n  justify?: FlexJustify\r\n  align?: FlexAlign\r\n  gutter?: FlexGutter\r\n  children?: ReactNode\r\n}\r\n\r\nconst Flex = forwardRef((props: FlexProps, ref) => {\r\n  const {\r\n    className,\r\n    style,\r\n    gutter: gutterProp,\r\n    direction = \"row\",\r\n    wrap = \"nowrap\",\r\n    justify = \"start\",\r\n    align = \"start\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const gutter = useFlexGutter(gutterProp)\r\n  const [horizontalGutter] = gutter\r\n\r\n  const gutterStyle = useMemo<CSSProperties>(() => {\r\n    const gutterStyle: CSSProperties = {}\r\n    if (horizontalGutter) {\r\n      const averagePadding = _.toNumber(horizontalGutter) / 2\r\n      gutterStyle.marginLeft = addUnitPx(-averagePadding)\r\n      gutterStyle.marginRight = addUnitPx(-averagePadding)\r\n    }\r\n    return {}\r\n  }, [horizontalGutter])\r\n\r\n  return (\r\n    <View\r\n      ref={ref}\r\n      className={classNames(\r\n        prefixClassname(\"flex\"),\r\n        {\r\n          // Set flex style\r\n          [prefixClassname(\"flex--row\")]: direction === \"row\",\r\n          [prefixClassname(\"flex--row-reverse\")]: direction === \"row-reverse\",\r\n          [prefixClassname(\"flex--column\")]: direction === \"column\",\r\n          [prefixClassname(\"flex--column-reverse\")]: direction === \"column-reverse\",\r\n          // Set flex-wrap style\r\n          [prefixClassname(\"flex--nowrap\")]: wrap === \"nowrap\",\r\n          [prefixClassname(\"flex--wrap\")]: wrap === \"wrap\",\r\n          [prefixClassname(\"flex--wrap-reverse\")]: wrap === \"wrap-reverse\",\r\n          // Set justify style\r\n          [prefixClassname(\"flex--justify-start\")]: justify === \"start\",\r\n          [prefixClassname(\"flex--justify-center\")]: justify === \"center\",\r\n          [prefixClassname(\"flex--justify-end\")]: justify === \"end\",\r\n          [prefixClassname(\"flex--justify-space-around\")]: justify === \"space-around\",\r\n          [prefixClassname(\"flex--justify-space-between\")]: justify === \"space-between\",\r\n          // Set align style\r\n          [prefixClassname(\"flex--align-start\")]: align === \"start\",\r\n          [prefixClassname(\"flex--align-center\")]: align === \"center\",\r\n          [prefixClassname(\"flex--align-end\")]: align === \"end\",\r\n          [prefixClassname(\"flex--align-baseline\")]: align === \"baseline\",\r\n          [prefixClassname(\"flex--align-stretch\")]: align === \"stretch\",\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    >\r\n      <FlexContext.Provider\r\n        value={{\r\n          gutter,\r\n        }}\r\n        children={children}\r\n      />\r\n    </View>\r\n  )\r\n})\r\n\r\nexport default Flex\r\n","import { ForwardRefExoticComponent } from \"react\"\r\nimport FlexComponent, { FlexProps } from \"./flex\"\r\nimport FlexItem from \"./flex-item\"\r\n\r\nexport type { FlexProps } from \"./flex\"\r\nexport type { FlexAlign, FlexDirection, FlexJustify } from \"./flex.shared\"\r\nexport type { FlexItemProps } from \"./flex-item\"\r\n\r\ninterface FlexInterface extends ForwardRefExoticComponent<FlexProps> {\r\n  Item: typeof FlexItem\r\n}\r\n\r\nconst Flex = FlexComponent as FlexInterface\r\n\r\nFlex.Item = FlexItem\r\n\r\nexport default Flex\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\n\r\nexport interface FlexItemProps extends ViewProps {\r\n  style?: CSSProperties\r\n  span?: number\r\n  offset?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function FlexItem(props: FlexItemProps) {\r\n  const { className, style, span, offset, ...restProps } = props\r\n  const { gutter: gutters } = useContext(FlexContext)\r\n  const [horizontalGutter] = gutters\r\n\r\n  // Horizontal gutter use padding\r\n  const gutterStyle: React.CSSProperties = {}\r\n  if (horizontalGutter) {\r\n    const averagePadding = horizontalGutter / 2\r\n    gutterStyle.paddingLeft = addUnitPx(averagePadding)\r\n    gutterStyle.paddingRight = addUnitPx(averagePadding)\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex-item\"),\r\n        {\r\n          [prefixClassname(`flex-item-${span}`)]: span !== undefined,\r\n          [prefixClassname(`flex-item-offset-${offset}`)]: offset !== undefined,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { Flex, Image } from \"@taroify/core\"\r\nimport { ImageMode } from \"@taroify/core/image\"\r\nimport { Photo, PhotoFail } from \"@taroify/icons\"\r\nimport { Text } from \"@tarojs/components\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nexport default function ImageDemo() {\r\n  const imageUrl = \"https://img01.yzcdn.cn/vant/cat.jpeg\"\r\n\r\n  const modes: ImageMode[] = [\r\n    \"scaleToFill\",\r\n    \"aspectFit\",\r\n    \"aspectFill\",\r\n    \"widthFix\",\r\n    \"heightFix\",\r\n    \"top\",\r\n    \"bottom\",\r\n    \"center\",\r\n    \"left\",\r\n    \"right\",\r\n    \"topLeft\",\r\n    \"topRight\",\r\n    \"bottomLeft\",\r\n    \"bottomRight\",\r\n  ]\r\n\r\n  return (\r\n    <Page title=\"Image 图片\" className=\"image-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Image className=\"basic-image\" src={imageUrl} />\r\n      </Block>\r\n      <Block title=\"填充模式\">\r\n        <Flex wrap=\"wrap\" gutter={20}>\r\n          {modes.map((mode) => (\r\n            <Flex.Item span={8} key={mode}>\r\n              <Image mode={mode} src={imageUrl} />\r\n              <Text className=\"text\">{mode}</Text>\r\n            </Flex.Item>\r\n          ))}\r\n        </Flex>\r\n      </Block>\r\n      <Block title=\"圆形图片\">\r\n        <Flex wrap=\"wrap\" gutter={20}>\r\n          {modes.map((mode) => (\r\n            <Flex.Item span={8} key={mode}>\r\n              <Image mode={mode} src={imageUrl} round />\r\n              <Text className=\"text\">{mode}</Text>\r\n            </Flex.Item>\r\n          ))}\r\n        </Flex>\r\n      </Block>\r\n      <Block title=\"加载中提示\">\r\n        <Flex wrap=\"wrap\" gutter={20}>\r\n          <Flex.Item span={8}>\r\n            <Image placeholder={<Photo />} />\r\n            <Text className=\"text\">默认提示</Text>\r\n          </Flex.Item>\r\n          <Flex.Item span={8}>\r\n            <Image placeholder=\"加载中...\" />\r\n            <Text className=\"text\">自定义提示</Text>\r\n          </Flex.Item>\r\n        </Flex>\r\n      </Block>\r\n      <Block title=\"加载失败提示\">\r\n        <Flex wrap=\"wrap\" gutter={20}>\r\n          <Flex.Item span={8}>\r\n            <Image src=\"error\" fallback={<PhotoFail />} />\r\n            <Text className=\"text\">默认提示</Text>\r\n          </Flex.Item>\r\n          <Flex.Item span={8}>\r\n            <Image src=\"error\" fallback=\"加载失败\" />\r\n            <Text className=\"text\">自定义提示</Text>\r\n          </Flex.Item>\r\n        </Flex>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}