{"version":3,"sources":["webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.shared.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.new.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.old.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.ts","webpack:///../../../../packages/hooks/src/use-uncontrolled/use-uncontrolled.ts","webpack:///../../../../packages/hooks/src/use-to-ref/use-to-ref.ts","webpack:///../../../../packages/hooks/src/use-force-update/use-force-update.ts","webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/hooks/src/use-area/use-area.ts","webpack:///../../../../packages/hooks/src/use-area/area.shared.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isBoolean.js","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/cell/cell-group.context.ts","webpack:///../../../../packages/core/src/cell/cell-base.tsx","webpack:///../../../../packages/core/src/cell/cell-brief.tsx","webpack:///../../../../packages/core/src/cell/cell-title.tsx","webpack:///../../../../packages/core/src/cell/cell-value.tsx","webpack:///../../../../packages/core/src/cell/cell.tsx","webpack:///../../../../packages/core/src/cell/cell-group.tsx","webpack:///../../../../packages/core/src/cell/index.ts","webpack:///../../../../packages/core/src/cell/style/index.ts","webpack:///../../../../packages/core/src/utils/logger.ts","webpack:///../../../../packages/core/src/image/image-placeholder.tsx","webpack:///../../../../packages/core/src/image/image.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_copyArray.js","webpack:///../../../../packages/core/src/image/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/values.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toArray.js","webpack:///../../../../packages/core/src/flex/flex.context.ts","webpack:///../../../../packages/core/src/flex/flex.tsx","webpack:///../../../../packages/core/src/flex/index.ts","webpack:///../../../../packages/core/src/flex/flex-item.tsx","webpack:///../../../../packages/core/src/flex/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseValues.js","webpack:///../../../../packages/core/src/checkbox/checkbox-group.context.ts","webpack:///../../../../packages/core/src/checkbox/checkbox-group.tsx","webpack:///../../../../packages/core/src/checkbox/index.ts","webpack:///../../../../packages/core/src/checkbox/checkbox.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_iteratorToArray.js","webpack:///../../../../packages/core/src/space/style/index.ts","webpack:///../../../../packages/core/src/space/index.ts","webpack:///../../../../packages/core/src/space/space.tsx","webpack:///../../../../packages/core/src/checkbox/style/index.ts","webpack:///./src/pages/form/checkbox/index.tsx"],"names":["defaultFirst","option","useCascadeSelect","options","depth","useMemo","doCascadeSelect","value","data","newValues","newColumns","children","cursorOptions","nextOption","findCascadeOption","nextOptions","values","maxDepth","onChange","onChangeRef","useToRef","useEffect","e","columns","useState","setColumns","useCascader","useCascaderNew","forceUpdate","useForceUpdate","valueRef","stateRef","useRef","defaultValue","setValue","useCallback","emitChange","getValue","updateReducer","num","useReducer","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","isValidElement","element","isIconElement","cloneElement","node","className","oldProps","props","newProps","classNames","DEFAULT_AREA_DATA","province_list","city_list","county_list","defaultFormatter","list","index","label","getAreaPrefix","getFirstDivisionPrefix","divisions","getAreaPrefixDivision","valuePrefix","prefixes","valueSuperiorPrefix","superiorPrefix","valuePad","padAreaPrefixToValue","prefix","division","doAreaSelect","formatter","dataArray","getAreaData","dataPrimitive","nextValueOptions","nextValues","filterAreaList","newRecord","record","unverifiedValues","valueOptions","useAreaSelect","useAreaValues","unverifiedValue","unverifiedValueRef","valuesRef","valueOptionsRef","getValues","getValueOptions","setValues","baseGetTag","require","isObjectLike","module","exports","isBoolean","Block","variant","title","demoPrefixClassname","createContext","CellBase","clickable","clickableProp","required","bordered","useContext","prefixClassname","align","icon","cloneIconElement","rightIcon","CellBrief","CellTitle","CellValue","alone","inset","CellGroupContext","Cell","brief","logConfig","warn","infoLevel","optionalParams","console","React","getLogger","mode","shape","lazyLoad","placeholder","fallback","taroMode","useImageMode","useImageShape","shapeProp","setLoading","failed","src","loading","imgProps","alt","onLoad","onError","setFailed","copyArray","source","array","length","Array","baseValues","keys","object","Symbol","getTag","isArrayLike","isString","iteratorToArray","mapToArray","setToArray","stringToArray","symIterator","iterator","undefined","toArray","tag","gutter","Flex","forwardRef","direction","wrap","justify","useFlexGutter","gutterNumber","gutterStyle","averagePadding","ref","style","FlexContext","offset","gutters","horizontalGutter","span","arrayMap","key","CheckboxGroup","onChangeProp","useUncontrolled","CheckboxGroupContext","max","Checkbox","checked","namesMax","onNamesChange","checkedProp","names","onClick","aName","disabled","result","next","done","push","item","CheckboxWithCustomIcon","CheckboxDemo","defaultChecked","Group","name"],"mappings":"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","file":"chunk/59.1f03225f.js","sourcesContent":["import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as _ from \"lodash\"\r\nimport { ReactNode } from \"react\"\r\n\r\nexport interface CascaderOption extends ViewProps {\r\n  value?: any\r\n  label?: ReactNode\r\n  disabled?: boolean\r\n  children?: CascaderOption[]\r\n}\r\n\r\nexport function findCascadeOption(\r\n  options: CascaderOption[],\r\n  value: any,\r\n  defaultFirst: boolean = false,\r\n): CascaderOption | undefined {\r\n  const option = _.find(options, (option) => option.value === value)\r\n  return _.isUndefined(option) && defaultFirst ? _.first(options) : option\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { useEffect, useMemo } from \"react\"\r\nimport useToRef from \"../use-to-ref\"\r\nimport { CascaderOption, findCascadeOption } from \"./use-cascader.shared\"\r\n\r\ninterface UseCascadeSelectOptions {\r\n  data: CascaderOption[]\r\n  value: any[]\r\n  depth: number\r\n}\r\n\r\nfunction doCascadeSelect({ value: values, data: options }: UseCascadeSelectOptions) {\r\n  const newValues: any[] = []\r\n  const newColumns: CascaderOption[] = []\r\n  newColumns.push({ children: options })\r\n\r\n  let cursorOptions: CascaderOption[] = options\r\n  let depth = 0\r\n\r\n  for (;;) {\r\n    const value = _.get(values, depth)\r\n    const nextOption = findCascadeOption(cursorOptions, value, true)\r\n    if (_.isUndefined(nextOption)) {\r\n      break\r\n    }\r\n    const { value: newValue, children: nextOptions } = nextOption\r\n    newValues.push(newValue)\r\n    if (!nextOptions || _.isEmpty(nextOptions)) {\r\n      break\r\n    }\r\n    newColumns.push(nextOption)\r\n    cursorOptions = nextOptions\r\n    depth++\r\n  }\r\n\r\n  return [newColumns, newValues]\r\n}\r\n\r\nfunction useCascadeSelect(options: UseCascadeSelectOptions) {\r\n  const { value, data, depth } = options\r\n  return useMemo(\r\n    () =>\r\n      doCascadeSelect({\r\n        value,\r\n        data,\r\n        depth,\r\n      }),\r\n    [data, depth, value],\r\n  )\r\n}\r\n\r\nexport interface UseCascaderNewOptions {\r\n  value?: any[]\r\n  depth?: number\r\n  data?: CascaderOption[]\r\n\r\n  onChange?(value: any[]): void\r\n}\r\n\r\nexport interface CascaderObjectNew {\r\n  columns: CascaderOption[]\r\n}\r\n\r\nexport default function useCascaderNew({\r\n  value: values = [],\r\n  depth: maxDepth = 0,\r\n  data = [],\r\n  onChange,\r\n}: UseCascaderNewOptions): CascaderObjectNew {\r\n  maxDepth = _.clamp(maxDepth, 0, maxDepth)\r\n  const onChangeRef = useToRef(onChange)\r\n  const [columns, newValues] = useCascadeSelect({ value: values, depth: maxDepth, data })\r\n\r\n  useEffect(() => {\r\n    if (maxDepth !== 0 && maxDepth > _.size(columns)) {\r\n      _.range(maxDepth - _.size(columns))\r\n        .map(() => [])\r\n        .forEach((e) => columns.push(e))\r\n    }\r\n\r\n    if (!_.isEqual(values, newValues)) {\r\n      onChangeRef.current?.(newValues)\r\n    }\r\n  }, [columns, maxDepth, newValues, onChangeRef, values])\r\n\r\n  return {\r\n    columns,\r\n  }\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { CascaderOption, findCascadeOption } from \"./use-cascader.shared\"\r\n\r\nexport interface UseCascaderOldOptions {\r\n  value?: any[]\r\n  depth?: number\r\n  options?: CascaderOption[]\r\n}\r\n\r\nexport interface CascaderObjectOld {\r\n  columns: CascaderOption[][]\r\n}\r\n\r\nexport default function useCascaderOld({\r\n  value: values = [],\r\n  depth = 0,\r\n  options = [],\r\n}: UseCascaderOldOptions): CascaderObjectOld {\r\n  depth = _.clamp(depth, 0, depth)\r\n  const [columns, setColumns] = useState<CascaderOption[][]>([])\r\n\r\n  useEffect(() => {\r\n    const newColumns: CascaderOption[][] = []\r\n    newColumns.push(options)\r\n\r\n    if (!_.isEmpty(values)) {\r\n      let cursorOptions: CascaderOption[] = options\r\n\r\n      for (const value of values) {\r\n        const nextOption = findCascadeOption(cursorOptions, value)\r\n        if (_.isUndefined(nextOption)) {\r\n          break\r\n        }\r\n        const { children: nextOptions } = nextOption\r\n        if (!nextOptions || _.isEmpty(nextOptions)) {\r\n          break\r\n        }\r\n        cursorOptions = nextOptions\r\n        newColumns.push(nextOptions)\r\n      }\r\n    }\r\n    if (depth !== 0 && depth > _.size(newColumns)) {\r\n      _.range(depth - _.size(newColumns))\r\n        .map(() => [])\r\n        .forEach((e) => newColumns.push(e))\r\n    }\r\n    setColumns(newColumns)\r\n  }, [depth, options, values])\r\n\r\n  return {\r\n    columns,\r\n  }\r\n}\r\n","import useCascaderNew, { CascaderObjectNew, UseCascaderNewOptions } from \"./use-cascader.new\"\r\nimport useCascaderOld, { CascaderObjectOld, UseCascaderOldOptions } from \"./use-cascader.old\"\r\nimport { CascaderOption } from \"./use-cascader.shared\"\r\n\r\ninterface UseCascaderOptions {\r\n  options?: CascaderOption[]\r\n  data?: CascaderOption[]\r\n}\r\n\r\nfunction useCascader(options: UseCascaderOldOptions): CascaderObjectOld\r\nfunction useCascader(options: UseCascaderNewOptions): CascaderObjectNew\r\nfunction useCascader({ data, ...restOptions }: UseCascaderOptions) {\r\n  const useCompatibleCascader = data ? useCascaderNew : useCascaderOld\r\n  return useCompatibleCascader({\r\n    data,\r\n    ...restOptions,\r\n  })\r\n}\r\n\r\nexport default useCascader\r\n","import * as _ from \"lodash\"\r\nimport { useCallback, useMemo, useRef } from \"react\"\r\nimport useForceUpdate from \"../use-force-update\"\r\nimport useToRef from \"../use-to-ref\"\r\n\r\ninterface UseUncontrolledOptions<S> {\r\n  defaultValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\nexport default function useUncontrolled<S>(options: UseUncontrolledOptions<S> = {}) {\r\n  const { defaultValue, value: valueProp, onChange } = options\r\n  const forceUpdate = useForceUpdate()\r\n  //\r\n  const valueRef = useToRef(valueProp)\r\n  const stateRef = useRef(defaultValue ?? valueRef.current)\r\n\r\n  if (valueRef.current !== undefined) {\r\n    stateRef.current = valueRef.current\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(valueRef.current)) {\r\n        stateRef.current = newValue\r\n        forceUpdate()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({\r\n      value: stateRef.current,\r\n      getValue,\r\n      setValue,\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","import { MutableRefObject, useRef } from \"react\"\r\n\r\nexport default function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n","import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useForceUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useForceUpdate\r\n","import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","import * as _ from \"lodash\"\r\nimport { useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport useForceUpdate from \"../use-force-update\"\r\nimport useToRef from \"../use-to-ref\"\r\nimport { AreaData, AreaDivision, getAreaData } from \"./area.shared\"\r\n\r\nexport type AreaFormatter = (record?: Record<string, string>, prefix?: any) => AreaDivision[]\r\n\r\nconst DEFAULT_AREA_DATA: AreaData = {\r\n  province_list: {},\r\n  city_list: {},\r\n  county_list: {},\r\n}\r\n\r\nfunction defaultFormatter(list?: Record<string, string>): AreaDivision[] {\r\n  let index = 0\r\n  return _.map(list, (label, value) => ({ index: index++, value, label, children: label }))\r\n}\r\n\r\nfunction padAreaPrefixToValue(prefix: any) {\r\n  return _.padEnd(prefix, 6, \"0\")\r\n}\r\n\r\nfunction filterAreaList(list?: Record<string, string>, prefix?: string) {\r\n  const newRecord: Record<string, string> = {}\r\n  _.forEach(list, (name, code) => {\r\n    if (_.startsWith(code, prefix)) {\r\n      newRecord[code] = name\r\n    }\r\n  })\r\n  return newRecord\r\n}\r\n\r\nfunction getAreaPrefix(value: any, depth: number) {\r\n  return value?.substring(0, depth * 2)\r\n}\r\n\r\nfunction getFirstDivisionPrefix(divisions: AreaDivision[], depth: number) {\r\n  return getAreaPrefix(_.first(divisions)?.value, depth)\r\n}\r\n\r\nfunction getAreaPrefixDivision(\r\n  prefixes: string[],\r\n  divisions: AreaDivision[],\r\n  values: any[],\r\n  index: number,\r\n): AreaDivision {\r\n  const value = _.get(values, index)\r\n  const depth = index + 1\r\n  const valuePrefix = getAreaPrefix(value, depth)\r\n\r\n  if (index === 0) {\r\n    prefixes[index] = valuePrefix ?? getFirstDivisionPrefix(divisions, depth)\r\n  } else {\r\n    const valueSuperiorPrefix = value?.substring(0, index * 2)\r\n    const superiorPrefix = prefixes[index - 1]\r\n    // Easy to debug code\r\n    if (superiorPrefix !== valueSuperiorPrefix) {\r\n      prefixes[index] = getFirstDivisionPrefix(divisions, depth)\r\n    } else {\r\n      prefixes[index] = valuePrefix\r\n    }\r\n  }\r\n  const valuePad = padAreaPrefixToValue(prefixes[index])\r\n  return _.find(divisions, (division) => division.value === valuePad) as AreaDivision\r\n}\r\n\r\ninterface UseAreaSelectOptions {\r\n  data: AreaData\r\n  unverifiedValues: any[]\r\n  depth: number\r\n\r\n  formatter: AreaFormatter\r\n}\r\n\r\nfunction doAreaSelect(options: UseAreaSelectOptions) {\r\n  const { unverifiedValues, data: dataPrimitive, depth, formatter } = options\r\n  const data = getAreaData(dataPrimitive, depth)\r\n  //\r\n  const prefixes: string[] = []\r\n  const columns: AreaDivision[] = []\r\n  const nextValueOptions: AreaDivision[] = []\r\n  const nextValues: string[] = []\r\n\r\n  _.forEach(data, (record, index) => {\r\n    // const divisions = formatter?.(index === 0 ? record : filterAreaList(record, prefixes[index - 1]))\r\n    // Easy to debug code\r\n    let divisions: AreaDivision[]\r\n    if (index === 0) {\r\n      divisions = formatter?.(record)\r\n    } else {\r\n      divisions = formatter?.(filterAreaList(record, prefixes[index - 1]))\r\n    }\r\n    const division = getAreaPrefixDivision(prefixes, divisions, unverifiedValues, index)\r\n    nextValueOptions[index] = division\r\n    nextValues[index] = division.value\r\n    columns[index] = {\r\n      index,\r\n      children: divisions,\r\n    }\r\n  })\r\n  return {\r\n    columns,\r\n    values: nextValues,\r\n    valueOptions: nextValueOptions,\r\n  }\r\n}\r\n\r\nfunction useAreaSelect(options: UseAreaSelectOptions) {\r\n  const { unverifiedValues, data, depth, formatter } = options\r\n  return useMemo(\r\n    () =>\r\n      doAreaSelect({\r\n        unverifiedValues,\r\n        data,\r\n        depth,\r\n        formatter,\r\n      }),\r\n    [data, depth, formatter, unverifiedValues],\r\n  )\r\n}\r\n\r\nfunction useAreaValues(value: any | any[]) {\r\n  return useMemo(() => (_.isArray(value) ? value : [value]), [value])\r\n}\r\n\r\ninterface UseAreaOptions {\r\n  depth?: number\r\n  data?: AreaData\r\n\r\n  formatter?: AreaFormatter\r\n}\r\n\r\nexport default function useArea(unverifiedValue: any[] = [], options: UseAreaOptions = {}) {\r\n  const { data = DEFAULT_AREA_DATA, depth = 3, formatter = defaultFormatter } = options\r\n  const unverifiedValueRef = useRef(unverifiedValue)\r\n  const forceUpdate = useForceUpdate()\r\n  const unverifiedValues = useAreaValues(unverifiedValueRef.current)\r\n  //\r\n  const { columns, values, valueOptions } = useAreaSelect({\r\n    unverifiedValues,\r\n    data,\r\n    depth,\r\n    formatter,\r\n  })\r\n  //\r\n  const valuesRef = useToRef(values)\r\n  const valueOptionsRef = useToRef(valueOptions)\r\n  const getValues = useCallback(() => valuesRef.current, [valuesRef])\r\n  const getValueOptions = useCallback(() => valueOptionsRef.current, [valueOptionsRef])\r\n\r\n  const setValues = useCallback(\r\n    (newValues: any[]) => {\r\n      unverifiedValueRef.current = newValues\r\n      forceUpdate()\r\n    },\r\n    [forceUpdate],\r\n  )\r\n  //\r\n  useEffect(() => {\r\n    if (!_.isEqual(valuesRef.current, unverifiedValue)) {\r\n      setValues(unverifiedValue)\r\n    }\r\n  }, [setValues, unverifiedValue, valuesRef])\r\n  //\r\n  return useMemo(\r\n    () => ({\r\n      columns,\r\n      values,\r\n      valueOptions,\r\n      getValues,\r\n      getValueOptions,\r\n      setValues,\r\n    }),\r\n    [columns, getValueOptions, getValues, setValues, valueOptions, values],\r\n  )\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { ReactNode } from \"react\"\r\n\r\nexport interface AreaData {\r\n  province_list: Record<string, string>\r\n  city_list: Record<string, string>\r\n  county_list: Record<string, string>\r\n}\r\n\r\nexport interface AreaDivision extends Record<any, any> {\r\n  index: number\r\n  value?: any\r\n  label?: ReactNode\r\n  children?: AreaDivision[] | ReactNode\r\n}\r\n\r\nexport function getAreaData(data: AreaData, maxDepth: number) {\r\n  const { province_list, city_list, county_list } = data\r\n  const dataArray: Record<any, any>[] = []\r\n  if (maxDepth >= 1 && !_.isEmpty(province_list)) {\r\n    dataArray.push(province_list)\r\n    if (maxDepth >= 2 && !_.isEmpty(city_list)) {\r\n      dataArray.push(city_list)\r\n      if (maxDepth >= 3 && !_.isEmpty(county_list)) {\r\n        dataArray.push(county_list)\r\n      }\r\n    }\r\n  }\r\n  return dataArray\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { createContext } from \"react\"\r\n\r\ninterface CellGroupContextValue {\r\n  clickable?: boolean\r\n}\r\n\r\nconst CellGroupContext = createContext<CellGroupContextValue>({})\r\n\r\nexport default CellGroupContext\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellBaseProps extends ViewProps {\r\n  bordered?: boolean\r\n  required?: boolean\r\n  clickable?: boolean\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellBase(props: CellBaseProps) {\r\n  const {\r\n    className,\r\n    size = \"medium\",\r\n    align,\r\n    clickable: clickableProp = false,\r\n    required = false,\r\n    bordered = true,\r\n    icon,\r\n    rightIcon,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { clickable } = useContext(CellGroupContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell\"),\r\n        {\r\n          [prefixClassname(\"cell--start\")]: align === \"start\",\r\n          [prefixClassname(\"cell--center\")]: align === \"center\",\r\n          [prefixClassname(\"cell--end\")]: align === \"end\",\r\n          [prefixClassname(\"cell--large\")]: size === \"large\",\r\n          [prefixClassname(\"cell--clickable\")]: clickableProp || clickable,\r\n          [prefixClassname(\"cell--required\")]: required,\r\n          [prefixClassname(\"cell--borderless\")]: !bordered,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon && isIconElement(icon)\r\n        ? cloneIconElement(icon, { className: prefixClassname(\"cell__icon\") })\r\n        : icon}\r\n      {children}\r\n      {rightIcon && isIconElement(rightIcon)\r\n        ? cloneIconElement(rightIcon, { className: prefixClassname(\"cell__right-icon\") })\r\n        : rightIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default CellBase\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellBriefProps extends ViewProps {\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellBrief(props: CellBriefProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__brief\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellBrief\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellTitleProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellTitle(props: CellTitleProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__title\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellTitle\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellValueProps extends ViewProps {\r\n  alone?: boolean\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellValue(props: CellValueProps) {\r\n  const { className, alone, ...restProps } = props\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell__value\"),\r\n        {\r\n          [prefixClassname(\"cell__value--alone\")]: alone,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CellValue\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport CellBase from \"./cell-base\"\r\nimport CellBrief from \"./cell-brief\"\r\nimport CellTitle from \"./cell-title\"\r\nimport CellValue from \"./cell-value\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellProps extends ViewProps {\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Cell(props: CellProps) {\r\n  const { title, brief, children, ...restProps } = props\r\n  return (\r\n    <CellBase {...restProps}>\r\n      {title && (\r\n        <CellTitle>\r\n          {title}\r\n          {brief && <CellBrief children={brief} />}\r\n        </CellTitle>\r\n      )}\r\n      <CellValue alone={!title} children={children} />\r\n    </CellBase>\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\n\r\ninterface CellGroupProps extends ViewProps {\r\n  title?: ReactNode\r\n  clickable?: boolean\r\n  inset?: boolean\r\n  bordered?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nexport function CellGroup(props: CellGroupProps) {\r\n  const { title, clickable = false, inset = false, bordered = true, children, ...restProps } = props\r\n  return (\r\n    <CellGroupContext.Provider\r\n      value={{\r\n        clickable,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"cell-group\"), {\r\n          [prefixClassname(\"cell-group--inset\")]: inset,\r\n        })}\r\n        {...restProps}\r\n      >\r\n        {title && (\r\n          <View\r\n            className={classNames(prefixClassname(\"cell-group__title\"), {\r\n              [prefixClassname(\"cell-group__title--inset\")]: inset,\r\n            })}\r\n            children={title}\r\n          />\r\n        )}\r\n        <View\r\n          className={classNames(prefixClassname(\"cell-group\"), {\r\n            [prefixClassname(\"hairline--top-bottom\")]: bordered,\r\n          })}\r\n          children={children}\r\n        />\r\n      </View>\r\n    </CellGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CellGroup\r\n","import CellElement, { CellProps } from \"./cell\"\r\nimport CellGroup from \"./cell-group\"\r\n\r\nexport type { CellAlign, CellSize } from \"./cell.shared\"\r\nexport { default as CellBase } from \"./cell-base\"\r\nexport { default as CellTitle } from \"./cell-title\"\r\nexport { default as CellValue } from \"./cell-value\"\r\nexport type { CellProps } from \"./cell\"\r\n\r\ninterface CellInterface {\r\n  (props: CellProps): JSX.Element\r\n\r\n  Group: typeof CellGroup\r\n}\r\n\r\nconst Cell = CellElement as CellInterface\r\nCell.Group = CellGroup\r\n\r\nexport default Cell\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","// type LogLevel = \"debug\" | \"info\" | \"warn\" | \"error\"\r\n\r\n// export function configure(level: LogLevel) {\r\n//   if (level === \"debug\") {\r\n//     logLevel = debugLevel\r\n//   }\r\n// }\r\n\r\nconst debugLevel = 1\r\nconst infoLevel = debugLevel << 2\r\nconst warnLevel = infoLevel << 2\r\n\r\nconst logConfig = {\r\n  level: debugLevel,\r\n}\r\n\r\nexport function getLogger(name: string) {\r\n  return {\r\n    warn(message?: any, ...optionalParams: any[]) {\r\n      if (logConfig.level <= warnLevel) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`Taroify - ${name} : ${message}`, ...optionalParams)\r\n      }\r\n    },\r\n  }\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function ImagePlaceholder(props: ImagePlaceholderProps): JSX.Element {\r\n  const { prefix = \"placeholder\", children } = props\r\n  // Icon Element\r\n  if (isValidElement(children)) {\r\n    return cloneElement(children as ReactElement, {\r\n      className: classNames(\r\n        prefixClassname(`image__${prefix}`),\r\n        prefixClassname(`image__${prefix}-icon`),\r\n      ),\r\n    })\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useEffect, useMemo, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getLogger } from \"../utils/logger\"\r\nimport ImagePlaceholder from \"./image-placeholder\"\r\nimport { ImageMode, ImageShape } from \"./image.shared\"\r\n\r\nconst { warn } = getLogger(\"Image\")\r\n\r\nfunction useImageMode(mode: ImageMode) {\r\n  return useMemo(() => {\r\n    if (mode === \"topLeft\") {\r\n      return \"top left\"\r\n    }\r\n    if (mode === \"topRight\") {\r\n      return \"top right\"\r\n    }\r\n    if (mode === \"bottomLeft\") {\r\n      return \"bottom left\"\r\n    }\r\n    if (mode === \"bottomRight\") {\r\n      return \"bottom right\"\r\n    }\r\n    return mode\r\n  }, [mode])\r\n}\r\n\r\nfunction useImageShape(shape?: ImageShape, round?: boolean) {\r\n  if (_.isBoolean(round) && round) {\r\n    shape = \"circle\"\r\n    warn(`Use the shape=\"${shape}\" prop instead of the round prop`)\r\n    if (round) {\r\n      return shape\r\n    }\r\n  }\r\n  return shape\r\n}\r\n\r\nexport interface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  shape?: ImageShape\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round,\r\n    shape: shapeProp,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = useImageMode(mode)\r\n  const shape = useImageShape(shapeProp, round)\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => setLoading(true), [src])\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onLoad={() => setLoading(false)}\r\n          onError={handleError}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n            },\r\n            className,\r\n          )}\r\n          {...restProps}\r\n        >\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n            },\r\n            className,\r\n          )}\r\n          {...restProps}\r\n        >\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","var Symbol = require('./_Symbol'),\n    copyArray = require('./_copyArray'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    iteratorToArray = require('./_iteratorToArray'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray'),\n    stringToArray = require('./_stringToArray'),\n    values = require('./values');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\nmodule.exports = toArray;\n","import { createContext } from \"react\"\r\n\r\ninterface FlexContextValue {\r\n  gutter: [number | undefined, number | undefined]\r\n}\r\n\r\nconst FlexContext = createContext<FlexContextValue>({\r\n  gutter: [undefined, undefined],\r\n})\r\n\r\nexport default FlexContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, forwardRef, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\nimport { FlexAlign, FlexDirection, FlexGutter, FlexJustify, FlexWrap } from \"./flex.shared\"\r\n\r\nfunction useFlexGutter(gutter?: FlexGutter): [undefined | number, undefined | number] {\r\n  return useMemo(() => {\r\n    if (gutter === undefined) {\r\n      return [undefined, undefined]\r\n    }\r\n\r\n    if (_.isNumber(gutter)) {\r\n      return [gutter, gutter]\r\n    }\r\n\r\n    if (_.isString(gutter)) {\r\n      const gutterNumber = _.toNumber(gutter)\r\n      return [gutterNumber, gutterNumber]\r\n    }\r\n\r\n    if (_.isArray(gutter)) {\r\n      const [horizontalGutter, verticalGutter] = gutter\r\n      return [_.toNumber(horizontalGutter), _.toNumber(verticalGutter)]\r\n    }\r\n\r\n    return [0, 0]\r\n  }, [gutter])\r\n}\r\n\r\nexport interface FlexProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: FlexDirection\r\n  wrap?: FlexWrap\r\n  justify?: FlexJustify\r\n  align?: FlexAlign\r\n  gutter?: FlexGutter\r\n  children?: ReactNode\r\n}\r\n\r\nconst Flex = forwardRef((props: FlexProps, ref) => {\r\n  const {\r\n    className,\r\n    style,\r\n    gutter: gutterProp,\r\n    direction = \"row\",\r\n    wrap = \"nowrap\",\r\n    justify = \"start\",\r\n    align = \"start\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const gutter = useFlexGutter(gutterProp)\r\n  const [horizontalGutter] = gutter\r\n\r\n  const gutterStyle = useMemo<CSSProperties>(() => {\r\n    const gutterStyle: CSSProperties = {}\r\n    if (horizontalGutter) {\r\n      const averagePadding = _.toNumber(horizontalGutter) / 2\r\n      gutterStyle.marginLeft = addUnitPx(-averagePadding)\r\n      gutterStyle.marginRight = addUnitPx(-averagePadding)\r\n    }\r\n    return {}\r\n  }, [horizontalGutter])\r\n\r\n  return (\r\n    <View\r\n      ref={ref}\r\n      className={classNames(\r\n        prefixClassname(\"flex\"),\r\n        {\r\n          // Set flex style\r\n          [prefixClassname(\"flex--row\")]: direction === \"row\",\r\n          [prefixClassname(\"flex--row-reverse\")]: direction === \"row-reverse\",\r\n          [prefixClassname(\"flex--column\")]: direction === \"column\",\r\n          [prefixClassname(\"flex--column-reverse\")]: direction === \"column-reverse\",\r\n          // Set flex-wrap style\r\n          [prefixClassname(\"flex--nowrap\")]: wrap === \"nowrap\",\r\n          [prefixClassname(\"flex--wrap\")]: wrap === \"wrap\",\r\n          [prefixClassname(\"flex--wrap-reverse\")]: wrap === \"wrap-reverse\",\r\n          // Set justify style\r\n          [prefixClassname(\"flex--justify-start\")]: justify === \"start\",\r\n          [prefixClassname(\"flex--justify-center\")]: justify === \"center\",\r\n          [prefixClassname(\"flex--justify-end\")]: justify === \"end\",\r\n          [prefixClassname(\"flex--justify-space-around\")]: justify === \"space-around\",\r\n          [prefixClassname(\"flex--justify-space-between\")]: justify === \"space-between\",\r\n          // Set align style\r\n          [prefixClassname(\"flex--align-start\")]: align === \"start\",\r\n          [prefixClassname(\"flex--align-center\")]: align === \"center\",\r\n          [prefixClassname(\"flex--align-end\")]: align === \"end\",\r\n          [prefixClassname(\"flex--align-baseline\")]: align === \"baseline\",\r\n          [prefixClassname(\"flex--align-stretch\")]: align === \"stretch\",\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    >\r\n      <FlexContext.Provider\r\n        value={{\r\n          gutter,\r\n        }}\r\n        children={children}\r\n      />\r\n    </View>\r\n  )\r\n})\r\n\r\nexport default Flex\r\n","import { ForwardRefExoticComponent } from \"react\"\r\nimport FlexComponent, { FlexProps } from \"./flex\"\r\nimport FlexItem from \"./flex-item\"\r\n\r\nexport type { FlexProps } from \"./flex\"\r\nexport type { FlexItemProps } from \"./flex-item\"\r\n\r\ninterface FlexInterface extends ForwardRefExoticComponent<FlexProps> {\r\n  Item: typeof FlexItem\r\n}\r\n\r\nconst Flex = FlexComponent as FlexInterface\r\n\r\nFlex.Item = FlexItem\r\n\r\nexport default Flex\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\n\r\nexport interface FlexItemProps extends ViewProps {\r\n  style?: CSSProperties\r\n  span?: number\r\n  offset?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function FlexItem(props: FlexItemProps) {\r\n  const { className, style, span, offset, ...restProps } = props\r\n  const { gutter: gutters } = useContext(FlexContext)\r\n  const [horizontalGutter] = gutters\r\n\r\n  // Horizontal gutter use padding\r\n  const gutterStyle: React.CSSProperties = {}\r\n  if (horizontalGutter) {\r\n    const averagePadding = horizontalGutter / 2\r\n    gutterStyle.paddingLeft = addUnitPx(averagePadding)\r\n    gutterStyle.paddingRight = addUnitPx(averagePadding)\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex-item\"),\r\n        {\r\n          [prefixClassname(`flex-item-${span}`)]: span !== undefined,\r\n          [prefixClassname(`flex-item-offset-${offset}`)]: offset !== undefined,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","import { createContext } from \"react\"\r\nimport { CheckboxGroupDirection } from \"./checkbox-group.shared\"\r\n\r\ninterface CheckboxGroupContextValue {\r\n  value?: any[]\r\n  max?: number\r\n\r\n  direction?: CheckboxGroupDirection\r\n\r\n  onChange?(value: any[]): void\r\n}\r\n\r\nconst CheckboxGroupContext = createContext<CheckboxGroupContextValue>({})\r\n\r\nexport default CheckboxGroupContext\r\n","import { useUncontrolled } from \"@taroify/hooks\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CheckboxGroupContext from \"./checkbox-group.context\"\r\nimport { CheckboxGroupDirection } from \"./checkbox-group.shared\"\r\n\r\nexport interface CheckboxGroupProps extends ViewProps {\r\n  defaultValue?: any[]\r\n  value?: any[]\r\n  max?: number\r\n  direction?: CheckboxGroupDirection\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any[]): void\r\n}\r\n\r\nfunction CheckboxGroup(props: CheckboxGroupProps) {\r\n  const {\r\n    defaultValue,\r\n    value: valueProp,\r\n    max,\r\n    direction = \"vertical\",\r\n    children,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value, setValue } = useUncontrolled({\r\n    value: valueProp,\r\n    defaultValue,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  return (\r\n    <CheckboxGroupContext.Provider\r\n      value={{\r\n        value,\r\n        max,\r\n        direction,\r\n        onChange: setValue,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"checkbox-group\"), {\r\n          [prefixClassname(\"checkbox-group--horizontal\")]: direction === \"horizontal\",\r\n          [prefixClassname(\"checkbox-group--vertical\")]: direction === \"vertical\",\r\n        })}\r\n        children={children}\r\n        {...restProps}\r\n      />\r\n    </CheckboxGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CheckboxGroup\r\n","import { CheckboxProps, default as CheckboxComponent } from \"./checkbox\"\r\nimport CheckboxGroup from \"./checkbox-group\"\r\n\r\nexport type { CheckboxProps } from \"./checkbox\"\r\nexport type { CheckboxGroupProps } from \"./checkbox-group\"\r\n\r\ninterface CheckboxInterface {\r\n  (props: CheckboxProps): JSX.Element\r\n\r\n  Group: typeof CheckboxGroup\r\n}\r\n\r\nconst Checkbox = CheckboxComponent as CheckboxInterface\r\n\r\nCheckbox.Group = CheckboxGroup\r\n\r\nexport default Checkbox\r\n","import { useUncontrolled } from \"@taroify/hooks\"\r\nimport { Success } from \"@taroify/icons\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport CheckboxGroupContext from \"./checkbox-group.context\"\r\nimport { CheckboxShape } from \"./checkbox.shared\"\r\n\r\nexport interface CheckboxProps extends ViewProps {\r\n  name?: any\r\n  defaultChecked?: boolean\r\n  checked?: boolean\r\n  disabled?: boolean\r\n  shape?: CheckboxShape\r\n  icon?: ReactNode\r\n  size?: number\r\n  children?: ReactNode\r\n\r\n  onChange?(checked: boolean): void\r\n}\r\n\r\nexport default function Checkbox(props: CheckboxProps) {\r\n  const {\r\n    className,\r\n    name,\r\n    defaultChecked,\r\n    checked: checkedProp,\r\n    disabled,\r\n    shape = \"round\",\r\n    icon = <Success />,\r\n    size,\r\n    children,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value: names, max: namesMax = 0, direction, onChange: onNamesChange } = useContext(\r\n    CheckboxGroupContext,\r\n  )\r\n\r\n  const { value: checked, setValue } = useUncontrolled({\r\n    value: checkedProp ?? names?.includes(name),\r\n    defaultValue: defaultChecked,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  function onClick() {\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    setValue(!checked)\r\n\r\n    if (name) {\r\n      if (names?.includes(name)) {\r\n        onNamesChange?.(names.filter((aName) => aName !== name))\r\n      } else if (namesMax === 0 || _.size(names) < namesMax) {\r\n        onNamesChange?.([..._.toArray(names), name])\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"checkbox\"),\r\n        {\r\n          [prefixClassname(\"checkbox--horizontal\")]: direction === \"horizontal\",\r\n          [prefixClassname(\"checkbox--vertical\")]: direction === \"vertical\",\r\n        },\r\n        className,\r\n      )}\r\n      onClick={onClick}\r\n      {...restProps}\r\n    >\r\n      <View\r\n        className={classNames(\r\n          prefixClassname(\"checkbox__icon\"),\r\n          prefixClassname(`checkbox__icon--${shape}`),\r\n          {\r\n            [prefixClassname(\"checkbox__icon--disabled\")]: disabled,\r\n            [prefixClassname(\"checkbox__icon--checked\")]: checked,\r\n          },\r\n        )}\r\n        style={{ fontSize: size ? addUnitPx(size) : \"\" }}\r\n        children={icon}\r\n      />\r\n      {children && (\r\n        <View\r\n          className={classNames(prefixClassname(\"checkbox__label\"), {\r\n            [prefixClassname(\"checkbox__label--disabled\")]: disabled,\r\n          })}\r\n          children={children}\r\n        />\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n","/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  var data,\n      result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\nmodule.exports = iteratorToArray;\n","import \"../../styles/style\"\r\nimport \"../../flex/style\"\r\nimport \"../index.scss\"\r\n","import Space from \"./space\"\n\nexport default Space\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { Children, CSSProperties, ReactNode } from \"react\"\r\nimport Flex from \"../flex\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { SpaceAlign, SpaceDirection, SpaceJustify, SpaceSize, SpaceWrap } from \"./space.shared\"\r\n\r\ninterface SpaceProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: SpaceDirection\r\n  size?: SpaceSize\r\n  align?: SpaceAlign\r\n  justify?: SpaceJustify\r\n  wrap?: SpaceWrap\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Space(props: SpaceProps) {\r\n  const {\r\n    className,\r\n    size = \"small\",\r\n    justify,\r\n    align,\r\n    direction = \"horizontal\",\r\n    wrap = \"wrap\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <Flex\r\n      className={classNames(\r\n        prefixClassname(\"space\"),\r\n        {\r\n          [prefixClassname(\"space--horizontal\")]: direction === \"horizontal\",\r\n          [prefixClassname(\"space--vertical\")]: direction === \"vertical\",\r\n\r\n          [prefixClassname(\"space--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"space--small\")]: size === \"small\",\r\n          [prefixClassname(\"space--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"space--large\")]: size === \"large\",\r\n        },\r\n        className,\r\n      )}\r\n      direction={\r\n        direction === \"horizontal\" ? \"row\" : direction === \"vertical\" ? \"column\" : undefined\r\n      }\r\n      justify={justify}\r\n      align={align}\r\n      wrap={wrap}\r\n      {...restProps}\r\n    >\r\n      {\r\n        //\r\n        Children.map(children, (item, index) => (\r\n          <Flex.Item\r\n            key={index}\r\n            className={classNames(prefixClassname(\"space__item\"), {\r\n              [prefixClassname(\"space__item--mini\")]: size === \"mini\",\r\n              [prefixClassname(\"space__item--small\")]: size === \"small\",\r\n              [prefixClassname(\"space__item--medium\")]: size === \"medium\",\r\n              [prefixClassname(\"space__item--large\")]: size === \"large\",\r\n            })}\r\n            children={item}\r\n          />\r\n        ))\r\n      }\r\n    </Flex>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { Cell, Checkbox, Image, Space } from \"@taroify/core\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\nfunction CheckboxWithCustomIcon() {\n  const [value, setValue] = useState(false)\n\n  return (\n    <Checkbox\n      icon={\n        <Image\n          src={`https://img.yzcdn.cn/vant/user-${value ? \"active\" : \"inactive\"}.png`}\n          style={{\n            width: \"25px\",\n            height: \"20px\",\n          }}\n        />\n      }\n      checked={value}\n      onChange={setValue}\n    >\n      自定义图标\n    </Checkbox>\n  )\n}\n\nexport default function CheckboxDemo() {\n  return (\n    <Page title=\"Checkbox 复选框\" className=\"checkbox-demo\">\n      <Block title=\"基础用法\">\n        <Checkbox defaultChecked>复选框</Checkbox>\n      </Block>\n      <Block title=\"禁用状态\">\n        <Space direction=\"vertical\">\n          <Checkbox disabled checked={false}>\n            复选框\n          </Checkbox>\n          <Checkbox disabled checked>\n            复选框\n          </Checkbox>\n        </Space>\n      </Block>\n      <Block title=\"自定义形状\">\n        <Checkbox shape=\"square\">自定义形状</Checkbox>\n      </Block>\n      <Block title=\"自定义颜色\">\n        <Checkbox className=\"custom-color\">自定义颜色</Checkbox>\n      </Block>\n      <Block title=\"自定义大小\">\n        <Checkbox size={24}>自定义大小</Checkbox>\n      </Block>\n      <Block title=\"自定义图标\">\n        <CheckboxWithCustomIcon />\n      </Block>\n      <Block title=\"复选框组\" className=\"basic-checkbox-group\">\n        <Checkbox.Group>\n          <Checkbox name=\"a\">复选框 a</Checkbox>\n          <Checkbox name=\"b\">复选框 b</Checkbox>\n        </Checkbox.Group>\n      </Block>\n      <Block title=\"水平排列\" className=\"horizontal-checkbox-group\">\n        <Checkbox.Group direction=\"horizontal\">\n          <Checkbox name=\"a\">复选框 a</Checkbox>\n          <Checkbox name=\"b\">复选框 b</Checkbox>\n        </Checkbox.Group>\n      </Block>\n      <Block title=\"水平排列\" className=\"basic-checkbox-group\">\n        <Checkbox.Group max={4}>\n          <Checkbox name=\"a\">复选框 a</Checkbox>\n          <Checkbox name=\"b\">复选框 b</Checkbox>\n          <Checkbox name=\"c\">复选框 c</Checkbox>\n          <Checkbox name=\"d\">复选框 d</Checkbox>\n          <Checkbox name=\"e\">复选框 e</Checkbox>\n          <Checkbox name=\"f\">复选框 f</Checkbox>\n          <Checkbox name=\"g\">复选框 g</Checkbox>\n        </Checkbox.Group>\n      </Block>\n      <Block title=\"搭配单元格组件使用\" className=\"checkbox-cell-group\">\n        <Checkbox.Group max={2}>\n          <Cell.Group clickable>\n            <Cell title=\"复选框 a\">\n              <Checkbox name=\"a\" />\n            </Cell>\n            <Cell title=\"复选框 b\">\n              <Checkbox name=\"b\" />\n            </Cell>\n          </Cell.Group>\n        </Checkbox.Group>\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}