{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/state.ts","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/core/src/utils/dom/event.ts","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///../../../../packages/core/src/cell/cell-group.context.ts","webpack:///../../../../packages/core/src/cell/cell-base.tsx","webpack:///../../../../packages/core/src/cell/cell-brief.tsx","webpack:///../../../../packages/core/src/cell/cell-title.tsx","webpack:///../../../../packages/core/src/cell/cell-value.tsx","webpack:///../../../../packages/core/src/cell/cell.tsx","webpack:///../../../../packages/core/src/cell/cell-group.tsx","webpack:///../../../../packages/core/src/cell/index.ts","webpack:///../../../../packages/core/src/cell/style/index.ts","webpack:///../../../../packages/core/src/utils/touch.ts","webpack:///../../../../packages/core/src/styles/hairline.ts","webpack:///../../../../packages/core/src/utils/raf.ts","webpack:///../../../../packages/core/src/utils/dom/computed-style.ts","webpack:///../../../../packages/core/src/swiper/swiper.context.ts","webpack:///../../../../packages/core/src/swiper/swiper-indicator.tsx","webpack:///../../../../packages/core/src/swiper/swiper-item.tsx","webpack:///../../../../packages/core/src/swiper/swiper.tsx","webpack:///../../../../packages/core/src/swiper/index.ts","webpack:///../../../../packages/core/src/swiper/style/index.ts","webpack:///../../../../packages/core/src/sticky/style/index.ts","webpack:///../../../../packages/core/src/utils/system.ts","webpack:///../../../../packages/core/src/sticky/index.ts","webpack:///../../../../packages/core/src/sticky/sticky.tsx","webpack:///../../../../packages/core/src/tabs/style/index.ts","webpack:///../../../../packages/core/src/tabs/tab-pane.tsx","webpack:///../../../../packages/core/src/tabs/tabs.context.ts","webpack:///../../../../packages/core/src/tabs/tab-pane-base.tsx","webpack:///../../../../packages/core/src/tabs/tabs-content.tsx","webpack:///../../../../packages/core/src/tabs/tabs-line.tsx","webpack:///../../../../packages/core/src/tabs/tab.tsx","webpack:///../../../../packages/core/src/tabs/tabs-header.tsx","webpack:///../../../../packages/core/src/tabs/tabs.tsx","webpack:///../../../../packages/core/src/tabs/index.ts","webpack:///../../../../packages/core/src/utils/dom/scroll.ts","webpack:///../../../../packages/core/src/pull-refresh/style/index.ts","webpack:///../../../../packages/core/src/pull-refresh/pull-refresh.context.ts","webpack:///../../../../packages/core/src/pull-refresh/pull-refresh-children.tsx","webpack:///../../../../packages/core/src/pull-refresh/pull-refresh.tsx","webpack:///../../../../packages/core/src/pull-refresh/index.ts","webpack:///../../../../packages/core/src/list/list.tsx","webpack:///../../../../packages/core/src/list/list-placeholder.tsx","webpack:///../../../../packages/core/src/list/index.ts","webpack:///./src/pages/display/list/index.tsx"],"names":["previousRef","useRef","useEffect","usePreviousRef","cb","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","defaultValue","value","setValue","emitChange","getValue","isValidElement","element","isIconElement","cloneElement","node","className","oldProps","props","newProps","classNames","event","stopPropagation","touches","clientX","clientY","SpinIcon","key","prefixClassname","LoadingSpinner","size","rootStyle","width","addUnitPx","height","style","LoadingCircular","type","direction","children","createContext","CellBase","clickable","clickableProp","required","bordered","useContext","align","icon","cloneIconElement","rightIcon","CellBrief","CellTitle","CellValue","alone","inset","CellGroupContext","title","Cell","Object","brief","emptyFunction","touchRef","startX","startY","deltaX","deltaY","offsetX","offsetY","isVertical","isHorizontal","start","move","reset","TouchDirection","touch","Math","getDirection","x","y","HAIRLINE_BORDER","HAIRLINE_BORDER_TOP","HAIRLINE_BORDER_LEFT","HAIRLINE_BORDER_BOTTOM","HAIRLINE_BORDER_SURROUND","HAIRLINE_BORDER_TOP_BOTTOM","HAIRLINE_BORDER_UNSET_TOP_BOTTOM","requestAnimationFrame","rafIds","raf","elementUnref","Promise","window","resolve","queryNodesRef","computedStyle","result","itemInstances","indicator","count","renderIndicator","indicators","__dataIndex__","childrenProp","vertical","initializedRef","mountedRef","useState","shouldRender","lazyRender","active","maxActive","prevActive","nextActive","useMounted","setOffset","useRendered","offset","undefined","getIndicatorValue","Swiper","loop","touchable","autoplay","duration","onChangeProp","useValue","valueRef","useToRef","useSwiperChildren","__children__","items","Children","elementType","useTouch","rootRef","rectRef","swipingRef","activeIndexRef","touchStartTimeRef","autoplayTimerRef","valueIndicatorRef","useRenderedRef","activeIndicatorRef","getDelta","getCorrectDirection","customRectRef","propRectRef","sizeRef","trackSizeRef","minOffsetRef","maxCountRef","getTargetActive","pace","getTargetOffset","currentPosition","targetActive","targetOffset","moveTo","outRightBound","outLeftBound","previousActiveIndex","correctPosition","swipeTo","doubleRaf","targetIndex","next","stopAutoplay","clearTimeout","startAutoplay","setTimeout","onTouchStart","Date","onTouchMove","correctDirection","preventDefault","onTouchEnd","delta","speed","shouldSwipe","getTrackRect","getRect","getComputedStyle","makeRect","rect","unitToPx","initialize","a","activeIndex","current","item","resize","nextTick","useWindowResize","valueIndicator","trackStyle","transitionDuration","transform","crossAxis","crossAxisValue","ref","SwiperContext","catchMove","onTouchCancel","screenHeight","screenWidth","windowHeight","windowWidth","position","offsetTop","offsetBottom","container","onScroll","bottom","console","offsetTopProp","offsetProp","offsetBottomProp","counterRef","offsetValue","rootRect","fixed","stickyStyle","scrollTop","__rootRect__","setRootRect","containerRect","difference","setTransform","setFixed","getSystemRect","invokeScroll","usePageScroll","React","animated","swipeable","tabObjects","activeValue","tabPane","display","onTabClick","panes","useTabPanes","tabObject","disabled","renderChildren","onSwiperChange","flexBasis","ellipsis","underline","themeLine","theme","themeCard","navRef","tab","activeOffset","tabOffsets","left","prev","curr","scrollLeft","navOffsetWidth","offsetLeft","navOffset","getRects","setNavOffset","setTabOffsets","onWindowResize","offWindowResize","scrollX","scrollWithAnimation","dot","badge","onClick","useTabObjects","Tabs","sticky","valueProp","stickyProps","useTabsSticky","handleTabClick","headerRender","TabsContext","defaultRoot","inBrowser","overflowScrollReg","isElementNode","root","overflowY","isRootElement","$element","top","getScrollOffset","distance","lodashRoot","require","PullRefreshStatus","TEXT_STATUS","PullRefresh","headHeight","reachTop","reachTopProp","pullDistance","durationProp","onRefresh","usePullRefreshChildren","content","child","completed","getCompletedProps","completedDuration","statusRef","reachTopPreviousRef","reachTopRef","durationRef","isTouchable","easeDistance","pullDistanceProp","checkPosition","resetDuration","updateStatus","setDistance","showCompleted","loading","completedElement","getStatusText","renderStatus","statusSlot","nodes","headStyle","PullRefreshContext","ListPlaceholder","List","loadingProp","hasMore","hasMoreProp","onLoad","edgeRef","loadingRef","hasMoreRef","loadCheck","getScrollParent","scrollParent","scrollParentRect","edgeRect","isReachEdge","listEdge","BasicList","setHasMore","list","setList","setLoading","setScrollTop","aScrollTop","i","text","length","push","String","map","Placeholder","ErrorList","error","setError","newList","PullRefreshList","refreshingRef","setReachTop","ListDemo","setTab","TabPane"],"mappings":"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","file":"chunk/64.087fc505.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  const stateRef = useRef(defaultValue ?? value ?? initialValue)\r\n\r\n  if (value !== undefined) {\r\n    stateRef.current = value\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(value)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ value: stateRef.current, getValue, setValue }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","import { CommonEvent, ITouchEvent } from \"@tarojs/components\"\nimport { inBrowser } from \"../base\"\n\nexport function stopPropagation(event: CommonEvent) {\n  event.stopPropagation()\n}\n\nexport function preventDefault(event: CommonEvent, isStopPropagation?: boolean) {\n  if (inBrowser) {\n    // @ts-ignore\n    if (typeof event.cancelable !== \"boolean\" || event.cancelable) {\n      event.preventDefault()\n    }\n  } else {\n    event.preventDefault()\n  }\n\n  if (isStopPropagation) {\n    stopPropagation(event)\n  }\n}\n\ninterface ClientCoordinates {\n  clientX: number\n  clientY: number\n}\n\nexport function getClientCoordinates(event: ITouchEvent | MouseEvent): ClientCoordinates {\n  // @ts-ignore\n  const { clientX, clientY, touches } = event\n\n  if (clientX && clientY) {\n    return {\n      clientX,\n      clientY,\n    }\n  }\n  return touches[0]\n}\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface CellGroupContextValue {\r\n  clickable?: boolean\r\n}\r\n\r\nconst CellGroupContext = createContext<CellGroupContextValue>({})\r\n\r\nexport default CellGroupContext\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellBaseProps extends ViewProps {\r\n  bordered?: boolean\r\n  required?: boolean\r\n  clickable?: boolean\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellBase(props: CellBaseProps) {\r\n  const {\r\n    className,\r\n    size = \"medium\",\r\n    align,\r\n    clickable: clickableProp = false,\r\n    required = false,\r\n    bordered = true,\r\n    icon,\r\n    rightIcon,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { clickable } = useContext(CellGroupContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell\"),\r\n        {\r\n          [prefixClassname(\"cell--start\")]: align === \"start\",\r\n          [prefixClassname(\"cell--center\")]: align === \"center\",\r\n          [prefixClassname(\"cell--end\")]: align === \"end\",\r\n          [prefixClassname(\"cell--large\")]: size === \"large\",\r\n          [prefixClassname(\"cell--clickable\")]: clickableProp || clickable,\r\n          [prefixClassname(\"cell--required\")]: required,\r\n          [prefixClassname(\"cell--borderless\")]: !bordered,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {icon && isIconElement(icon)\r\n        ? cloneIconElement(icon, { className: prefixClassname(\"cell__icon\") })\r\n        : icon}\r\n      {children}\r\n      {rightIcon && isIconElement(rightIcon)\r\n        ? cloneIconElement(rightIcon, { className: prefixClassname(\"cell__right-icon\") })\r\n        : rightIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default CellBase\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellBriefProps extends ViewProps {\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellBrief(props: CellBriefProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__brief\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellBrief\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellTitleProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction CellTitle(props: CellTitleProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"cell__title\"), className)} {...restProps} />\r\n}\r\n\r\nexport default CellTitle\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface CellValueProps extends ViewProps {\r\n  alone?: boolean\r\n  children: ReactNode\r\n}\r\n\r\nfunction CellValue(props: CellValueProps) {\r\n  const { className, alone, ...restProps } = props\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"cell__value\"),\r\n        {\r\n          [prefixClassname(\"cell__value--alone\")]: alone,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CellValue\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport CellBase from \"./cell-base\"\r\nimport CellBrief from \"./cell-brief\"\r\nimport CellTitle from \"./cell-title\"\r\nimport CellValue from \"./cell-value\"\r\nimport { CellAlign, CellSize } from \"./cell.shared\"\r\n\r\nexport interface CellProps extends ViewProps {\r\n  size?: CellSize\r\n  align?: CellAlign\r\n  title?: ReactNode\r\n  brief?: ReactNode\r\n  icon?: ReactNode\r\n  rightIcon?: ReactNode\r\n  bordered?: boolean\r\n  clickable?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Cell(props: CellProps) {\r\n  const { title, brief, children, ...restProps } = props\r\n  return (\r\n    <CellBase {...restProps}>\r\n      {title && (\r\n        <CellTitle>\r\n          {title}\r\n          {brief && <CellBrief children={brief} />}\r\n        </CellTitle>\r\n      )}\r\n      <CellValue alone={!title} children={children} />\r\n    </CellBase>\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport CellGroupContext from \"./cell-group.context\"\r\n\r\ninterface CellGroupProps extends ViewProps {\r\n  title?: ReactNode\r\n  clickable?: boolean\r\n  inset?: boolean\r\n  bordered?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nexport function CellGroup(props: CellGroupProps) {\r\n  const { title, clickable = false, inset = false, bordered = true, children, ...restProps } = props\r\n  return (\r\n    <CellGroupContext.Provider\r\n      value={{\r\n        clickable,\r\n      }}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"cell-group\"), {\r\n          [prefixClassname(\"cell-group--inset\")]: inset,\r\n        })}\r\n        {...restProps}\r\n      >\r\n        {title && (\r\n          <View\r\n            className={classNames(prefixClassname(\"cell-group__title\"), {\r\n              [prefixClassname(\"cell-group__title--inset\")]: inset,\r\n            })}\r\n            children={title}\r\n          />\r\n        )}\r\n        <View\r\n          className={classNames(prefixClassname(\"cell-group\"), {\r\n            [prefixClassname(\"hairline--top-bottom\")]: bordered,\r\n          })}\r\n          children={children}\r\n        />\r\n      </View>\r\n    </CellGroupContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CellGroup\r\n","import CellElement, { CellProps } from \"./cell\"\r\nimport CellGroup from \"./cell-group\"\r\n\r\nexport type { CellAlign, CellSize } from \"./cell.shared\"\r\nexport { default as CellBase } from \"./cell-base\"\r\nexport { default as CellTitle } from \"./cell-title\"\r\nexport { default as CellValue } from \"./cell-value\"\r\nexport type { CellProps } from \"./cell\"\r\n\r\ninterface CellInterface {\r\n  (props: CellProps): JSX.Element\r\n\r\n  Group: typeof CellGroup\r\n}\r\n\r\nconst Cell = CellElement as CellInterface\r\nCell.Group = CellGroup\r\n\r\nexport default Cell\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { ITouchEvent } from \"@tarojs/components\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nconst MIN_DISTANCE = 10\n\nexport enum TouchDirection {\n  Horizontal = \"horizontal\",\n  Vertical = \"vertical\",\n}\n\nfunction getDirection(x: number, y: number): TouchDirection | undefined {\n  if (x > y && x > MIN_DISTANCE) {\n    return TouchDirection.Horizontal\n  }\n  if (y > x && y > MIN_DISTANCE) {\n    return TouchDirection.Vertical\n  }\n}\n\nfunction emptyFunction() {}\n\nexport interface TouchRef {\n  startX: number\n  startY: number\n  deltaX: number\n  deltaY: number\n  offsetX: number\n  offsetY: number\n  direction?: TouchDirection\n\n  isVertical(): boolean\n\n  isHorizontal(): boolean\n\n  start(event: ITouchEvent): void\n\n  move(event: ITouchEvent): void\n\n  reset(): void\n}\n\nexport function useTouch() {\n  const touchRef = useRef<TouchRef>({\n    startX: 0,\n    startY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    isVertical: () => false,\n    isHorizontal: () => false,\n    start: emptyFunction,\n    move: emptyFunction,\n    reset: emptyFunction,\n  })\n\n  const isVertical = useCallback(() => touchRef.current.direction === TouchDirection.Vertical, [])\n\n  const isHorizontal = useCallback(\n    () => touchRef.current.direction === TouchDirection.Horizontal,\n    [],\n  )\n\n  const reset = useCallback(function () {\n    touchRef.current.deltaX = 0\n    touchRef.current.deltaY = 0\n    touchRef.current.offsetX = 0\n    touchRef.current.offsetY = 0\n    touchRef.current.direction = undefined\n  }, [])\n\n  const start = useCallback(\n    function (event: ITouchEvent) {\n      reset()\n      touchRef.current.startX = event.touches[0].clientX\n      touchRef.current.startY = event.touches[0].clientY\n    },\n    [reset],\n  )\n\n  const move = useCallback(function (event: ITouchEvent) {\n    const touch = event.touches[0]\n    // Fix: Safari back will set clientX to negative number\n    touchRef.current.deltaX = touch.clientX < 0 ? 0 : touch.clientX - touchRef.current.startX\n    touchRef.current.deltaY = touch.clientY - touchRef.current.startY\n    touchRef.current.offsetX = Math.abs(touchRef.current.deltaX)\n    touchRef.current.offsetY = Math.abs(touchRef.current.deltaY)\n\n    if (!touchRef.current.direction) {\n      touchRef.current.direction = getDirection(touchRef.current.offsetX, touchRef.current.offsetY)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (touchRef.current.isHorizontal !== isHorizontal) {\n      touchRef.current.isHorizontal = isHorizontal\n    }\n  }, [touchRef, isHorizontal])\n\n  useEffect(() => {\n    if (touchRef.current.isVertical !== isVertical) {\n      touchRef.current.isVertical = isVertical\n    }\n  }, [touchRef, isVertical])\n\n  useEffect(() => {\n    if (touchRef.current.reset !== reset) {\n      touchRef.current.reset = reset\n    }\n  }, [touchRef, reset])\n\n  useEffect(() => {\n    if (touchRef.current.start !== start) {\n      touchRef.current.start = start\n    }\n  }, [touchRef, start])\n\n  useEffect(() => {\n    if (touchRef.current.move !== move) {\n      touchRef.current.move = move\n    }\n  }, [touchRef, move])\n\n  return touchRef.current\n}\n","import { prefixClassname } from \"./prefix\"\n\nexport const HAIRLINE_BORDER = prefixClassname(\"hairline\")\nexport const HAIRLINE_BORDER_TOP = `${HAIRLINE_BORDER}--top`\nexport const HAIRLINE_BORDER_LEFT = `${HAIRLINE_BORDER}--left`\nexport const HAIRLINE_BORDER_BOTTOM = `${HAIRLINE_BORDER}--bottom`\nexport const HAIRLINE_BORDER_SURROUND = `${HAIRLINE_BORDER}--surround`\nexport const HAIRLINE_BORDER_TOP_BOTTOM = `${HAIRLINE_BORDER}--top-bottom`\nexport const HAIRLINE_BORDER_UNSET_TOP_BOTTOM = `${HAIRLINE_BORDER}-unset--top-bottom`\n","import * as _ from \"lodash\"\nimport * as requestAnimationFrame from \"raf\"\n\nexport function cancelRaf(rafId: number | number[]) {\n  if (_.isNumber(rafId)) {\n    requestAnimationFrame.cancel(rafId)\n  } else if (_.isArray(rafId)) {\n    _.forEach(rafId, cancelRaf)\n  }\n}\n\nexport function raf(cb: FrameRequestCallback) {\n  // @ts-ignore\n  return requestAnimationFrame.default(cb)\n}\n\nexport default raf\n\nexport function doubleRaf(cb: FrameRequestCallback): [number, number] {\n  const rafIds: [number, number] = [0, 0]\n  rafIds[1] = raf(() => {\n    rafIds[0] = raf(cb)\n  })\n  return rafIds\n}\n","import { inBrowser } from \"../base\"\r\nimport { elementUnref, queryNodesRef } from \"./element\"\r\n\r\nexport function getComputedStyle(\r\n  elementOrRef: any,\r\n  computedStyle: string[],\r\n): Promise<CSSStyleDeclaration> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      return Promise.resolve(window.getComputedStyle(element as any))\r\n    } else {\r\n      return new Promise<CSSStyleDeclaration>((resolve) => {\r\n        queryNodesRef(element)\r\n          .fields(\r\n            {\r\n              computedStyle,\r\n            },\r\n            (result) => resolve(result as CSSStyleDeclaration),\r\n          )\r\n          .exec()\r\n      })\r\n    }\r\n  }\r\n\r\n  return Promise.resolve({} as CSSStyleDeclaration)\r\n}\r\n","import { createContext } from \"react\"\r\nimport { SwiperDirection } from \"./swiper.shared\"\r\n\r\nexport interface SwiperItemInstance {\r\n  setOffset: (offset: number) => void\r\n}\r\n\r\ninterface SwiperContextValue {\r\n  direction?: SwiperDirection\r\n  lazyRender?: boolean\r\n  loop?: boolean\r\n  size?: number\r\n  indicator?: number\r\n  count?: number\r\n  itemInstances: SwiperItemInstance[]\r\n}\r\n\r\nconst SwiperContext = createContext<SwiperContextValue>({\r\n  itemInstances: [],\r\n})\r\nexport default SwiperContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useCallback, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport SwiperContext from \"./swiper.context\"\r\n\r\nexport interface SwiperIndicatorProps extends ViewProps {\r\n  className?: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function SwiperIndicator(props: SwiperIndicatorProps) {\r\n  const { className, children, ...restProps } = props\r\n  const { indicator = 0, direction, count } = useContext(SwiperContext)\r\n\r\n  const renderIndicator = useCallback(\r\n    (index: number) => (\r\n      <View\r\n        key={index}\r\n        className={classNames(prefixClassname(\"swiper__indicator\"), {\r\n          [prefixClassname(\"swiper__indicator--active\")]: index === indicator,\r\n        })}\r\n      />\r\n    ),\r\n    [indicator],\r\n  )\r\n\r\n  const indicators = useMemo(() => !children && _.range(0, count).map(renderIndicator), [\r\n    children,\r\n    count,\r\n    renderIndicator,\r\n  ])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        {\r\n          [prefixClassname(\"swiper__indicators\")]: !children,\r\n          [prefixClassname(\"swiper__indicators--vertical\")]: !children && direction === \"vertical\",\r\n        },\r\n        className,\r\n      )}\r\n      children={children ?? indicators}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useEffect, useMemo, useRef, useState } from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { useRendered } from \"../utils/state\"\r\nimport SwiperContext from \"./swiper.context\"\r\n\r\nexport interface SwiperItemProps extends ViewProps {\r\n  __dataIndex__?: number\r\n  className?: string\r\n  style?: CSSProperties\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function SwiperItem(props: SwiperItemProps) {\r\n  const {\r\n    __dataIndex__ = 0,\r\n    className,\r\n    style: styleProp,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { lazyRender, size, direction, loop, indicator = 0, count = 0, itemInstances } = useContext(\r\n    SwiperContext,\r\n  )\r\n  const vertical = direction === \"vertical\"\r\n\r\n  const initializedRef = useRef(false)\r\n  const mountedRef = useRef(false)\r\n\r\n  const [offset, setOffset] = useState(0)\r\n\r\n  const shouldRender = useMemo(() => {\r\n    if (!lazyRender || initializedRef.current) {\r\n      return true\r\n    }\r\n\r\n    // wait for all item to mount, so we can get the exact count\r\n    if (!mountedRef.current && indicator !== 0) {\r\n      return false\r\n    }\r\n\r\n    const active = indicator\r\n    const maxActive = count - 1\r\n    const prevActive = active === 0 && loop ? maxActive : active - 1\r\n    const nextActive = active === maxActive && loop ? 0 : active + 1\r\n    initializedRef.current =\r\n      __dataIndex__ === active || __dataIndex__ === prevActive || __dataIndex__ === nextActive\r\n    return initializedRef.current\r\n  }, [__dataIndex__, count, indicator, lazyRender, loop])\r\n\r\n  useMounted(() => {\r\n    mountedRef.current = true\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!itemInstances[__dataIndex__]) {\r\n      itemInstances[__dataIndex__] = { setOffset }\r\n    }\r\n  }, [itemInstances, __dataIndex__])\r\n\r\n  const rootStyle = useRendered(() => {\r\n    const style: CSSProperties = {}\r\n    if (size) {\r\n      const mainAxis = vertical ? \"height\" : \"width\"\r\n      style[mainAxis] = addUnitPx(size)\r\n    }\r\n    style.transform = offset ? `translate${vertical ? \"Y\" : \"X\"}(${addUnitPx(offset)})` : \"\"\r\n    return style\r\n  })\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"swiper-item\"), className)}\r\n      style={{\r\n        ...styleProp,\r\n        ...rootStyle,\r\n      }}\r\n      children={shouldRender ? childrenProp : undefined}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { nextTick } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\"\r\nimport { useMounted, useUpdate, useWindowResize } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getComputedStyle } from \"../utils/dom/computed-style\"\r\nimport { preventDefault } from \"../utils/dom/event\"\r\nimport { getRect, makeRect, Rect } from \"../utils/dom/rect\"\r\nimport { addUnitPx, unitToPx } from \"../utils/format/unit\"\r\nimport { doubleRaf } from \"../utils/raf\"\r\nimport { useRendered, useRenderedRef, useToRef, useValue } from \"../utils/state\"\r\nimport { useTouch } from \"../utils/touch\"\r\nimport SwiperIndicator from \"./swiper-indicator\"\r\nimport SwiperItem from \"./swiper-item\"\r\nimport SwiperContext, { SwiperItemInstance } from \"./swiper.context\"\r\nimport { SwiperDirection } from \"./swiper.shared\"\r\n\r\ninterface SwiperChildren {\r\n  items: ReactNode[]\r\n  indicator: ReactNode\r\n  count: number\r\n}\r\n\r\nfunction useSwiperChildren(children: ReactNode): SwiperChildren {\r\n  const __children__: SwiperChildren = {\r\n    items: [],\r\n    indicator: undefined,\r\n    count: 0,\r\n  }\r\n  let index = 0\r\n  Children.forEach(children, (child: ReactNode, i) => {\r\n    // Skip is not Item of Swiper\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n    const element = child as ReactElement\r\n    const elementType = element.type\r\n    if (elementType === SwiperIndicator) {\r\n      __children__.indicator = element\r\n    } else if (elementType === SwiperItem) {\r\n      const { key } = element\r\n      __children__.items.push(\r\n        cloneElement(element, {\r\n          ...element.props,\r\n          key: key ?? i,\r\n          __dataIndex__: index++,\r\n        }),\r\n      )\r\n    } else {\r\n      __children__.items.push(element)\r\n    }\r\n  })\r\n\r\n  __children__.count = __children__.items.length\r\n  return __children__\r\n}\r\n\r\nfunction getIndicatorValue(value: number, count: number) {\r\n  return (value + count) % count\r\n}\r\n\r\nexport interface SwiperProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  defaultValue?: number\r\n  value?: number\r\n  lazyRender?: boolean\r\n  width?: number\r\n  height?: number\r\n  autoplay?: number\r\n  loop?: boolean\r\n  touchable?: boolean\r\n  duration?: number\r\n  direction?: SwiperDirection\r\n  stopPropagation?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: number): void\r\n}\r\n\r\nfunction Swiper(props: SwiperProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    lazyRender,\r\n    loop = true,\r\n    touchable = true,\r\n    autoplay = 0,\r\n    duration = 500,\r\n    width,\r\n    height,\r\n    direction = \"horizontal\",\r\n    stopPropagation = true,\r\n    children: childrenProp,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    value: valueProp,\r\n    defaultValue,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const valueRef = useToRef(value)\r\n\r\n  const { count, indicator, items } = useSwiperChildren(childrenProp)\r\n\r\n  const itemInstances = useMemo<SwiperItemInstance[]>(() => [], [])\r\n\r\n  const touch = useTouch()\r\n\r\n  const update = useUpdate()\r\n\r\n  const vertical = direction === \"vertical\"\r\n\r\n  const rootRef = useRef()\r\n\r\n  const rectRef = useRef<Rect>()\r\n\r\n  const [offset, setOffset] = useState<number>(0)\r\n\r\n  const swipingRef = useRef(false) // Whether to swiping manually\r\n\r\n  const activeIndexRef = useRef<number>(0)\r\n\r\n  const touchStartTimeRef = useRef(0)\r\n\r\n  const autoplayTimerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const valueIndicatorRef = useRenderedRef(() => getIndicatorValue(value, count))\r\n\r\n  const activeIndicatorRef = useRenderedRef(() => getIndicatorValue(activeIndexRef.current, count))\r\n\r\n  const getDelta = useCallback(\r\n    () => (vertical ? touch.deltaY : touch.deltaX),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getCorrectDirection = useCallback(\r\n    () => touch.direction === direction,\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const customRectRef = useRenderedRef(() => ({\r\n    width: width ?? rectRef.current?.width,\r\n    height: height ?? rectRef.current?.height,\r\n  }))\r\n\r\n  const propRectRef = useRenderedRef(() => ({\r\n    width,\r\n    height,\r\n  }))\r\n\r\n  const sizeRef = useRenderedRef(\r\n    () => (vertical ? customRectRef.current?.height : customRectRef.current?.width) ?? 0,\r\n  )\r\n\r\n  const trackSizeRef = useRenderedRef(() => count * sizeRef.current)\r\n\r\n  const minOffsetRef = useRenderedRef(() => {\r\n    if (rectRef.current) {\r\n      const base = (vertical ? rectRef.current?.height : rectRef.current?.width) ?? 0\r\n      return base - sizeRef.current * count\r\n    }\r\n    return 0\r\n  })\r\n\r\n  const maxCountRef = useRenderedRef(() =>\r\n    Math.ceil(Math.abs(minOffsetRef.current) / sizeRef.current),\r\n  )\r\n\r\n  const getTargetActive = useCallback(\r\n    (pace: number) => {\r\n      if (pace) {\r\n        if (loop) {\r\n          return _.clamp(activeIndexRef.current + pace, -1, count)\r\n        }\r\n        return _.clamp(activeIndexRef.current + pace, 0, maxCountRef.current)\r\n      }\r\n      return activeIndexRef.current\r\n    },\r\n    [loop, maxCountRef, count],\r\n  )\r\n\r\n  const getTargetOffset = useCallback(\r\n    (targetActive: number, offset = 0) => {\r\n      let currentPosition = targetActive * sizeRef.current\r\n      if (!loop) {\r\n        currentPosition = Math.min(currentPosition, -minOffsetRef.current)\r\n      }\r\n\r\n      let targetOffset = offset - currentPosition\r\n      if (!loop) {\r\n        targetOffset = _.clamp(targetOffset, minOffsetRef.current, 0)\r\n      }\r\n      return targetOffset\r\n    },\r\n    [sizeRef, loop, minOffsetRef],\r\n  )\r\n\r\n  const moveTo = useCallback(\r\n    ({ pace = 0, offset = 0, emitChange = false }) => {\r\n      if (count <= 1) {\r\n        return\r\n      }\r\n\r\n      const targetActive = getTargetActive(pace)\r\n      const targetOffset = getTargetOffset(targetActive, offset)\r\n      if (loop) {\r\n        if (itemInstances[0] && targetOffset !== minOffsetRef.current) {\r\n          const outRightBound = targetOffset < minOffsetRef.current\r\n          itemInstances[0].setOffset(outRightBound ? trackSizeRef.current : 0)\r\n        }\r\n\r\n        if (itemInstances[count - 1] && targetOffset !== 0) {\r\n          const outLeftBound = targetOffset > 0\r\n          itemInstances[count - 1].setOffset(outLeftBound ? -trackSizeRef.current : 0)\r\n        }\r\n      }\r\n\r\n      const previousActiveIndex = activeIndexRef.current\r\n      activeIndexRef.current = targetActive\r\n      setOffset(targetOffset)\r\n\r\n      if (emitChange && previousActiveIndex !== targetActive) {\r\n        setValue(getIndicatorValue(targetActive, count))\r\n      }\r\n    },\r\n    [\r\n      count,\r\n      getTargetActive,\r\n      getTargetOffset,\r\n      loop,\r\n      itemInstances,\r\n      minOffsetRef,\r\n      trackSizeRef,\r\n      setValue,\r\n    ],\r\n  )\r\n\r\n  const correctPosition = useCallback(() => {\r\n    swipingRef.current = true\r\n    if (activeIndexRef.current <= -1) {\r\n      moveTo({ pace: count })\r\n    } else if (activeIndexRef.current >= count) {\r\n      moveTo({ pace: -count })\r\n    }\r\n  }, [count, moveTo])\r\n\r\n  const swipeTo = useCallback(\r\n    (index: number) => {\r\n      correctPosition()\r\n      touch.reset()\r\n\r\n      doubleRaf(() => {\r\n        let targetIndex\r\n        if (loop && index === count) {\r\n          targetIndex = activeIndexRef.current === 0 ? 0 : index\r\n        } else {\r\n          targetIndex = index % count\r\n        }\r\n\r\n        swipingRef.current = false\r\n\r\n        moveTo({\r\n          pace: targetIndex - activeIndexRef.current,\r\n          emitChange: true,\r\n        })\r\n      })\r\n    },\r\n    [correctPosition, count, loop, moveTo, touch],\r\n  )\r\n\r\n  // const previous = useCallback(() => {\r\n  //   correctPosition()\r\n  //   doubleRaf(() => {\r\n  //     swipingRef.current = false\r\n  //     moveTo({\r\n  //       pace: -1,\r\n  //       emitChange: true,\r\n  //     })\r\n  //   })\r\n  // }, [correctPosition, moveTo])\r\n\r\n  const next = useCallback(() => {\r\n    correctPosition()\r\n    doubleRaf(() => {\r\n      swipingRef.current = false\r\n      moveTo({\r\n        pace: 1,\r\n        emitChange: true,\r\n      })\r\n    })\r\n  }, [correctPosition, moveTo])\r\n\r\n  const stopAutoplay = useCallback(() => {\r\n    if (autoplayTimerRef.current) {\r\n      clearTimeout(autoplayTimerRef.current)\r\n    }\r\n  }, [])\r\n\r\n  const startAutoplay = useCallback(() => {\r\n    stopAutoplay()\r\n    if (autoplay > 0 && count > 1) {\r\n      autoplayTimerRef.current = setTimeout(() => {\r\n        next()\r\n        startAutoplay()\r\n      }, +autoplay)\r\n    }\r\n  }, [autoplay, count, next, stopAutoplay])\r\n\r\n  const onTouchStart = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (!touchable) {\r\n        return\r\n      }\r\n\r\n      touch.start(event)\r\n      touchStartTimeRef.current = Date.now()\r\n\r\n      stopAutoplay()\r\n      correctPosition()\r\n    },\r\n    [correctPosition, stopAutoplay, touch, touchable],\r\n  )\r\n\r\n  const onTouchMove = useCallback(\r\n    (event: ITouchEvent) => {\r\n      if (!touchable || !swipingRef.current) {\r\n        return\r\n      }\r\n\r\n      touch.move(event)\r\n      const correctDirection = getCorrectDirection()\r\n      // if user starting to touchmove, prevent the event bubbling to\r\n      // avoid affecting the parent components\r\n      const shouldPrevent = correctDirection || touch.offsetY > touch.offsetX === vertical\r\n      if (shouldPrevent) {\r\n        preventDefault(event, stopPropagation)\r\n      }\r\n\r\n      if (correctDirection) {\r\n        moveTo({ offset: getDelta() })\r\n      }\r\n    },\r\n    [getCorrectDirection, getDelta, moveTo, stopPropagation, touch, touchable, vertical],\r\n  )\r\n\r\n  const onTouchEnd = useCallback(() => {\r\n    if (!touchable || !swipingRef.current) {\r\n      return\r\n    }\r\n    const duration = Date.now() - touchStartTimeRef.current\r\n\r\n    const delta = getDelta()\r\n    const speed = delta / duration\r\n    const shouldSwipe = Math.abs(speed) > 0.25 || Math.abs(delta) > sizeRef.current / 2\r\n\r\n    swipingRef.current = false\r\n    const correctDirection = getCorrectDirection()\r\n    if (shouldSwipe && correctDirection) {\r\n      const offset = vertical ? touch.offsetY : touch.offsetX\r\n\r\n      let pace: number\r\n\r\n      if (loop) {\r\n        pace = offset > 0 ? (delta > 0 ? -1 : 1) : 0\r\n      } else {\r\n        pace = -Math[delta > 0 ? \"ceil\" : \"floor\"](delta / sizeRef.current)\r\n      }\r\n\r\n      moveTo({\r\n        pace,\r\n        emitChange: true,\r\n      })\r\n    } else if (delta) {\r\n      moveTo({ pace: 0 })\r\n    }\r\n    startAutoplay()\r\n  }, [\r\n    touchable,\r\n    getDelta,\r\n    sizeRef,\r\n    getCorrectDirection,\r\n    startAutoplay,\r\n    vertical,\r\n    touch.offsetY,\r\n    touch.offsetX,\r\n    loop,\r\n    moveTo,\r\n  ])\r\n\r\n  const getTrackRect = useCallback(\r\n    () =>\r\n      Promise.all([\r\n        getRect(rootRef),\r\n        getComputedStyle(rootRef, [\"width\", \"height\"]),\r\n      ]).then(([rect, style]) =>\r\n        makeRect(\r\n          style.width === \"auto\" ? rect.width : unitToPx(style.width),\r\n          style.height === \"auto\" ? rect.height : unitToPx(style.height),\r\n        ),\r\n      ),\r\n    [],\r\n  )\r\n\r\n  const initialize = useCallback(\r\n    async (activeIndex = valueRef.current) => {\r\n      if (!rootRef.current) {\r\n        return\r\n      }\r\n      rectRef.current = await getTrackRect()\r\n      if (count) {\r\n        activeIndex = Math.min(count - 1, activeIndex)\r\n      }\r\n      activeIndexRef.current = activeIndex\r\n      swipingRef.current = true\r\n      const targetOffset = getTargetOffset(activeIndex)\r\n      setOffset(targetOffset)\r\n      // Force update render\r\n      if (targetOffset === offset) {\r\n        update()\r\n      }\r\n      itemInstances.forEach((item) => item.setOffset(0))\r\n    },\r\n    [valueRef, getTrackRect, count, getTargetOffset, offset, itemInstances, update],\r\n  )\r\n\r\n  const resize = useCallback(() => nextTick(() => initialize(activeIndexRef.current)), [initialize])\r\n\r\n  useMounted(initialize)\r\n\r\n  useWindowResize(resize)\r\n\r\n  useMounted(() => {\r\n    startAutoplay()\r\n    return stopAutoplay\r\n  })\r\n\r\n  useEffect(\r\n    () => {\r\n      const valueIndicator = valueIndicatorRef.current\r\n      const activeIndicator = activeIndicatorRef.current\r\n      if (valueIndicator !== activeIndicator) {\r\n        try {\r\n          stopAutoplay()\r\n          swipeTo(valueIndicator)\r\n        } finally {\r\n          startAutoplay()\r\n        }\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [valueIndicatorRef.current],\r\n  )\r\n\r\n  const trackStyle = useRendered(() => {\r\n    const style: CSSProperties = {\r\n      transitionDuration: `${swipingRef.current ? 0 : duration}ms`,\r\n      transform: `translate${vertical ? \"Y\" : \"X\"}(${addUnitPx(offset)})`,\r\n    }\r\n\r\n    if (sizeRef.current) {\r\n      const mainAxis = vertical ? \"height\" : \"width\"\r\n      style[mainAxis] = `${addUnitPx(trackSizeRef.current)}`\r\n      const crossAxis = vertical ? \"width\" : \"height\"\r\n      const crossAxisValue = propRectRef.current[crossAxis]\r\n      style[crossAxis] = crossAxisValue ? addUnitPx(crossAxisValue) : \"\"\r\n    }\r\n    return style\r\n  })\r\n\r\n  return (\r\n    <View ref={rootRef} className={classNames(prefixClassname(\"swiper\"), className)} {...restProps}>\r\n      <SwiperContext.Provider\r\n        value={{\r\n          lazyRender,\r\n          loop,\r\n          direction,\r\n          indicator: activeIndicatorRef.current,\r\n          size: sizeRef.current,\r\n          count,\r\n          itemInstances,\r\n        }}\r\n      >\r\n        <View\r\n          className={classNames(prefixClassname(\"swiper__track\"), {\r\n            [prefixClassname(\"swiper__track--vertical\")]: vertical,\r\n          })}\r\n          catchMove\r\n          onTouchStart={onTouchStart}\r\n          onTouchMove={onTouchMove}\r\n          onTouchEnd={onTouchEnd}\r\n          onTouchCancel={onTouchEnd}\r\n          style={trackStyle}\r\n          children={items}\r\n        />\r\n        {indicator}\r\n      </SwiperContext.Provider>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Swiper\r\n","import SwiperElement, { SwiperProps } from \"./swiper\"\r\nimport SwiperIndicator, { SwiperIndicatorProps } from \"./swiper-indicator\"\r\nimport SwiperItem, { SwiperItemProps } from \"./swiper-item\"\r\nimport { SwiperItemEvent } from \"./swiper.shared\"\r\n\r\ninterface SwiperInterface {\r\n  (props: SwiperProps): JSX.Element\r\n\r\n  Item: typeof SwiperItem\r\n  Indicator: typeof SwiperIndicator\r\n}\r\n\r\nconst Swiper = (SwiperElement as unknown) as SwiperInterface\r\n\r\nSwiper.Item = SwiperItem\r\nSwiper.Indicator = SwiperIndicator\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Swiper {\r\n  export type ItemEvent = SwiperItemEvent\r\n\r\n  export type ItemProps = SwiperItemProps\r\n\r\n  export type IndicatorProps = SwiperIndicatorProps\r\n}\r\n\r\nexport default Swiper\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { getSystemInfo } from \"@tarojs/taro\"\r\nimport { useState } from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\n\r\nconst INITIAL_RECT: SystemRect = {\r\n  screenHeight: 0,\r\n  screenWidth: 0,\r\n  windowHeight: 0,\r\n  windowWidth: 0,\r\n}\r\n\r\nexport interface SystemRect {\r\n  screenHeight: number\r\n  screenWidth: number\r\n  windowHeight: number\r\n  windowWidth: number\r\n}\r\n\r\nexport function getSystemRect(): Promise<SystemRect> {\r\n  return getSystemInfo().then(({ screenHeight, screenWidth, windowHeight, windowWidth }) => ({\r\n    screenHeight,\r\n    screenWidth,\r\n    windowHeight,\r\n    windowWidth,\r\n  }))\r\n}\r\n\r\nexport function useSystemRect(): SystemRect {\r\n  const [rect, setRect] = useState<SystemRect>(INITIAL_RECT)\r\n  useMounted(() => getSystemRect().then(setRect))\r\n  return rect\r\n}\r\n","import Sticky from \"./sticky\"\n\nexport default Sticky\n","import { View } from \"@tarojs/components\"\nimport { ViewProps } from \"@tarojs/components/types/View\"\nimport { PageScrollObject, usePageScroll } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport {\n  CSSProperties,\n  MutableRefObject,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\nimport { useMounted } from \"../hooks\"\nimport { prefixClassname } from \"../styles\"\nimport { getRect } from \"../utils/dom/rect\"\nimport { addUnitPx, unitToPx } from \"../utils/format/unit\"\nimport { getSystemRect } from \"../utils/system\"\n\ninterface RootReact {\n  height?: number\n  width?: number\n}\n\ntype StickyPosition = \"top\" | \"bottom\"\n\ninterface StickyOffset {\n  top?: number | string\n  bottom?: number | string\n}\n\ninterface StickyProps extends ViewProps {\n  className?: string\n  style?: CSSProperties\n  position?: StickyPosition\n  offset?: StickyOffset\n  offsetTop?: number | string\n  offsetBottom?: number | string\n  container?: MutableRefObject<Element | undefined>\n  children?: ReactNode\n\n  onChange?(fixed: boolean): void\n\n  onScroll?(scroll: PageScrollObject): void\n}\n\nexport default function Sticky(props: StickyProps) {\n  const {\n    className,\n    style: styleProp,\n    position = \"top\",\n    offsetTop: offsetTopProp,\n    offsetBottom: offsetBottomProp,\n    offset: offsetProp,\n    container: containerRef,\n    children,\n    onChange,\n    onScroll,\n    ...restProps\n  } = props\n\n  if (offsetProp) {\n    const { top, bottom } = offsetProp\n    if (top) {\n      // eslint-disable-next-line no-console\n      console.warn(\"[Deprecated] Use the 'offsetTop' prop instead of the 'offset.top' prop.\")\n    }\n    if (bottom) {\n      // eslint-disable-next-line no-console\n      console.warn(\"[Deprecated] Use the 'offsetBottom' prop instead of the 'offset.bottom' prop.\")\n    }\n  }\n\n  const offsetTop = offsetTopProp ?? offsetProp?.top\n  const offsetBottom = offsetBottomProp ?? offsetProp?.bottom\n\n  const rootRef = useRef<ViewProps>()\n  const counterRef = useRef(0)\n\n  const [rootRect, setRootRect] = useState<RootReact>({})\n\n  const [fixed, setFixed] = useState(false)\n  const [transform, setTransform] = useState(0)\n\n  const offsetValue = useMemo(\n    () => unitToPx((position === \"top\" ? offsetTop : offsetBottom) ?? 0),\n    [offsetBottom, offsetTop, position],\n  )\n\n  const rootStyle: CSSProperties | undefined = useMemo(() => {\n    if (!fixed) {\n      return {\n        height: \"\",\n        width: \"\",\n      }\n    }\n    const style: CSSProperties = {}\n    if (rootRect.height) {\n      style.height = addUnitPx(rootRect.height)\n    }\n    if (rootRect.width) {\n      style.width = addUnitPx(rootRect.width)\n    }\n    return style\n  }, [fixed, rootRect.height, rootRect.width])\n\n  const stickyStyle: CSSProperties | undefined = useMemo(() => {\n    if (!fixed) {\n      return {\n        height: \"\",\n        width: \"\",\n        [position]: \"\",\n      }\n    }\n    const style: CSSProperties = {}\n    if (rootRect.height) {\n      style.height = addUnitPx(rootRect.height)\n    }\n    if (rootRect.width) {\n      style.width = addUnitPx(rootRect.width)\n    }\n    style.transform = transform ? `translate3d(0, ${addUnitPx(transform)}, 0)` : \"\"\n    style[position] = addUnitPx(offsetValue)\n    return style\n  }, [fixed, rootRect.height, rootRect.width, transform, position, offsetValue])\n\n  async function invokeScroll({ scrollTop }: PageScrollObject) {\n    const __rootRect__ = await getRect(rootRef)\n    if (__rootRect__) {\n      setRootRect(__rootRect__)\n      if (position === \"top\") {\n        if (containerRef) {\n          const containerRect = await getRect(containerRef)\n          const difference = containerRect.bottom - offsetValue - __rootRect__.height\n          setTransform(difference < 0 ? difference : 0)\n          setFixed(offsetValue > __rootRect__.top && containerRect.bottom > 0)\n        } else {\n          setFixed(offsetValue > __rootRect__.top)\n        }\n      } else {\n        const { windowHeight } = await getSystemRect()\n        if (containerRef) {\n          const containerRect = await getRect(containerRef)\n          const difference = windowHeight - containerRect.top - offsetValue - __rootRect__.height\n          setTransform(difference < 0 ? difference : 0)\n          setFixed(\n            windowHeight - offsetValue < __rootRect__.bottom && windowHeight > containerRect.top,\n          )\n        } else {\n          setFixed(windowHeight - offsetValue < __rootRect__.bottom)\n        }\n      }\n    }\n    onScroll?.({ scrollTop })\n  }\n\n  useEffect(() => {\n    if (counterRef.current > 0) {\n      onChange?.(fixed)\n    }\n    counterRef.current++\n  }, [fixed, onChange])\n\n  useMounted(() => invokeScroll({ scrollTop: 0 }))\n\n  usePageScroll(({ scrollTop }) => invokeScroll({ scrollTop }))\n\n  return (\n    <View\n      ref={rootRef}\n      style={{\n        ...styleProp,\n        ...rootStyle,\n      }}\n      {...restProps}\n    >\n      <View\n        style={stickyStyle}\n        className={classNames(\n          prefixClassname(\"sticky\"),\n          {\n            [prefixClassname(\"sticky--fixed\")]: fixed,\n          },\n          className,\n        )}\n        children={children}\n      />\n    </View>\n  )\n}\n","import \"../../styles/style\"\r\nimport \"../../sticky/style\"\r\nimport \"../../swiper/style\"\r\nimport \"../index.scss\"\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\n\r\ninterface TabPaneProps extends ViewProps {\r\n  className?: string\r\n  value?: any\r\n  classNames?: { title: string }\r\n  title?: ReactNode\r\n  disabled?: boolean\r\n  dot?: boolean\r\n  badge?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function TabPane(props: TabPaneProps) {\r\n  return <></>\r\n}\r\n","import { createContext } from \"react\"\r\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\r\n\r\ninterface TabsContextValue {\r\n  index?: number\r\n  value: any\r\n  duration?: number\r\n  lazyRender: boolean\r\n  animated: boolean\r\n  swipeable: boolean\r\n  theme?: TabsTheme\r\n  bordered?: boolean\r\n  ellipsis?: boolean\r\n  tabObjects: TabObject[]\r\n\r\n  onTabClick?(event: TabEvent): void\r\n}\r\n\r\nconst TabsContext = createContext<TabsContextValue>({\r\n  value: undefined,\r\n  lazyRender: true,\r\n  animated: false,\r\n  swipeable: false,\r\n  tabObjects: [],\r\n})\r\n\r\nexport default TabsContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useMemo, useRef } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport Swiper from \"../swiper\"\r\nimport TabsContext from \"./tabs.context\"\r\n\r\ninterface TabPaneBaseProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  index: number\r\n  value?: any\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function TabPaneBase(props: TabPaneBaseProps) {\r\n  const { className, style, index, value, children, ...restProps } = props\r\n  const { index: activeIndex, value: activeValue, lazyRender, animated, swipeable } = useContext(\r\n    TabsContext,\r\n  )\r\n\r\n  const active = activeValue === value\r\n\r\n  const initializedRef = useRef(false)\r\n\r\n  const shouldRender = useMemo(() => {\r\n    if (!lazyRender) {\r\n      return true\r\n    }\r\n\r\n    if (initializedRef.current) {\r\n      return true\r\n    }\r\n\r\n    if ((index - 1 === activeIndex || index + 1 === activeIndex) && !initializedRef.current) {\r\n      initializedRef.current = true\r\n      return true\r\n    }\r\n\r\n    if (active && !initializedRef.current) {\r\n      initializedRef.current = true\r\n    }\r\n    return active\r\n  }, [active, activeIndex, index, lazyRender])\r\n\r\n  const tabPane = (\r\n    <View\r\n      style={{\r\n        ...style,\r\n        display: !(animated || swipeable) && !active ? \"none\" : \"\",\r\n      }}\r\n      className={classNames(prefixClassname(\"tabs__tab-pane\"), className)}\r\n      children={shouldRender ? children : undefined}\r\n      {...restProps}\r\n    />\r\n  )\r\n\r\n  if (animated || swipeable) {\r\n    return (\r\n      <Swiper.Item\r\n        className={classNames(prefixClassname(\"tabs__tab-pane-wrapper\"), {\r\n          [prefixClassname(\"tabs__tab-pane-wrapper--inactive\")]: !active,\r\n        })}\r\n        children={tabPane}\r\n      />\r\n    )\r\n  }\r\n\r\n  return tabPane\r\n}\r\n","import { View } from \"@tarojs/components\"\nimport classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport * as React from \"react\"\nimport { ReactNode, useMemo } from \"react\"\nimport { prefixClassname } from \"../styles\"\nimport Swiper from \"../swiper\"\nimport TabPaneBase from \"./tab-pane-base\"\nimport { TabEvent, TabObject } from \"./tabs.shared\"\n\nfunction useTabPanes(tabObjects?: TabObject[]): ReactNode {\n  return useMemo(() => _.map(tabObjects, (props) => <TabPaneBase {...props} />), [tabObjects])\n}\n\ninterface TabsContentProps {\n  value: any\n  lazyRender: boolean\n  duration?: number\n  animated: boolean\n  swipeable: boolean\n  tabObjects: TabObject[]\n\n  onTabClick?(event: TabEvent): void\n}\n\nexport function TabsContent(props: TabsContentProps) {\n  const { value: activeValue, duration, animated, swipeable, tabObjects, onTabClick } = props\n\n  const panes = useTabPanes(tabObjects)\n\n  function onSwiperChange(index: number) {\n    const tabObject = _.get(tabObjects, index)\n    if (tabObject) {\n      const { value, title, disabled } = tabObject\n      if (!disabled) {\n        onTabClick?.({ value, title, disabled })\n      }\n    }\n  }\n\n  const renderChildren = () => {\n    if (animated || swipeable) {\n      return (\n        <Swiper\n          value={activeValue as number}\n          loop={false}\n          className={prefixClassname(\"tabs__track\")}\n          duration={duration}\n          touchable={swipeable}\n          children={panes}\n          onChange={onSwiperChange}\n        />\n      )\n    }\n\n    return panes\n  }\n\n  return (\n    <View\n      className={classNames(prefixClassname(\"tabs__content\"), {\n        [prefixClassname(\"tabs__content--animated\")]: animated,\n      })}\n      children={renderChildren()}\n    />\n  )\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TabsContext from \"./tabs.context\"\r\n\r\ninterface TabsLineProps {\r\n  active?: boolean\r\n}\r\n\r\nexport default function TabsLine(props: TabsLineProps) {\r\n  const { active } = props\r\n  const { duration } = useContext(TabsContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"tabs__line\"), {\r\n        [prefixClassname(\"tabs__line--active\")]: active,\r\n      })}\r\n      style={{ transitionDuration: `${duration}ms` }}\r\n    />\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TabsLine from \"./tabs-line\"\r\n\r\ninterface TabProps extends ViewProps {\r\n  active?: boolean\r\n  disabled?: boolean\r\n  underline?: boolean\r\n  dot?: boolean\r\n  badge?: ReactNode\r\n  ellipsis?: boolean\r\n  flexBasis?: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Tab(props: TabProps) {\r\n  const {\r\n    className,\r\n    active,\r\n    disabled = false,\r\n    underline,\r\n    ellipsis,\r\n    flexBasis,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      style={{ flexBasis }}\r\n      className={classNames(\r\n        prefixClassname(\"tabs__tab\"),\r\n        {\r\n          [prefixClassname(\"tabs__tab--active\")]: active,\r\n          [prefixClassname(\"tabs__tab--disabled\")]: disabled,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"tabs__tab__content\"), {\r\n          [prefixClassname(\"ellipsis\")]: ellipsis,\r\n        })}\r\n        children={children}\r\n      />\r\n      {underline && <TabsLine active={active} />}\r\n    </View>\r\n  )\r\n}\r\n","import { ScrollView, View } from \"@tarojs/components\"\nimport { nextTick, offWindowResize, onWindowResize } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport * as React from \"react\"\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport { prefixClassname } from \"../styles\"\nimport { HAIRLINE_BORDER_TOP_BOTTOM } from \"../styles/hairline\"\nimport { getRect, getRects } from \"../utils/dom/rect\"\nimport Tab from \"./tab\"\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\n\nexport interface NavOffset {\n  left?: number\n  width?: number\n}\n\nexport interface TabOffset {\n  left?: number\n  width?: number\n}\n\ninterface TabsHeaderProps {\n  value: any\n  theme?: TabsTheme\n  bordered?: boolean\n  ellipsis?: boolean\n  tabObjects: TabObject[]\n\n  onTabClick?(event: TabEvent): void\n}\n\nexport default function TabsHeader(props: TabsHeaderProps) {\n  const { value: activeValue, theme, ellipsis, bordered, tabObjects, onTabClick } = props\n  const themeLine = theme === \"line\"\n  const themeCard = theme === \"card\"\n\n  const navRef = useRef()\n\n  const [navOffset, setNavOffset] = useState<NavOffset>({})\n  const [tabOffsets, setTabOffsets] = useState<TabOffset[]>([])\n\n  const activeIndex = useMemo(() => _.findIndex(tabObjects, (tab) => tab.value === activeValue), [\n    tabObjects,\n    activeValue,\n  ])\n\n  const activeOffset = useMemo(() => {\n    if (_.isEmpty(tabOffsets) || activeIndex === -1 || activeIndex >= _.size(tabOffsets)) {\n      return {}\n    }\n    const { width } = tabOffsets[activeIndex]\n    const left = tabOffsets\n      .slice(0, activeIndex)\n      .reduce((prev: number, curr: TabOffset) => prev + (curr.width ?? 0), 0)\n    return {\n      left,\n      width,\n    }\n  }, [tabOffsets, activeIndex])\n\n  const scrollLeft = useMemo(() => {\n    if (navOffset) {\n      const { width: navOffsetWidth = 0 } = navOffset\n      const { left: offsetLeft = 0, width: offsetWidth = 0 } = activeOffset\n      return offsetLeft - (navOffsetWidth - offsetWidth) / 2\n    }\n    return 0\n  }, [navOffset, activeOffset])\n\n  const resize = useCallback(() => {\n    Promise.all([getRect(navRef), getRects(navRef, ` .${prefixClassname(\"tabs__tab\")}`)]).then(\n      ([navRect, tabRects]) => {\n        setNavOffset(navRect)\n        setTabOffsets(tabRects)\n      },\n    )\n  }, [])\n\n  useEffect(() => nextTick(resize), [resize, tabObjects])\n\n  // resize\n  useEffect(() => {\n    onWindowResize?.(resize)\n    return () => offWindowResize?.(resize)\n  }, [resize])\n\n  return (\n    <View\n      className={classNames(\n        prefixClassname(\"tabs__wrap\"),\n        prefixClassname(\"tabs__wrap--scrollable\"),\n        {\n          [HAIRLINE_BORDER_TOP_BOTTOM]: bordered && themeLine,\n        },\n      )}\n    >\n      <ScrollView\n        scrollX\n        scrollWithAnimation\n        scrollLeft={scrollLeft}\n        className={classNames(prefixClassname(\"tabs__wrap__scroll\"), {\n          [prefixClassname(\"tabs__wrap__scroll--line\")]: themeLine,\n          [prefixClassname(\"tabs__wrap__scroll--card\")]: themeCard,\n        })}\n      >\n        <View\n          ref={navRef}\n          className={classNames(prefixClassname(\"tabs__nav\"), {\n            [prefixClassname(\"tabs__nav--line\")]: themeLine,\n            [prefixClassname(\"tabs__nav--card\")]: themeCard,\n          })}\n        >\n          {\n            //\n            _.map(tabObjects, (tabObject) => (\n              <Tab\n                key={tabObject.key}\n                // TODO swipeThreshold does not support\n                flexBasis={themeLine && ellipsis ? `${88 / 4}%` : \"\"}\n                className={tabObject?.classNames?.title}\n                dot={tabObject.dot}\n                badge={tabObject.badge}\n                active={activeValue === tabObject.value}\n                disabled={tabObject.disabled}\n                underline={themeLine}\n                ellipsis={themeLine && ellipsis}\n                children={tabObject.title}\n                onClick={() =>\n                  onTabClick?.({\n                    value: tabObject.value,\n                    title: tabObject.title,\n                    disabled: tabObject.disabled,\n                  })\n                }\n              />\n            ))\n          }\n        </View>\n      </ScrollView>\n    </View>\n  )\n}\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { PageScrollObject } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\"\r\nimport Sticky from \"../sticky\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useValue } from \"../utils/state\"\r\nimport TabPane from \"./tab-pane\"\r\nimport { TabsContent } from \"./tabs-content\"\r\nimport TabsHeader from \"./tabs-header\"\r\nimport TabsContext from \"./tabs.context\"\r\nimport { TabEvent, TabObject, TabsTheme } from \"./tabs.shared\"\r\n\r\nfunction useTabObjects(children: ReactNode) {\r\n  return useMemo(() => {\r\n    const tabObjects: TabObject[] = []\r\n\r\n    Children.forEach(children, (node: ReactNode) => {\r\n      if (!isValidElement(node)) {\r\n        return node\r\n      }\r\n      const element = node as ReactElement\r\n      if (element.type !== TabPane) {\r\n        return element\r\n      }\r\n      const { key, props } = element\r\n      const index = _.size(tabObjects)\r\n      const { value, ...restProps } = props\r\n      tabObjects.push({\r\n        key: key ?? index,\r\n        index,\r\n        value: value ?? index,\r\n        ...restProps,\r\n      })\r\n    })\r\n\r\n    return tabObjects\r\n  }, [children])\r\n}\r\n\r\ninterface TabsSticky {\r\n  offsetTop?: string | number\r\n}\r\n\r\nfunction useTabsSticky(sticky?: boolean | TabsSticky): TabsSticky | undefined {\r\n  if (sticky === false) {\r\n    return undefined\r\n  }\r\n  if (_.isBoolean(sticky) && sticky) {\r\n    return {\r\n      offsetTop: 0,\r\n    }\r\n  }\r\n  return sticky\r\n}\r\n\r\nexport interface TabsProps extends ViewProps {\r\n  className?: string\r\n  defaultValue?: any\r\n  value?: any\r\n  theme?: TabsTheme\r\n  duration?: number\r\n  lazyRender?: boolean\r\n  animated?: boolean\r\n  swipeable?: boolean\r\n  sticky?: boolean | TabsSticky\r\n  bordered?: boolean\r\n  ellipsis?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any, event: TabEvent): void\r\n\r\n  onTabClick?(event: TabEvent): void\r\n\r\n  onScroll?(scroll: PageScrollObject): void\r\n}\r\n\r\nfunction Tabs(props: TabsProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    duration = 300,\r\n    lazyRender = true,\r\n    animated = false,\r\n    swipeable = false,\r\n    sticky = false,\r\n    theme = \"line\",\r\n    ellipsis = true,\r\n    bordered,\r\n    children: childrenProp,\r\n    onTabClick,\r\n    onChange,\r\n    onScroll,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    defaultValue,\r\n    value: valueProp,\r\n  })\r\n\r\n  const rootRef = useRef()\r\n\r\n  const stickyProps = useTabsSticky(sticky)\r\n\r\n  const tabObjects = useTabObjects(childrenProp)\r\n\r\n  const index = useMemo<number | undefined>(() => {\r\n    for (const tab of tabObjects) {\r\n      if (tab.value === value) {\r\n        return tab.index\r\n      }\r\n    }\r\n  }, [tabObjects, value])\r\n\r\n  const handleTabClick = useCallback(\r\n    (event: TabEvent) => {\r\n      if (!event.disabled) {\r\n        setValue(event.value)\r\n        onChange?.(event.value, event)\r\n      }\r\n      onTabClick?.(event)\r\n    },\r\n    [onChange, onTabClick, setValue],\r\n  )\r\n\r\n  const headerRender = useMemo(\r\n    () => (\r\n      <TabsHeader\r\n        value={value}\r\n        theme={theme}\r\n        bordered={bordered}\r\n        ellipsis={ellipsis}\r\n        tabObjects={tabObjects}\r\n        onTabClick={handleTabClick}\r\n      />\r\n    ),\r\n    [bordered, ellipsis, handleTabClick, tabObjects, theme, value],\r\n  )\r\n\r\n  return (\r\n    <TabsContext.Provider\r\n      value={{\r\n        index,\r\n        value,\r\n        duration,\r\n        lazyRender,\r\n        animated,\r\n        swipeable,\r\n        theme,\r\n        ellipsis,\r\n        bordered,\r\n        tabObjects,\r\n        onTabClick: handleTabClick,\r\n      }}\r\n    >\r\n      <View\r\n        ref={rootRef}\r\n        className={classNames(\r\n          prefixClassname(\"tabs\"),\r\n          {\r\n            [prefixClassname(\"tabs--line\")]: theme === \"line\",\r\n            [prefixClassname(\"tabs--card\")]: theme === \"card\",\r\n          },\r\n          className,\r\n        )}\r\n        {...restProps}\r\n      >\r\n        {stickyProps ? (\r\n          <Sticky\r\n            container={rootRef}\r\n            offsetTop={stickyProps.offsetTop}\r\n            children={headerRender}\r\n            onScroll={onScroll}\r\n          />\r\n        ) : (\r\n          headerRender\r\n        )}\r\n        <TabsContent\r\n          value={value}\r\n          lazyRender={lazyRender}\r\n          duration={duration}\r\n          animated={animated}\r\n          swipeable={swipeable}\r\n          tabObjects={tabObjects}\r\n          onTabClick={handleTabClick}\r\n        />\r\n      </View>\r\n    </TabsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Tabs\r\n","import TabPane from \"./tab-pane\"\r\nimport TabsElement, { TabsProps } from \"./tabs\"\r\nimport { TabEvent as SharedTabEvent } from \"./tabs.shared\"\r\n\r\ninterface TabsInterface {\r\n  (props: TabsProps): JSX.Element\r\n\r\n  TabPane: typeof TabPane\r\n}\r\n\r\nconst Tabs = TabsElement as TabsInterface\r\n\r\nTabs.TabPane = TabPane\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Tabs {\r\n  export type TabEvent = SharedTabEvent\r\n}\r\n\r\nexport default Tabs\r\n","import { TaroElement } from \"@tarojs/runtime\"\r\nimport { createSelectorQuery } from \"@tarojs/taro\"\r\nimport { inBrowser } from \"../base\"\r\nimport { getComputedStyle } from \"./computed-style\"\r\nimport { elementUnref, isRootElement, queryNodesRef } from \"./element\"\r\n\r\nconst defaultRoot: HTMLElement | undefined = inBrowser\r\n  ? ((window as unknown) as HTMLElement)\r\n  : undefined\r\n\r\nconst ELEMENT_NODE_TYPE = 1\r\n\r\nconst overflowScrollReg = /scroll|auto/i\r\n\r\nfunction isElementNode(node: Element) {\r\n  return node.tagName !== \"HTML\" && node.tagName !== \"BODY\" && node.nodeType === ELEMENT_NODE_TYPE\r\n}\r\n\r\n// https://github.com/youzan/vant/issues/3823\r\nexport async function getScrollParent(\r\n  elementOrRef?: any,\r\n  root: HTMLElement | undefined = defaultRoot,\r\n) {\r\n  let node: HTMLElement = (elementUnref(elementOrRef) as unknown) as HTMLElement\r\n\r\n  while (node && node !== root && isElementNode(node)) {\r\n    const { overflowY } = await getComputedStyle(node, [\"overflowY\"])\r\n    if (overflowScrollReg.test(overflowY)) {\r\n      return node\r\n    }\r\n    // Is root element\r\n    if (isRootElement((node as unknown) as TaroElement)) {\r\n      return node\r\n    }\r\n    node = node.parentNode as HTMLElement\r\n  }\r\n\r\n  return root\r\n}\r\n\r\ninterface ScrollOffset {\r\n  scrollLeft: number\r\n  scrollTop: number\r\n}\r\n\r\nexport function getRootScrollTop(): Promise<number> {\r\n  return new Promise((resolve) => {\r\n    if (inBrowser) {\r\n      resolve(\r\n        window.pageYOffset || //\r\n          document.documentElement.scrollTop ||\r\n          document.body.scrollTop ||\r\n          0,\r\n      )\r\n    } else {\r\n      createSelectorQuery()\r\n        .selectViewport()\r\n        .scrollOffset(({ scrollTop }) => resolve(scrollTop))\r\n        .exec()\r\n    }\r\n  })\r\n}\r\n\r\nfunction makeScrollOffset() {\r\n  return {\r\n    scrollTop: 0,\r\n    scrollLeft: 0,\r\n  }\r\n}\r\n\r\nexport function getScrollOffset(elementOrRef: any): Promise<ScrollOffset> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      const $element = element as any\r\n\r\n      const top = \"scrollTop\" in element ? $element.scrollTop : $element[\"pageYOffset\"]\r\n      const left = \"scrollLeft\" in element ? $element.scrollLeft : $element[\"pageXOffset\"]\r\n      return Promise.resolve({\r\n        scrollTop: Math.max(top, 0),\r\n        scrollLeft: Math.max(left, 0),\r\n      } as ScrollOffset)\r\n    } else {\r\n      return new Promise<ScrollOffset>((resolve) => {\r\n        queryNodesRef(element).scrollOffset(resolve).exec()\r\n      })\r\n    }\r\n  }\r\n  return Promise.resolve(makeScrollOffset())\r\n}\r\n\r\nexport function getScrollTop(elementOrRef: any): Promise<number> {\r\n  return getScrollOffset(elementOrRef).then(({ scrollTop }) => scrollTop)\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\n\ninterface PullRefreshContextValue {\n  distance: number\n}\n\nconst PullRefreshContext = createContext<PullRefreshContextValue>({\n  distance: 0,\n})\n\nexport default PullRefreshContext\n","import * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport PullRefreshContext from \"./pull-refresh.context\"\r\n\r\ninterface PullRefreshRenderProps {\r\n  distance: number\r\n}\r\n\r\ntype PullRefreshRender = (props: PullRefreshRenderProps) => ReactNode\r\n\r\nexport interface PullRefreshPullingProps {\r\n  children?: ReactNode | PullRefreshRender\r\n}\r\n\r\nexport function PullRefreshPulling(props: PullRefreshPullingProps) {\r\n  const { children } = props\r\n  const { distance } = useContext(PullRefreshContext)\r\n  if (_.isFunction(children)) {\r\n    return <>{children?.({ distance })}</>\r\n  }\r\n  return <>{children}</>\r\n}\r\n\r\nexport interface PullRefreshLoosingProps {\r\n  children?: ReactNode\r\n}\r\n\r\nexport function PullRefreshLoosing(props: PullRefreshLoosingProps) {\r\n  const { children } = props\r\n  return <>{children}</>\r\n}\r\n\r\nexport interface PullRefreshLoadingProps {\r\n  children?: ReactNode\r\n}\r\n\r\nexport function PullRefreshLoading(props: PullRefreshLoadingProps) {\r\n  const { children } = props\r\n  return <>{children}</>\r\n}\r\n\r\nexport interface PullRefreshCompletedProps {\r\n  duration?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport function PullRefreshCompleted(props: PullRefreshCompletedProps) {\r\n  const { children } = props\r\n  return <>{children}</>\r\n}\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\nimport { ViewProps } from \"@tarojs/components/types/View\"\nimport { nextTick } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport * as React from \"react\"\nimport {\n  Children,\n  CSSProperties,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\nimport Loading from \"../loading\"\nimport { prefixClassname } from \"../styles\"\nimport { preventDefault } from \"../utils/dom/event\"\nimport { addUnitPx } from \"../utils/format/unit\"\nimport { usePreviousRef, useToRef } from \"../utils/state\"\nimport { useTouch } from \"../utils/touch\"\nimport {\n  PullRefreshCompleted,\n  PullRefreshCompletedProps,\n  PullRefreshLoading,\n  PullRefreshLoosing,\n  PullRefreshPulling,\n} from \"./pull-refresh-children\"\nimport PullRefreshContext from \"./pull-refresh.context\"\n\nconst lodashRoot = require(\"lodash/_root\")\n\nif (typeof lodashRoot.Date === \"undefined\") {\n  lodashRoot.Date = Date\n}\n\nenum PullRefreshStatus {\n  Awaiting = \"awaiting\",\n  Pulling = \"pulling\",\n  Loosing = \"loosing\",\n  Loading = \"loading\",\n  Completed = \"completed\",\n}\n\nconst TEXT_STATUS = [\"pulling\", \"loosing\", \"success\"]\n\ninterface PullRefreshChildren {\n  pulling?: ReactNode\n  loosing?: ReactNode\n  loading?: ReactNode\n  completed?: ReactNode\n  content?: ReactNode[]\n}\n\nfunction usePullRefreshChildren(children?: ReactNode): PullRefreshChildren {\n  return useMemo(() => {\n    const __children__: PullRefreshChildren = {\n      content: [],\n    }\n\n    Children.forEach(children, (child: ReactNode) => {\n      if (isValidElement(child)) {\n        const element = child as ReactElement\n\n        const elementType = element.type\n        if (elementType === PullRefreshPulling) {\n          __children__.pulling = element\n        } else if (elementType === PullRefreshLoosing) {\n          __children__.loosing = element\n        } else if (elementType === PullRefreshLoading) {\n          __children__.loading = element\n        } else if (elementType === PullRefreshCompleted) {\n          __children__.completed = element\n        } else {\n          __children__.content?.push(child)\n        }\n      } else {\n        __children__.content?.push(child)\n      }\n    })\n    return __children__\n  }, [children])\n}\n\nfunction getCompletedProps(node?: ReactNode): PullRefreshCompletedProps {\n  if (isValidElement(node)) {\n    const element = node as ReactElement\n    return element.props\n  }\n  return {}\n}\n\nexport interface PullRefreshProps extends ViewProps {\n  style?: CSSProperties\n  loading?: boolean\n  disabled?: boolean\n  duration?: number\n  headHeight?: number\n\n  reachTop?: boolean\n  pullDistance?: number\n  children?: ReactNode\n\n  onRefresh?(): void\n}\n\nfunction PullRefresh(props: PullRefreshProps) {\n  const {\n    className,\n    loading,\n    disabled = false,\n    headHeight = 50,\n    reachTop: reachTopProp = true,\n    pullDistance: pullDistanceProp,\n    duration: durationProp = 300,\n    children: childrenProp,\n    onRefresh,\n    ...restProps\n  } = props\n\n  const children = usePullRefreshChildren(childrenProp)\n  const { completed: completedElement, content } = children\n  const { duration: completedDuration = 500 } = getCompletedProps(completedElement)\n\n  const statusRef = useRef(PullRefreshStatus.Awaiting)\n  const [distance, setDistance] = useState(0)\n  const reachTopPreviousRef = usePreviousRef(reachTopProp)\n  const reachTopRef = useToRef(reachTopProp)\n  const durationRef = useRef(0)\n\n  const touch = useTouch()\n\n  function resetDuration() {\n    durationRef.current = 0\n  }\n\n  const isTouchable = useCallback(\n    () =>\n      PullRefreshStatus.Loading !== statusRef.current &&\n      PullRefreshStatus.Completed !== statusRef.current &&\n      !disabled,\n    [disabled],\n  )\n\n  const easeDistance = useCallback(\n    (distance: number) => {\n      const pullDistance = +(pullDistanceProp || headHeight)\n\n      if (distance > pullDistance) {\n        if (distance < pullDistance * 2) {\n          distance = pullDistance + (distance - pullDistance) / 2\n        } else {\n          distance = pullDistance * 1.5 + (distance - pullDistance * 2) / 4\n        }\n      }\n\n      return Math.round(distance)\n    },\n    [headHeight, pullDistanceProp],\n  )\n\n  const checkPosition = useCallback(\n    (event: ITouchEvent) => {\n      if (reachTopRef.current) {\n        resetDuration()\n        touch.start(event)\n      }\n    },\n    [reachTopRef, touch],\n  )\n\n  const onTouchStart = useCallback(\n    (event: ITouchEvent) => {\n      if (isTouchable()) {\n        checkPosition(event)\n      }\n    },\n    [checkPosition, isTouchable],\n  )\n\n  const updateStatus = useCallback(\n    (distance: number, isLoading?: boolean) => {\n      const pullDistance = +(pullDistanceProp || headHeight)\n      if (isLoading) {\n        statusRef.current = PullRefreshStatus.Loading\n      } else if (distance === 0) {\n        statusRef.current = PullRefreshStatus.Awaiting\n      } else if (distance < pullDistance) {\n        statusRef.current = PullRefreshStatus.Pulling\n      } else {\n        statusRef.current = PullRefreshStatus.Loosing\n      }\n      setDistance(distance)\n    },\n    [headHeight, pullDistanceProp],\n  )\n\n  const onTouchMove = useMemo(\n    () =>\n      _.throttle((event: ITouchEvent) => {\n        if (isTouchable()) {\n          if (!reachTopPreviousRef.current) {\n            checkPosition(event)\n          }\n\n          const { deltaY } = touch\n          touch.move(event)\n\n          if (reachTopRef.current && deltaY >= 0 && touch.isVertical()) {\n            preventDefault(event)\n            updateStatus(easeDistance(deltaY))\n          }\n        }\n      }, 16.7),\n    [\n      checkPosition,\n      easeDistance,\n      isTouchable,\n      reachTopPreviousRef,\n      reachTopRef,\n      touch,\n      updateStatus,\n    ],\n  )\n\n  const onTouchEnd = useCallback(() => {\n    if (reachTopRef.current && isTouchable()) {\n      durationRef.current = durationProp\n      if (statusRef.current === PullRefreshStatus.Loosing) {\n        updateStatus(headHeight, true)\n        // TODO Nested in CustomWrapper does not call.\n        // ensure value change can be watched\n        // nextTick(() => onRefresh?.())\n        onRefresh?.()\n      } else {\n        updateStatus(0)\n      }\n    }\n  }, [durationProp, headHeight, isTouchable, onRefresh, reachTopRef, updateStatus])\n\n  const showCompleted = useCallback(() => {\n    statusRef.current = PullRefreshStatus.Completed\n    resetDuration()\n    setTimeout(() => nextTick(() => updateStatus(0)), +completedDuration)\n  }, [completedDuration, updateStatus])\n\n  useEffect(() => {\n    if (loading) {\n      updateStatus(headHeight, true)\n    }\n  }, [headHeight, loading, updateStatus])\n\n  useEffect(() => {\n    if (!loading && !isTouchable() && !completedElement) {\n      durationRef.current = durationProp\n      updateStatus(0, false)\n    }\n  }, [completedElement, durationProp, isTouchable, loading, updateStatus])\n\n  useEffect(() => {\n    if (!loading && completedElement) {\n      showCompleted()\n    }\n  }, [completedElement, loading, showCompleted])\n\n  const getStatusText = useCallback(() => {\n    if (statusRef.current === PullRefreshStatus.Pulling) {\n      return \"下拉即可刷新...\"\n    }\n    if (statusRef.current === PullRefreshStatus.Loosing) {\n      return \"释放即可刷新...\"\n    }\n    if (statusRef.current === PullRefreshStatus.Loading) {\n      return \"加载中...\"\n    }\n    return \"\"\n  }, [])\n\n  const renderStatus = useCallback(() => {\n    // @ts-ignore\n    const statusSlot = children[statusRef.current as string]\n    if (statusSlot) {\n      return statusSlot\n    }\n\n    const nodes: ReactElement[] = []\n\n    if (TEXT_STATUS.includes(statusRef.current)) {\n      nodes.push(\n        <View\n          key=\"text\"\n          className={prefixClassname(\"pull-refresh__text\")}\n          children={getStatusText()}\n        />,\n      )\n    }\n\n    if (statusRef.current === PullRefreshStatus.Loading) {\n      nodes.push(\n        <Loading\n          key=\"loading\"\n          className={prefixClassname(\"pull-refresh__loading\")}\n          children={getStatusText()}\n        />,\n      )\n    }\n\n    return nodes\n  }, [children, getStatusText])\n\n  const trackStyle = {\n    transitionDuration: `${durationRef.current}ms`,\n    transform: distance ? `translate3d(0,${addUnitPx(distance)}, 0)` : \"\",\n  }\n\n  const headStyle = useMemo(() => {\n    if (headHeight !== 50) {\n      return {\n        height: addUnitPx(headHeight),\n      }\n    }\n  }, [headHeight])\n\n  return (\n    <PullRefreshContext.Provider\n      value={{\n        distance,\n      }}\n    >\n      <View className={classNames(prefixClassname(\"pull-refresh\"), className)} {...restProps}>\n        <View\n          className={prefixClassname(\"pull-refresh__track\")}\n          style={trackStyle}\n          onTouchStart={onTouchStart}\n          onTouchMove={onTouchMove}\n          onTouchEnd={onTouchEnd}\n          onTouchCancel={onTouchEnd}\n        >\n          <View\n            className={prefixClassname(\"pull-refresh__head\")}\n            style={headStyle}\n            children={renderStatus()}\n          />\n          {content}\n        </View>\n      </View>\n    </PullRefreshContext.Provider>\n  )\n}\n\nexport default PullRefresh\n","import PullRefreshElement, { PullRefreshProps } from \"./pull-refresh\"\nimport {\n  PullRefreshCompleted,\n  PullRefreshLoading,\n  PullRefreshLoosing,\n  PullRefreshPulling,\n} from \"./pull-refresh-children\"\n\ninterface PullRefreshInterface {\n  (props: PullRefreshProps): JSX.Element\n\n  Pulling: typeof PullRefreshPulling\n  Loosing: typeof PullRefreshLoosing\n  Loading: typeof PullRefreshLoading\n  Completed: typeof PullRefreshCompleted\n}\n\nconst PullRefresh = PullRefreshElement as PullRefreshInterface\n\nPullRefresh.Pulling = PullRefreshPulling\nPullRefresh.Loosing = PullRefreshLoosing\nPullRefresh.Loading = PullRefreshLoading\nPullRefresh.Completed = PullRefreshCompleted\n\nexport default PullRefresh\n","import { View } from \"@tarojs/components\"\nimport { ViewProps } from \"@tarojs/components/types/View\"\nimport { nextTick } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { ReactNode, useCallback, useEffect, useMemo, useRef } from \"react\"\nimport { useMounted } from \"../hooks\"\nimport { prefixClassname } from \"../styles\"\nimport { getRect } from \"../utils/dom/rect\"\nimport { getScrollParent } from \"../utils/dom/scroll\"\nimport { useToRef } from \"../utils/state\"\nimport { ListDirection } from \"./list.shared\"\n\nexport interface ListProps extends ViewProps {\n  loading?: boolean\n  hasMore?: boolean\n  direction?: ListDirection\n  offset?: number\n  children?: ReactNode\n\n  scrollTop?: number\n\n  onLoad?(): void\n}\n\nfunction List(props: ListProps) {\n  const {\n    className,\n    loading: loadingProp = false,\n    hasMore: hasMoreProp = true,\n    direction = \"down\",\n    offset = 300,\n    children,\n    scrollTop,\n    onLoad,\n    ...restProps\n  } = props\n\n  const rootRef = useRef<HTMLElement>()\n  const edgeRef = useRef<HTMLElement>()\n  const loadingRef = useToRef(loadingProp)\n  const hasMoreRef = useToRef(hasMoreProp)\n\n  const loadCheck = useCallback(() => {\n    nextTick(async () => {\n      if (loadingRef.current || !hasMoreRef.current) {\n        return\n      }\n\n      const scrollParent = await getScrollParent(rootRef)\n      const scrollParentRect = await getRect(scrollParent)\n      if (!scrollParentRect.height) {\n        return\n      }\n\n      let isReachEdge: boolean\n      const edgeRect = await getRect(edgeRef)\n      if (direction === \"up\") {\n        isReachEdge = scrollParentRect.top - edgeRect.top <= offset\n      } else {\n        isReachEdge = edgeRect.bottom - scrollParentRect.bottom <= offset\n      }\n      if (isReachEdge && !loadingRef.current) {\n        loadingRef.current = true\n        onLoad?.()\n      }\n    })\n  }, [direction, hasMoreRef, loadingRef, offset, onLoad])\n\n  useMounted(loadCheck)\n\n  useEffect(loadCheck, [loadingProp, hasMoreProp, loadCheck, scrollTop, children])\n\n  const listEdge = useMemo(\n    () => <View ref={edgeRef} className={prefixClassname(\"list__edge\")} />,\n    [],\n  )\n\n  return (\n    <View ref={rootRef} className={classNames(prefixClassname(\"list\"), className)} {...restProps}>\n      {direction === \"down\" ? children : listEdge}\n      {direction === \"up\" ? children : listEdge}\n    </View>\n  )\n}\n\nexport default List\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface ListPlaceholderProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ListPlaceholder(props: ListPlaceholderProps) {\r\n  const { className, children, ...restProps } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"list__placeholder\"), className)}\r\n      children={children}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ListPlaceholder\r\n","import ListComponent, { ListProps } from \"./list\"\r\nimport ListPlaceholder from \"./list-placeholder\"\r\n\r\nexport type { ListDirection } from \"./list.shared\"\r\n\r\ninterface ListInterface {\r\n  (props: ListProps): JSX.Element\r\n\r\n  Placeholder: typeof ListPlaceholder\r\n}\r\n\r\nconst List = ListComponent as ListInterface\r\n\r\nList.Placeholder = ListPlaceholder\r\n\r\nexport default List\r\n","import { Cell, List, Loading, PullRefresh, Tabs } from \"@taroify/core\"\r\nimport { usePageScroll } from \"@tarojs/taro\"\r\nimport * as React from \"react\"\r\nimport { useRef, useState } from \"react\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction BasicList() {\r\n  const [hasMore, setHasMore] = useState(true)\r\n  const [list, setList] = useState<string[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [scrollTop, setScrollTop] = useState(0)\r\n\r\n  usePageScroll(({ scrollTop: aScrollTop }) => setScrollTop(aScrollTop))\r\n\r\n  return (\r\n    <List\r\n      loading={loading}\r\n      hasMore={hasMore}\r\n      scrollTop={scrollTop}\r\n      onLoad={() => {\r\n        setLoading(true)\r\n        setTimeout(() => {\r\n          for (let i = 0; i < 10; i++) {\r\n            const text = list.length + 1\r\n            list.push(text < 10 ? \"0\" + text : String(text))\r\n          }\r\n          setList([...list])\r\n          setHasMore(list.length < 40)\r\n          setLoading(false)\r\n        }, 1000)\r\n      }}\r\n    >\r\n      {\r\n        //\r\n        list.map((item) => (\r\n          <Cell key={item}>{item}</Cell>\r\n        ))\r\n      }\r\n      <List.Placeholder>\r\n        {loading && <Loading>加载中...</Loading>}\r\n        {!hasMore && \"没有更多了\"}\r\n      </List.Placeholder>\r\n    </List>\r\n  )\r\n}\r\n\r\nfunction ErrorList() {\r\n  const [hasMore, setHasMore] = useState(true)\r\n  const [list, setList] = useState<string[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const [scrollTop, setScrollTop] = useState(0)\r\n\r\n  usePageScroll(({ scrollTop: aScrollTop }) => setScrollTop(aScrollTop))\r\n\r\n  return (\r\n    <List\r\n      loading={loading}\r\n      hasMore={hasMore}\r\n      scrollTop={scrollTop}\r\n      onLoad={() => {\r\n        setLoading(true)\r\n        setTimeout(() => {\r\n          for (let i = 0; i < 10; i++) {\r\n            const text = list.length + 1\r\n            list.push(text < 10 ? \"0\" + text : String(text))\r\n          }\r\n          const newList = [...list]\r\n\r\n          setHasMore(!(newList.length <= 10 || newList.length >= 40))\r\n          setError(newList.length <= 10)\r\n          setList(newList)\r\n          setLoading(false)\r\n        }, 1000)\r\n      }}\r\n    >\r\n      {list.map((item) => (\r\n        <Cell key={item}>{item}</Cell>\r\n      ))}\r\n      <List.Placeholder\r\n        onClick={() => {\r\n          if (error) {\r\n            setHasMore(true)\r\n            setError(false)\r\n          }\r\n        }}\r\n      >\r\n        {loading && <Loading>加载中...</Loading>}\r\n        {error && \"请求失败，点击重新加载\"}\r\n        {!hasMore && \"没有更多了\"}\r\n      </List.Placeholder>\r\n    </List>\r\n  )\r\n}\r\n\r\nfunction PullRefreshList() {\r\n  const [hasMore, setHasMore] = useState(true)\r\n  const [list, setList] = useState<string[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const refreshingRef = useRef(false)\r\n  const [scrollTop, setScrollTop] = useState(0)\r\n  const [reachTop, setReachTop] = useState(true)\r\n\r\n  usePageScroll(({ scrollTop: aScrollTop }) => {\r\n    setScrollTop(aScrollTop)\r\n    setReachTop(aScrollTop === 0)\r\n  })\r\n\r\n  const onLoad = () => {\r\n    setLoading(true)\r\n    const newList = refreshingRef.current ? [] : list\r\n    setTimeout(() => {\r\n      refreshingRef.current = false\r\n      for (let i = 0; i < 10; i++) {\r\n        const text = newList.length + 1\r\n        newList.push(text < 10 ? \"0\" + text : String(text))\r\n      }\r\n      setList(newList)\r\n      setLoading(false)\r\n      setHasMore(newList.length < 40)\r\n    }, 1000)\r\n  }\r\n\r\n  function onRefresh() {\r\n    refreshingRef.current = true\r\n    setLoading(false)\r\n    onLoad()\r\n  }\r\n\r\n  return (\r\n    <PullRefresh loading={refreshingRef.current} reachTop={reachTop} onRefresh={onRefresh}>\r\n      <List loading={loading} hasMore={hasMore} scrollTop={scrollTop} onLoad={onLoad}>\r\n        {\r\n          //\r\n          list.map((item) => (\r\n            <Cell key={item}>{item}</Cell>\r\n          ))\r\n        }\r\n        {!refreshingRef.current && (\r\n          <List.Placeholder>\r\n            {loading && <Loading>加载中...</Loading>}\r\n            {!hasMore && \"没有更多了\"}\r\n          </List.Placeholder>\r\n        )}\r\n      </List>\r\n    </PullRefresh>\r\n  )\r\n}\r\n\r\nexport default function ListDemo() {\r\n  const [tab, setTab] = useState(0)\r\n\r\n  return (\r\n    <Page title=\"List 列表\" className=\"list-demo\">\r\n      <Tabs value={tab} onChange={setTab}>\r\n        <Tabs.TabPane title=\"基础用法\">\r\n          <BasicList />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane title=\"错误提示\">\r\n          <ErrorList />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane title=\"下拉刷新\">\r\n          <PullRefreshList />\r\n        </Tabs.TabPane>\r\n      </Tabs>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}