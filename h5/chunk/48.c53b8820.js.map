{"version":3,"sources":["webpack:///../../../../packages/hooks/src/use-to-ref/use-to-ref.ts","webpack:///../../../../packages/core/src/utils/state.ts","webpack:///../../../../packages/hooks/src/use-force-update/use-force-update.ts","webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.shared.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.new.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.old.ts","webpack:///../../../../packages/hooks/src/use-cascader/use-cascader.ts","webpack:///../../../../packages/hooks/src/use-uncontrolled/use-uncontrolled.ts","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/core/src/utils/validate/index.ts","webpack:///../../../../packages/hooks/src/use-area/use-area.ts","webpack:///../../../../packages/hooks/src/use-area/area.shared.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isBoolean.js","webpack:///./src/components/block.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isNull.js","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isPlainObject.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_getPrototype.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/endsWith.js","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///../../../../packages/core/src/button/button.context.ts","webpack:///../../../../packages/core/src/utils/logger.ts","webpack:///../../../../packages/core/src/image/image-placeholder.tsx","webpack:///../../../../packages/core/src/image/image.tsx","webpack:///../../../../packages/core/src/utils/children.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/filter.js","webpack:///../../../../packages/core/src/button/button-content.tsx","webpack:///../../../../packages/core/src/button/button.tsx","webpack:///../../../../packages/core/src/button/index.ts","webpack:///../../../../packages/core/src/button/style/index.ts","webpack:///../../../../packages/core/src/button-base/button-base.tsx","webpack:///../../../../packages/core/src/button-base/style/index.ts","webpack:///../../../../packages/core/src/image/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseFilter.js","webpack:///../../../../packages/core/src/uploader/uploader-remove.tsx","webpack:///../../../../packages/core/src/uploader/uploader.context.ts","webpack:///../../../../packages/core/src/uploader/uploader.utils.ts","webpack:///../../../../packages/core/src/uploader/uploader-image.tsx","webpack:///../../../../packages/core/src/uploader/uploader-mask.tsx","webpack:///../../../../packages/core/src/uploader/uploader-upload.tsx","webpack:///../../../../packages/core/src/uploader/uploader.tsx","webpack:///../../../../packages/core/src/uploader/uploader.shared.ts","webpack:///../../../../packages/core/src/uploader/index.ts","webpack:///../../../../packages/core/src/uploader/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/@tarojs/taro-h5/dist/api/media/image/chooseImage.js","webpack:///./src/pages/form/uploader/index.tsx"],"names":["stateRef","useRef","previousRef","useEffect","usePreviousRef","cb","refs","setIndexRefs","useCallback","index","el","createRef","forceUpdate","useForceUpdate","currentRef","setObject","newState","getObject","useMemo","object","updateReducer","num","useReducer","value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","defaultFirst","option","useCascadeSelect","options","depth","doCascadeSelect","data","newValues","newColumns","children","cursorOptions","nextOption","findCascadeOption","nextOptions","values","maxDepth","onChange","onChangeRef","useToRef","e","columns","useState","setColumns","useCascader","useCascaderNew","valueRef","defaultValue","setValue","emitChange","getValue","isValidElement","element","isIconElement","cloneElement","node","className","oldProps","props","newProps","classNames","displayName","DEFAULT_AREA_DATA","province_list","city_list","county_list","defaultFormatter","list","label","getAreaPrefix","getFirstDivisionPrefix","divisions","getAreaPrefixDivision","valuePrefix","prefixes","valueSuperiorPrefix","superiorPrefix","valuePad","padAreaPrefixToValue","prefix","division","doAreaSelect","formatter","dataArray","getAreaData","dataPrimitive","nextValueOptions","nextValues","filterAreaList","newRecord","record","unverifiedValues","valueOptions","useAreaSelect","useAreaValues","unverifiedValue","unverifiedValueRef","valuesRef","valueOptionsRef","getValues","getValueOptions","setValues","baseGetTag","require","isObjectLike","module","exports","isBoolean","Block","variant","title","demoPrefixClassname","isNull","SpinIcon","key","prefixClassname","LoadingSpinner","rootStyle","style","LoadingCircular","type","direction","getPrototype","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","objectCtorString","call","isPlainObject","proto","Ctor","constructor","overArg","getPrototypeOf","baseClamp","baseToString","toInteger","endsWith","string","target","position","length","end","undefined","slice","ButtonContext","createContext","logConfig","warn","infoLevel","optionalParams","console","React","getLogger","mode","shape","lazyLoad","placeholder","fallback","taroMode","useImageMode","useImageShape","shapeProp","setLoading","failed","src","loading","imgProps","alt","onLoad","onError","setFailed","isObjectChildren","isObjectElement","Children","toArray","ReactChildren","forEach","forEachChildren","map","mapChildren","arrayFilter","baseFilter","baseIteratee","isArray","filter","collection","predicate","ButtonContent","appendButtonIconClassname","icon","cloneIconElement","color","formType","onClick","useButtonLoading","isElementOf","useButtonChildren","childrenArray","lastIndex","iconProp","child","onCtxClick","useContext","block","disabled","Button","ButtonBase","baseEach","result","push","UploaderRemove","IMAGE_REGEXP","UploaderImage","removable","onRemove","ctxRemovable","removableProp","item","isImageFile","url","round","name","renderFile","UploaderMask","message","renderIcon","UploaderUpload","onUpload","readonly","renderUploaderMask","file","UploadFilesRender","maxFiles","Number","onChangeProp","useValue","renderImage","multiple","files","__files__","getUploadFiles","getOneUploadFile","Uploader","UploaderContext","chooseImage","isObject","shouldBeObject","flag","res","errMsg","msg","error","Promise","reject","count","success","fail","complete","imageId","handle","MethodHandler","tempFilePaths","tempFiles","getParameterError","para","correct","wrong","getElementById","setAttribute","removeAttribute","obj","createElement","body","appendChild","resolve","TaroMouseEvents","createEvent","initEvent","dispatchEvent","onchange","arr","_a","_b","blob","Blob","URL","createObjectURL","path","originalFileObj","BasicUploader","setFile","sizeType","sourceType","then","PreviewUploader","setFiles","UploaderWithStatus","status","MaxFilesUploader","CustomUploader","CustomPreviewUploader","image","Image","Upload","DisabledUploader","UploaderDemo"],"mappings":"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","file":"chunk/48.c53b8820.js","sourcesContent":["import { MutableRefObject, useRef } from \"react\"\r\n\r\nexport default function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n","import { useForceUpdate } from \"@taroify/hooks\"\r\nimport * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\n\r\nexport { useToRef, useUncontrolled as useValue } from \"@taroify/hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const forceUpdate = useForceUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      forceUpdate()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n","import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useForceUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useForceUpdate\r\n","import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport * as _ from \"lodash\"\r\nimport { ReactNode } from \"react\"\r\n\r\nexport interface CascaderOption extends ViewProps {\r\n  value?: any\r\n  label?: ReactNode\r\n  disabled?: boolean\r\n  children?: CascaderOption[]\r\n}\r\n\r\nexport function findCascadeOption(\r\n  options: CascaderOption[],\r\n  value: any,\r\n  defaultFirst: boolean = false,\r\n): CascaderOption | undefined {\r\n  const option = _.find(options, (option) => option.value === value)\r\n  return _.isUndefined(option) && defaultFirst ? _.first(options) : option\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { useEffect, useMemo } from \"react\"\r\nimport useToRef from \"../use-to-ref\"\r\nimport { CascaderOption, findCascadeOption } from \"./use-cascader.shared\"\r\n\r\ninterface UseCascadeSelectOptions {\r\n  data: CascaderOption[]\r\n  value: any[]\r\n  depth: number\r\n}\r\n\r\nfunction doCascadeSelect({ value: values, data: options }: UseCascadeSelectOptions) {\r\n  const newValues: any[] = []\r\n  const newColumns: CascaderOption[] = []\r\n  newColumns.push({ children: options })\r\n\r\n  let cursorOptions: CascaderOption[] = options\r\n  let depth = 0\r\n\r\n  for (;;) {\r\n    const value = _.get(values, depth)\r\n    const nextOption = findCascadeOption(cursorOptions, value, true)\r\n    if (_.isUndefined(nextOption)) {\r\n      break\r\n    }\r\n    const { value: newValue, children: nextOptions } = nextOption\r\n    newValues.push(newValue)\r\n    if (!nextOptions || _.isEmpty(nextOptions)) {\r\n      break\r\n    }\r\n    newColumns.push(nextOption)\r\n    cursorOptions = nextOptions\r\n    depth++\r\n  }\r\n\r\n  return [newColumns, newValues]\r\n}\r\n\r\nfunction useCascadeSelect(options: UseCascadeSelectOptions) {\r\n  const { value, data, depth } = options\r\n  return useMemo(\r\n    () =>\r\n      doCascadeSelect({\r\n        value,\r\n        data,\r\n        depth,\r\n      }),\r\n    [data, depth, value],\r\n  )\r\n}\r\n\r\nexport interface UseCascaderNewOptions {\r\n  value?: any[]\r\n  depth?: number\r\n  data?: CascaderOption[]\r\n\r\n  onChange?(value: any[]): void\r\n}\r\n\r\nexport interface CascaderObjectNew {\r\n  columns: CascaderOption[]\r\n}\r\n\r\nexport default function useCascaderNew({\r\n  value: values = [],\r\n  depth: maxDepth = 0,\r\n  data = [],\r\n  onChange,\r\n}: UseCascaderNewOptions): CascaderObjectNew {\r\n  maxDepth = _.clamp(maxDepth, 0, maxDepth)\r\n  const onChangeRef = useToRef(onChange)\r\n  const [columns, newValues] = useCascadeSelect({ value: values, depth: maxDepth, data })\r\n\r\n  useEffect(() => {\r\n    if (maxDepth !== 0 && maxDepth > _.size(columns)) {\r\n      _.range(maxDepth - _.size(columns))\r\n        .map(() => [])\r\n        .forEach((e) => columns.push(e))\r\n    }\r\n\r\n    if (!_.isEqual(values, newValues)) {\r\n      onChangeRef.current?.(newValues)\r\n    }\r\n  }, [columns, maxDepth, newValues, onChangeRef, values])\r\n\r\n  return {\r\n    columns,\r\n  }\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { CascaderOption, findCascadeOption } from \"./use-cascader.shared\"\r\n\r\nexport interface UseCascaderOldOptions {\r\n  value?: any[]\r\n  depth?: number\r\n  options?: CascaderOption[]\r\n}\r\n\r\nexport interface CascaderObjectOld {\r\n  columns: CascaderOption[][]\r\n}\r\n\r\nexport default function useCascaderOld({\r\n  value: values = [],\r\n  depth = 0,\r\n  options = [],\r\n}: UseCascaderOldOptions): CascaderObjectOld {\r\n  depth = _.clamp(depth, 0, depth)\r\n  const [columns, setColumns] = useState<CascaderOption[][]>([])\r\n\r\n  useEffect(() => {\r\n    const newColumns: CascaderOption[][] = []\r\n    newColumns.push(options)\r\n\r\n    if (!_.isEmpty(values)) {\r\n      let cursorOptions: CascaderOption[] = options\r\n\r\n      for (const value of values) {\r\n        const nextOption = findCascadeOption(cursorOptions, value)\r\n        if (_.isUndefined(nextOption)) {\r\n          break\r\n        }\r\n        const { children: nextOptions } = nextOption\r\n        if (!nextOptions || _.isEmpty(nextOptions)) {\r\n          break\r\n        }\r\n        cursorOptions = nextOptions\r\n        newColumns.push(nextOptions)\r\n      }\r\n    }\r\n    if (depth !== 0 && depth > _.size(newColumns)) {\r\n      _.range(depth - _.size(newColumns))\r\n        .map(() => [])\r\n        .forEach((e) => newColumns.push(e))\r\n    }\r\n    setColumns(newColumns)\r\n  }, [depth, options, values])\r\n\r\n  return {\r\n    columns,\r\n  }\r\n}\r\n","import useCascaderNew, { CascaderObjectNew, UseCascaderNewOptions } from \"./use-cascader.new\"\r\nimport useCascaderOld, { CascaderObjectOld, UseCascaderOldOptions } from \"./use-cascader.old\"\r\nimport { CascaderOption } from \"./use-cascader.shared\"\r\n\r\ninterface UseCascaderOptions {\r\n  options?: CascaderOption[]\r\n  data?: CascaderOption[]\r\n}\r\n\r\nfunction useCascader(options: UseCascaderOldOptions): CascaderObjectOld\r\nfunction useCascader(options: UseCascaderNewOptions): CascaderObjectNew\r\nfunction useCascader({ data, ...restOptions }: UseCascaderOptions) {\r\n  const useCompatibleCascader = data ? useCascaderNew : useCascaderOld\r\n  return useCompatibleCascader({\r\n    data,\r\n    ...restOptions,\r\n  })\r\n}\r\n\r\nexport default useCascader\r\n","import * as _ from \"lodash\"\r\nimport { useCallback, useMemo, useRef } from \"react\"\r\nimport useForceUpdate from \"../use-force-update\"\r\nimport useToRef from \"../use-to-ref\"\r\n\r\ninterface UseUncontrolledOptions<S> {\r\n  defaultValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\nexport default function useUncontrolled<S>(options: UseUncontrolledOptions<S> = {}) {\r\n  const { defaultValue, value: valueProp, onChange } = options\r\n  const forceUpdate = useForceUpdate()\r\n  //\r\n  const valueRef = useToRef(valueProp)\r\n  const stateRef = useRef(defaultValue ?? valueRef.current)\r\n\r\n  if (valueRef.current !== undefined) {\r\n    stateRef.current = valueRef.current\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(valueRef.current)) {\r\n        stateRef.current = newValue\r\n        forceUpdate()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({\r\n      value: stateRef.current,\r\n      getValue,\r\n      setValue,\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","import * as _ from \"lodash\"\r\nimport { isValidElement, JSXElementConstructor, ReactElement, ReactNode } from \"react\"\r\n\r\nexport function isNoneElement(node: ReactNode) {\r\n  return _.isUndefined(node) || _.isNull(node)\r\n}\r\n\r\nexport function isTextElement(node: ReactNode) {\r\n  return _.isNumber(node) || _.isString(node)\r\n}\r\n\r\nexport function isObjectElement(node?: ReactNode) {\r\n  return !isValidElement(node) && _.isObject(node) && !_.isArray(node)\r\n}\r\n\r\nexport function isElementOf(node?: ReactNode, type?: JSXElementConstructor<any>) {\r\n  if (isValidElement(node)) {\r\n    const element = node as ReactElement\r\n    if (element.type === type) {\r\n      return true\r\n    }\r\n\r\n    const displayName = _.get(element.type, \"displayName\")\r\n    if (\r\n      _.isFunction(element.type) &&\r\n      !_.isEmpty(displayName) &&\r\n      _.endsWith(displayName, _.get(type, \"displayName\"))\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport useForceUpdate from \"../use-force-update\"\r\nimport useToRef from \"../use-to-ref\"\r\nimport { AreaData, AreaDivision, getAreaData } from \"./area.shared\"\r\n\r\nexport type AreaFormatter = (record?: Record<string, string>, prefix?: any) => AreaDivision[]\r\n\r\nconst DEFAULT_AREA_DATA: AreaData = {\r\n  province_list: {},\r\n  city_list: {},\r\n  county_list: {},\r\n}\r\n\r\nfunction defaultFormatter(list?: Record<string, string>): AreaDivision[] {\r\n  let index = 0\r\n  return _.map(list, (label, value) => ({ index: index++, value, label, children: label }))\r\n}\r\n\r\nfunction padAreaPrefixToValue(prefix: any) {\r\n  return _.padEnd(prefix, 6, \"0\")\r\n}\r\n\r\nfunction filterAreaList(list?: Record<string, string>, prefix?: string) {\r\n  const newRecord: Record<string, string> = {}\r\n  _.forEach(list, (name, code) => {\r\n    if (_.startsWith(code, prefix)) {\r\n      newRecord[code] = name\r\n    }\r\n  })\r\n  return newRecord\r\n}\r\n\r\nfunction getAreaPrefix(value: any, depth: number) {\r\n  return value?.substring(0, depth * 2)\r\n}\r\n\r\nfunction getFirstDivisionPrefix(divisions: AreaDivision[], depth: number) {\r\n  return getAreaPrefix(_.first(divisions)?.value, depth)\r\n}\r\n\r\nfunction getAreaPrefixDivision(\r\n  prefixes: string[],\r\n  divisions: AreaDivision[],\r\n  values: any[],\r\n  index: number,\r\n): AreaDivision {\r\n  const value = _.get(values, index)\r\n  const depth = index + 1\r\n  const valuePrefix = getAreaPrefix(value, depth)\r\n\r\n  if (index === 0) {\r\n    prefixes[index] = valuePrefix ?? getFirstDivisionPrefix(divisions, depth)\r\n  } else {\r\n    const valueSuperiorPrefix = value?.substring(0, index * 2)\r\n    const superiorPrefix = prefixes[index - 1]\r\n    // Easy to debug code\r\n    if (superiorPrefix !== valueSuperiorPrefix) {\r\n      prefixes[index] = getFirstDivisionPrefix(divisions, depth)\r\n    } else {\r\n      prefixes[index] = valuePrefix\r\n    }\r\n  }\r\n  const valuePad = padAreaPrefixToValue(prefixes[index])\r\n  return _.find(divisions, (division) => division.value === valuePad) as AreaDivision\r\n}\r\n\r\ninterface UseAreaSelectOptions {\r\n  data: AreaData\r\n  unverifiedValues: any[]\r\n  depth: number\r\n\r\n  formatter: AreaFormatter\r\n}\r\n\r\nfunction doAreaSelect(options: UseAreaSelectOptions) {\r\n  const { unverifiedValues, data: dataPrimitive, depth, formatter } = options\r\n  const data = getAreaData(dataPrimitive, depth)\r\n  //\r\n  const prefixes: string[] = []\r\n  const columns: AreaDivision[] = []\r\n  const nextValueOptions: AreaDivision[] = []\r\n  const nextValues: string[] = []\r\n\r\n  _.forEach(data, (record, index) => {\r\n    // const divisions = formatter?.(index === 0 ? record : filterAreaList(record, prefixes[index - 1]))\r\n    // Easy to debug code\r\n    let divisions: AreaDivision[]\r\n    if (index === 0) {\r\n      divisions = formatter?.(record)\r\n    } else {\r\n      divisions = formatter?.(filterAreaList(record, prefixes[index - 1]))\r\n    }\r\n    const division = getAreaPrefixDivision(prefixes, divisions, unverifiedValues, index)\r\n    nextValueOptions[index] = division\r\n    nextValues[index] = division.value\r\n    columns[index] = {\r\n      index,\r\n      children: divisions,\r\n    }\r\n  })\r\n  return {\r\n    columns,\r\n    values: nextValues,\r\n    valueOptions: nextValueOptions,\r\n  }\r\n}\r\n\r\nfunction useAreaSelect(options: UseAreaSelectOptions) {\r\n  const { unverifiedValues, data, depth, formatter } = options\r\n  return useMemo(\r\n    () =>\r\n      doAreaSelect({\r\n        unverifiedValues,\r\n        data,\r\n        depth,\r\n        formatter,\r\n      }),\r\n    [data, depth, formatter, unverifiedValues],\r\n  )\r\n}\r\n\r\nfunction useAreaValues(value: any | any[]) {\r\n  return useMemo(() => (_.isArray(value) ? value : [value]), [value])\r\n}\r\n\r\ninterface UseAreaOptions {\r\n  depth?: number\r\n  data?: AreaData\r\n\r\n  formatter?: AreaFormatter\r\n}\r\n\r\nexport default function useArea(unverifiedValue: any[] = [], options: UseAreaOptions = {}) {\r\n  const { data = DEFAULT_AREA_DATA, depth = 3, formatter = defaultFormatter } = options\r\n  const unverifiedValueRef = useRef(unverifiedValue)\r\n  const forceUpdate = useForceUpdate()\r\n  const unverifiedValues = useAreaValues(unverifiedValueRef.current)\r\n  //\r\n  const { columns, values, valueOptions } = useAreaSelect({\r\n    unverifiedValues,\r\n    data,\r\n    depth,\r\n    formatter,\r\n  })\r\n  //\r\n  const valuesRef = useToRef(values)\r\n  const valueOptionsRef = useToRef(valueOptions)\r\n  const getValues = useCallback(() => valuesRef.current, [valuesRef])\r\n  const getValueOptions = useCallback(() => valueOptionsRef.current, [valueOptionsRef])\r\n\r\n  const setValues = useCallback(\r\n    (newValues: any[]) => {\r\n      unverifiedValueRef.current = newValues\r\n      forceUpdate()\r\n    },\r\n    [forceUpdate],\r\n  )\r\n  //\r\n  useEffect(() => {\r\n    if (!_.isEqual(valuesRef.current, unverifiedValue)) {\r\n      setValues(unverifiedValue)\r\n    }\r\n  }, [setValues, unverifiedValue, valuesRef])\r\n  //\r\n  return useMemo(\r\n    () => ({\r\n      columns,\r\n      values,\r\n      valueOptions,\r\n      getValues,\r\n      getValueOptions,\r\n      setValues,\r\n    }),\r\n    [columns, getValueOptions, getValues, setValues, valueOptions, values],\r\n  )\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { ReactNode } from \"react\"\r\n\r\nexport interface AreaData {\r\n  province_list: Record<string, string>\r\n  city_list: Record<string, string>\r\n  county_list: Record<string, string>\r\n}\r\n\r\nexport interface AreaDivision extends Record<any, any> {\r\n  index: number\r\n  value?: any\r\n  label?: ReactNode\r\n  children?: AreaDivision[] | ReactNode\r\n}\r\n\r\nexport function getAreaData(data: AreaData, maxDepth: number) {\r\n  const { province_list, city_list, county_list } = data\r\n  const dataArray: Record<any, any>[] = []\r\n  if (maxDepth >= 1 && !_.isEmpty(province_list)) {\r\n    dataArray.push(province_list)\r\n    if (maxDepth >= 2 && !_.isEmpty(city_list)) {\r\n      dataArray.push(city_list)\r\n      if (maxDepth >= 3 && !_.isEmpty(county_list)) {\r\n        dataArray.push(county_list)\r\n      }\r\n    }\r\n  }\r\n  return dataArray\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nmodule.exports = isNull;\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var baseClamp = require('./_baseClamp'),\n    baseToString = require('./_baseToString'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Checks if `string` ends with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @example\n *\n * _.endsWith('abc', 'c');\n * // => true\n *\n * _.endsWith('abc', 'b');\n * // => false\n *\n * _.endsWith('abc', 'b', 2);\n * // => true\n */\nfunction endsWith(string, target, position) {\n  string = toString(string);\n  target = baseToString(target);\n\n  var length = string.length;\n  position = position === undefined\n    ? length\n    : baseClamp(toInteger(position), 0, length);\n\n  var end = position;\n  position -= target.length;\n  return position >= 0 && string.slice(position, end) == target;\n}\n\nmodule.exports = endsWith;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\nimport { ButtonProps } from \"./button\"\r\n\r\ninterface ButtonContextValue {\r\n  onClick?(event: ITouchEvent, props: ButtonProps): void\r\n}\r\n\r\nconst ButtonContext = createContext<ButtonContextValue>({})\r\n\r\nexport default ButtonContext\r\n","// type LogLevel = \"debug\" | \"info\" | \"warn\" | \"error\"\r\n\r\n// export function configure(level: LogLevel) {\r\n//   if (level === \"debug\") {\r\n//     logLevel = debugLevel\r\n//   }\r\n// }\r\n\r\nconst debugLevel = 1\r\nconst infoLevel = debugLevel << 2\r\nconst warnLevel = infoLevel << 2\r\n\r\nconst logConfig = {\r\n  level: debugLevel,\r\n}\r\n\r\nexport function getLogger(name: string) {\r\n  return {\r\n    warn(message?: any, ...optionalParams: any[]) {\r\n      if (logConfig.level <= warnLevel) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`Taroify - ${name} : ${message}`, ...optionalParams)\r\n      }\r\n    },\r\n  }\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function ImagePlaceholder(props: ImagePlaceholderProps): JSX.Element {\r\n  const { prefix = \"placeholder\", children } = props\r\n  // Icon Element\r\n  if (isValidElement(children)) {\r\n    return cloneElement(children as ReactElement, {\r\n      className: classNames(\r\n        prefixClassname(`image__${prefix}`),\r\n        prefixClassname(`image__${prefix}-icon`),\r\n      ),\r\n    })\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useEffect, useMemo, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getLogger } from \"../utils/logger\"\r\nimport ImagePlaceholder from \"./image-placeholder\"\r\nimport { ImageMode, ImageShape } from \"./image.shared\"\r\n\r\nconst { warn } = getLogger(\"Image\")\r\n\r\nfunction useImageMode(mode: ImageMode) {\r\n  return useMemo(() => {\r\n    if (mode === \"topLeft\") {\r\n      return \"top left\"\r\n    }\r\n    if (mode === \"topRight\") {\r\n      return \"top right\"\r\n    }\r\n    if (mode === \"bottomLeft\") {\r\n      return \"bottom left\"\r\n    }\r\n    if (mode === \"bottomRight\") {\r\n      return \"bottom right\"\r\n    }\r\n    return mode\r\n  }, [mode])\r\n}\r\n\r\nfunction useImageShape(shape?: ImageShape, round?: boolean) {\r\n  if (_.isBoolean(round) && round) {\r\n    shape = \"circle\"\r\n    warn(`Use the shape=\"${shape}\" prop instead of the round prop`)\r\n    if (round) {\r\n      return shape\r\n    }\r\n  }\r\n  return shape\r\n}\r\n\r\nexport interface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  shape?: ImageShape\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round,\r\n    shape: shapeProp,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = useImageMode(mode)\r\n  const shape = useImageShape(shapeProp, round)\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => setLoading(true), [src])\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onLoad={() => setLoading(false)}\r\n          onError={handleError}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n            },\r\n            className,\r\n          )}\r\n          {...restProps}\r\n        >\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--square\")]: shape === \"square\",\r\n              [prefixClassname(\"image--rounded\")]: shape === \"rounded\",\r\n              [prefixClassname(\"image--circle\")]: shape === \"circle\",\r\n            },\r\n            className,\r\n          )}\r\n          {...restProps}\r\n        >\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { Children as ReactChildren, ReactNode } from \"react\"\r\nimport { isObjectElement } from \"./validate\"\r\n\r\nfunction isObjectChildren(children?: ReactNode) {\r\n  if (!_.isArray(children)) {\r\n    return false\r\n  }\r\n  const node = _.first(children)\r\n  return isObjectElement(node)\r\n}\r\n\r\nfunction forEachChildren<C>(children: C | C[], fn: (child: C, index: number) => void) {\r\n  const objectified = isObjectChildren(children)\r\n  const forEach = objectified ? _.forEach : ReactChildren.forEach\r\n  return forEach(children, fn)\r\n}\r\n\r\nfunction mapChildren<T, C>(\r\n  children: C | C[],\r\n  fn: (child: C, index: number) => T,\r\n): C extends null | undefined ? C : Array<Exclude<T, boolean | null | undefined>> {\r\n  const objectified = isObjectChildren(children)\r\n  const map = objectified ? _.map : ReactChildren.map\r\n  return map(children, fn)\r\n}\r\n\r\nconst Children = {\r\n  toArray: ReactChildren.toArray,\r\n  forEach: forEachChildren,\r\n  map: mapChildren,\r\n}\r\n\r\nexport default Children\r\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { PropsWithChildren } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface ButtonContentProps extends PropsWithChildren<ViewProps> {}\r\n\r\nfunction ButtonContent(props: ButtonContentProps) {\r\n  const { className, ...restProps } = props\r\n  return (\r\n    <View className={classNames(prefixClassname(\"button__content\"), className)} {...restProps} />\r\n  )\r\n}\r\n\r\nexport default ButtonContent\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { ButtonProps as TaroButtonProps, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, ReactElement, ReactNode, useContext, useMemo } from \"react\"\r\nimport ButtonBase from \"../button-base\"\r\nimport Loading, { LoadingProps } from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport Children from \"../utils/children\"\r\nimport { isElementOf, isObjectElement } from \"../utils/validate\"\r\nimport ButtonContent from \"./button-content\"\r\nimport ButtonContext from \"./button.context\"\r\nimport {\r\n  ButtonColor,\r\n  ButtonFormType,\r\n  ButtonShape,\r\n  ButtonSize,\r\n  ButtonVariant,\r\n} from \"./button.shared\"\r\n\r\nfunction useButtonLoading(loading?: boolean | LoadingProps | ReactElement): ReactNode {\r\n  return useMemo(() => {\r\n    if (_.isBoolean(loading) && loading) {\r\n      return (\r\n        <Loading\r\n          className={classNames(\r\n            prefixClassname(\"button__loading\"),\r\n            prefixClassname(\"button__loading--right\"),\r\n          )}\r\n        />\r\n      )\r\n    }\r\n\r\n    if (isObjectElement(loading)) {\r\n      const { className, ...restProps } = loading as LoadingProps\r\n      return (\r\n        <Loading\r\n          className={classNames(\r\n            prefixClassname(\"button__loading\"),\r\n            prefixClassname(\"button__loading--right\"),\r\n            className,\r\n          )}\r\n          {...restProps}\r\n        />\r\n      )\r\n    }\r\n\r\n    if (isElementOf(loading, Loading)) {\r\n      return cloneElement(loading as ReactElement, {\r\n        className: classNames(\r\n          prefixClassname(\"button__loading\"),\r\n          prefixClassname(\"button__loading--right\"),\r\n        ),\r\n      })\r\n    }\r\n\r\n    return loading\r\n  }, [loading])\r\n}\r\n\r\nfunction appendButtonIconClassname(icon?: ReactNode, className?: string) {\r\n  return isIconElement(icon) ? cloneIconElement(icon, { className }) : icon\r\n}\r\n\r\ninterface UseButtonChildrenOptions {\r\n  children?: ReactNode\r\n  loading?: ReactNode\r\n  icon?: ReactNode\r\n}\r\n\r\nfunction useButtonChildren(options: UseButtonChildrenOptions = {}) {\r\n  const { loading, icon: iconProp, children } = options\r\n  if (isElementOf(children, ButtonContent)) {\r\n    return children\r\n  }\r\n  const childrenArray = Children.toArray(children)\r\n  const lastIndex = _.size(childrenArray) - 1\r\n\r\n  const icon = appendButtonIconClassname(iconProp, prefixClassname(\"button__icon--right\"))\r\n  return (\r\n    <ButtonContent>\r\n      {loading || icon}\r\n      {\r\n        //\r\n        _.map(childrenArray, (child, index) => {\r\n          if (isIconElement(child) && index === 0) {\r\n            return appendButtonIconClassname(child, prefixClassname(\"button__icon--right\"))\r\n          }\r\n          if (isIconElement(child) && index === lastIndex) {\r\n            return appendButtonIconClassname(child, prefixClassname(\"button__icon--left\"))\r\n          }\r\n          return child\r\n        })\r\n      }\r\n    </ButtonContent>\r\n  )\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends Omit<TaroButtonProps, \"size\" | \"formType\" | \"type\" | \"loading\" | \"plain\"> {\r\n  variant?: ButtonVariant\r\n  shape?: ButtonShape\r\n  size?: ButtonSize\r\n  color?: ButtonColor\r\n  formType?: ButtonFormType\r\n  loading?: boolean | LoadingProps | ReactElement\r\n  block?: boolean\r\n  hairline?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    variant = \"contained\",\r\n    shape,\r\n    size = \"medium\",\r\n    color = \"default\",\r\n    formType = \"button\",\r\n    block,\r\n    hairline,\r\n    disabled,\r\n    loading: loadingProp,\r\n    icon,\r\n    children: childrenProp,\r\n    onClick,\r\n    ...restProps\r\n  } = props\r\n\r\n  const loading = useButtonLoading(loadingProp)\r\n  const children = useButtonChildren({ children: childrenProp, loading, icon })\r\n\r\n  const { onClick: onCtxClick } = useContext(ButtonContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"button\"),\r\n        {\r\n          // Set variant style\r\n          [prefixClassname(\"button--text\")]: variant === \"text\",\r\n          [prefixClassname(\"button--contained\")]: variant === \"contained\",\r\n          [prefixClassname(\"button--outlined\")]: variant === \"outlined\",\r\n          // Set color style\r\n          [prefixClassname(`button--${color}`)]: color,\r\n          // Set shape style\r\n          [prefixClassname(\"button--round\")]: shape === \"round\",\r\n          [prefixClassname(\"button--square\")]: shape === \"square\",\r\n          // Set size style\r\n          [prefixClassname(\"button--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"button--small\")]: size === \"small\",\r\n          [prefixClassname(\"button--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"button--large\")]: size === \"large\",\r\n          // Set hairline style\r\n          [prefixClassname(\"button--hairline\")]: hairline,\r\n          [prefixClassname(\"hairline--surround\")]: hairline,\r\n          [prefixClassname(\"button--disabled\")]: disabled,\r\n          [prefixClassname(\"button--loading\")]: loading,\r\n          [prefixClassname(\"button--block\")]: block,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={(e) => {\r\n        if (!disabled && !loading) {\r\n          onClick?.(e)\r\n          onCtxClick?.(e, props)\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n      <ButtonBase\r\n        className={prefixClassname(\"button__button\")}\r\n        formType={formType === \"submit\" ? \"submit\" : formType === \"reset\" ? \"reset\" : undefined}\r\n        disabled={disabled || !!loading}\r\n        loading={false}\r\n        {...restProps}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function createButton(children: ReactNode | ButtonProps, props?: ButtonProps) {\r\n  if (_.isPlainObject(children)) {\r\n    return <Button {...(children as ButtonProps)} {...props} />\r\n  }\r\n  return <Button children={children} {...props} />\r\n}\r\n","import { FunctionComponent } from \"react\"\r\nimport ButtonComponent, { ButtonProps } from \"./button\"\r\nimport ButtonContent from \"./button-content\"\r\n\r\nexport * from \"./button.shared\"\r\nexport { createButton } from \"./button\"\r\nexport type { ButtonProps } from \"./button\"\r\nexport { default as ButtonContext } from \"./button.context\"\r\n\r\ninterface ButtonInterface extends FunctionComponent<ButtonProps> {\r\n  Content: typeof ButtonContent\r\n}\r\n\r\nconst Button = ButtonComponent as ButtonInterface\r\n\r\nButton.Content = ButtonContent\r\n\r\nexport default Button\r\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../../button-base/style\"\r\n\r\nimport \"../index.scss\"\r\n","import { Button, ButtonProps } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface ButtonBaseProps extends ButtonProps {}\r\n\r\nfunction ButtonBase(props: ButtonBaseProps) {\r\n  const { className, ...restProps } = props\r\n  return <Button className={classNames(prefixClassname(\"button-base\"), className)} {...restProps} />\r\n}\r\n\r\nexport default ButtonBase\r\n","import \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","import { Cross } from \"@taroify/icons\"\r\nimport { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface UploaderRemoveProps extends ViewProps {\r\n  className?: string\r\n  icon?: ReactNode\r\n}\r\n\r\nfunction UploaderRemove(props: UploaderRemoveProps) {\r\n  const { className, icon = <Cross />, ...restProps } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"uploader__preview-remove\"), className)}\r\n      {...restProps}\r\n    >\r\n      {cloneIconElement(icon, { className: prefixClassname(\"uploader__preview-remove-icon\") })}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default UploaderRemove\r\n","import { createContext } from \"react\"\r\n\r\ninterface UploaderContextValue {\r\n  removable?: boolean\r\n  disabled?: boolean\r\n\r\n  onUpload?(): void\r\n\r\n  onRemove?(): void\r\n}\r\n\r\nconst UploaderContext = createContext<UploaderContextValue>({})\r\n\r\nexport default UploaderContext\r\n","import { UploadFile } from \"./uploader.shared\"\n\nconst IMAGE_REGEXP = /\\.(jpeg|jpg|gif|png|svg|webp|jfif|bmp|dpg)/i\n\nexport function isImageFile(item: UploadFile): boolean {\n  if (item.type) {\n    return item.type.indexOf(\"image\") === 0\n  }\n\n  if (item.url) {\n    return IMAGE_REGEXP.test(item.url)\n  }\n  return false\n}\n","import { Description } from \"@taroify/icons\"\r\nimport { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport Image, { ImageMode } from \"../image\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport UploaderRemove from \"./uploader-remove\"\r\nimport UploaderContext from \"./uploader.context\"\r\nimport { isImageFile } from \"./uploader.utils\"\r\n\r\ninterface UploaderImageProps extends ViewProps {\r\n  className?: string\r\n  type?: string\r\n  url?: string\r\n  name?: string\r\n  removable?: boolean\r\n  mode?: ImageMode\r\n  alt?: string\r\n  round?: boolean\r\n  children?: ReactNode\r\n\r\n  onRemove?(event: ITouchEvent): void\r\n}\r\n\r\nfunction UploaderImage(props: UploaderImageProps) {\r\n  const {\r\n    className,\r\n    type,\r\n    url,\r\n    name,\r\n    removable: removableProp,\r\n    mode,\r\n    alt,\r\n    round,\r\n    children,\r\n    onRemove,\r\n    ...restProps\r\n  } = props\r\n  const { removable: ctxRemovable } = useContext(UploaderContext)\r\n  const removable = removableProp ?? ctxRemovable\r\n\r\n  function renderFile() {\r\n    if (isImageFile({ type, url })) {\r\n      return (\r\n        <Image\r\n          className={prefixClassname(\"uploader__preview-image\")}\r\n          src={url}\r\n          mode={mode}\r\n          alt={alt}\r\n          round={round}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <View className={prefixClassname(\"uploader__file\")}>\r\n        <Description className={prefixClassname(\"uploader__file-icon\")} />\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"uploader__file-name\"),\r\n            prefixClassname(\"ellipsis\"),\r\n          )}\r\n          children={name ?? url}\r\n        />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View className={classNames(prefixClassname(\"uploader__preview\"), className)} {...restProps}>\r\n      {renderFile()}\r\n      {children}\r\n      {removable && <UploaderRemove onClick={onRemove} />}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default UploaderImage\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport Loading from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nfunction renderIcon(icon?: ReactNode) {\r\n  if (isIconElement(icon)) {\r\n    return cloneIconElement(icon, { className: prefixClassname(\"uploader__mask-icon\") })\r\n  }\r\n  if (isValidElement(icon) && (icon as ReactElement).type === Loading) {\r\n    const { className } = (icon as ReactElement).props\r\n    return cloneElement(icon, {\r\n      className: classNames(prefixClassname(\"uploader__loading\"), className),\r\n    })\r\n  }\r\n}\r\n\r\ninterface UploaderMaskProps {\r\n  className?: string\r\n  icon?: ReactNode\r\n  message?: ReactNode\r\n}\r\n\r\nfunction UploaderMask(props: UploaderMaskProps) {\r\n  const { className, icon, message } = props\r\n  return (\r\n    <View className={classNames(prefixClassname(\"uploader__mask\"), className)}>\r\n      {renderIcon(icon)}\r\n      {message && <View className={prefixClassname(\"uploader__mask-message\")} children={message} />}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default UploaderMask\r\n","import { Photograph } from \"@taroify/icons\"\r\nimport { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport UploaderContext from \"./uploader.context\"\r\n\r\ninterface UploaderUploadProps extends ViewProps {\r\n  readonly?: boolean\r\n  icon?: ReactNode\r\n\r\n  onClick?(event: ITouchEvent): void\r\n}\r\n\r\nfunction UploaderUpload(props: UploaderUploadProps) {\r\n  const { className, readonly, icon = <Photograph />, onClick, ...restProps } = props\r\n  const { disabled, onUpload } = useContext(UploaderContext)\r\n\r\n  function handleClick(event: ITouchEvent) {\r\n    onClick?.(event)\r\n    if (!readonly && !disabled) {\r\n      onUpload?.()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"uploader__upload\"),\r\n        {\r\n          [prefixClassname(\"uploader__upload--readonly\")]: readonly,\r\n        },\r\n        className,\r\n      )}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      {cloneIconElement(icon, { className: prefixClassname(\"uploader__upload-icon\") })}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default UploaderUpload\r\n","import { Close } from \"@taroify/icons\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useCallback, useMemo } from \"react\"\r\nimport Loading from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useValue } from \"../utils/state\"\r\nimport UploaderImage from \"./uploader-image\"\r\nimport UploaderMask from \"./uploader-mask\"\r\nimport UploaderUpload from \"./uploader-upload\"\r\nimport UploaderContext from \"./uploader.context\"\r\nimport { getOneUploadFile, getUploadFiles, UploadFile } from \"./uploader.shared\"\r\n\r\nfunction renderUploaderMask(file: UploadFile) {\r\n  return (\r\n    (file?.status === \"uploading\" || file?.status === \"failed\") && (\r\n      <UploaderMask\r\n        icon={\r\n          file?.status === \"uploading\" ? (\r\n            <Loading />\r\n          ) : file?.status === \"failed\" ? (\r\n            <Close />\r\n          ) : undefined\r\n        }\r\n        message={file.message}\r\n      />\r\n    )\r\n  )\r\n}\r\n\r\ninterface UseUploadFilesRenderProps {\r\n  defaultValue?: UploadFile[] | UploadFile\r\n  value?: UploadFile[] | UploadFile\r\n  disabled?: boolean\r\n  multiple?: boolean\r\n  maxFiles?: number\r\n\r\n  onChange?(file?: any): void\r\n}\r\n\r\nfunction UploadFilesRender(props: UseUploadFilesRenderProps): JSX.Element {\r\n  const {\r\n    defaultValue,\r\n    value: valueProp,\r\n    disabled,\r\n    multiple,\r\n    maxFiles = Number.MAX_VALUE,\r\n    onChange: onChangeProp,\r\n  } = props\r\n\r\n  const { value = [], setValue } = useValue({\r\n    defaultValue,\r\n    value: valueProp,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const renderImage = useCallback(\r\n    (file: UploadFile, index?: number) => (\r\n      <UploaderImage\r\n        key={index}\r\n        type={file?.type}\r\n        url={file?.url}\r\n        name={file?.name}\r\n        removable={file?.removable && file?.status !== \"uploading\" ? true : undefined}\r\n        children={renderUploaderMask(file)}\r\n        onRemove={() => {\r\n          if (!disabled) {\r\n            if (multiple) {\r\n              setValue(_.filter(value, (item) => item !== file))\r\n            } else {\r\n              // @ts-ignore\r\n              setValue(null)\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    ),\r\n    [disabled, multiple, setValue, value],\r\n  )\r\n\r\n  const files = useMemo(() => {\r\n    if (!multiple) {\r\n      return []\r\n    }\r\n    const __files__ = _.map(getUploadFiles(value) as UploadFile[], renderImage)\r\n    if (__files__.length < maxFiles) {\r\n      __files__.push(<UploaderUpload key=\"upload\" />)\r\n    }\r\n    return __files__ as ReactNode\r\n  }, [maxFiles, multiple, renderImage, value])\r\n\r\n  if (_.isEmpty(value)) {\r\n    return <UploaderUpload />\r\n  }\r\n\r\n  if (!multiple) {\r\n    const file = getOneUploadFile(value)\r\n    return renderImage(file)\r\n  }\r\n  return files as JSX.Element\r\n}\r\n\r\ninterface BaseUploaderProps extends ViewProps {\r\n  className?: string\r\n  defaultValue?: UploadFile[] | UploadFile\r\n  value?: UploadFile[] | UploadFile\r\n  disabled?: boolean\r\n  multiple?: boolean\r\n  maxFiles?: number\r\n  removable?: boolean\r\n  children?: ReactNode\r\n\r\n  onUpload?(): void\r\n}\r\n\r\nexport interface Uploader1Props extends BaseUploaderProps {\r\n  onChange?(file?: UploadFile): void\r\n}\r\n\r\nexport interface Uploader2Props extends BaseUploaderProps {\r\n  onChange?(files: UploadFile[]): void\r\n}\r\n\r\nexport interface Uploader3Props extends BaseUploaderProps {\r\n  onChange?(files?: UploadFile[]): void\r\n}\r\n\r\nexport type UploaderProps = Uploader1Props | Uploader2Props | Uploader3Props\r\n\r\nexport default function Uploader(props: UploaderProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value,\r\n    disabled = false,\r\n    removable = true,\r\n    maxFiles,\r\n    multiple,\r\n    children,\r\n    onUpload,\r\n    onChange,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <UploaderContext.Provider\r\n      value={{\r\n        removable,\r\n        disabled,\r\n        onUpload,\r\n      }}\r\n    >\r\n      <View className={classNames(prefixClassname(\"uploader\"), className)} {...restProps}>\r\n        <View\r\n          className={classNames(prefixClassname(\"uploader__wrapper\"), {\r\n            [prefixClassname(\"uploader__wrapper--disabled\")]: disabled,\r\n          })}\r\n        >\r\n          {children ?? (\r\n            <UploadFilesRender\r\n              defaultValue={defaultValue}\r\n              value={value}\r\n              disabled={disabled}\r\n              maxFiles={maxFiles}\r\n              multiple={multiple}\r\n              onChange={onChange}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </UploaderContext.Provider>\r\n  )\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { ReactNode } from \"react\"\r\n\r\nexport type UploadStatus = \"uploading\" | \"completed\" | \"failed\"\r\n\r\nexport interface UploadFile {\r\n  url?: string\r\n  type?: string\r\n  name?: string\r\n  removable?: boolean\r\n  status?: UploadStatus\r\n  message?: ReactNode\r\n}\r\n\r\nexport function getOneUploadFile(files: UploadFile | UploadFile[]) {\r\n  return _.isArray(files) ? files[0] : (files as UploadFile)\r\n}\r\n\r\nexport function getUploadFiles(files: UploadFile | UploadFile[]) {\r\n  return _.isArray(files) ? files : [files as UploadFile]\r\n}\r\n","import UploaderComponent, { UploaderProps } from \"./uploader\"\r\nimport UploaderImage from \"./uploader-image\"\r\nimport UploaderUpload from \"./uploader-upload\"\r\nimport { UploadFile } from \"./uploader.shared\"\r\n\r\nexport type { UploaderProps } from \"./uploader\"\r\n\r\ninterface UploaderInterface {\r\n  (props: UploaderProps): JSX.Element\r\n\r\n  Upload: typeof UploaderUpload\r\n  Image: typeof UploaderImage\r\n}\r\n\r\nconst Uploader = UploaderComponent as UploaderInterface\r\n\r\nUploader.Upload = UploaderUpload\r\nUploader.Image = UploaderImage\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Uploader {\r\n  export type File = UploadFile\r\n}\r\n\r\nexport default Uploader\r\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../../image/style\"\r\nimport \"../index.scss\"\r\n","import { MethodHandler } from '../../utils/handler';\nimport { shouldBeObject, getParameterError } from '../../utils';\n/**\n * 从本地相册选择图片或使用相机拍照。\n */\nexport const chooseImage = function (options) {\n    // options must be an Object\n    const isObject = shouldBeObject(options);\n    if (!isObject.flag) {\n        const res = { errMsg: `chooseImage:fail ${isObject.msg}` };\n        console.error(res.errMsg);\n        return Promise.reject(res);\n    }\n    const { count = 1, success, fail, complete, imageId = 'taroChooseImage' } = options;\n    const handle = new MethodHandler({ name: 'chooseImage', success, fail, complete });\n    const res = {\n        tempFilePaths: [],\n        tempFiles: []\n    };\n    if (count && typeof count !== 'number') {\n        res.errMsg = getParameterError({\n            para: 'count',\n            correct: 'Number',\n            wrong: count\n        });\n        return handle.fail(res);\n    }\n    let el = document.getElementById(imageId);\n    if (!el) {\n        const obj = document.createElement('input');\n        obj.setAttribute('type', 'file');\n        obj.setAttribute('id', imageId);\n        if (count > 1) {\n            obj.setAttribute('multiple', 'multiple');\n        }\n        obj.setAttribute('accept', 'image/*');\n        obj.setAttribute('style', 'position: fixed; top: -4000px; left: -3000px; z-index: -300;');\n        document.body.appendChild(obj);\n        el = document.getElementById(imageId);\n    }\n    else {\n        if (count > 1) {\n            el.setAttribute('multiple', 'multiple');\n        }\n        else {\n            el.removeAttribute('multiple');\n        }\n    }\n    return new Promise(resolve => {\n        const TaroMouseEvents = document.createEvent('MouseEvents');\n        TaroMouseEvents.initEvent('click', true, true);\n        if (el) {\n            el.dispatchEvent(TaroMouseEvents);\n            el.onchange = function (e) {\n                const target = e.target;\n                if (target) {\n                    const files = target.files || [];\n                    const arr = [...files];\n                    arr && arr.forEach(item => {\n                        var _a, _b;\n                        const blob = new Blob([item], {\n                            type: item.type\n                        });\n                        const url = URL.createObjectURL(blob);\n                        (_a = res.tempFilePaths) === null || _a === void 0 ? void 0 : _a.push(url);\n                        (_b = res.tempFiles) === null || _b === void 0 ? void 0 : _b.push({ path: url, size: item.size, type: item.type, originalFileObj: item });\n                    });\n                    handle.success(res, resolve);\n                    target.value = '';\n                }\n            };\n        }\n    });\n};\n","import { Button, Uploader } from \"@taroify/core\"\nimport { Plus } from \"@taroify/icons\"\nimport { View } from \"@tarojs/components\"\nimport { chooseImage } from \"@tarojs/taro\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\nfunction BasicUploader() {\n  const [file, setFile] = useState<Uploader.File>()\n\n  function onUpload() {\n    chooseImage({\n      count: 1,\n      sizeType: [\"original\", \"compressed\"],\n      sourceType: [\"album\", \"camera\"],\n    }).then(({ tempFiles }) => {\n      setFile({\n        url: tempFiles[0].path,\n        type: tempFiles[0].type,\n        name: tempFiles[0].originalFileObj?.name,\n      })\n    })\n  }\n\n  return <Uploader value={file} onUpload={onUpload} onChange={setFile} />\n}\n\nfunction PreviewUploader() {\n  const [files, setFiles] = useState<Uploader.File[]>([\n    {\n      url: \"https://img01.yzcdn.cn/vant/leaf.jpg\",\n    },\n    {\n      url: \"https://img.yzcdn.cn/vant/tree.jpg\",\n    },\n  ])\n\n  function onUpload() {\n    chooseImage({\n      count: 1,\n      sizeType: [\"original\", \"compressed\"],\n      sourceType: [\"album\", \"camera\"],\n    }).then(({ tempFiles }) => {\n      setFiles([\n        ...files,\n        ...tempFiles.map(({ path, type, originalFileObj }) => ({\n          type,\n          url: path,\n          name: originalFileObj?.name,\n        })),\n      ])\n    })\n  }\n\n  return <Uploader value={files} multiple onUpload={onUpload} onChange={setFiles} />\n}\n\nfunction UploaderWithStatus() {\n  const [files, setFiles] = useState<Uploader.File[]>([\n    {\n      url: \"https://img01.yzcdn.cn/vant/leaf.jpg\",\n      status: \"uploading\",\n      message: \"上传中...\",\n    },\n    {\n      url: \"https://img01.yzcdn.cn/vant/tree.jpg\",\n      status: \"failed\",\n      message: \"上传失败\",\n    },\n  ])\n\n  function onUpload() {\n    chooseImage({\n      count: 1,\n      sizeType: [\"original\", \"compressed\"],\n      sourceType: [\"album\", \"camera\"],\n    }).then(({ tempFiles }) => {\n      setFiles([\n        ...files,\n        ...tempFiles.map(({ path, type, originalFileObj }) => ({\n          type,\n          url: path,\n          name: originalFileObj?.name,\n        })),\n      ])\n    })\n  }\n\n  return <Uploader value={files} multiple onUpload={onUpload} onChange={setFiles} />\n}\n\nfunction MaxFilesUploader() {\n  const [files, setFiles] = useState<Uploader.File[]>([])\n\n  function onUpload() {\n    chooseImage({\n      count: 1,\n      sizeType: [\"original\", \"compressed\"],\n      sourceType: [\"album\", \"camera\"],\n    }).then(({ tempFiles }) => {\n      setFiles([\n        ...files,\n        ...tempFiles.map(({ path, type, originalFileObj }) => ({\n          type,\n          url: path,\n          name: originalFileObj?.name,\n        })),\n      ])\n    })\n  }\n\n  return <Uploader value={files} multiple maxFiles={2} onUpload={onUpload} onChange={setFiles} />\n}\n\nfunction CustomUploader() {\n  return (\n    <Uploader>\n      <Button icon={<Plus />} color=\"primary\">\n        上传文件\n      </Button>\n    </Uploader>\n  )\n}\n\nfunction CustomPreviewUploader() {\n  const [files, setFiles] = useState<Uploader.File[]>([\n    {\n      url: \"https://img01.yzcdn.cn/vant/leaf.jpg\",\n    },\n  ])\n\n  function onUpload() {\n    chooseImage({\n      sizeType: [\"original\", \"compressed\"],\n      sourceType: [\"album\", \"camera\"],\n    }).then(({ tempFiles }) => {\n      setFiles([\n        ...files,\n        ...tempFiles.map(({ path, type, originalFileObj }) => ({\n          type,\n          url: path,\n          name: originalFileObj?.name,\n        })),\n      ])\n    })\n  }\n\n  return (\n    <Uploader value={files} multiple onUpload={onUpload} onChange={setFiles}>\n      {files.map((image) => (\n        <Uploader.Image\n          key={image.url}\n          url={image.url}\n          name={image.name}\n          type={image.type}\n          onRemove={() => setFiles(files.filter((item) => item !== image))}\n        >\n          <View className=\"preview-cover taroify-ellipsis\">图片名称</View>\n        </Uploader.Image>\n      ))}\n      <Uploader.Upload />\n    </Uploader>\n  )\n}\n\nfunction DisabledUploader() {\n  return <Uploader disabled />\n}\n\nexport default function UploaderDemo() {\n  return (\n    <Page title=\"Uploader 文件上传\" className=\"uploader-demo\">\n      <Block title=\"基础用法\">\n        <BasicUploader />\n      </Block>\n      <Block title=\"文件预览\">\n        <PreviewUploader />\n      </Block>\n      <Block title=\"上传状态\">\n        <UploaderWithStatus />\n      </Block>\n      <Block title=\"限制上传数量\">\n        <MaxFilesUploader />\n      </Block>\n      <Block title=\"自定义上传样式\">\n        <CustomUploader />\n      </Block>\n      <Block title=\"自定义预览样式\">\n        <CustomPreviewUploader />\n      </Block>\n      <Block title=\"禁用文件上传\">\n        <DisabledUploader />\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}