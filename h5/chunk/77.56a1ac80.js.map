{"version":3,"sources":["webpack:///../core/src/utils/format/unit.ts","webpack:///./src/components/block.tsx","webpack:///../icons/src/utils/index.ts","webpack:///../core/src/styles/hairline.ts","webpack:///../core/src/image/image.tsx","webpack:///../core/src/image/style/index.ts","webpack:///../core/src/badge/style/index.ts","webpack:///../core/src/badge/badge.tsx","webpack:///../core/src/badge/use-badge.tsx","webpack:///../core/src/grid/style/index.ts","webpack:///../core/src/grid/grid.context.ts","webpack:///../core/src/grid/grid.tsx","webpack:///../core/src/grid/grid-item.tsx","webpack:///../core/src/grid/index.ts","webpack:///./src/pages/navigation/grid/index.tsx"],"names":["rootFontSize","addUnitPx","value","undefined","unitToPx","getSizeStyle","originSize","size","width","height","convertRem","replace","getRootFontSize","doc","document","documentElement","fontSize","style","window","getComputedStyle","parseFloat","includes","convertPx","convertVw","innerWidth","convertVh","innerHeight","Block","props","className","variant","title","children","classNames","demoPrefixClassname","isIconElement","node","isValidElement","element","type","ICON_TYPE","cloneIconElement","cloneElement","restProps","oldProps","newProps","HAIRLINE_BORDER","prefixClassname","HAIRLINE_BORDER_TOP","HAIRLINE_BORDER_LEFT","HAIRLINE_BORDER_BOTTOM","HAIRLINE_BORDER_SURROUND","HAIRLINE_BORDER_TOP_BOTTOM","HAIRLINE_BORDER_UNSET_TOP_BOTTOM","ImagePlaceholder","prefix","React","Image","src","alt","mode","round","lazyLoad","placeholder","fallback","taroMode","toTaroMode","useState","loading","setLoading","failed","setFailed","useEffect","imgProps","onError","handleError","onLoad","handleLoad","Badge","contentProp","content","max","dot","position","isIcon","useMemo","hasChildren","noneChildren","elementTypeOf","useBadge","badge","GridContext","createContext","bordered","columns","centered","clickable","Grid","styleProp","gutter","direction","square","childrenProp","Children","map","item","index","__dataIndex__","rootStyle","paddingLeft","Provider","GridItem","icon","text","useContext","percent","useGridItemPercent","flexBasis","paddingTop","gutterValue","paddingRight","marginTop","contentStyle","right","bottom","GridComponent","Item","GridDemo"],"mappings":"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","file":"chunk/77.56a1ac80.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport { ICON_TYPE, IconProps } from \"../shared\"\r\n\r\nexport function isIconElement(node?: ReactNode): boolean {\r\n  // Is`t not ReactElement\r\n  if (!isValidElement(node)) {\r\n    return false\r\n  }\r\n  const element = node as ReactElement\r\n  return _.hasIn(element.type, ICON_TYPE)\r\n}\r\n\r\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\r\n  if (!isIconElement(node)) {\r\n    return isValidElement(node) ? cloneElement(node, props) : node\r\n  }\r\n  const { className, ...restProps } = props\r\n  const element = node as ReactElement\r\n  const { props: oldProps } = element\r\n  const newProps: IconProps = {\r\n    ...oldProps,\r\n    className: classNames(oldProps.className, className),\r\n    ...restProps,\r\n  }\r\n  return cloneElement(element, newProps)\r\n}\r\n","import { prefixClassname } from \"./prefix\"\n\nexport const HAIRLINE_BORDER = prefixClassname(\"hairline\")\nexport const HAIRLINE_BORDER_TOP = `${HAIRLINE_BORDER}--top`\nexport const HAIRLINE_BORDER_LEFT = `${HAIRLINE_BORDER}--left`\nexport const HAIRLINE_BORDER_BOTTOM = `${HAIRLINE_BORDER}--bottom`\nexport const HAIRLINE_BORDER_SURROUND = `${HAIRLINE_BORDER}--surround`\nexport const HAIRLINE_BORDER_TOP_BOTTOM = `${HAIRLINE_BORDER}--top-bottom`\nexport const HAIRLINE_BORDER_UNSET_TOP_BOTTOM = `${HAIRLINE_BORDER}-unset--top-bottom`\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport type ImageMode =\r\n  | \"scaleToFill\"\r\n  | \"aspectFit\"\r\n  | \"aspectFill\"\r\n  | \"widthFix\"\r\n  | \"heightFix\"\r\n  | \"top\"\r\n  | \"bottom\"\r\n  | \"center\"\r\n  | \"left\"\r\n  | \"right\"\r\n  | \"topLeft\"\r\n  | \"topRight\"\r\n  | \"bottomLeft\"\r\n  | \"bottomRight\"\r\n\r\nfunction toTaroMode(mode: ImageMode): string {\r\n  if (mode === \"topLeft\") {\r\n    return \"top left\"\r\n  }\r\n  if (mode === \"topRight\") {\r\n    return \"top right\"\r\n  }\r\n  if (mode === \"bottomLeft\") {\r\n    return \"bottom left\"\r\n  }\r\n  if (mode === \"bottomRight\") {\r\n    return \"bottom right\"\r\n  }\r\n  return mode\r\n}\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ImagePlaceholder({ prefix = \"placeholder\", children }: ImagePlaceholderProps) {\r\n  // Icon Element\r\n  if (React.isValidElement(children)) {\r\n    return (\r\n      <>\r\n        {React.cloneElement(children as ReactElement, {\r\n          className: classNames(\r\n            prefixClassname(`image__${prefix}`),\r\n            prefixClassname(`image__${prefix}-icon`),\r\n          ),\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n\r\ninterface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round = false,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = toTaroMode(mode)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n  }, [src])\r\n\r\n  function handleLoad() {\r\n    setLoading(false)\r\n  }\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--round\")]: round,\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onError={handleError}\r\n          onLoad={handleLoad}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\nimport { View } from \"@tarojs/components\"\nimport classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport * as React from \"react\"\nimport { ReactElement, ReactNode, useMemo } from \"react\"\nimport { prefixClassname } from \"../styles\"\n\nexport type BadgePosition = \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\"\n\nexport interface BadgeProps {\n  className?: string\n  content?: ReactNode\n  dot?: boolean\n  max?: number\n  position?: BadgePosition\n  children?: ReactNode\n}\n\nfunction Badge(props: BadgeProps): JSX.Element {\n  const { className, content: contentProp, max, dot, position = \"top-right\", children } = props\n  const isIcon = useMemo(() => isIconElement(children), [children])\n  const hasChildren = children !== undefined\n  const noneChildren = children === undefined\n\n  const content = useMemo(\n    () =>\n      _.isNumber(contentProp)\n        ? _.toString(_.gt(contentProp, max) ? `${max}+` : contentProp)\n        : contentProp,\n    [contentProp, max],\n  )\n\n  return cloneIconElement(isIcon ? children : <View />, {\n    className: classNames(\n      {\n        [prefixClassname(\"badge__wrapper\")]: hasChildren,\n        [prefixClassname(\"badge\")]: noneChildren,\n        [prefixClassname(\"badge--dot\")]: noneChildren && dot,\n        [prefixClassname(\"badge--top-left\")]: noneChildren && position === \"top-left\",\n        [prefixClassname(\"badge--top-right\")]: noneChildren && position === \"top-right\",\n        [prefixClassname(\"badge--bottom-left\")]: noneChildren && position === \"bottom-left\",\n        [prefixClassname(\"badge--bottom-right\")]: noneChildren && position === \"bottom-right\",\n      },\n      className,\n    ),\n    children: (\n      <>\n        {!isIcon && children}\n        {noneChildren && !dot && content}\n        {hasChildren && (dot || content) && (\n          <View\n            className={classNames(\n              prefixClassname(\"badge\"),\n              {\n                [prefixClassname(\"badge--dot\")]: dot,\n                [prefixClassname(\"badge--content\")]: content,\n                [prefixClassname(\"badge--top-left\")]: position === \"top-left\",\n                [prefixClassname(\"badge--top-right\")]: position === \"top-right\",\n                [prefixClassname(\"badge--bottom-left\")]: position === \"bottom-left\",\n                [prefixClassname(\"badge--bottom-right\")]: position === \"bottom-right\",\n              },\n              prefixClassname(\"badge--fixed\"),\n            )}\n            children={!dot && content}\n          />\n        )}\n      </>\n    ),\n  }) as ReactElement\n}\n\nexport default Badge\n","import * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport Badge, { BadgeProps } from \"./badge\"\r\n\r\ninterface BadgeChildren {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction elementTypeOf(node: ReactNode, type: any) {\r\n  return isValidElement(node) && (node as ReactElement).type === type\r\n}\r\n\r\nexport default function useBadge(badge: ReactNode, props: BadgeProps = {}) {\r\n  if (_.isBoolean(badge) && badge) {\r\n    return ({ children }: BadgeChildren) => <Badge {...props} dot children={children} />\r\n  }\r\n\r\n  if (_.isNumber(badge) || _.isString(badge)) {\r\n    return ({ children }: BadgeChildren) => <Badge {...props} content={badge} children={children} />\r\n  }\r\n\r\n  if (elementTypeOf(badge, Badge)) {\r\n    return ({ children }: BadgeChildren) =>\r\n      cloneElement(badge as ReactElement, {\r\n        ...props,\r\n        children,\r\n      })\r\n  }\r\n  return ({ children }: BadgeChildren) => <Badge {...props} children={children} />\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../../badge/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\n\ninterface GridContextProps {\n  bordered: boolean\n  columns: number\n  gutter?: number | string\n  centered: boolean\n  clickable: boolean\n  direction?: \"horizontal\" | \"vertical\"\n  square?: boolean\n}\n\nconst GridContext = createContext<GridContextProps>({\n  bordered: false,\n  columns: 0,\n  centered: false,\n  clickable: false,\n})\n\nexport default GridContext\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { Children, cloneElement, CSSProperties, ReactElement, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { HAIRLINE_BORDER_TOP } from \"../styles/hairline\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport GridContext from \"./grid.context\"\r\nimport { GridDirection } from \"./grid.shared\"\r\n\r\nconst DEFAULT_GRID_COLUMNS = 4\r\n\r\nexport interface GridProps extends ViewProps {\r\n  style?: CSSProperties\r\n  columns?: number\r\n  gutter?: number | string\r\n  bordered?: boolean\r\n  centered?: boolean\r\n  clickable?: boolean\r\n  square?: boolean\r\n  direction?: GridDirection\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Grid(props: GridProps) {\r\n  const {\r\n    className,\r\n    style: styleProp,\r\n    columns = DEFAULT_GRID_COLUMNS,\r\n    gutter,\r\n    bordered = true,\r\n    centered = true,\r\n    clickable = false,\r\n    direction = \"vertical\",\r\n    square,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const children = useMemo(\r\n    () =>\r\n      Children.map(childrenProp, (item, index) =>\r\n        cloneElement(item as ReactElement, { __dataIndex__: index }),\r\n      ),\r\n    [childrenProp],\r\n  )\r\n\r\n  const rootStyle = useMemo(() => {\r\n    const style: CSSProperties = {\r\n      ...styleProp,\r\n    }\r\n    if (gutter) {\r\n      style.paddingLeft = addUnitPx(gutter)\r\n    }\r\n    return style\r\n  }, [gutter, styleProp])\r\n\r\n  return (\r\n    <View\r\n      style={rootStyle}\r\n      className={classNames(\r\n        prefixClassname(\"grid\"),\r\n        {\r\n          [HAIRLINE_BORDER_TOP]: bordered && gutter === undefined,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      <GridContext.Provider\r\n        value={{\r\n          bordered,\r\n          centered,\r\n          columns,\r\n          clickable,\r\n          direction,\r\n          gutter,\r\n          square,\r\n        }}\r\n      >\r\n        {children}\r\n      </GridContext.Provider>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useMemo } from \"react\"\r\nimport Badge from \"../badge\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { HAIRLINE_BORDER } from \"../styles/hairline\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport GridContext from \"./grid.context\"\r\n\r\nfunction useGridItemPercent(columns: number) {\r\n  return useMemo(() => `${100 / columns}%`, [columns])\r\n}\r\n\r\ninterface GridItemProps extends ViewProps {\r\n  __dataIndex__?: number\r\n  style?: CSSProperties\r\n  dot?: boolean\r\n  badge?: ReactNode\r\n  icon?: ReactNode\r\n  text?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport function GridItem(props: GridItemProps) {\r\n  const {\r\n    __dataIndex__ = 0,\r\n    className,\r\n    style: styleProp,\r\n    icon,\r\n    text,\r\n    dot,\r\n    badge,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const { columns, gutter, bordered, centered, clickable, direction, square } = useContext(\r\n    GridContext,\r\n  )\r\n  const percent = useGridItemPercent(columns)\r\n\r\n  const rootStyle = useMemo(() => {\r\n    const style: CSSProperties = {\r\n      ...styleProp,\r\n    }\r\n    style.flexBasis = `${percent}`\r\n    if (square) {\r\n      style.paddingTop = percent\r\n    } else if (gutter) {\r\n      const gutterValue = addUnitPx(gutter)\r\n      style.paddingRight = gutterValue\r\n\r\n      if (__dataIndex__ >= columns) {\r\n        style.marginTop = gutterValue\r\n      }\r\n    }\r\n    return style\r\n  }, [styleProp, percent, square, gutter, __dataIndex__, columns])\r\n\r\n  const contentStyle = useMemo(() => {\r\n    if (square && gutter) {\r\n      const gutterValue = addUnitPx(gutter)\r\n      return {\r\n        right: gutterValue,\r\n        bottom: gutterValue,\r\n        height: \"auto\",\r\n      }\r\n    }\r\n  }, [square, gutter])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"grid-item\"),\r\n        {\r\n          [prefixClassname(\"grid-item--square\")]: square,\r\n        },\r\n        className,\r\n      )}\r\n      style={rootStyle}\r\n      {...restProps}\r\n    >\r\n      <View\r\n        style={contentStyle}\r\n        className={classNames(prefixClassname(\"grid-item__content\"), {\r\n          [prefixClassname(\"grid-item__content--square\")]: square,\r\n          [prefixClassname(\"grid-item__content--centered\")]: centered,\r\n          [prefixClassname(\"grid-item__content--clickable\")]: clickable,\r\n          [prefixClassname(\"grid-item__content--horizontal\")]: direction === \"horizontal\",\r\n          [prefixClassname(\"grid-item__content--surround\")]: bordered && gutter,\r\n          [HAIRLINE_BORDER]: bordered,\r\n        })}\r\n      >\r\n        {!children && (\r\n          <>\r\n            {icon && (\r\n              <Badge\r\n                className={prefixClassname(\"grid-item__icon\")}\r\n                dot={dot}\r\n                content={badge}\r\n                children={icon}\r\n              />\r\n            )}\r\n            <View className={prefixClassname(\"grid-item__text\")}>{text}</View>\r\n          </>\r\n        )}\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default GridItem\r\n","import GridComponent, { GridProps } from \"./grid\"\r\nimport GridItem from \"./grid-item\"\r\n\r\ninterface GridInterface {\r\n  (props: GridProps): JSX.Element\r\n\r\n  Item: typeof GridItem\r\n}\r\n\r\nconst Grid = GridComponent as GridInterface\r\nGrid.Item = GridItem\r\n\r\nexport default Grid\r\n","import { Grid, Image } from \"@taroify/core\"\nimport { HomeOutlined, PhotoOutlined, Search } from \"@taroify/icons\"\nimport * as React from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\nexport default function GridDemo() {\n  return (\n    <Page title=\"Grid 宫格\" className=\"grid-demo\">\n      <Block title=\"基础用法\">\n        <Grid columns={4}>\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n        </Grid>\n      </Block>\n      <Block title=\"自定义列数\">\n        <Grid columns={3}>\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n        </Grid>\n      </Block>\n      <Block title=\"自定义内容\">\n        <Grid columns={3} bordered={false}>\n          <Grid.Item>\n            <Image className=\"grid-image\" src=\"https://img.yzcdn.cn/vant/apple-1.jpg\" />\n          </Grid.Item>\n          <Grid.Item>\n            <Image className=\"grid-image\" src=\"https://img.yzcdn.cn/vant/apple-2.jpg\" />\n          </Grid.Item>\n          <Grid.Item>\n            <Image className=\"grid-image\" src=\"https://img.yzcdn.cn/vant/apple-3.jpg\" />\n          </Grid.Item>\n        </Grid>\n      </Block>\n      <Block title=\"正方形格子\">\n        <Grid columns={4} square>\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n        </Grid>\n      </Block>\n      <Block title=\"格子间距\">\n        <Grid columns={4} gutter={10}>\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n        </Grid>\n      </Block>\n      <Block title=\"内容横排\">\n        <Grid columns={3} direction=\"horizontal\">\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n        </Grid>\n      </Block>\n      <Block title=\"徽标提示\">\n        <Grid columns={2}>\n          <Grid.Item icon={<HomeOutlined />} dot text=\"文字\" />\n          <Grid.Item icon={<Search />} badge=\"99+\" text=\"文字\" />\n        </Grid>\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}