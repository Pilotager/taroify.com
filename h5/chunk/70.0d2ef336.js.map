{"version":3,"sources":["webpack:///../../../../packages/icons/src/utils/unit.ts","webpack:///../../../../packages/icons/src/van/VanIcon.tsx","webpack:///../../../../packages/core/src/styles/index.ts","webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/styles/prefix.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toNumber.js","webpack:///../../../../packages/icons/src/ArrowLeft.tsx","webpack:///./src/styles/prefix.ts","webpack:///../../../../packages/icons/src/shared.ts","webpack:///./src/components/target.tsx","webpack:///./src/components/page.tsx","webpack:///./src/components/block.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseTrim.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_trimmedEndIndex.js","webpack:///../../../../packages/core/src/flex/flex.context.ts","webpack:///../../../../packages/core/src/flex/flex.tsx","webpack:///../../../../packages/core/src/flex/index.ts","webpack:///../../../../packages/core/src/flex/flex-item.tsx","webpack:///../../../../packages/core/src/flex/style/index.ts","webpack:///./src/pages/basic/flex/index.tsx"],"names":["value","convertPx","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertVw","convertVh","unitToPx","size","color","presetColor","ICON_PRESET_COLORS","presetSize","ICON_PRESET_SIZES","className","classNames","style","addUnitPx","name","VanIconWrapper","width","height","convertRpx","getSystemInfoSync","windowWidth","baseTrim","require","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","module","exports","toNumber","other","valueOf","isBinary","test","slice","ArrowLeft","createVanIconComponent","demoPrefixClassname","component","ICON_TYPE","Symbol","TargetType","Target","props","type","children","process","Page","title","onClick","navigateBack","Block","variant","trimmedEndIndex","reTrimStart","string","replace","reWhitespace","index","length","charAt","createContext","gutter","undefined","Flex","forwardRef","direction","wrap","justify","align","useFlexGutter","useMemo","gutterNumber","gutterStyle","averagePadding","ref","prefixClassname","FlexContext","offset","gutters","useContext","horizontalGutter","span","FlexDemo","Item"],"mappings":"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","file":"chunk/70.0d2ef336.js","sourcesContent":["export function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport {\r\n  ICON_PRESET_COLORS,\r\n  ICON_PRESET_SIZES,\r\n  ICON_TYPE,\r\n  IconColor,\r\n  IconProps,\r\n  IconSize,\r\n} from \"../shared\"\r\nimport { addUnitPx } from \"../utils/unit\"\r\n\r\ninterface VanIconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  name?: string\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function VanIcon(props: VanIconProps) {\r\n  const { className, style, name, size = \"inherit\", color = \"inherit\", ...restProps } = props\r\n  const presetColor = ICON_PRESET_COLORS.includes(color as IconColor)\r\n  const presetSize = ICON_PRESET_SIZES.includes(size as IconSize)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        \"van-icon\",\r\n        `van-icon-${name}`,\r\n        \"taroify-icon\",\r\n        {\r\n          [`taroify-icon--${color}`]: presetColor,\r\n          [`taroify-icon--${size}`]: presetSize,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        color: presetColor ? \"\" : color,\r\n        fontSize: presetSize ? \"\" : addUnitPx(size),\r\n        ...style,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport function createVanIconComponent(name: string) {\r\n  function VanIconWrapper(props: IconProps) {\r\n    return <VanIcon name={name} {...props} />\r\n  }\r\n\r\n  // @ts-ignore\r\n  VanIconWrapper[ICON_TYPE] = ICON_TYPE\r\n  return VanIconWrapper\r\n}\r\n","export { prefixClassname } from \"./prefix\"\n","import { getSystemInfoSync } from \"@tarojs/taro\"\r\nimport * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertRpx(value: string) {\r\n  value = value.replace(/rpx/g, \"\")\r\n  const { windowWidth } = getSystemInfoSync()\r\n  const pixelRatio = 750 / windowWidth\r\n  return +value / pixelRatio\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"rpx\")) {\r\n    return convertRpx(value)\r\n  }\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","const COMPONENT_PREFIX = \"\\u0074\\u0061\\u0072\\u006f\\u0069\\u0066\\u0079-\"\r\n\r\nexport function prefixClassname(component: string) {\r\n  return `${COMPONENT_PREFIX}${component}`\r\n}\r\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import { createVanIconComponent } from \"./van\"\r\n\r\nconst ArrowLeft = createVanIconComponent(\"arrow-left\")\r\nexport default ArrowLeft\r\n","const DEMO_PREFIX = \"taroify-demo-\"\n\nexport function demoPrefixClassname(component: string) {\n  return `${DEMO_PREFIX}${component}`\n}\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\n\r\nexport const ICON_TYPE = Symbol(\"__iconType__\")\r\n\r\nexport type IconSize = \"inherit\" | \"mini\" | \"small\" | \"medium\" | \"large\"\r\n\r\nexport const ICON_PRESET_SIZES = [\"inherit\", \"mini\", \"small\", \"medium\", \"large\"]\r\n\r\nexport type IconColor =\r\n  | \"inherit\"\r\n  | \"default\"\r\n  | \"primary\"\r\n  | \"info\"\r\n  | \"success\"\r\n  | \"warning\"\r\n  | \"danger\"\r\n\r\nexport const ICON_PRESET_COLORS = [\r\n  \"inherit\",\r\n  \"default\",\r\n  \"primary\",\r\n  \"info\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n]\r\n\r\nexport interface IconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n","import { ReactNode } from \"react\"\r\n\r\n/* eslint-disable  no-shadow */\r\nexport enum TargetType {\r\n  /* eslint-enable  no-shadow */\r\n  H5 = \"h5\",\r\n}\r\n\r\ntype TargetTypeString = \"h5\"\r\n\r\ninterface TargetProps {\r\n  type?: TargetType | TargetTypeString\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Target(props: TargetProps) {\r\n  const { type, children } = props\r\n  return <>{type === process.env.TARO_ENV && children}</>\r\n}\r\n","import ArrowLeft from \"@taroify/icons/ArrowLeft\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { navigateBack } from \"@tarojs/taro\"\r\nimport classNames from \"classnames\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./page.scss\"\r\nimport Target from \"./target\"\r\n\r\ninterface PageProps {\r\n  className?: string\r\n  title?: string\r\n  children: ReactNode\r\n}\r\n\r\nexport default function Page(props: PageProps) {\r\n  const { className, title, children } = props\r\n\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"page\"), className)}>\r\n      <Target type=\"h5\">\r\n        <View className={demoPrefixClassname(\"page__nav\")}>\r\n          <ArrowLeft\r\n            className={demoPrefixClassname(\"page__nav__back\")}\r\n            onClick={() => navigateBack()}\r\n          />\r\n          <View className={demoPrefixClassname(\"page__nav__title\")}>{title} </View>\r\n        </View>\r\n      </Target>\r\n      <View className={demoPrefixClassname(\"page__content\")}>{children}</View>\r\n    </View>\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","import { createContext } from \"react\"\r\n\r\ninterface FlexContextValue {\r\n  gutter: [number | undefined, number | undefined]\r\n}\r\n\r\nconst FlexContext = createContext<FlexContextValue>({\r\n  gutter: [undefined, undefined],\r\n})\r\n\r\nexport default FlexContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, forwardRef, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\nimport { FlexAlign, FlexDirection, FlexGutter, FlexJustify, FlexWrap } from \"./flex.shared\"\r\n\r\nfunction useFlexGutter(gutter?: FlexGutter): [undefined | number, undefined | number] {\r\n  return useMemo(() => {\r\n    if (gutter === undefined) {\r\n      return [undefined, undefined]\r\n    }\r\n\r\n    if (_.isNumber(gutter)) {\r\n      return [gutter, gutter]\r\n    }\r\n\r\n    if (_.isString(gutter)) {\r\n      const gutterNumber = _.toNumber(gutter)\r\n      return [gutterNumber, gutterNumber]\r\n    }\r\n\r\n    if (_.isArray(gutter)) {\r\n      const [horizontalGutter, verticalGutter] = gutter\r\n      return [_.toNumber(horizontalGutter), _.toNumber(verticalGutter)]\r\n    }\r\n\r\n    return [0, 0]\r\n  }, [gutter])\r\n}\r\n\r\nexport interface FlexProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: FlexDirection\r\n  wrap?: FlexWrap\r\n  justify?: FlexJustify\r\n  align?: FlexAlign\r\n  gutter?: FlexGutter\r\n  children?: ReactNode\r\n}\r\n\r\nconst Flex = forwardRef((props: FlexProps, ref) => {\r\n  const {\r\n    className,\r\n    style,\r\n    gutter: gutterProp,\r\n    direction = \"row\",\r\n    wrap = \"nowrap\",\r\n    justify = \"start\",\r\n    align = \"start\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const gutter = useFlexGutter(gutterProp)\r\n  const [horizontalGutter] = gutter\r\n\r\n  const gutterStyle = useMemo<CSSProperties>(() => {\r\n    const gutterStyle: CSSProperties = {}\r\n    if (horizontalGutter) {\r\n      const averagePadding = _.toNumber(horizontalGutter) / 2\r\n      gutterStyle.marginLeft = addUnitPx(-averagePadding)\r\n      gutterStyle.marginRight = addUnitPx(-averagePadding)\r\n    }\r\n    return {}\r\n  }, [horizontalGutter])\r\n\r\n  return (\r\n    <View\r\n      ref={ref}\r\n      className={classNames(\r\n        prefixClassname(\"flex\"),\r\n        {\r\n          // Set flex style\r\n          [prefixClassname(\"flex--row\")]: direction === \"row\",\r\n          [prefixClassname(\"flex--row-reverse\")]: direction === \"row-reverse\",\r\n          [prefixClassname(\"flex--column\")]: direction === \"column\",\r\n          [prefixClassname(\"flex--column-reverse\")]: direction === \"column-reverse\",\r\n          // Set flex-wrap style\r\n          [prefixClassname(\"flex--nowrap\")]: wrap === \"nowrap\",\r\n          [prefixClassname(\"flex--wrap\")]: wrap === \"wrap\",\r\n          [prefixClassname(\"flex--wrap-reverse\")]: wrap === \"wrap-reverse\",\r\n          // Set justify style\r\n          [prefixClassname(\"flex--justify-start\")]: justify === \"start\",\r\n          [prefixClassname(\"flex--justify-center\")]: justify === \"center\",\r\n          [prefixClassname(\"flex--justify-end\")]: justify === \"end\",\r\n          [prefixClassname(\"flex--justify-space-around\")]: justify === \"space-around\",\r\n          [prefixClassname(\"flex--justify-space-between\")]: justify === \"space-between\",\r\n          // Set align style\r\n          [prefixClassname(\"flex--align-start\")]: align === \"start\",\r\n          [prefixClassname(\"flex--align-center\")]: align === \"center\",\r\n          [prefixClassname(\"flex--align-end\")]: align === \"end\",\r\n          [prefixClassname(\"flex--align-baseline\")]: align === \"baseline\",\r\n          [prefixClassname(\"flex--align-stretch\")]: align === \"stretch\",\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    >\r\n      <FlexContext.Provider\r\n        value={{\r\n          gutter,\r\n        }}\r\n        children={children}\r\n      />\r\n    </View>\r\n  )\r\n})\r\n\r\nexport default Flex\r\n","import { ForwardRefExoticComponent } from \"react\"\r\nimport FlexComponent, { FlexProps } from \"./flex\"\r\nimport FlexItem from \"./flex-item\"\r\n\r\nexport type { FlexProps } from \"./flex\"\r\nexport type { FlexAlign, FlexDirection, FlexJustify } from \"./flex.shared\"\r\nexport type { FlexItemProps } from \"./flex-item\"\r\n\r\ninterface FlexInterface extends ForwardRefExoticComponent<FlexProps> {\r\n  Item: typeof FlexItem\r\n}\r\n\r\nconst Flex = FlexComponent as FlexInterface\r\n\r\nFlex.Item = FlexItem\r\n\r\nexport default Flex\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\n\r\nexport interface FlexItemProps extends ViewProps {\r\n  style?: CSSProperties\r\n  span?: number\r\n  offset?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function FlexItem(props: FlexItemProps) {\r\n  const { className, style, span, offset, ...restProps } = props\r\n  const { gutter: gutters } = useContext(FlexContext)\r\n  const [horizontalGutter] = gutters\r\n\r\n  // Horizontal gutter use padding\r\n  const gutterStyle: React.CSSProperties = {}\r\n  if (horizontalGutter) {\r\n    const averagePadding = horizontalGutter / 2\r\n    gutterStyle.paddingLeft = addUnitPx(averagePadding)\r\n    gutterStyle.paddingRight = addUnitPx(averagePadding)\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex-item\"),\r\n        {\r\n          [prefixClassname(`flex-item-${span}`)]: span !== undefined,\r\n          [prefixClassname(`flex-item-offset-${offset}`)]: offset !== undefined,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { Flex } from \"@taroify/core\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nexport default function FlexDemo() {\r\n  return (\r\n    <Page title=\"Flex 布局\" className=\"flex-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Flex>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n        </Flex>\r\n      </Block>\r\n      <Block title=\"在列元素之间增加间距\">\r\n        <Flex gutter={12}>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n          <Flex.Item span={8}>span: 8</Flex.Item>\r\n        </Flex>\r\n      </Block>\r\n      <Block title=\"Flex 布局\">\r\n        <Flex>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n        </Flex>\r\n        <Flex>\r\n          <Flex.Item offset={3} span={6}>\r\n            span: 6\r\n          </Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n        </Flex>\r\n        <Flex justify=\"space-between\">\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n        </Flex>\r\n        <Flex justify=\"space-around\">\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n          <Flex.Item span={6}>span: 6</Flex.Item>\r\n        </Flex>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}