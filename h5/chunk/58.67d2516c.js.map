{"version":3,"sources":["webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isNumber.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isString.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toString.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isArrayLike.js","webpack:///./src/components/block.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toNumber.js","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isBoolean.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/range.js","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_isIterateeCall.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toFinite.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_createRange.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseRange.js","webpack:///../../../../packages/core/src/button/button.context.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseTrim.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_trimmedEndIndex.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/replace.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isPlainObject.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/uniqueId.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseToString.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_arrayMap.js","webpack:///../../../../packages/core/src/button/style/index.ts","webpack:///../../../../packages/core/src/button-base/style/index.ts","webpack:///../../../../packages/core/src/button/button.tsx","webpack:///../../../../packages/core/src/button-base/button-base.tsx","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_getPrototype.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_overArg.js","webpack:///../../../../packages/core/src/sticky/style/index.ts","webpack:///../../../../packages/core/src/utils/system.ts","webpack:///../../../../packages/core/src/sticky/index.ts","webpack:///../../../../packages/core/src/sticky/sticky.tsx","webpack:///./src/pages/display/sticky/index.tsx"],"names":["baseGetTag","require","isObjectLike","module","exports","isNumber","value","isArray","isString","baseToString","toString","isFunction","isLength","isArrayLike","length","Block","props","className","variant","title","children","classNames","demoPrefixClassname","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","test","slice","SpinIcon","key","prefixClassname","LoadingSpinner","size","rootStyle","useMemo","width","addUnitPx","height","style","LoadingCircular","type","direction","isBoolean","range","createRange","eq","isIndex","isIterateeCall","index","object","toFinite","baseRange","fromRight","start","end","step","undefined","nativeCeil","Math","ceil","nativeMax","max","result","Array","ButtonContext","createContext","trimmedEndIndex","reTrimStart","string","replace","reWhitespace","charAt","args","arguments","getPrototype","funcProto","Function","prototype","objectProto","Object","funcToString","hasOwnProperty","objectCtorString","call","isPlainObject","proto","Ctor","constructor","idCounter","uniqueId","prefix","id","Symbol","arrayMap","symbolProto","symbolToString","array","iteratee","color","formType","loading","onClick","useButtonLoading","onCtxClick","useContext","shape","block","e","disabled","React","ButtonBase","overArg","getPrototypeOf","func","transform","arg","screenHeight","screenWidth","windowHeight","windowWidth","position","offsetTop","offsetBottom","offset","container","onScroll","bottom","console","offsetTopProp","offsetProp","offsetBottomProp","rootRef","useRef","counterRef","useState","offsetValue","unitToPx","rootRect","fixed","stickyStyle","a","scrollTop","getRect","__rootRect__","setRootRect","containerRect","difference","setTransform","setFixed","getSystemRect","useEffect","onChange","useMounted","invokeScroll","usePageScroll","ref","BasicSticky","OffsetSticky","StickyWithContainer","BottomSticky","StickyDemo"],"mappings":"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","file":"chunk/58.67d2516c.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\nimport { ButtonProps } from \"./button\"\r\n\r\ninterface ButtonContextValue {\r\n  onClick?(event: ITouchEvent, props: ButtonProps): void\r\n}\r\n\r\nconst ButtonContext = createContext<ButtonContextValue>({})\r\n\r\nexport default ButtonContext\r\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var toString = require('./toString');\n\n/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */\nfunction replace() {\n  var args = arguments,\n      string = toString(args[0]);\n\n  return args.length < 3 ? string : string.replace(args[1], args[2]);\n}\n\nmodule.exports = replace;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var toString = require('./toString');\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../../button-base/style\"\r\n\r\nimport \"../index.scss\"\r\n","import \"../index.scss\"\r\n","import { ButtonProps as TaroButtonProps, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport ButtonBase from \"../button-base\"\r\nimport Loading, { LoadingProps } from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport ButtonContext from \"./button.context\"\r\nimport {\r\n  ButtonColor,\r\n  ButtonFormType,\r\n  ButtonShape,\r\n  ButtonSize,\r\n  ButtonVariant,\r\n} from \"./button.shared\"\r\n\r\nfunction useButtonLoading(loading?: boolean | LoadingProps): ReactNode {\r\n  return useMemo(() => {\r\n    if (_.isBoolean(loading) && loading) {\r\n      return <Loading className={prefixClassname(\"button__loading\")} />\r\n    } else if (_.isObjectLike(loading)) {\r\n      const { className, ...restProps } = loading as LoadingProps\r\n      return (\r\n        <Loading\r\n          className={classNames(prefixClassname(\"button__loading\"), className)}\r\n          {...restProps}\r\n        />\r\n      )\r\n    }\r\n    return loading\r\n  }, [loading])\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends Omit<TaroButtonProps, \"size\" | \"formType\" | \"type\" | \"loading\" | \"plain\"> {\r\n  variant?: ButtonVariant\r\n  shape?: ButtonShape\r\n  size?: ButtonSize\r\n  color?: ButtonColor\r\n  formType?: ButtonFormType\r\n  loading?: boolean | LoadingProps\r\n  block?: boolean\r\n  hairline?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    variant = \"contained\",\r\n    shape,\r\n    size = \"medium\",\r\n    color = \"default\",\r\n    formType = \"button\",\r\n    block,\r\n    hairline,\r\n    disabled,\r\n    loading: loadingProp,\r\n    icon,\r\n    children,\r\n    onClick,\r\n    ...restProps\r\n  } = props\r\n\r\n  const loading = useButtonLoading(loadingProp)\r\n\r\n  const { onClick: onCtxClick } = useContext(ButtonContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"button\"),\r\n        {\r\n          // Set variant style\r\n          [prefixClassname(\"button--text\")]: variant === \"text\",\r\n          [prefixClassname(\"button--contained\")]: variant === \"contained\",\r\n          [prefixClassname(\"button--outlined\")]: variant === \"outlined\",\r\n          // Set color style\r\n          [prefixClassname(`button--${color}`)]: color,\r\n          // Set shape style\r\n          [prefixClassname(\"button--round\")]: shape === \"round\",\r\n          [prefixClassname(\"button--square\")]: shape === \"square\",\r\n          // Set size style\r\n          [prefixClassname(\"button--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"button--small\")]: size === \"small\",\r\n          [prefixClassname(\"button--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"button--large\")]: size === \"large\",\r\n          // Set hairline style\r\n          [prefixClassname(\"button--hairline\")]: hairline,\r\n          [prefixClassname(\"hairline--surround\")]: hairline,\r\n          [prefixClassname(\"button--disabled\")]: disabled,\r\n          [prefixClassname(\"button--loading\")]: loading,\r\n          [prefixClassname(\"button--block\")]: block,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={(e) => {\r\n        if (!disabled && !loading) {\r\n          onClick?.(e)\r\n          onCtxClick?.(e, props)\r\n        }\r\n      }}\r\n    >\r\n      <View className={prefixClassname(\"button__content\")}>\r\n        {loading ?? icon}\r\n        {children && <View className={prefixClassname(\"button__text\")} children={children} />}\r\n      </View>\r\n      <ButtonBase\r\n        className={prefixClassname(\"button__button\")}\r\n        formType={formType === \"submit\" ? \"submit\" : formType === \"reset\" ? \"reset\" : undefined}\r\n        disabled={disabled}\r\n        loading={false}\r\n        {...restProps}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function createButton(children: ReactNode | ButtonProps, props?: ButtonProps) {\r\n  if (_.isPlainObject(children)) {\r\n    return <Button {...(children as ButtonProps)} {...props} />\r\n  }\r\n  return <Button children={children} {...props} />\r\n}\r\n","import { Button, ButtonProps } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface ButtonBaseProps extends ButtonProps {}\r\n\r\nfunction ButtonBase(props: ButtonBaseProps) {\r\n  const { className, ...restProps } = props\r\n  return <Button className={classNames(prefixClassname(\"button-base\"), className)} {...restProps} />\r\n}\r\n\r\nexport default ButtonBase\r\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { getSystemInfo } from \"@tarojs/taro\"\r\nimport { useState } from \"react\"\r\nimport { useMounted } from \"../hooks\"\r\n\r\nconst INITIAL_RECT: SystemRect = {\r\n  screenHeight: 0,\r\n  screenWidth: 0,\r\n  windowHeight: 0,\r\n  windowWidth: 0,\r\n}\r\n\r\nexport interface SystemRect {\r\n  screenHeight: number\r\n  screenWidth: number\r\n  windowHeight: number\r\n  windowWidth: number\r\n}\r\n\r\nexport function getSystemRect(): Promise<SystemRect> {\r\n  return getSystemInfo().then(({ screenHeight, screenWidth, windowHeight, windowWidth }) => ({\r\n    screenHeight,\r\n    screenWidth,\r\n    windowHeight,\r\n    windowWidth,\r\n  }))\r\n}\r\n\r\nexport function useSystemRect(): SystemRect {\r\n  const [rect, setRect] = useState<SystemRect>(INITIAL_RECT)\r\n  useMounted(() => getSystemRect().then(setRect))\r\n  return rect\r\n}\r\n","import Sticky from \"./sticky\"\n\nexport default Sticky\n","import { View } from \"@tarojs/components\"\nimport { ViewProps } from \"@tarojs/components/types/View\"\nimport { PageScrollObject, usePageScroll } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport {\n  CSSProperties,\n  MutableRefObject,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\nimport { useMounted } from \"../hooks\"\nimport { prefixClassname } from \"../styles\"\nimport { getRect } from \"../utils/dom/rect\"\nimport { addUnitPx, unitToPx } from \"../utils/format/unit\"\nimport { getSystemRect } from \"../utils/system\"\n\ninterface RootReact {\n  height?: number\n  width?: number\n}\n\ntype StickyPosition = \"top\" | \"bottom\"\n\ninterface StickyOffset {\n  top?: number | string\n  bottom?: number | string\n}\n\ninterface StickyProps extends ViewProps {\n  className?: string\n  style?: CSSProperties\n  position?: StickyPosition\n  offset?: StickyOffset\n  offsetTop?: number | string\n  offsetBottom?: number | string\n  container?: MutableRefObject<Element | undefined>\n  children?: ReactNode\n\n  onChange?(fixed: boolean): void\n\n  onScroll?(scroll: PageScrollObject): void\n}\n\nexport default function Sticky(props: StickyProps) {\n  const {\n    className,\n    style: styleProp,\n    position = \"top\",\n    offsetTop: offsetTopProp,\n    offsetBottom: offsetBottomProp,\n    offset: offsetProp,\n    container: containerRef,\n    children,\n    onChange,\n    onScroll,\n    ...restProps\n  } = props\n\n  if (offsetProp) {\n    const { top, bottom } = offsetProp\n    if (top) {\n      // eslint-disable-next-line no-console\n      console.warn(\"[Deprecated] Use the 'offsetTop' prop instead of the 'offset.top' prop.\")\n    }\n    if (bottom) {\n      // eslint-disable-next-line no-console\n      console.warn(\"[Deprecated] Use the 'offsetBottom' prop instead of the 'offset.bottom' prop.\")\n    }\n  }\n\n  const offsetTop = offsetTopProp ?? offsetProp?.top\n  const offsetBottom = offsetBottomProp ?? offsetProp?.bottom\n\n  const rootRef = useRef<ViewProps>()\n  const counterRef = useRef(0)\n\n  const [rootRect, setRootRect] = useState<RootReact>({})\n\n  const [fixed, setFixed] = useState(false)\n  const [transform, setTransform] = useState(0)\n\n  const offsetValue = useMemo(\n    () => unitToPx((position === \"top\" ? offsetTop : offsetBottom) ?? 0),\n    [offsetBottom, offsetTop, position],\n  )\n\n  const rootStyle: CSSProperties | undefined = useMemo(() => {\n    if (!fixed) {\n      return {\n        height: \"\",\n        width: \"\",\n      }\n    }\n    const style: CSSProperties = {}\n    if (rootRect.height) {\n      style.height = addUnitPx(rootRect.height)\n    }\n    if (rootRect.width) {\n      style.width = addUnitPx(rootRect.width)\n    }\n    return style\n  }, [fixed, rootRect.height, rootRect.width])\n\n  const stickyStyle: CSSProperties | undefined = useMemo(() => {\n    if (!fixed) {\n      return {\n        height: \"\",\n        width: \"\",\n        [position]: \"\",\n      }\n    }\n    const style: CSSProperties = {}\n    if (rootRect.height) {\n      style.height = addUnitPx(rootRect.height)\n    }\n    if (rootRect.width) {\n      style.width = addUnitPx(rootRect.width)\n    }\n    style.transform = transform ? `translate3d(0, ${addUnitPx(transform)}, 0)` : \"\"\n    style[position] = addUnitPx(offsetValue)\n    return style\n  }, [fixed, rootRect.height, rootRect.width, transform, position, offsetValue])\n\n  async function invokeScroll({ scrollTop }: PageScrollObject) {\n    const __rootRect__ = await getRect(rootRef)\n    if (__rootRect__) {\n      setRootRect(__rootRect__)\n      if (position === \"top\") {\n        if (containerRef) {\n          const containerRect = await getRect(containerRef)\n          const difference = containerRect.bottom - offsetValue - __rootRect__.height\n          setTransform(difference < 0 ? difference : 0)\n          setFixed(offsetValue > __rootRect__.top && containerRect.bottom > 0)\n        } else {\n          setFixed(offsetValue > __rootRect__.top)\n        }\n      } else {\n        const { windowHeight } = await getSystemRect()\n        if (containerRef) {\n          const containerRect = await getRect(containerRef)\n          const difference = windowHeight - containerRect.top - offsetValue - __rootRect__.height\n          setTransform(difference < 0 ? difference : 0)\n          setFixed(\n            windowHeight - offsetValue < __rootRect__.bottom && windowHeight > containerRect.top,\n          )\n        } else {\n          setFixed(windowHeight - offsetValue < __rootRect__.bottom)\n        }\n      }\n    }\n    onScroll?.({ scrollTop })\n  }\n\n  useEffect(() => {\n    if (counterRef.current > 0) {\n      onChange?.(fixed)\n    }\n    counterRef.current++\n  }, [fixed, onChange])\n\n  useMounted(() => invokeScroll({ scrollTop: 0 }))\n\n  usePageScroll(({ scrollTop }) => invokeScroll({ scrollTop }))\n\n  return (\n    <View\n      ref={rootRef}\n      style={{\n        ...styleProp,\n        ...rootStyle,\n      }}\n      {...restProps}\n    >\n      <View\n        style={stickyStyle}\n        className={classNames(\n          prefixClassname(\"sticky\"),\n          {\n            [prefixClassname(\"sticky--fixed\")]: fixed,\n          },\n          className,\n        )}\n        children={children}\n      />\n    </View>\n  )\n}\n","import { Button, Sticky } from \"@taroify/core\"\r\nimport { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { useRef } from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction BasicSticky() {\r\n  return (\r\n    <Block title=\"基础用法\">\r\n      <Sticky>\r\n        <Button color=\"primary\">基础用法</Button>\r\n      </Sticky>\r\n    </Block>\r\n  )\r\n}\r\n\r\nfunction OffsetSticky() {\r\n  return (\r\n    <Block title=\"吸顶距离\" className=\"sticky-demo__offset-sticky\">\r\n      <Sticky offsetTop={50}>\r\n        <Button color=\"primary\">吸顶距离</Button>\r\n      </Sticky>\r\n    </Block>\r\n  )\r\n}\r\n\r\nfunction StickyWithContainer() {\r\n  const container = useRef()\r\n  return (\r\n    <Block title=\"指定容器\">\r\n      <View className=\"sticky-demo__container-sticky\" ref={container}>\r\n        <Sticky container={container}>\r\n          <Button color=\"warning\">指定容器</Button>\r\n        </Sticky>\r\n      </View>\r\n    </Block>\r\n  )\r\n}\r\n\r\nfunction BottomSticky() {\r\n  return (\r\n    <Block title=\"吸底距离\" className=\"sticky-demo__bottom-sticky\">\r\n      <View className=\"sticky-demo__bottom-sticky__padding\" />\r\n      <Sticky position=\"bottom\" offsetBottom={50}>\r\n        <Button color=\"primary\">吸底距离</Button>\r\n      </Sticky>\r\n      <View className=\"sticky-demo__bottom-sticky__padding\" />\r\n    </Block>\r\n  )\r\n}\r\n\r\nexport default function StickyDemo() {\r\n  return (\r\n    <Page title=\"Sticky 粘性布局\" className=\"sticky-demo\">\r\n      <BasicSticky />\r\n      <OffsetSticky />\r\n      <StickyWithContainer />\r\n      <BottomSticky />\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}