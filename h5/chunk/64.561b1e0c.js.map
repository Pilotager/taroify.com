{"version":3,"sources":["webpack:///../../../../packages/icons/src/utils/unit.ts","webpack:///../../../../packages/icons/src/van/VanIcon.tsx","webpack:///../../../../packages/core/src/styles/index.ts","webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///./src/styles/prefix.ts","webpack:///../../../../packages/core/src/styles/prefix.ts","webpack:///../../../../packages/icons/src/ArrowLeft.tsx","webpack:///../../../../packages/icons/src/shared.ts","webpack:///./src/components/block.tsx","webpack:///./src/components/target.tsx","webpack:///./src/components/page.tsx","webpack:///../../../../packages/core/src/styles/hairline.ts","webpack:///../../../../packages/core/src/image/image.tsx","webpack:///../../../../packages/core/src/image/style/index.ts","webpack:///../../../../packages/core/src/badge/style/index.ts","webpack:///../../../../packages/core/src/badge/badge.tsx","webpack:///../../../../packages/core/src/badge/use-badge.tsx","webpack:///../../../../packages/core/src/grid/style/index.ts","webpack:///../../../../packages/core/src/grid/grid.context.ts","webpack:///../../../../packages/core/src/grid/grid.tsx","webpack:///../../../../packages/core/src/grid/grid-item.tsx","webpack:///../../../../packages/core/src/grid/index.ts","webpack:///./src/pages/navigation/grid/index.tsx"],"names":["value","convertPx","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertVw","convertVh","unitToPx","size","color","presetColor","ICON_PRESET_COLORS","presetSize","ICON_PRESET_SIZES","className","classNames","style","addUnitPx","name","VanIconWrapper","width","height","isValidElement","element","isIconElement","cloneElement","node","oldProps","props","newProps","demoPrefixClassname","component","ArrowLeft","createVanIconComponent","ICON_TYPE","Symbol","Block","variant","title","children","TargetType","Target","type","process","Page","onClick","navigateBack","HAIRLINE_BORDER","prefixClassname","HAIRLINE_BORDER_TOP","HAIRLINE_BORDER_LEFT","HAIRLINE_BORDER_BOTTOM","HAIRLINE_BORDER_SURROUND","HAIRLINE_BORDER_TOP_BOTTOM","HAIRLINE_BORDER_UNSET_TOP_BOTTOM","ImagePlaceholder","prefix","React","mode","round","lazyLoad","placeholder","fallback","taroMode","toTaroMode","useState","useEffect","setLoading","failed","src","loading","imgProps","alt","onError","setFailed","onLoad","Badge","content","position","isIcon","useMemo","hasChildren","noneChildren","contentProp","cloneIconElement","dot","elementTypeOf","badge","createContext","bordered","columns","centered","clickable","Grid","direction","childrenProp","item","__dataIndex__","index","rootStyle","gutter","undefined","GridContext","square","useContext","percent","useGridItemPercent","gutterValue","styleProp","contentStyle","right","bottom","icon","GridDemo","Item","text"],"mappings":"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","file":"chunk/64.561b1e0c.js","sourcesContent":["export function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\nimport { ViewProps } from \"@tarojs/components/types/View\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { CSSProperties, ReactNode } from \"react\"\nimport {\n  ICON_PRESET_COLORS,\n  ICON_PRESET_SIZES,\n  ICON_TYPE,\n  IconColor,\n  IconProps,\n  IconSize,\n} from \"../shared\"\nimport { addUnitPx } from \"../utils/unit\"\n\ninterface VanIconProps extends ViewProps {\n  className?: string\n  style?: CSSProperties\n  name?: string\n  size?: IconSize | number | string\n  color?: IconColor | string\n  children?: ReactNode\n}\n\nexport default function VanIcon(props: VanIconProps) {\n  const { className, style, name, size = \"inherit\", color = \"inherit\", ...restProps } = props\n  const presetColor = ICON_PRESET_COLORS.includes(color as IconColor)\n  const presetSize = ICON_PRESET_SIZES.includes(size as IconSize)\n\n  return (\n    <View\n      className={classNames(\n        \"van-icon\",\n        `van-icon-${name}`,\n        \"taroify-icon\",\n        {\n          [`taroify-icon--${color}`]: presetColor,\n          [`taroify-icon--${size}`]: presetSize,\n        },\n        className,\n      )}\n      style={{\n        color: presetColor ? \"\" : color,\n        fontSize: presetSize ? \"\" : addUnitPx(size),\n        ...style,\n      }}\n      {...restProps}\n    />\n  )\n}\n\nexport function createVanIconComponent(name: string) {\n  function VanIconWrapper(props: IconProps) {\n    return <VanIcon name={name} {...props} />\n  }\n\n  // @ts-ignore\n  VanIconWrapper[ICON_TYPE] = ICON_TYPE\n  return VanIconWrapper\n}\n","export { prefixClassname } from \"./prefix\"\n","import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","const DEMO_PREFIX = \"taroify-demo-\"\n\nexport function demoPrefixClassname(component: string) {\n  return `${DEMO_PREFIX}${component}`\n}\n","const COMPONENT_PREFIX = \"taroify-\"\n\nexport function prefixClassname(component: string) {\n  return `${COMPONENT_PREFIX}${component}`\n}\n","import { createVanIconComponent } from \"./van\"\r\n\r\nconst ArrowLeft = createVanIconComponent(\"arrow-left\")\r\nexport default ArrowLeft\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\n\r\nexport const ICON_TYPE = Symbol(\"__iconType__\")\r\n\r\nexport type IconSize = \"inherit\" | \"mini\" | \"small\" | \"medium\" | \"large\"\r\n\r\nexport const ICON_PRESET_SIZES = [\"inherit\", \"mini\", \"small\", \"medium\", \"large\"]\r\n\r\nexport type IconColor =\r\n  | \"inherit\"\r\n  | \"default\"\r\n  | \"primary\"\r\n  | \"info\"\r\n  | \"success\"\r\n  | \"warning\"\r\n  | \"danger\"\r\n\r\nexport const ICON_PRESET_COLORS = [\r\n  \"inherit\",\r\n  \"default\",\r\n  \"primary\",\r\n  \"info\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n]\r\n\r\nexport interface IconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import * as React from \"react\"\nimport { ReactNode } from \"react\"\n\n/* eslint-disable  no-shadow */\nexport enum TargetType {\n  /* eslint-enable  no-shadow */\n  H5 = \"h5\",\n}\n\ntype TargetTypeString = \"h5\"\n\ninterface TargetProps {\n  type?: TargetType | TargetTypeString\n  children?: ReactNode\n}\n\nexport default function Target(props: TargetProps) {\n  const { type, children } = props\n  return <>{type === process.env.TARO_ENV && children}</>\n}\n","import ArrowLeft from \"@taroify/icons/ArrowLeft\"\nimport { View } from \"@tarojs/components\"\nimport { navigateBack } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { ReactNode } from \"react\"\nimport { demoPrefixClassname } from \"../styles/prefix\"\nimport \"./page.scss\"\nimport Target from \"./target\"\n\ninterface PageProps {\n  className?: string\n  title?: string\n  children: ReactNode\n}\n\nexport default function Page(props: PageProps) {\n  const { className, title, children } = props\n\n  return (\n    <View className={classNames(demoPrefixClassname(\"page\"), className)}>\n      <Target type=\"h5\">\n        <View className={demoPrefixClassname(\"page__nav\")}>\n          <ArrowLeft\n            className={demoPrefixClassname(\"page__nav__back\")}\n            onClick={() => navigateBack()}\n          />\n          <View className={demoPrefixClassname(\"page__nav__title\")}>{title} </View>\n        </View>\n      </Target>\n      <View className={demoPrefixClassname(\"page__content\")}>{children}</View>\n    </View>\n  )\n}\n","import { prefixClassname } from \"./prefix\"\n\nexport const HAIRLINE_BORDER = prefixClassname(\"hairline\")\nexport const HAIRLINE_BORDER_TOP = `${HAIRLINE_BORDER}--top`\nexport const HAIRLINE_BORDER_LEFT = `${HAIRLINE_BORDER}--left`\nexport const HAIRLINE_BORDER_BOTTOM = `${HAIRLINE_BORDER}--bottom`\nexport const HAIRLINE_BORDER_SURROUND = `${HAIRLINE_BORDER}--surround`\nexport const HAIRLINE_BORDER_TOP_BOTTOM = `${HAIRLINE_BORDER}--top-bottom`\nexport const HAIRLINE_BORDER_UNSET_TOP_BOTTOM = `${HAIRLINE_BORDER}-unset--top-bottom`\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport type ImageMode =\r\n  | \"scaleToFill\"\r\n  | \"aspectFit\"\r\n  | \"aspectFill\"\r\n  | \"widthFix\"\r\n  | \"heightFix\"\r\n  | \"top\"\r\n  | \"bottom\"\r\n  | \"center\"\r\n  | \"left\"\r\n  | \"right\"\r\n  | \"topLeft\"\r\n  | \"topRight\"\r\n  | \"bottomLeft\"\r\n  | \"bottomRight\"\r\n\r\nfunction toTaroMode(mode: ImageMode): string {\r\n  if (mode === \"topLeft\") {\r\n    return \"top left\"\r\n  }\r\n  if (mode === \"topRight\") {\r\n    return \"top right\"\r\n  }\r\n  if (mode === \"bottomLeft\") {\r\n    return \"bottom left\"\r\n  }\r\n  if (mode === \"bottomRight\") {\r\n    return \"bottom right\"\r\n  }\r\n  return mode\r\n}\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ImagePlaceholder({ prefix = \"placeholder\", children }: ImagePlaceholderProps) {\r\n  // Icon Element\r\n  if (React.isValidElement(children)) {\r\n    return (\r\n      <>\r\n        {React.cloneElement(children as ReactElement, {\r\n          className: classNames(\r\n            prefixClassname(`image__${prefix}`),\r\n            prefixClassname(`image__${prefix}-icon`),\r\n          ),\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n\r\ninterface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round = false,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = toTaroMode(mode)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n  }, [src])\r\n\r\n  function handleLoad() {\r\n    setLoading(false)\r\n  }\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--round\")]: round,\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onError={handleError}\r\n          onLoad={handleLoad}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\nimport { View } from \"@tarojs/components\"\nimport classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport * as React from \"react\"\nimport { ReactElement, ReactNode, useMemo } from \"react\"\nimport { prefixClassname } from \"../styles\"\n\nexport type BadgePosition = \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\"\n\nexport interface BadgeProps {\n  className?: string\n  content?: ReactNode\n  dot?: boolean\n  max?: number\n  position?: BadgePosition\n  children?: ReactNode\n}\n\nfunction Badge(props: BadgeProps): JSX.Element {\n  const { className, content: contentProp, max, dot, position = \"top-right\", children } = props\n  const isIcon = useMemo(() => isIconElement(children), [children])\n  const hasChildren = children !== undefined\n  const noneChildren = children === undefined\n\n  const content = useMemo(\n    () =>\n      _.isNumber(contentProp)\n        ? _.toString(_.gt(contentProp, max) ? `${max}+` : contentProp)\n        : contentProp,\n    [contentProp, max],\n  )\n\n  return cloneIconElement(isIcon ? children : <View />, {\n    className: classNames(\n      {\n        [prefixClassname(\"badge__wrapper\")]: hasChildren,\n        [prefixClassname(\"badge\")]: noneChildren,\n        [prefixClassname(\"badge--dot\")]: noneChildren && dot,\n        [prefixClassname(\"badge--top-left\")]: noneChildren && position === \"top-left\",\n        [prefixClassname(\"badge--top-right\")]: noneChildren && position === \"top-right\",\n        [prefixClassname(\"badge--bottom-left\")]: noneChildren && position === \"bottom-left\",\n        [prefixClassname(\"badge--bottom-right\")]: noneChildren && position === \"bottom-right\",\n      },\n      className,\n    ),\n    children: (\n      <>\n        {!isIcon && children}\n        {noneChildren && !dot && content}\n        {hasChildren && (dot || content) && (\n          <View\n            className={classNames(\n              prefixClassname(\"badge\"),\n              {\n                [prefixClassname(\"badge--dot\")]: dot,\n                [prefixClassname(\"badge--content\")]: content,\n                [prefixClassname(\"badge--top-left\")]: position === \"top-left\",\n                [prefixClassname(\"badge--top-right\")]: position === \"top-right\",\n                [prefixClassname(\"badge--bottom-left\")]: position === \"bottom-left\",\n                [prefixClassname(\"badge--bottom-right\")]: position === \"bottom-right\",\n              },\n              prefixClassname(\"badge--fixed\"),\n            )}\n            children={!dot && content}\n          />\n        )}\n      </>\n    ),\n  }) as ReactElement\n}\n\nexport default Badge\n","import * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport Badge, { BadgeProps } from \"./badge\"\r\n\r\ninterface BadgeChildren {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction elementTypeOf(node: ReactNode, type: any) {\r\n  return isValidElement(node) && (node as ReactElement).type === type\r\n}\r\n\r\nexport default function useBadge(badge: ReactNode, props: BadgeProps = {}) {\r\n  if (_.isBoolean(badge) && badge) {\r\n    return ({ children }: BadgeChildren) => <Badge {...props} dot children={children} />\r\n  }\r\n\r\n  if (_.isNumber(badge) || _.isString(badge)) {\r\n    return ({ children }: BadgeChildren) => <Badge {...props} content={badge} children={children} />\r\n  }\r\n\r\n  if (elementTypeOf(badge, Badge)) {\r\n    return ({ children }: BadgeChildren) =>\r\n      cloneElement(badge as ReactElement, {\r\n        ...props,\r\n        children,\r\n      })\r\n  }\r\n  return ({ children }: BadgeChildren) => <Badge {...props} children={children} />\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../../badge/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\n\ninterface GridContextProps {\n  bordered: boolean\n  columns: number\n  gutter?: number | string\n  centered: boolean\n  clickable: boolean\n  direction?: \"horizontal\" | \"vertical\"\n  square?: boolean\n}\n\nconst GridContext = createContext<GridContextProps>({\n  bordered: false,\n  columns: 0,\n  centered: false,\n  clickable: false,\n})\n\nexport default GridContext\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { Children, cloneElement, CSSProperties, ReactElement, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { HAIRLINE_BORDER_TOP } from \"../styles/hairline\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport GridContext from \"./grid.context\"\r\nimport { GridDirection } from \"./grid.shared\"\r\n\r\nconst DEFAULT_GRID_COLUMNS = 4\r\n\r\nexport interface GridProps extends ViewProps {\r\n  style?: CSSProperties\r\n  columns?: number\r\n  gutter?: number | string\r\n  bordered?: boolean\r\n  centered?: boolean\r\n  clickable?: boolean\r\n  square?: boolean\r\n  direction?: GridDirection\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Grid(props: GridProps) {\r\n  const {\r\n    className,\r\n    style: styleProp,\r\n    columns = DEFAULT_GRID_COLUMNS,\r\n    gutter,\r\n    bordered = true,\r\n    centered = true,\r\n    clickable = false,\r\n    direction = \"vertical\",\r\n    square,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const children = useMemo(\r\n    () =>\r\n      Children.map(childrenProp, (item, index) =>\r\n        cloneElement(item as ReactElement, { __dataIndex__: index }),\r\n      ),\r\n    [childrenProp],\r\n  )\r\n\r\n  const rootStyle = useMemo(() => {\r\n    const style: CSSProperties = {\r\n      ...styleProp,\r\n    }\r\n    if (gutter) {\r\n      style.paddingLeft = addUnitPx(gutter)\r\n    }\r\n    return style\r\n  }, [gutter, styleProp])\r\n\r\n  return (\r\n    <View\r\n      style={rootStyle}\r\n      className={classNames(\r\n        prefixClassname(\"grid\"),\r\n        {\r\n          [HAIRLINE_BORDER_TOP]: bordered && gutter === undefined,\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      <GridContext.Provider\r\n        value={{\r\n          bordered,\r\n          centered,\r\n          columns,\r\n          clickable,\r\n          direction,\r\n          gutter,\r\n          square,\r\n        }}\r\n      >\r\n        {children}\r\n      </GridContext.Provider>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useMemo } from \"react\"\r\nimport Badge from \"../badge\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { HAIRLINE_BORDER } from \"../styles/hairline\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport GridContext from \"./grid.context\"\r\n\r\nfunction useGridItemPercent(columns: number) {\r\n  return useMemo(() => `${100 / columns}%`, [columns])\r\n}\r\n\r\ninterface GridItemProps extends ViewProps {\r\n  __dataIndex__?: number\r\n  style?: CSSProperties\r\n  dot?: boolean\r\n  badge?: ReactNode\r\n  icon?: ReactNode\r\n  text?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport function GridItem(props: GridItemProps) {\r\n  const {\r\n    __dataIndex__ = 0,\r\n    className,\r\n    style: styleProp,\r\n    icon,\r\n    text,\r\n    dot,\r\n    badge,\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const { columns, gutter, bordered, centered, clickable, direction, square } = useContext(\r\n    GridContext,\r\n  )\r\n  const percent = useGridItemPercent(columns)\r\n\r\n  const rootStyle = useMemo(() => {\r\n    const style: CSSProperties = {\r\n      ...styleProp,\r\n    }\r\n    style.flexBasis = `${percent}`\r\n    if (square) {\r\n      style.paddingTop = percent\r\n    } else if (gutter) {\r\n      const gutterValue = addUnitPx(gutter)\r\n      style.paddingRight = gutterValue\r\n\r\n      if (__dataIndex__ >= columns) {\r\n        style.marginTop = gutterValue\r\n      }\r\n    }\r\n    return style\r\n  }, [styleProp, percent, square, gutter, __dataIndex__, columns])\r\n\r\n  const contentStyle = useMemo(() => {\r\n    if (square && gutter) {\r\n      const gutterValue = addUnitPx(gutter)\r\n      return {\r\n        right: gutterValue,\r\n        bottom: gutterValue,\r\n        height: \"auto\",\r\n      }\r\n    }\r\n  }, [square, gutter])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"grid-item\"),\r\n        {\r\n          [prefixClassname(\"grid-item--square\")]: square,\r\n        },\r\n        className,\r\n      )}\r\n      style={rootStyle}\r\n      {...restProps}\r\n    >\r\n      <View\r\n        style={contentStyle}\r\n        className={classNames(prefixClassname(\"grid-item__content\"), {\r\n          [prefixClassname(\"grid-item__content--square\")]: square,\r\n          [prefixClassname(\"grid-item__content--centered\")]: centered,\r\n          [prefixClassname(\"grid-item__content--clickable\")]: clickable,\r\n          [prefixClassname(\"grid-item__content--horizontal\")]: direction === \"horizontal\",\r\n          [prefixClassname(\"grid-item__content--surround\")]: bordered && gutter,\r\n          [HAIRLINE_BORDER]: bordered,\r\n        })}\r\n      >\r\n        {!children && (\r\n          <>\r\n            {icon && (\r\n              <Badge\r\n                className={prefixClassname(\"grid-item__icon\")}\r\n                dot={dot}\r\n                content={badge}\r\n                children={icon}\r\n              />\r\n            )}\r\n            <View className={prefixClassname(\"grid-item__text\")}>{text}</View>\r\n          </>\r\n        )}\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default GridItem\r\n","import GridComponent, { GridProps } from \"./grid\"\r\nimport GridItem from \"./grid-item\"\r\n\r\ninterface GridInterface {\r\n  (props: GridProps): JSX.Element\r\n\r\n  Item: typeof GridItem\r\n}\r\n\r\nconst Grid = GridComponent as GridInterface\r\nGrid.Item = GridItem\r\n\r\nexport default Grid\r\n","import { Grid, Image } from \"@taroify/core\"\nimport { HomeOutlined, PhotoOutlined, Search } from \"@taroify/icons\"\nimport * as React from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\nexport default function GridDemo() {\n  return (\n    <Page title=\"Grid 宫格\" className=\"grid-demo\">\n      <Block title=\"基础用法\">\n        <Grid columns={4}>\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n        </Grid>\n      </Block>\n      <Block title=\"自定义列数\">\n        <Grid columns={3}>\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n        </Grid>\n      </Block>\n      <Block title=\"自定义内容\">\n        <Grid columns={3} bordered={false}>\n          <Grid.Item>\n            <Image className=\"grid-image\" src=\"https://img.yzcdn.cn/vant/apple-1.jpg\" />\n          </Grid.Item>\n          <Grid.Item>\n            <Image className=\"grid-image\" src=\"https://img.yzcdn.cn/vant/apple-2.jpg\" />\n          </Grid.Item>\n          <Grid.Item>\n            <Image className=\"grid-image\" src=\"https://img.yzcdn.cn/vant/apple-3.jpg\" />\n          </Grid.Item>\n        </Grid>\n      </Block>\n      <Block title=\"正方形格子\">\n        <Grid columns={4} square>\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n        </Grid>\n      </Block>\n      <Block title=\"格子间距\">\n        <Grid columns={4} gutter={10}>\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n        </Grid>\n      </Block>\n      <Block title=\"内容横排\">\n        <Grid columns={3} direction=\"horizontal\">\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n          <Grid.Item icon={<PhotoOutlined />} text=\"文字\" />\n        </Grid>\n      </Block>\n      <Block title=\"徽标提示\">\n        <Grid columns={2}>\n          <Grid.Item icon={<HomeOutlined />} dot text=\"文字\" />\n          <Grid.Item icon={<Search />} badge=\"99+\" text=\"文字\" />\n        </Grid>\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}