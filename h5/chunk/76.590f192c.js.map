{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/utils/base.ts","webpack:///../../../../packages/core/src/utils/dom/event.ts","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/utils/touch.ts","webpack:///../../../../packages/core/src/styles/hairline.ts","webpack:///../../../../packages/core/src/number-keyboard/style/index.ts","webpack:///../../../../packages/core/src/number-keyboard/number-keyboard.context.ts","webpack:///../../../../packages/core/src/number-keyboard/number-keyboard-button.tsx","webpack:///../../../../packages/core/src/number-keyboard/number-keyboard-header.tsx","webpack:///../../../../packages/core/src/number-keyboard/number-keyboard-key.tsx","webpack:///../../../../packages/core/src/number-keyboard/number-keyboard-key.shared.ts","webpack:///../../../../packages/core/src/number-keyboard/number-keyboard-keys.tsx","webpack:///../../../../packages/core/src/number-keyboard/number-keyboard-sidebar.tsx","webpack:///../../../../packages/core/src/number-keyboard/number-keyboard.tsx","webpack:///../../../../packages/core/src/number-keyboard/index.ts","webpack:///../../../../packages/core/src/password-input/password-input.tsx","webpack:///./src/pages/form/password-input/index.tsx"],"names":["value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","inBrowser","inWechat","process","event","stopPropagation","touches","clientX","clientY","Block","props","className","variant","title","children","classNames","demoPrefixClassname","emptyFunction","touchRef","useRef","startX","startY","deltaX","deltaY","offsetX","offsetY","isVertical","isHorizontal","start","move","reset","useCallback","TouchDirection","touch","Math","getDirection","x","y","useEffect","HAIRLINE_BORDER","prefixClassname","HAIRLINE_BORDER_TOP","HAIRLINE_BORDER_LEFT","HAIRLINE_BORDER_BOTTOM","HAIRLINE_BORDER_SURROUND","HAIRLINE_BORDER_TOP_BOTTOM","HAIRLINE_BORDER_UNSET_TOP_BOTTOM","createContext","NumberKeyboardButton","type","onClick","onKeyPress","useContext","NumberKeyboardHeader","childrenProp","useNumberKeyboardHeaderChildren","useMemo","__children__","Children","child","isValidElement","element","right","NumberKeyboardKey","code","onPress","useState","useTouch","onTouchEnd","setActive","wider","onTouchStart","onTouchMove","onTouchCancel","color","renderContent","node","NumberKeyboardKeys","NumberKeyboardSidebar","key","extraKey","isNumberKeyboardKeyElement","elementProps","cloneElement","NumberKeyboard","random","onHide","useNumberKeyboardChildren","sidebar","undefined","elementType","React","basicKeys","createBasicKeys","keys","Array","i","createCustomKeys","createExtraNumberKeyboardKey","NumberKeyboardContext","handleKeyPress","onBackspace","in","appear","name","header","PasswordInput","length","mask","focused","focus","focusProp","onFocus","console","gutter","renderPoints","Points","char","bordered","showCursor","style","marginLeft","visibility","info","error","BasicPasswordInput","open","onOpen","setValue","substring","CustomLengthPasswordInput","GutterPasswordInput","NoMaskPasswordInput","PasswordInputWithInfo","PasswordInputDemo","setOpen"],"mappings":"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","file":"chunk/76.590f192c.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","export function noop() {}\r\n\r\nexport const inBrowser = typeof document !== \"undefined\" && !!document.scripts\r\nexport const inWechat = process.env.TARO_ENV === \"weapp\"\r\nexport const inSwan = process.env.TARO_ENV === \"swan\"\r\nexport const inAlipay = process.env.TARO_ENV === \"alipay\"\r\nexport const inQQ = process.env.TARO_ENV === \"qq\"\r\nexport const inToutiao = process.env.TARO_ENV === \"tt\"\r\n","import { CommonEvent, ITouchEvent } from \"@tarojs/components\"\nimport { inBrowser } from \"../base\"\n\nexport function stopPropagation(event: CommonEvent) {\n  event.stopPropagation()\n}\n\nexport function preventDefault(event: CommonEvent, isStopPropagation?: boolean) {\n  if (inBrowser) {\n    // @ts-ignore\n    if (typeof event.cancelable !== \"boolean\" || event.cancelable) {\n      event.preventDefault()\n    }\n  } else {\n    event.preventDefault()\n  }\n\n  if (isStopPropagation) {\n    stopPropagation(event)\n  }\n}\n\ninterface ClientCoordinates {\n  clientX: number\n  clientY: number\n}\n\nexport function getClientCoordinates(event: ITouchEvent | MouseEvent): ClientCoordinates {\n  // @ts-ignore\n  const { clientX, clientY, touches } = event\n\n  if (clientX && clientY) {\n    return {\n      clientX,\n      clientY,\n    }\n  }\n  return touches[0]\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { ITouchEvent } from \"@tarojs/components\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nconst MIN_DISTANCE = 10\n\nexport enum TouchDirection {\n  Horizontal = \"horizontal\",\n  Vertical = \"vertical\",\n}\n\nfunction getDirection(x: number, y: number): TouchDirection | undefined {\n  if (x > y && x > MIN_DISTANCE) {\n    return TouchDirection.Horizontal\n  }\n  if (y > x && y > MIN_DISTANCE) {\n    return TouchDirection.Vertical\n  }\n}\n\nfunction emptyFunction() {}\n\nexport interface TouchRef {\n  startX: number\n  startY: number\n  deltaX: number\n  deltaY: number\n  offsetX: number\n  offsetY: number\n  direction?: TouchDirection\n\n  isVertical(): boolean\n\n  isHorizontal(): boolean\n\n  start(event: ITouchEvent): void\n\n  move(event: ITouchEvent): void\n\n  reset(): void\n}\n\nexport function useTouch() {\n  const touchRef = useRef<TouchRef>({\n    startX: 0,\n    startY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    isVertical: () => false,\n    isHorizontal: () => false,\n    start: emptyFunction,\n    move: emptyFunction,\n    reset: emptyFunction,\n  })\n\n  const isVertical = useCallback(() => touchRef.current.direction === TouchDirection.Vertical, [])\n\n  const isHorizontal = useCallback(\n    () => touchRef.current.direction === TouchDirection.Horizontal,\n    [],\n  )\n\n  const reset = useCallback(function () {\n    touchRef.current.deltaX = 0\n    touchRef.current.deltaY = 0\n    touchRef.current.offsetX = 0\n    touchRef.current.offsetY = 0\n    touchRef.current.direction = undefined\n  }, [])\n\n  const start = useCallback(\n    function (event: ITouchEvent) {\n      reset()\n      touchRef.current.startX = event.touches[0].clientX\n      touchRef.current.startY = event.touches[0].clientY\n    },\n    [reset],\n  )\n\n  const move = useCallback(function (event: ITouchEvent) {\n    const touch = event.touches[0]\n    // Fix: Safari back will set clientX to negative number\n    touchRef.current.deltaX = touch.clientX < 0 ? 0 : touch.clientX - touchRef.current.startX\n    touchRef.current.deltaY = touch.clientY - touchRef.current.startY\n    touchRef.current.offsetX = Math.abs(touchRef.current.deltaX)\n    touchRef.current.offsetY = Math.abs(touchRef.current.deltaY)\n\n    if (!touchRef.current.direction) {\n      touchRef.current.direction = getDirection(touchRef.current.offsetX, touchRef.current.offsetY)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (touchRef.current.isHorizontal !== isHorizontal) {\n      touchRef.current.isHorizontal = isHorizontal\n    }\n  }, [touchRef, isHorizontal])\n\n  useEffect(() => {\n    if (touchRef.current.isVertical !== isVertical) {\n      touchRef.current.isVertical = isVertical\n    }\n  }, [touchRef, isVertical])\n\n  useEffect(() => {\n    if (touchRef.current.reset !== reset) {\n      touchRef.current.reset = reset\n    }\n  }, [touchRef, reset])\n\n  useEffect(() => {\n    if (touchRef.current.start !== start) {\n      touchRef.current.start = start\n    }\n  }, [touchRef, start])\n\n  useEffect(() => {\n    if (touchRef.current.move !== move) {\n      touchRef.current.move = move\n    }\n  }, [touchRef, move])\n\n  return touchRef.current\n}\n","import { prefixClassname } from \"./prefix\"\n\nexport const HAIRLINE_BORDER = prefixClassname(\"hairline\")\nexport const HAIRLINE_BORDER_TOP = `${HAIRLINE_BORDER}--top`\nexport const HAIRLINE_BORDER_LEFT = `${HAIRLINE_BORDER}--left`\nexport const HAIRLINE_BORDER_BOTTOM = `${HAIRLINE_BORDER}--bottom`\nexport const HAIRLINE_BORDER_SURROUND = `${HAIRLINE_BORDER}--surround`\nexport const HAIRLINE_BORDER_TOP_BOTTOM = `${HAIRLINE_BORDER}--top-bottom`\nexport const HAIRLINE_BORDER_UNSET_TOP_BOTTOM = `${HAIRLINE_BORDER}-unset--top-bottom`\n","import \"../../styles/style\"\r\nimport \"../../transition/style\"\r\nimport \"../index.scss\"\r\n","import { createContext, ReactNode } from \"react\"\r\nimport { NumberKeyboardKeyOnPress } from \"./number-keyboard-key.shared\"\r\n\r\ninterface NumberKeyboardContextValue {\r\n  title?: ReactNode\r\n  onKeyPress?: NumberKeyboardKeyOnPress\r\n}\r\n\r\nconst NumberKeyboardContext = createContext<NumberKeyboardContextValue>({})\r\n\r\nexport default NumberKeyboardContext\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport NumberKeyboardContext from \"./number-keyboard.context\"\r\n\r\nexport type NumberKeyboardButtonType = \"hide\"\r\n\r\nexport interface NumberKeyboardButtonProps extends ViewProps {\r\n  type?: NumberKeyboardButtonType\r\n  children?: ReactNode\r\n}\r\n\r\nfunction NumberKeyboardButton(props: NumberKeyboardButtonProps) {\r\n  const { className, type = \"hide\", children, onClick, ...restProps } = props\r\n\r\n  const { onKeyPress } = useContext(NumberKeyboardContext)\r\n\r\n  function handleClick(event: ITouchEvent) {\r\n    onClick?.(event)\r\n    if (type === \"hide\") {\r\n      onKeyPress?.(children as string, \"keyboard-hide\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        {\r\n          [prefixClassname(\"number-keyboard__hide\")]: type === \"hide\",\r\n        },\r\n        className,\r\n      )}\r\n      children={children}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default NumberKeyboardButton\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { Children, isValidElement, ReactElement, ReactNode, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport NumberKeyboardButton, { NumberKeyboardButtonProps } from \"./number-keyboard-button\"\r\nimport NumberKeyboardContext from \"./number-keyboard.context\"\r\n\r\ninterface NumberKeyboardHeaderChildren {\r\n  left?: ReactNode\r\n  title?: ReactNode\r\n  right?: ReactNode\r\n}\r\n\r\nfunction useNumberKeyboardHeaderChildren(children?: ReactNode) {\r\n  const { title } = useContext(NumberKeyboardContext)\r\n  return useMemo(() => {\r\n    const __children__: NumberKeyboardHeaderChildren = {\r\n      title: title && (\r\n        <View className={prefixClassname(\"number-keyboard__title\")} children={title} />\r\n      ),\r\n    }\r\n\r\n    Children.forEach(children, (child: ReactNode) => {\r\n      if (isValidElement(child)) {\r\n        const element = child as ReactElement\r\n\r\n        const elementType = element.type\r\n        if (elementType === NumberKeyboardButton) {\r\n          const { type } = element.props as NumberKeyboardButtonProps\r\n          if (type === undefined || type === \"hide\") {\r\n            __children__.right = element\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    return __children__\r\n  }, [children, title])\r\n}\r\n\r\nexport interface NumberKeyboardHeaderProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction NumberKeyboardHeader(props: NumberKeyboardHeaderProps) {\r\n  const { className, children: childrenProp, ...restProps } = props\r\n  const { left, title, right } = useNumberKeyboardHeaderChildren(childrenProp)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"number-keyboard__header\"), className)}\r\n      {...restProps}\r\n    >\r\n      {left}\r\n      {title}\r\n      {right}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default NumberKeyboardHeader\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { useContext, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useTouch } from \"../utils/touch\"\r\nimport { NumberKeyboardKeyCode, NumberKeyboardKeyOnPress } from \"./number-keyboard-key.shared\"\r\nimport NumberKeyboardContext from \"./number-keyboard.context\"\r\n\r\ntype NumberKeyboardKeySize = \"small\" | \"medium\" | \"large\"\r\n\r\ntype NumberKeyboardKeyColor = \"blue\"\r\n\r\nexport interface NumberKeyboardKeyProps {\r\n  className?: string\r\n  code?: NumberKeyboardKeyCode\r\n  size?: NumberKeyboardKeySize\r\n  color?: NumberKeyboardKeyColor\r\n  wider?: boolean\r\n  children?: string | number\r\n\r\n  onPress?: NumberKeyboardKeyOnPress\r\n}\r\n\r\nfunction NumberKeyboardKey(props: NumberKeyboardKeyProps) {\r\n  const { wider, code = \"extra\", size, color, children, onPress } = props\r\n  const { onKeyPress } = useContext(NumberKeyboardContext)\r\n  const value = children ?? \"\"\r\n  const [active, setActive] = useState(false)\r\n  const touch = useTouch()\r\n\r\n  const onTouchStart = (event: ITouchEvent) => {\r\n    touch.start(event)\r\n    setActive(true)\r\n  }\r\n\r\n  const onTouchMove = (event: ITouchEvent) => {\r\n    touch.move(event)\r\n\r\n    if (touch.direction) {\r\n      setActive(false)\r\n    }\r\n  }\r\n\r\n  const onTouchEnd = (event: ITouchEvent) => {\r\n    if (active) {\r\n      // eliminate tap delay on safari\r\n      // see: https://github.com/youzan/vant/issues/6836\r\n      if (!children) {\r\n        event.preventDefault()\r\n      }\r\n\r\n      setActive(false)\r\n      onPress?.(value, code ?? value)\r\n      onKeyPress?.(value, code ?? value)\r\n    }\r\n  }\r\n\r\n  const renderContent = () => {\r\n    switch (code) {\r\n      case \"backspace\":\r\n        return children ?? <View className=\"taroify-backspace\" />\r\n      case \"keyboard-hide\":\r\n        return children ?? <View className=\"taroify-keyboard-hide\" />\r\n      default:\r\n        return children\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"key__wrapper\"), {\r\n        [prefixClassname(\"key__wrapper--wider\")]: wider,\r\n      })}\r\n      onTouchStart={onTouchStart}\r\n      onTouchMove={onTouchMove}\r\n      onTouchEnd={onTouchEnd}\r\n      onTouchCancel={onTouchEnd}\r\n    >\r\n      <View\r\n        className={classNames(prefixClassname(\"key\"), {\r\n          [prefixClassname(\"key--active\")]: active,\r\n          [prefixClassname(\"key--large\")]: size === \"large\",\r\n          [prefixClassname(\"key--blue\")]: color === \"blue\",\r\n        })}\r\n      >\r\n        {renderContent()}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default NumberKeyboardKey\r\n","import { isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport NumberKeyboardKey from \"./number-keyboard-key\"\r\n\r\nexport type NumberKeyboardKeyCode = \"extra\" | \"backspace\" | \"keyboard-hide\"\r\n\r\nexport interface NumberKeyboardKeyOnPress {\r\n  (value: string | number, code: NumberKeyboardKeyCode): void\r\n}\r\n\r\nexport function isNumberKeyboardKeyElement(node: ReactNode): boolean {\r\n  return isValidElement(node) && (node as ReactElement).type === NumberKeyboardKey\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface NumberKeyboardKeysProps extends ViewProps {\r\n  className?: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction NumberKeyboardKeys(props: NumberKeyboardKeysProps) {\r\n  const { className, children, ...restProps } = props\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"number-keyboard__keys\"), className)}\r\n      children={children}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default NumberKeyboardKeys\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface NumberKeyboardSidebarProps extends ViewProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction NumberKeyboardSidebar(props: NumberKeyboardSidebarProps) {\r\n  const { className, ...restProps } = props\r\n  return (\r\n    <View\r\n      className={classNames(prefixClassname(\"number-keyboard__sidebar\"), className)}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default NumberKeyboardSidebar\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { Children, cloneElement, isValidElement, ReactElement, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport Transition from \"../transition\"\r\nimport NumberKeyboardHeader from \"./number-keyboard-header\"\r\nimport NumberKeyboardKey, { NumberKeyboardKeyProps } from \"./number-keyboard-key\"\r\nimport {\r\n  isNumberKeyboardKeyElement,\r\n  NumberKeyboardKeyCode,\r\n  NumberKeyboardKeyOnPress,\r\n} from \"./number-keyboard-key.shared\"\r\nimport NumberKeyboardKeys from \"./number-keyboard-keys\"\r\nimport NumberKeyboardSidebar from \"./number-keyboard-sidebar\"\r\nimport NumberKeyboardContext from \"./number-keyboard.context\"\r\n\r\nfunction createBasicKeys(random: boolean): ReactNode[] {\r\n  const keys = Array(9)\r\n    .fill(\"\")\r\n    .map((_, i) => <NumberKeyboardKey key={i + 1} children={i + 1} />)\r\n\r\n  if (random) {\r\n    keys.sort(() => (Math.random() > 0.5 ? 1 : -1))\r\n  }\r\n\r\n  return keys\r\n}\r\n\r\nexport function createExtraNumberKeyboardKey(extraKey: ReactNode): ReactNode {\r\n  if (_.isString(extraKey) || _.isNumber(extraKey)) {\r\n    return <NumberKeyboardKey key={extraKey} children={extraKey} />\r\n  } else if (isNumberKeyboardKeyElement(extraKey)) {\r\n    const element = extraKey as ReactElement\r\n    const elementProps = element.props as NumberKeyboardKeyProps\r\n    return cloneElement(extraKey as ReactElement, {\r\n      key: element.key ?? elementProps.children ?? elementProps.code,\r\n    })\r\n  }\r\n  return undefined\r\n}\r\n\r\nfunction createCustomKeys(extraKey?: ReactNode | [ReactNode, ReactNode]): ReactNode[] {\r\n  if (extraKey === undefined) {\r\n    return [\r\n      <NumberKeyboardKey key=\"keyboard-hide\" code=\"keyboard-hide\" />,\r\n      <NumberKeyboardKey key={0} children={0} />,\r\n      <NumberKeyboardKey key=\"backspace\" code=\"backspace\" />,\r\n    ]\r\n  }\r\n\r\n  if (_.isString(extraKey) || _.isNumber(extraKey) || isNumberKeyboardKeyElement(extraKey)) {\r\n    return [\r\n      createExtraNumberKeyboardKey(extraKey),\r\n      <NumberKeyboardKey key={0} children={0} />,\r\n      <NumberKeyboardKey key=\"backspace\" code=\"backspace\" />,\r\n    ]\r\n  }\r\n\r\n  if (_.isArray(extraKey) && _.size(extraKey) === 1) {\r\n    return [\r\n      createExtraNumberKeyboardKey(extraKey[0]),\r\n      <NumberKeyboardKey key={0} wider children={0} />,\r\n    ]\r\n  }\r\n\r\n  if (_.isArray(extraKey) && _.size(extraKey) === 2) {\r\n    const wider = extraKey.filter((key) => key !== undefined).length === 1\r\n    return [\r\n      createExtraNumberKeyboardKey(extraKey[0]),\r\n      <NumberKeyboardKey key={0} wider={wider} children={0} />,\r\n      createExtraNumberKeyboardKey(extraKey[1]),\r\n    ]\r\n  }\r\n\r\n  return []\r\n}\r\n\r\ninterface NumberKeyboardChildren {\r\n  header?: ReactNode\r\n  sidebar?: ReactNode\r\n}\r\n\r\nfunction useNumberKeyboardChildren(\r\n  children?: ReactNode,\r\n  title?: ReactNode,\r\n): NumberKeyboardChildren {\r\n  return useMemo(() => {\r\n    const __children__: NumberKeyboardChildren = {\r\n      sidebar: undefined,\r\n    }\r\n\r\n    Children.forEach(children, (child: ReactNode) => {\r\n      if (isValidElement(child)) {\r\n        const element = child as ReactElement\r\n\r\n        const elementType = element.type\r\n        if (elementType === NumberKeyboardHeader) {\r\n          __children__.header = element\r\n        }\r\n\r\n        if (elementType === NumberKeyboardSidebar) {\r\n          __children__.sidebar = element\r\n        }\r\n      }\r\n    })\r\n\r\n    if (title && !__children__.header) {\r\n      __children__.header = <NumberKeyboardHeader />\r\n    }\r\n\r\n    return __children__\r\n  }, [children, title])\r\n}\r\n\r\nexport interface NumberKeyboardProps extends ViewProps {\r\n  className?: string\r\n  open?: boolean\r\n  title?: ReactNode\r\n  extraKey?: ReactNode | [ReactNode, ReactNode]\r\n  random?: boolean\r\n  children?: ReactNode\r\n\r\n  onKeyPress?: NumberKeyboardKeyOnPress\r\n\r\n  onBackspace?(): void\r\n\r\n  onHide?(): void\r\n}\r\n\r\nfunction NumberKeyboard(props: NumberKeyboardProps) {\r\n  const {\r\n    className,\r\n    open,\r\n    title,\r\n    extraKey,\r\n    random = false,\r\n    children: childrenProp,\r\n    onKeyPress,\r\n    onBackspace,\r\n    onHide,\r\n    ...restProps\r\n  } = props\r\n  const { header, sidebar } = useNumberKeyboardChildren(childrenProp, title)\r\n\r\n  const basicKeys = useMemo(() => createBasicKeys(random), [random])\r\n  const keys = useMemo(() => [...basicKeys, ...createCustomKeys(extraKey)], [basicKeys, extraKey])\r\n\r\n  const handleKeyPress = (value: string | number, code: NumberKeyboardKeyCode) => {\r\n    onKeyPress?.(value, code)\r\n    if (code === \"backspace\") {\r\n      onBackspace?.()\r\n    } else if (code === \"keyboard-hide\") {\r\n      onHide?.()\r\n    }\r\n  }\r\n  return (\r\n    <NumberKeyboardContext.Provider\r\n      value={{\r\n        title,\r\n        onKeyPress: handleKeyPress,\r\n      }}\r\n    >\r\n      <Transition in={open} appear name=\"slide-up\">\r\n        <View\r\n          className={classNames(\r\n            prefixClassname(\"number-keyboard\"),\r\n            {\r\n              [prefixClassname(\"number-keyboard--with-title\")]: header,\r\n            },\r\n            className,\r\n          )}\r\n          {...restProps}\r\n        >\r\n          {header}\r\n          <View className={prefixClassname(\"number-keyboard__body\")}>\r\n            <NumberKeyboardKeys children={keys} />\r\n            {sidebar}\r\n          </View>\r\n        </View>\r\n      </Transition>\r\n    </NumberKeyboardContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NumberKeyboard\r\n","import NumberKeyboardElement, { NumberKeyboardProps } from \"./number-keyboard\"\r\nimport NumberKeyboardButton from \"./number-keyboard-button\"\r\nimport NumberKeyboardHeader from \"./number-keyboard-header\"\r\nimport NumberKeyboardKey from \"./number-keyboard-key\"\r\nimport NumberKeyboardSidebar from \"./number-keyboard-sidebar\"\r\n\r\ninterface NumberKeyboardInterface {\r\n  (props: NumberKeyboardProps): JSX.Element\r\n\r\n  Key: typeof NumberKeyboardKey\r\n  Button: typeof NumberKeyboardButton\r\n  Header: typeof NumberKeyboardHeader\r\n  Sidebar: typeof NumberKeyboardSidebar\r\n}\r\n\r\nconst NumberKeyboard = NumberKeyboardElement as NumberKeyboardInterface\r\n\r\nNumberKeyboard.Key = NumberKeyboardKey\r\nNumberKeyboard.Button = NumberKeyboardButton\r\nNumberKeyboard.Header = NumberKeyboardHeader\r\nNumberKeyboard.Sidebar = NumberKeyboardSidebar\r\n\r\nexport default NumberKeyboard\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { useCallback, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { HAIRLINE_BORDER_LEFT, HAIRLINE_BORDER_SURROUND } from \"../styles/hairline\"\r\nimport { stopPropagation } from \"../utils/dom/event\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\ninterface PasswordInputProps extends ViewProps {\r\n  value?: string\r\n  length?: number\r\n  gutter?: number\r\n  mask?: boolean\r\n  focused?: boolean\r\n  focus?: boolean\r\n  error?: boolean\r\n  info?: string\r\n\r\n  onFocus?(event: ITouchEvent): void\r\n}\r\n\r\nfunction PasswordInput(props: PasswordInputProps) {\r\n  const {\r\n    className,\r\n    value = \"\",\r\n    length = 6,\r\n    gutter,\r\n    mask = true,\r\n    focused: focusedProp,\r\n    focus: focusProp = false,\r\n    error,\r\n    info,\r\n    onFocus,\r\n    ...restProps\r\n  } = props\r\n\r\n  const focus = useMemo(() => (_.isBoolean(focusedProp) ? focusedProp : focusProp), [\r\n    focusProp,\r\n    focusedProp,\r\n  ])\r\n\r\n  if (_.isBoolean(focusedProp)) {\r\n    // eslint-disable-next-line no-console\r\n    console.warn(\"[Deprecated] The focused prop is deprecated. Please use the focus prop.\")\r\n  }\r\n\r\n  const onTouchStart = useCallback(\r\n    (event: ITouchEvent) => {\r\n      stopPropagation(event)\r\n      onFocus?.(event)\r\n    },\r\n    [onFocus],\r\n  )\r\n\r\n  const renderPoints = () => {\r\n    const Points: JSX.Element[] = []\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      const char = value[i]\r\n      const bordered = i !== 0 && !gutter\r\n      const showCursor = focus && i === value.length\r\n\r\n      let style\r\n      if (i !== 0 && gutter) {\r\n        style = { marginLeft: addUnitPx(gutter) }\r\n      }\r\n\r\n      Points.push(\r\n        <View\r\n          key={i}\r\n          className={classNames(prefixClassname(\"password-input__item\"), {\r\n            [HAIRLINE_BORDER_LEFT]: bordered,\r\n            [prefixClassname(\"password-input__item--focus\")]: showCursor,\r\n          })}\r\n          style={style}\r\n        >\r\n          {mask ? (\r\n            <View\r\n              className={prefixClassname(\"password-input__item--mask\")}\r\n              style={{ visibility: char ? \"visible\" : \"hidden\" }}\r\n            />\r\n          ) : (\r\n            char\r\n          )}\r\n          {showCursor && <View className={prefixClassname(\"password-input__cursor\")} />}\r\n        </View>,\r\n      )\r\n    }\r\n\r\n    return Points\r\n  }\r\n  return (\r\n    <View className={classNames(prefixClassname(\"password-input\"), className)} {...restProps}>\r\n      <View\r\n        className={classNames(prefixClassname(\"password-input__security\"), {\r\n          [HAIRLINE_BORDER_SURROUND]: !gutter,\r\n        })}\r\n        onTouchStart={onTouchStart}\r\n      >\r\n        {renderPoints()}\r\n      </View>\r\n      {info && (\r\n        <View\r\n          className={classNames(prefixClassname(\"password-input__info\"), {\r\n            [prefixClassname(\"password-input__info--error\")]: error,\r\n          })}\r\n          children={info}\r\n        />\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default PasswordInput\r\n","import { NumberKeyboard, PasswordInput } from \"@taroify/core\"\r\nimport * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\ninterface OpenKeyboardProps {\r\n  open?: string\r\n\r\n  onOpen?(open: string): void\r\n}\r\n\r\nfunction BasicPasswordInput(props: OpenKeyboardProps) {\r\n  const { open, onOpen } = props\r\n  const [value, setValue] = useState(\"123\")\r\n\r\n  return (\r\n    <>\r\n      <PasswordInput focus value={value} onFocus={() => onOpen?.(\"basic\")} />\r\n      <NumberKeyboard\r\n        open={open === \"basic\"}\r\n        onKeyPress={(key) => setValue(value + key)}\r\n        onBackspace={() => setValue(value.substring(0, value.length - 1))}\r\n        onHide={() => onOpen?.(\"\")}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction CustomLengthPasswordInput(props: OpenKeyboardProps) {\r\n  const { open, onOpen } = props\r\n  const [value, setValue] = useState(\"123\")\r\n\r\n  return (\r\n    <>\r\n      <PasswordInput focus length={6} value={value} onFocus={() => onOpen?.(\"length\")} />\r\n      <NumberKeyboard\r\n        open={open === \"length\"}\r\n        onKeyPress={(key) => setValue(value + key)}\r\n        onBackspace={() => setValue(value.substring(0, value.length - 1))}\r\n        onHide={() => onOpen?.(\"\")}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction GutterPasswordInput(props: OpenKeyboardProps) {\r\n  const { open, onOpen } = props\r\n  const [value, setValue] = useState(\"123\")\r\n\r\n  return (\r\n    <>\r\n      <PasswordInput focus gutter={10} value={value} onFocus={() => onOpen?.(\"gutter\")} />\r\n      <NumberKeyboard\r\n        open={open === \"gutter\"}\r\n        onKeyPress={(key) => setValue(value + key)}\r\n        onBackspace={() => setValue(value.substring(0, value.length - 1))}\r\n        onHide={() => onOpen?.(\"\")}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction NoMaskPasswordInput(props: OpenKeyboardProps) {\r\n  const { open, onOpen } = props\r\n  const [value, setValue] = useState(\"123\")\r\n\r\n  return (\r\n    <>\r\n      <PasswordInput focus mask={false} value={value} onFocus={() => onOpen?.(\"mask\")} />\r\n      <NumberKeyboard\r\n        open={open === \"mask\"}\r\n        onKeyPress={(key) => setValue(value + key)}\r\n        onBackspace={() => setValue(value.substring(0, value.length - 1))}\r\n        onHide={() => onOpen?.(\"\")}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction PasswordInputWithInfo(props: OpenKeyboardProps) {\r\n  const { open, onOpen } = props\r\n  const [value, setValue] = useState(\"123\")\r\n\r\n  return (\r\n    <>\r\n      <PasswordInput focus info=\"密码为 6 位数字\" value={value} onFocus={() => onOpen?.(\"info\")} />\r\n      <NumberKeyboard\r\n        open={open === \"info\"}\r\n        onKeyPress={(key) => setValue(value + key)}\r\n        onBackspace={() => setValue(value.substring(0, value.length - 1))}\r\n        onHide={() => onOpen?.(\"\")}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function PasswordInputDemo() {\r\n  const [open, setOpen] = useState(\"\")\r\n  return (\r\n    <Page title=\"PasswordInput 密码输入框\" className=\"password-input-demo\">\r\n      <Block title=\"基础用法\">\r\n        <BasicPasswordInput open={open} onOpen={setOpen} />\r\n      </Block>\r\n      <Block title=\"自定义长度\">\r\n        <CustomLengthPasswordInput open={open} onOpen={setOpen} />\r\n      </Block>\r\n      <Block title=\"格子间距\">\r\n        <GutterPasswordInput open={open} onOpen={setOpen} />\r\n      </Block>\r\n      <Block title=\"明文展示\">\r\n        <NoMaskPasswordInput open={open} onOpen={setOpen} />\r\n      </Block>\r\n      <Block title=\"明文展示\">\r\n        <PasswordInputWithInfo open={open} onOpen={setOpen} />\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}