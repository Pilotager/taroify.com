{"version":3,"sources":["webpack:///../../../../packages/icons/src/utils/unit.ts","webpack:///../../../../packages/icons/src/van/VanIcon.tsx","webpack:///../../../../packages/core/src/styles/index.ts","webpack:///../../../../packages/core/src/styles/prefix.ts","webpack:///./src/styles/prefix.ts","webpack:///../../../../packages/icons/src/shared.ts","webpack:///../../../../packages/icons/src/ArrowLeft.tsx","webpack:///./src/components/target.tsx","webpack:///./src/components/page.tsx","webpack:///../../../../packages/core/src/safe-area/safe-area.tsx","webpack:///./src/utils/lorem.ts","webpack:///./src/pages/basic/safe-area/index.tsx"],"names":["value","convertPx","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertVw","convertVh","unitToPx","size","color","presetColor","ICON_PRESET_COLORS","presetSize","ICON_PRESET_SIZES","className","classNames","style","addUnitPx","name","VanIconWrapper","demoPrefixClassname","component","ICON_TYPE","Symbol","ArrowLeft","createVanIconComponent","TargetType","Target","props","type","children","process","Page","title","onClick","navigateBack","SafeArea","position","prefixClassname","lorem","LoremIpsum","sentencesPerParagraph","max","min","wordsPerSentence","SafeAreaDemo","generateParagraphs"],"mappings":"wJAKA,E,mDALM,sBACJ,YAAOA,mBAqCH,qBACJ,oBAAWA,EACT,SAGF,GAAIA,WAAJ,MACE,OA1BJ,SAASC,UAAUD,GAEjB,QADAA,EAAQA,gBAARA,KAyBSC,CAAP,GAEF,GAAID,WAAJ,OACE,OAxBJ,SAASE,WAAWF,GAElB,QADAA,EAAQA,iBAARA,KAjBF,SAASG,kBACP,MAAmB,CACjB,IAAMC,EAAMC,SAAZ,gBACMC,EAAWF,kBAAsBG,2BAAvC,SAEAC,EAAeC,WAAfD,GAGF,SAUgBL,GAsBPD,CAAP,GAEF,GAAIF,WAAJ,MACE,OAtBJ,SAASU,UAAUV,GAEjB,QADAA,EAAQA,gBAARA,KACiBO,OAAV,WAAP,IAoBSG,CAAP,GAEF,GAAIV,WAAJ,MACE,OApBJ,SAASW,UAAUX,GAEjB,QADAA,EAAQA,gBAARA,KACiBO,OAAV,YAAP,IAkBSI,CAAP,GAGF,OAAOF,WAAP,GAvDqCG,CAA9BZ,GAAP,M,otCCuBY,oBAAqC,MAC3C,EAAN,EAAM,YAAN,EAAM,QAAN,EAAM,KAD2C,EACjD,EAAgCa,YADiB,MAC3C,UAD2C,IACjD,EAAkDC,aADD,MACS,UADT,EACjD,gCACMC,EAAcC,aAApB,GACMC,EAAaC,aAAnB,GAEA,OACE,oBAAK,eACHC,YAAWC,IAAW,WAAD,yDAKjB,2BADF,GAJmB,cAMjB,2BAA2BH,GANV,GADlB,GAWHI,QAAK,eACHP,QAAOC,EAAc,GADlB,EAEHT,WAAUW,EAAa,GAAKK,UAAUT,IAFnC,IAZT,IAsBI,mCACJ,2BACE,OAAO,wBAAQ,eAACU,OAAMA,GAAtB,IAKF,OADAC,wBACA,iB,mCC1DF,kD,4FCAA,gDAEM,4BACJ,gBAHF,YAGE,Y,mCCHF,oDAEO,SAASC,oBAAoBC,GAClC,gBAHkB,iBAGlB,OAAwBA,K,mCCA1B,sGAAO,IAAMC,EAAYC,OAAlB,gBAIMV,EAAoB,CAAC,UAAW,OAAQ,QAAS,SAAvD,SAWMF,EAAqB,CAAC,UAAD,+CAA3B,W,mCClBP,aAEMa,EAAYC,YAAlB,cACA,O,4ECCYC,E,+EAYG,SAASC,OAAOC,GAAoB,IACzCC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SACd,OAAO,qCAAYC,OAATF,GAAiCC,ICF9B,SAASE,KAAKJ,GAAkB,IACrCd,EAA+Bc,EAA/Bd,UAAWmB,EAAoBL,EAApBK,MAAOH,EAAaF,EAAbE,SAE1B,OACE,eAAC,IAAD,CAAMhB,YAAWC,IAAWK,YAAoB,QAASN,GAAzD,YACE,cAACa,OAAD,CAAQE,OAAK,KAAb,WACE,eAAC,IAAD,CAAMf,YAAWM,YAAoB,aAArC,YACE,cAACI,EAAA,EAAD,CACEV,YAAWM,YAAoB,mBAC/Bc,UAAS,0BAAM,UAAAC,kBAEjB,eAAC,IAAD,CAAMrB,YAAWM,YAAoB,oBAArC,YAA2Da,EAA3D,YAGJ,cAAC,IAAD,CAAMnB,YAAWM,YAAoB,iBAArC,WAAwDU,Q,SD1BlDJ,K,SAAAA,M,4vBEyBZ,MAjBA,SAASU,SAASR,GAAoB,MAC9B,EAAN,EAAM,UAAaS,EAAnB,EAAmBA,SAAnB,gCACA,OACE,oBAAK,eACHvB,YAAWC,IACTuB,YADmB,iCAGhBA,YAAD,kBADF,QACuCD,GAHpB,cAIhBC,YAAD,qBAAqD,WAAbD,GAJvB,OAFzB,K,SCDaE,EAXD,I,OAAIC,YAAW,CAC3BC,wBAAuB,CACrBC,MAAK,EACLC,MAAK,GAEPC,mBAAkB,CAChBF,MAAK,GACLC,MAAK,K,kBCDM,SAASE,eACtB,OACE,eAAC,IAAD,CAAMZ,QAAM,gBAAgBnB,YAAU,iBAAtC,YACE,iBAAUuB,WAAS,QACnB,cAAC,IAAD,YAAOE,EAAMO,mBAAmB,MAChC,iBAAUT,WAAS","file":"chunk/79.bca54bca.js","sourcesContent":["export function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport {\r\n  ICON_PRESET_COLORS,\r\n  ICON_PRESET_SIZES,\r\n  ICON_TYPE,\r\n  IconColor,\r\n  IconProps,\r\n  IconSize,\r\n} from \"../shared\"\r\nimport { addUnitPx } from \"../utils/unit\"\r\n\r\ninterface VanIconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  name?: string\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function VanIcon(props: VanIconProps) {\r\n  const { className, style, name, size = \"inherit\", color = \"inherit\", ...restProps } = props\r\n  const presetColor = ICON_PRESET_COLORS.includes(color as IconColor)\r\n  const presetSize = ICON_PRESET_SIZES.includes(size as IconSize)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        \"van-icon\",\r\n        `van-icon-${name}`,\r\n        \"taroify-icon\",\r\n        {\r\n          [`taroify-icon--${color}`]: presetColor,\r\n          [`taroify-icon--${size}`]: presetSize,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        color: presetColor ? \"\" : color,\r\n        fontSize: presetSize ? \"\" : addUnitPx(size),\r\n        ...style,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport function createVanIconComponent(name: string) {\r\n  function VanIconWrapper(props: IconProps) {\r\n    return <VanIcon name={name} {...props} />\r\n  }\r\n\r\n  // @ts-ignore\r\n  VanIconWrapper[ICON_TYPE] = ICON_TYPE\r\n  return VanIconWrapper\r\n}\r\n","export { prefixClassname } from \"./prefix\"\n","const COMPONENT_PREFIX = \"taroify-\"\n\nexport function prefixClassname(component: string) {\n  return `${COMPONENT_PREFIX}${component}`\n}\n","const DEMO_PREFIX = \"taroify-demo-\"\n\nexport function demoPrefixClassname(component: string) {\n  return `${DEMO_PREFIX}${component}`\n}\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\n\r\nexport const ICON_TYPE = Symbol(\"__iconType__\")\r\n\r\nexport type IconSize = \"inherit\" | \"mini\" | \"small\" | \"medium\" | \"large\"\r\n\r\nexport const ICON_PRESET_SIZES = [\"inherit\", \"mini\", \"small\", \"medium\", \"large\"]\r\n\r\nexport type IconColor =\r\n  | \"inherit\"\r\n  | \"default\"\r\n  | \"primary\"\r\n  | \"info\"\r\n  | \"success\"\r\n  | \"warning\"\r\n  | \"danger\"\r\n\r\nexport const ICON_PRESET_COLORS = [\r\n  \"inherit\",\r\n  \"default\",\r\n  \"primary\",\r\n  \"info\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n]\r\n\r\nexport interface IconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n","import { createVanIconComponent } from \"./van\"\r\n\r\nconst ArrowLeft = createVanIconComponent(\"arrow-left\")\r\nexport default ArrowLeft\r\n","import * as React from \"react\"\nimport { ReactNode } from \"react\"\n\n/* eslint-disable  no-shadow */\nexport enum TargetType {\n  /* eslint-enable  no-shadow */\n  H5 = \"h5\",\n}\n\ntype TargetTypeString = \"h5\"\n\ninterface TargetProps {\n  type?: TargetType | TargetTypeString\n  children?: ReactNode\n}\n\nexport default function Target(props: TargetProps) {\n  const { type, children } = props\n  return <>{type === process.env.TARO_ENV && children}</>\n}\n","import ArrowLeft from \"@taroify/icons/ArrowLeft\"\nimport { View } from \"@tarojs/components\"\nimport { navigateBack } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { ReactNode } from \"react\"\nimport { demoPrefixClassname } from \"../styles/prefix\"\nimport \"./page.scss\"\nimport Target from \"./target\"\n\ninterface PageProps {\n  className?: string\n  title?: string\n  children: ReactNode\n}\n\nexport default function Page(props: PageProps) {\n  const { className, title, children } = props\n\n  return (\n    <View className={classNames(demoPrefixClassname(\"page\"), className)}>\n      <Target type=\"h5\">\n        <View className={demoPrefixClassname(\"page__nav\")}>\n          <ArrowLeft\n            className={demoPrefixClassname(\"page__nav__back\")}\n            onClick={() => navigateBack()}\n          />\n          <View className={demoPrefixClassname(\"page__nav__title\")}>{title} </View>\n        </View>\n      </Target>\n      <View className={demoPrefixClassname(\"page__content\")}>{children}</View>\n    </View>\n  )\n}\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ntype SafeAreaPosition = \"top\" | \"bottom\"\r\n\r\nexport interface SafeAreaProps extends ViewProps {\r\n  position: SafeAreaPosition\r\n}\r\n\r\nfunction SafeArea(props: SafeAreaProps) {\r\n  const { className, position, ...restProps } = props\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"safe-area\"),\r\n        {\r\n          [prefixClassname(\"safe-area--top\")]: position === \"top\",\r\n          [prefixClassname(\"safe-area--bottom\")]: position === \"bottom\",\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SafeArea\r\n","import { LoremIpsum } from \"lorem-ipsum\"\r\n\r\nconst lorem = new LoremIpsum({\r\n  sentencesPerParagraph: {\r\n    max: 8,\r\n    min: 4,\r\n  },\r\n  wordsPerSentence: {\r\n    max: 16,\r\n    min: 4,\r\n  },\r\n})\r\n\r\nexport default lorem\r\n","import { SafeArea } from \"@taroify/core\"\r\nimport { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport Page from \"../../../components/page\"\r\nimport lorem from \"../../../utils/lorem\"\r\n\r\nimport \"./index.scss\"\r\n\r\nexport default function SafeAreaDemo() {\r\n  return (\r\n    <Page title=\"SafeArea 安全区域\" className=\"safe-area-demo\">\r\n      <SafeArea position=\"top\" />\r\n      <View>{lorem.generateParagraphs(10)}</View>\r\n      <SafeArea position=\"bottom\" />\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}