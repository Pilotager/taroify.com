{"version":3,"sources":["webpack:///../core/src/utils/touch.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/clamp.js","webpack:///../core/src/slider/style/index.ts","webpack:///../core/src/slider/slider.context.ts","webpack:///../core/src/slider/slider-thumb.tsx","webpack:///../core/src/slider/slider.tsx","webpack:///../core/src/slider/index.ts","webpack:///./src/pages/form/slider/index.tsx"],"names":["TouchDirection","emptyFunction","useTouch","touchRef","useRef","startX","startY","deltaX","deltaY","offsetX","offsetY","isVertical","isHorizontal","start","move","reset","useCallback","current","direction","Vertical","Horizontal","undefined","event","touches","clientX","clientY","touch","Math","abs","getDirection","x","y","useEffect","baseClamp","require","toNumber","module","exports","clamp","number","lower","upper","SliderContext","createContext","SliderThumb","SliderDragStatus","props","className","size","index","children","restProps","useContext","onTouchStart","onTouchMove","onTouchEnd","classNames","prefixClassname","style","getSizeStyle","catchMove","onTouchCancel","onClick","stopPropagation","Slider","defaultValue","value","valueProp","min","max","step","range","orientation","disabled","onChangeProp","onChange","useValue","setValue","useSliderChildren","useMemo","__children__","thumb1","thumb2","Children","forEach","child","isValidElement","element","cloneElement","key","vertical","rootRef","dragStatusRef","startValueRef","currentValueRef","buttonIndexRef","scope","Number","isRange","val","Array","isArray","calcMainAxis","calcOffset","wrapperStyle","crossAxis","addUnitPx","trackStyle","mainAxis","formatValue","diff","round","addNumber","updateValue","newValue","isSameValue","oldValue","JSON","stringify","handleOverlap","slice","reverse","map","ref","handleClick","getRect","then","rect","getClientCoordinates","delta","top","left","total","height","width","right","Provider","Start","preventDefault","Dragging","End","Thumb","StyledThumbSlider","useState","SliderDemo","title","marginLeft"],"mappings":"6FACA,6CAIYA,EAJZ,QAkBA,SAASC,iBAsBF,SAASC,WACd,IAAMC,EAAWC,iBAAiB,CAChCC,SAAQ,EACRC,SAAQ,EACRC,SAAQ,EACRC,SAAQ,EACRC,UAAS,EACTC,UAAS,EACTC,aAAY,6BAAM,GAClBC,eAAc,+BAAM,GACpBC,QAAOZ,cACPa,OAAMb,cACNc,QAAOd,gBAGHU,EAAaK,uBAAY,kBAAMb,EAASc,QAAQC,YAAclB,EAAemB,WAAU,IAEvFP,EAAeI,uBACnB,kBAAMb,EAASc,QAAQC,YAAclB,EAAeoB,aACpD,IAGIL,EAAQC,uBAAY,WACxBb,EAASc,QAAQV,OAAS,EAC1BJ,EAASc,QAAQT,OAAS,EAC1BL,EAASc,QAAQR,QAAU,EAC3BN,EAASc,QAAQP,QAAU,EAC3BP,EAASc,QAAQC,eAAYG,IAC5B,IAEGR,EAAQG,uBACZ,SAAUM,GACRP,IACAZ,EAASc,QAAQZ,OAASiB,EAAMC,QAAQ,GAAGC,QAC3CrB,EAASc,QAAQX,OAASgB,EAAMC,QAAQ,GAAGE,UAE7C,CAACV,IAGGD,EAAOE,uBAAY,SAAUM,GACjC,IAAMI,EAAQJ,EAAMC,QAAQ,GAE5BpB,EAASc,QAAQV,OAASmB,EAAMF,QAAU,EAAI,EAAIE,EAAMF,QAAUrB,EAASc,QAAQZ,OACnFF,EAASc,QAAQT,OAASkB,EAAMD,QAAUtB,EAASc,QAAQX,OAC3DH,EAASc,QAAQR,QAAUkB,KAAKC,IAAIzB,EAASc,QAAQV,QACrDJ,EAASc,QAAQP,QAAUiB,KAAKC,IAAIzB,EAASc,QAAQT,QAEhDL,EAASc,QAAQC,YACpBf,EAASc,QAAQC,UA/EvB,SAASW,aAAaC,EAAWC,GAC/B,OAAID,EAAIC,GAAKD,EARM,GASV9B,EAAeoB,WAEpBW,EAAID,GAAKC,EAXM,GAYV/B,EAAemB,cADxB,EA2EiCU,CAAa1B,EAASc,QAAQR,QAASN,EAASc,QAAQP,YAEtF,IAgCH,OA9BAsB,qBAAU,WACJ7B,EAASc,QAAQL,eAAiBA,IACpCT,EAASc,QAAQL,aAAeA,KAEjC,CAACT,EAAUS,IAEdoB,qBAAU,WACJ7B,EAASc,QAAQN,aAAeA,IAClCR,EAASc,QAAQN,WAAaA,KAE/B,CAACR,EAAUQ,IAEdqB,qBAAU,WACJ7B,EAASc,QAAQF,QAAUA,IAC7BZ,EAASc,QAAQF,MAAQA,KAE1B,CAACZ,EAAUY,IAEdiB,qBAAU,WACJ7B,EAASc,QAAQJ,QAAUA,IAC7BV,EAASc,QAAQJ,MAAQA,KAE1B,CAACV,EAAUU,IAEdmB,qBAAU,WACJ7B,EAASc,QAAQH,OAASA,IAC5BX,EAASc,QAAQH,KAAOA,KAEzB,CAACX,EAAUW,IAEPX,EAASc,S,SAtHNjB,K,wBAAAA,E,qBAAAA,M,4BCLZ,IAAIiC,EAAYC,EAAQ,KACpBC,EAAWD,EAAQ,KAqCvBE,EAAOC,QAhBP,SAASC,MAAMC,EAAQC,EAAOC,GAa5B,YAZcpB,IAAVoB,IACFA,EAAQD,EACRA,OAAQnB,QAEIA,IAAVoB,IAEFA,GADAA,EAAQN,EAASM,KACCA,EAAQA,EAAQ,QAEtBpB,IAAVmB,IAEFA,GADAA,EAAQL,EAASK,KACCA,EAAQA,EAAQ,GAE7BP,EAAUE,EAASI,GAASC,EAAOC,K,mCCnC5C,e,iNCaeC,EAFOC,wBAAkC,I,SC0CzCC,ICzBVC,EDyBUD,EAlCf,SAASA,YAAYE,GAAyB,QACeA,EAAnDC,EADoC,EACpCA,UAAWC,EADyB,EACzBA,KAAMC,EADmB,EACnBA,MAAOC,EADY,EACZA,SAAaC,EADD,yDAEMC,qBAAWV,GAArDW,EAFoC,EAEpCA,aAAcC,EAFsB,EAEtBA,YAAaC,EAFS,EAETA,WAEnC,OACE,cAAC,IAAD,CACER,YAAWS,KAAU,mBAClBC,YAAgB,8BAAqCpC,IAAV4B,GADzB,cAElBQ,YAAgB,8BAA0C,IAAVR,GAF9B,cAGlBQ,YAAgB,+BAA2C,IAAVR,GAH/B,IAKrBS,QAAK,eACAC,YAAaX,IAElBY,aAAS,EACTP,eAAc,sBAAC/B,GAAD,OAAW+B,aAAX,EAAWA,EAAe/B,EAAO2B,IAC/CK,cAAa,qBAAChC,GAAD,OAAWgC,aAAX,EAAWA,EAAchC,EAAO2B,IAC7CM,aAAY,oBAACjC,GAAD,OAAWiC,aAAX,EAAWA,EAAajC,EAAO2B,IAC3CY,gBAAe,uBAACvC,GAAD,OAAWiC,aAAX,EAAWA,EAAajC,EAAO2B,IAC9Ca,UAASC,IAdX,WAkBIb,UACE,cAAC,IAAD,aACEH,YAAWS,IAAWC,YAAgB,iBAAkBV,IACpDI,Q,SCjBXN,K,cAAAA,E,oBAAAA,E,WAAAA,M,KA2SUmB,IC9TTA,ED2FN,SAASA,OAAOlB,GAAoB,MAEhCC,EAeED,EAfFC,UAFgC,EAiB9BD,EAdFY,aAHgC,MAGxB,GAHwB,EAIhCO,EAaEnB,EAbFmB,aAJgC,EAiB9BnB,EAZFoB,MAAOC,OALyB,WAKb9C,EALa,IAiB9ByB,EAXFsB,WANgC,MAM1B,EAN0B,IAiB9BtB,EAVFuB,WAPgC,MAO1B,IAP0B,IAiB9BvB,EATFwB,YARgC,MAQzB,EARyB,IAiB9BxB,EARFyB,aATgC,SAUhCvB,EAOEF,EAPFE,KAVgC,EAiB9BF,EANF0B,mBAXgC,MAWlB,aAXkB,IAiB9B1B,EALF2B,gBAZgC,SAahCvB,EAIEJ,EAJFI,SACAY,EAGEhB,EAHFgB,QACUY,EAER5B,EAFF6B,SACGxB,EAhB6B,YAiB9BL,EAjB8B,2IAmBF8B,YAAS,CACvCX,iBACAC,QAAOC,EACPQ,WAAUD,IAtBsB,IAmB1BR,aAnB0B,MAmBlB,EAnBkB,EAmBfW,EAnBe,EAmBfA,SAnBe,EA3DpC,SAASC,kBAAkB5B,EAAsBqB,GAC/C,OAAOQ,mBAAQ,WAAM,MAqBR,EApBLC,EAA+B,CACnCC,cAAQ5D,EACR6D,cAAQ7D,IAGV8D,WAASC,QAAQlC,GAAU,SAACmC,GAC1B,GAAKC,yBAAeD,GAApB,CAGA,IAAME,EAAUF,OAEYhE,IAAxB2D,EAAaC,OACfD,EAAaC,OAASM,OACWlE,IAAxB2D,EAAaE,SACtBF,EAAaE,OAASK,OAI1BP,EAAaC,OAAb,UAAsBD,EAAaC,cAAnC,QAA6C,cAAC,EAAD,IAEzCV,IACFS,EAAaC,OAASO,uBAAaR,EAAaC,OAAwB,CACtEQ,MAAK,EACLxC,QAAO,IAGT+B,EAAaE,OAAb,UAAsBF,EAAaE,cAAnC,QAA6C,cAAC,EAAD,IAC7CF,EAAaE,OAASM,uBAAaR,EAAaE,OAAwB,CACtEO,MAAK,EACLxC,QAAO,KAGT+B,EAAaC,OAASO,uBAAaR,EAAaC,OAAwB,CACtEhC,aAAO5B,IAIX,OAAO2D,IACN,CAAC9B,EAAUqB,IA4CaO,CAAkB5B,EAAUqB,GAA/CU,EAzB0B,EAyB1BA,OAAQC,EAzBkB,EAyBlBA,OAEVQ,EAA2B,aAAhBlB,EAEXmB,EAAUvF,mBAEVwF,EAAgBxF,mBAEhByF,GAAgBzF,iBAAoB,GAEpC0F,GAAkB1F,iBAAoB,GAEtC2F,GAAiB3F,mBAEjBsB,GAAQxB,cAER8F,GAAQjB,mBAAQ,kBAAMkB,OAAO5B,GAAO4B,OAAO7B,KAAM,CAACC,EAAKD,IAEvD8B,GAAUlF,uBACd,SAACmF,GAAD,OAA2C5B,GAAS6B,MAAMC,QAAQF,KAClE,CAAC5B,IAIG+B,GAAetF,uBAAY,WAC/B,OAAIkF,GAAQhC,GACV,UAAmC,KAAvBA,EAAM,GAAKA,EAAM,IAAa8B,GAA1C,KAEF,UAA+C,KAAlC9B,EAAmB+B,OAAO7B,IAAe4B,GAAtD,OACC,CAACE,GAAS9B,EAAK4B,GAAO9B,IAGnBqC,GAAavF,uBAAY,WAC7B,OAAIkF,GAAQhC,GACV,UAAsC,KAA1BA,EAAM,GAAK+B,OAAO7B,IAAe4B,GAA7C,KAEK,OACN,CAACE,GAAS9B,EAAK4B,GAAO9B,IAEnBsC,GAAezB,mBAAuB,WAAM,MAC1C0B,EAAYf,EAAW,QAAU,SACvC,kCACKhC,GADL,kBAEG+C,EAFH,UAEeC,YAAU1D,UAFzB,QAEkC,OAEjC,CAACA,EAAMU,EAAOgC,IAEXiB,GAAa5B,mBAAuB,WAAM,MACxC6B,EAAWlB,EAAW,SAAW,QACvC,0BACGkB,EAAWN,MADd,qBAEQZ,EAAW,GAAKa,MAFxB,oBAGOb,EAAWa,KAAe,IAHjC,2BAIcX,EAAc3E,QAAU,OAAS,IAJ/C,IAMC,CAACqF,GAAcC,GAAYb,IAExBmB,GAAc,SAAdA,YAAe3C,GACnBA,EAAQ,IAAQA,EAAOE,EAAKC,GAC5B,IAAMyC,EAAOnF,KAAKoF,OAAO7C,EAAQE,GAAOE,GAAQA,EAChD,OAAO0C,YAAU5C,EAAK0C,IAalBG,GAAc,SAAdA,YAAeC,IAVD,SAAdC,YAAeD,EAAuBE,GAAxB,OAClBC,KAAKC,UAAUJ,KAAcG,KAAKC,UAAUF,IAgBvCD,CALHD,EADEhB,GAAQgB,GARQ,SAAhBK,cAAiBrD,GACrB,OAAIA,EAAM,GAAKA,EAAM,GACZA,EAAMsD,MAAM,GAAGC,UAEjBvD,EAKMqD,CAAcL,GAAUQ,IAAIb,IAE5BA,GAAYK,GAGEhD,IACzBW,EAASqC,IA4Fb,OACE,cAAC,IAAD,yBACES,MAAKhC,EACL5C,YAAWS,IACTA,IAAWC,YAAgB,WAAjB,mBACPA,YAAgB,oBAAsBiC,GAD/B,cAEPjC,YAAgB,oBAAsBgB,GAF/B,IAIV1B,GAEFW,QAAO8C,GACP1C,UAnGgB,SAAd8D,YAAetG,GACnBwC,WAAUxC,GACVyC,YAAgBzC,GAEZmD,GAIJoD,YAAQlC,GAASmC,MAAK,SAACC,GAAS,MACDC,YAAqB1G,GAA1CE,EADsB,EACtBA,QAASC,EADa,EACbA,QAEXwG,EAAQvC,EAAWjE,EAAUsG,EAAKG,IAAM1G,EAAUuG,EAAKI,KACvDC,EAAQ1C,EAAWqC,EAAKM,OAASN,EAAKO,MACtCpB,EAAWjB,OAAO7B,GAAQ6D,EAAQG,EAASpC,GAEjD,GAAIE,GAAQhC,GAAQ,mBACIA,EADJ,GACXiE,EADW,KACLI,EADK,KAKhBtB,GADEC,IAFYiB,EAAOI,GAAS,EAGlB,CAACrB,EAAUqB,GAEX,CAACJ,EAAMjB,SAGrBD,GAAYC,QA2EV/D,GAXN,eAaE,cAAC,EAAcqF,SAAf,CACEtE,QAAO,CACLb,eA1Ea,SAAfA,aAAgB/B,EAAoB2B,GACnB,iBAAVA,IAET8C,GAAe9E,QAAUgC,GAGvBwB,IAIJ/C,GAAMb,MAAMS,GACZwE,GAAgB7E,QAAUiD,EAEtBgC,GAAQJ,GAAgB7E,SAC1B4E,GAAc5E,QAAU6E,GAAgB7E,QAAQyG,IAAIb,IAEpDhB,GAAc5E,QAAU4F,GAAYf,GAAgB7E,SAGtD2E,EAAc3E,QAAU4B,EAAiB4F,QAwDnCnF,cArDY,SAAdA,YAAehC,GACfmD,IAIJiE,YAAepH,GAAO,GACtBI,GAAMZ,KAAKQ,GACXsE,EAAc3E,QAAU4B,EAAiB8F,SAEzCd,YAAQlC,GAASmC,MAAK,SAACC,GACrB,IAEMjB,GAFQpB,EAAWhE,GAAMlB,OAASkB,GAAMnB,SAChCmF,EAAWqC,EAAKM,OAASN,EAAKO,OACbtC,GAE3BE,GAAQL,GAAc5E,SACtB6E,GAAgB7E,QAA6B8E,GAAe9E,SAC5D4E,GAAc5E,QAAQ8E,GAAe9E,SAAqB6F,EAE5DhB,GAAgB7E,QAAW4E,GAAc5E,QAAqB6F,EAEhEG,GAAYnB,GAAgB7E,cAkCxBsC,aA9BW,SAAbA,aACAkB,IAIAmB,EAAc3E,UAAY4B,EAAiB8F,UAC7C1B,GAAYnB,GAAgB7E,SAG9B2E,EAAc3E,QAAU4B,EAAiB+F,OAiBvC,WAOE,cAAC,IAAD,CAAM7F,YAAWU,YAAgB,iBAAkBC,QAAOiD,GAA1D,WACGpC,EAAQ,CAACU,EAAQC,GAAUD,UCrTtCjB,EAAO6E,MAAQjG,EAEAoB,O,mMCLf,SAAS8E,oBAAoB,MACDC,mBAAS,IADR,mBACpB7E,EADoB,KACbW,EADa,KAE3B,OACE,mBAAQ9B,YAAU,eAAemB,QAAOA,EAAOS,WAAUE,EAAzD,WACE,kBAAQgE,MAAR,YACE,cAAC,IAAD,CAAM9F,YAAU,eAAhB,WAAgCmB,QAMzB,SAAS8E,aACtB,OACE,eAAC,IAAD,CAAMC,QAAM,YAAYlG,YAAU,cAAlC,YACE,cAAC,IAAD,CAAOkG,QAAM,OAAb,WACE,mBAAQhF,eAAc,OAExB,cAAC,IAAD,CAAOgF,QAAM,MAAb,WACE,mBAAQ1E,SAAK,EAACN,eAAc,CAAC,GAAI,QAEnC,cAAC,IAAD,CAAOgF,QAAM,SAAb,WACE,mBAAQ7E,OAAM,GAAIC,MAAK,GAAIJ,eAAc,MAE3C,cAAC,IAAD,CAAOgF,QAAM,KAAb,WACE,mBAAQxE,YAAQ,EAACR,eAAc,OAEjC,cAAC,IAAD,CAAOgF,QAAM,OAAb,WACE,mBAAQ3E,OAAM,GAAIL,eAAc,OAElC,cAAC,IAAD,CAAOgF,QAAM,QAAb,WACE,mBAAQlG,YAAU,eAAeC,OAAM,EAAGiB,eAAc,OAE1D,cAAC,IAAD,CAAOgF,QAAM,QAAb,WACE,cAACH,kBAAD,MAEF,eAAC,IAAD,CAAOG,QAAM,QAAQlG,YAAU,kBAA/B,YACE,mBAAQyB,cAAY,WAAWP,eAAc,KAC7C,mBACEP,QAAO,CAAEwF,aAAY,SACrB3E,SAAK,EACLC,cAAY,WACZP,eAAc,CAAC,GAAI","file":"chunk/85.4265c021.js","sourcesContent":["import { ITouchEvent } from \"@tarojs/components\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nconst MIN_DISTANCE = 10\n\nexport enum TouchDirection {\n  Horizontal = \"horizontal\",\n  Vertical = \"vertical\",\n}\n\nfunction getDirection(x: number, y: number): TouchDirection | undefined {\n  if (x > y && x > MIN_DISTANCE) {\n    return TouchDirection.Horizontal\n  }\n  if (y > x && y > MIN_DISTANCE) {\n    return TouchDirection.Vertical\n  }\n}\n\nfunction emptyFunction() {}\n\nexport interface TouchRef {\n  startX: number\n  startY: number\n  deltaX: number\n  deltaY: number\n  offsetX: number\n  offsetY: number\n  direction?: TouchDirection\n\n  isVertical(): boolean\n\n  isHorizontal(): boolean\n\n  start(event: ITouchEvent): void\n\n  move(event: ITouchEvent): void\n\n  reset(): void\n}\n\nexport function useTouch() {\n  const touchRef = useRef<TouchRef>({\n    startX: 0,\n    startY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    isVertical: () => false,\n    isHorizontal: () => false,\n    start: emptyFunction,\n    move: emptyFunction,\n    reset: emptyFunction,\n  })\n\n  const isVertical = useCallback(() => touchRef.current.direction === TouchDirection.Vertical, [])\n\n  const isHorizontal = useCallback(\n    () => touchRef.current.direction === TouchDirection.Horizontal,\n    [],\n  )\n\n  const reset = useCallback(function () {\n    touchRef.current.deltaX = 0\n    touchRef.current.deltaY = 0\n    touchRef.current.offsetX = 0\n    touchRef.current.offsetY = 0\n    touchRef.current.direction = undefined\n  }, [])\n\n  const start = useCallback(\n    function (event: ITouchEvent) {\n      reset()\n      touchRef.current.startX = event.touches[0].clientX\n      touchRef.current.startY = event.touches[0].clientY\n    },\n    [reset],\n  )\n\n  const move = useCallback(function (event: ITouchEvent) {\n    const touch = event.touches[0]\n    // Fix: Safari back will set clientX to negative number\n    touchRef.current.deltaX = touch.clientX < 0 ? 0 : touch.clientX - touchRef.current.startX\n    touchRef.current.deltaY = touch.clientY - touchRef.current.startY\n    touchRef.current.offsetX = Math.abs(touchRef.current.deltaX)\n    touchRef.current.offsetY = Math.abs(touchRef.current.deltaY)\n\n    if (!touchRef.current.direction) {\n      touchRef.current.direction = getDirection(touchRef.current.offsetX, touchRef.current.offsetY)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (touchRef.current.isHorizontal !== isHorizontal) {\n      touchRef.current.isHorizontal = isHorizontal\n    }\n  }, [touchRef, isHorizontal])\n\n  useEffect(() => {\n    if (touchRef.current.isVertical !== isVertical) {\n      touchRef.current.isVertical = isVertical\n    }\n  }, [touchRef, isVertical])\n\n  useEffect(() => {\n    if (touchRef.current.reset !== reset) {\n      touchRef.current.reset = reset\n    }\n  }, [touchRef, reset])\n\n  useEffect(() => {\n    if (touchRef.current.start !== start) {\n      touchRef.current.start = start\n    }\n  }, [touchRef, start])\n\n  useEffect(() => {\n    if (touchRef.current.move !== move) {\n      touchRef.current.move = move\n    }\n  }, [touchRef, move])\n\n  return touchRef.current\n}\n","var baseClamp = require('./_baseClamp'),\n    toNumber = require('./toNumber');\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber(number), lower, upper);\n}\n\nmodule.exports = clamp;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\n\r\ninterface SliderContextValue {\r\n  onTouchStart?(event: ITouchEvent, index?: number): void\r\n\r\n  onTouchMove?(event: ITouchEvent, index?: number): void\r\n\r\n  onTouchEnd?(event: ITouchEvent, index?: number): void\r\n}\r\n\r\nconst SliderContext = createContext<SliderContextValue>({})\r\n\r\nexport default SliderContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { stopPropagation } from \"../utils/dom/event\"\r\nimport { getSizeStyle } from \"../utils/format/unit\"\r\nimport SliderContext from \"./slider.context\"\r\n\r\nexport interface SliderThumbProps extends ViewProps {\r\n  size?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport interface InternalSliderThumbProps extends SliderThumbProps {\r\n  index?: number\r\n}\r\n\r\nfunction SliderThumb(props: SliderThumbProps) {\r\n  const { className, size, index, children, ...restProps } = props as InternalSliderThumbProps\r\n  const { onTouchStart, onTouchMove, onTouchEnd } = useContext(SliderContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames({\r\n        [prefixClassname(\"slider__thumb-wrapper\")]: index === undefined,\r\n        [prefixClassname(\"slider__thumb-wrapper-left\")]: index === 0,\r\n        [prefixClassname(\"slider__thumb-wrapper-right\")]: index === 1,\r\n      })}\r\n      style={{\r\n        ...getSizeStyle(size),\r\n      }}\r\n      catchMove\r\n      onTouchStart={(event) => onTouchStart?.(event, index)}\r\n      onTouchMove={(event) => onTouchMove?.(event, index)}\r\n      onTouchEnd={(event) => onTouchEnd?.(event, index)}\r\n      onTouchCancel={(event) => onTouchEnd?.(event, index)}\r\n      onClick={stopPropagation}\r\n    >\r\n      {\r\n        //\r\n        children ?? (\r\n          <View\r\n            className={classNames(prefixClassname(\"slider__thumb\"), className)}\r\n            {...restProps}\r\n          />\r\n        )\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default SliderThumb\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { getClientCoordinates, preventDefault, stopPropagation } from \"../utils/dom/event\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport { addNumber } from \"../utils/format/number\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport { useValue } from \"../utils/state\"\r\nimport { useTouch } from \"../utils/touch\"\r\nimport SliderThumb from \"./slider-thumb\"\r\nimport SliderContext from \"./slider.context\"\r\n\r\ntype SliderValue = number | [number, number] | number[]\r\n\r\nenum SliderDragStatus {\r\n  Start = \"start\",\r\n  Dragging = \"dragging\",\r\n  End = \"end\",\r\n}\r\n\r\ntype SliderOrientation = \"horizontal\" | \"vertical\"\r\n\r\ninterface SliderChildren {\r\n  thumb1: ReactNode\r\n  thumb2: ReactNode\r\n}\r\n\r\nfunction useSliderChildren(children?: ReactNode, range?: boolean): SliderChildren {\r\n  return useMemo(() => {\r\n    const __children__: SliderChildren = {\r\n      thumb1: undefined,\r\n      thumb2: undefined,\r\n    }\r\n\r\n    Children.forEach(children, (child: ReactNode) => {\r\n      if (!isValidElement(child)) {\r\n        return\r\n      }\r\n      const element = child as ReactElement\r\n\r\n      if (__children__.thumb1 === undefined) {\r\n        __children__.thumb1 = element\r\n      } else if (__children__.thumb2 === undefined) {\r\n        __children__.thumb2 = element\r\n      }\r\n    })\r\n\r\n    __children__.thumb1 = __children__.thumb1 ?? <SliderThumb />\r\n\r\n    if (range) {\r\n      __children__.thumb1 = cloneElement(__children__.thumb1 as ReactElement, {\r\n        key: 0,\r\n        index: 0,\r\n      })\r\n\r\n      __children__.thumb2 = __children__.thumb2 ?? <SliderThumb />\r\n      __children__.thumb2 = cloneElement(__children__.thumb2 as ReactElement, {\r\n        key: 1,\r\n        index: 1,\r\n      })\r\n    } else {\r\n      __children__.thumb1 = cloneElement(__children__.thumb1 as ReactElement, {\r\n        index: undefined,\r\n      })\r\n    }\r\n\r\n    return __children__\r\n  }, [children, range])\r\n}\r\n\r\nexport interface SliderProps extends ViewProps {\r\n  style?: CSSProperties\r\n  step?: number\r\n  min?: number\r\n  max?: number\r\n  defaultValue?: any\r\n  value?: any\r\n  range?: boolean\r\n  size?: number\r\n  orientation?: SliderOrientation\r\n  disabled?: boolean\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any): void\r\n}\r\n\r\nfunction Slider(props: SliderProps) {\r\n  const {\r\n    className,\r\n    style = {},\r\n    defaultValue,\r\n    value: valueProp = undefined,\r\n    min = 0,\r\n    max = 100,\r\n    step = 1,\r\n    range = false,\r\n    size,\r\n    orientation = \"horizontal\",\r\n    disabled = false,\r\n    children,\r\n    onClick,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    defaultValue,\r\n    value: valueProp,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const { thumb1, thumb2 } = useSliderChildren(children, range)\r\n\r\n  const vertical = orientation === \"vertical\"\r\n\r\n  const rootRef = useRef<HTMLElement>()\r\n\r\n  const dragStatusRef = useRef<SliderDragStatus>()\r\n\r\n  const startValueRef = useRef<SliderValue>(0)\r\n\r\n  const currentValueRef = useRef<SliderValue>(0)\r\n\r\n  const buttonIndexRef = useRef<number>()\r\n\r\n  const touch = useTouch()\r\n\r\n  const scope = useMemo(() => Number(max) - Number(min), [max, min])\r\n\r\n  const isRange = useCallback(\r\n    (val: unknown): val is [number, number] => range && Array.isArray(val),\r\n    [range],\r\n  )\r\n\r\n  // 计算选中条的长度百分比\r\n  const calcMainAxis = useCallback(() => {\r\n    if (isRange(value)) {\r\n      return `${((value[1] - value[0]) * 100) / scope}%`\r\n    }\r\n    return `${(((value as number) - Number(min)) * 100) / scope}%`\r\n  }, [isRange, min, scope, value])\r\n\r\n  // 计算选中条的开始位置的偏移量\r\n  const calcOffset = useCallback(() => {\r\n    if (isRange(value)) {\r\n      return `${((value[0] - Number(min)) * 100) / scope}%`\r\n    }\r\n    return \"0%\"\r\n  }, [isRange, min, scope, value])\r\n\r\n  const wrapperStyle = useMemo<CSSProperties>(() => {\r\n    const crossAxis = vertical ? \"width\" : \"height\"\r\n    return {\r\n      ...style,\r\n      [crossAxis]: addUnitPx(size) ?? \"\",\r\n    }\r\n  }, [size, style, vertical])\r\n\r\n  const trackStyle = useMemo<CSSProperties>(() => {\r\n    const mainAxis = vertical ? \"height\" : \"width\"\r\n    return {\r\n      [mainAxis]: calcMainAxis(),\r\n      left: vertical ? \"\" : calcOffset(),\r\n      top: vertical ? calcOffset() : \"\",\r\n      transition: dragStatusRef.current ? \"none\" : \"\",\r\n    }\r\n  }, [calcMainAxis, calcOffset, vertical])\r\n\r\n  const formatValue = (value: number) => {\r\n    value = _.clamp(value, min, max)\r\n    const diff = Math.round((value - min) / step) * step\r\n    return addNumber(min, diff)\r\n  }\r\n\r\n  const isSameValue = (newValue: SliderValue, oldValue: SliderValue) =>\r\n    JSON.stringify(newValue) === JSON.stringify(oldValue)\r\n\r\n  const handleOverlap = (value: [number, number]) => {\r\n    if (value[0] > value[1]) {\r\n      return value.slice(0).reverse()\r\n    }\r\n    return value\r\n  }\r\n\r\n  const updateValue = (newValue: SliderValue) => {\r\n    if (isRange(newValue)) {\r\n      newValue = handleOverlap(newValue).map(formatValue) as [number, number]\r\n    } else {\r\n      newValue = formatValue(newValue as number)\r\n    }\r\n\r\n    if (!isSameValue(newValue, value)) {\r\n      setValue(newValue as any)\r\n    }\r\n  }\r\n\r\n  const handleClick = (event: ITouchEvent) => {\r\n    onClick?.(event)\r\n    stopPropagation(event)\r\n\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    getRect(rootRef).then((rect) => {\r\n      const { clientX, clientY } = getClientCoordinates(event)\r\n\r\n      const delta = vertical ? clientY - rect.top : clientX - rect.left\r\n      const total = vertical ? rect.height : rect.width\r\n      const newValue = Number(min) + (delta / total) * scope\r\n\r\n      if (isRange(value)) {\r\n        const [left, right] = value\r\n        const middle = (left + right) / 2\r\n\r\n        if (newValue <= middle) {\r\n          updateValue([newValue, right])\r\n        } else {\r\n          updateValue([left, newValue])\r\n        }\r\n      } else {\r\n        updateValue(newValue)\r\n      }\r\n    })\r\n  }\r\n\r\n  const onTouchStart = (event: ITouchEvent, index?: number) => {\r\n    if (typeof index === \"number\") {\r\n      // save index of current button\r\n      buttonIndexRef.current = index\r\n    }\r\n\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    touch.start(event)\r\n    currentValueRef.current = value\r\n\r\n    if (isRange(currentValueRef.current)) {\r\n      startValueRef.current = currentValueRef.current.map(formatValue) as [number, number]\r\n    } else {\r\n      startValueRef.current = formatValue(currentValueRef.current as number)\r\n    }\r\n\r\n    dragStatusRef.current = SliderDragStatus.Start\r\n  }\r\n\r\n  const onTouchMove = (event: ITouchEvent) => {\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    preventDefault(event, true)\r\n    touch.move(event)\r\n    dragStatusRef.current = SliderDragStatus.Dragging\r\n\r\n    getRect(rootRef).then((rect) => {\r\n      const delta = vertical ? touch.deltaY : touch.deltaX\r\n      const total = vertical ? rect.height : rect.width\r\n      const diff = (delta / total) * scope\r\n\r\n      if (isRange(startValueRef.current)) {\r\n        ;(currentValueRef.current as [number, number])[buttonIndexRef.current as number] =\r\n          startValueRef.current[buttonIndexRef.current as number] + diff\r\n      } else {\r\n        currentValueRef.current = (startValueRef.current as number) + diff\r\n      }\r\n      updateValue(currentValueRef.current)\r\n    })\r\n  }\r\n\r\n  const onTouchEnd = () => {\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    if (dragStatusRef.current === SliderDragStatus.Dragging) {\r\n      updateValue(currentValueRef.current)\r\n    }\r\n\r\n    dragStatusRef.current = SliderDragStatus.End\r\n  }\r\n\r\n  return (\r\n    <View\r\n      ref={rootRef}\r\n      className={classNames(\r\n        classNames(prefixClassname(\"slider\"), {\r\n          [prefixClassname(\"slider--vertical\")]: vertical,\r\n          [prefixClassname(\"slider--disabled\")]: disabled,\r\n        }),\r\n        className,\r\n      )}\r\n      style={wrapperStyle}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      <SliderContext.Provider\r\n        value={{\r\n          onTouchStart,\r\n          onTouchMove,\r\n          onTouchEnd,\r\n        }}\r\n      >\r\n        <View className={prefixClassname(\"slider__track\")} style={trackStyle}>\r\n          {range ? [thumb1, thumb2] : thumb1}\r\n        </View>\r\n      </SliderContext.Provider>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Slider\r\n","import SliderComponent, { SliderProps } from \"./slider\"\r\nimport SliderThumb from \"./slider-thumb\"\r\n\r\ninterface SliderInterface {\r\n  (props: SliderProps): JSX.Element\r\n\r\n  Thumb: typeof SliderThumb\r\n}\r\n\r\nconst Slider = SliderComponent as SliderInterface\r\n\r\nSlider.Thumb = SliderThumb\r\n\r\nexport default Slider\r\n","import { Slider } from \"@taroify/core\"\r\nimport { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nfunction StyledThumbSlider() {\r\n  const [value, setValue] = useState(50)\r\n  return (\r\n    <Slider className=\"custom-color\" value={value} onChange={setValue}>\r\n      <Slider.Thumb>\r\n        <View className=\"custom-thumb\">{value}</View>\r\n      </Slider.Thumb>\r\n    </Slider>\r\n  )\r\n}\r\n\r\nexport default function SliderDemo() {\r\n  return (\r\n    <Page title=\"Slider 滑块\" className=\"slider-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Slider defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"双滑块\">\r\n        <Slider range defaultValue={[20, 60]} />\r\n      </Block>\r\n      <Block title=\"指定选择范围\">\r\n        <Slider min={-50} max={50} defaultValue={0} />\r\n      </Block>\r\n      <Block title=\"禁用\">\r\n        <Slider disabled defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"指定步长\">\r\n        <Slider step={10} defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"自定义样式\">\r\n        <Slider className=\"custom-color\" size={4} defaultValue={50} />\r\n      </Block>\r\n      <Block title=\"自定义按钮\">\r\n        <StyledThumbSlider />\r\n      </Block>\r\n      <Block title=\"自定义样式\" className=\"vertical-slider\">\r\n        <Slider orientation=\"vertical\" defaultValue={50} />\r\n        <Slider\r\n          style={{ marginLeft: \"100px\" }}\r\n          range\r\n          orientation=\"vertical\"\r\n          defaultValue={[20, 60]}\r\n        />\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}