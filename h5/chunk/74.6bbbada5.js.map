{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/utils/validate/index.ts","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/flex/flex.context.ts","webpack:///../../../../packages/core/src/flex/flex.tsx","webpack:///../../../../packages/core/src/flex/index.ts","webpack:///../../../../packages/core/src/flex/flex-item.tsx","webpack:///../../../../packages/core/src/flex/style/index.ts","webpack:///../../../../packages/core/src/timeline/timeline.context.ts","webpack:///../../../../packages/core/src/timeline/timeline.tsx","webpack:///../../../../packages/core/src/timeline/timeline-connector.tsx","webpack:///../../../../packages/core/src/timeline/timeline-content.tsx","webpack:///../../../../packages/core/src/timeline/timeline-dot.tsx","webpack:///../../../../packages/core/src/timeline/timeline-item-base.tsx","webpack:///../../../../packages/core/src/timeline/timeline-separator.tsx","webpack:///../../../../packages/core/src/timeline/timeline-item.tsx","webpack:///../../../../packages/core/src/timeline/index.ts","webpack:///./src/pages/display/timeline/index.tsx"],"names":["value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertRpx","getSystemInfoSync","windowWidth","convertPx","convertVw","convertVh","isValidElement","element","displayName","Block","props","className","variant","title","children","classNames","demoPrefixClassname","createContext","gutter","undefined","Flex","forwardRef","direction","wrap","justify","align","useFlexGutter","useMemo","gutterNumber","gutterStyle","averagePadding","ref","prefixClassname","style","FlexContext","offset","gutters","useContext","horizontalGutter","span","Timeline","position","TimelineContext","TimelineConnector","TimeLineContent","TIMELINE_DOT_COLORS","TIMELINE_DOT_VARIANTS","isPresetColor","color","isPresetVariant","TimelineDot","TimeLineItemBase","TimeLineSeparator","TimelineItem","dot","dotProp","React","childrenProp","useTimelineItemChildren","separator","leftContent","rightContent","Children","child","isElementOf","useTimelineDot","dotProps","RightTimeline","Item","LeftTimeline","AlternateTimeline","OutlinedTimeline","CustomTimeline","Content","Separator","Connector","Dot","TimelineDemo"],"mappings":"iOA4BA,E,6CAxBM,sBACJ,YAAOA,mBAA8BC,SAA9BD,GAAP,MAGI,yBACJ,GAAI,QAA0B,IAA9B,GAAsD,CACpD,IAAME,EAAOC,UAAb,GACA,MAAO,CACLC,QADK,EAELC,SAAQH,GAGZ,SAqCF,SAASI,WAAWN,GAElB,QADAA,EAAQA,iBAARA,KAxBF,SAASO,kBACP,MAAmB,CACjB,IAAMC,EAAMC,SAAZ,gBACMC,EAAWF,kBAAsBG,2BAAvC,SAEAC,EAAeC,WAAfD,GAGF,SAiBgBL,GAaZ,qBACJ,uBAAWP,EACT,EAGEA,WAAJ,OAhCF,SAASc,WAAWd,GAIlB,QAHAA,EAAQA,iBAARA,MAEmB,IADKe,cAAhBC,aA+BCF,CAAP,GAEEd,WAAJ,MA5BF,SAASiB,UAAUjB,GAEjB,QADAA,EAAQA,gBAARA,KA4BSiB,CAAP,GAEEjB,WAAJ,OACSM,WAAP,GAEEN,WAAJ,MAxBF,SAASkB,UAAUlB,GAEjB,QADAA,EAAQA,gBAARA,KACiBW,OAAV,WAAP,IAuBSO,CAAP,GAEElB,WAAJ,MAtBF,SAASmB,UAAUnB,GAEjB,QADAA,EAAQA,gBAARA,KACiBW,OAAV,YAAP,IAqBSQ,CAAP,GAGKN,WAAP,K,yVClFI,0BACJ,OAAO,QAAoB,IAA3B,GAGI,4BACJ,OAAQO,yBAAD,IAAyB,IAAzB,KAA8C,IAArD,GAGI,0BACJ,GAAIA,yBAAJ,GAA0B,CACxB,IAAMC,EAAN,EACA,GAAIA,SAAJ,EACE,SAGF,IAAMC,EAAc,IAAMD,EAAN,KAApB,eACA,GACE,IAAaA,EAAb,QACC,IADD,IAEA,MAAwB,MAH1B,gBAKE,SAGJ,W,0IChBa,SAASE,MAAMC,GAAmB,MACvCC,EAAwCD,EAAxCC,UAAWC,EAA6BF,EAA7BE,QAASC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACnC,OACE,eAAC,IAAD,CAAMH,YAAWI,IAAWC,YAAoB,SAAUL,GAA1D,YACGE,GAAS,cAAC,IAAD,CAAMF,YAAWK,YAAoB,gBAAiBF,WAAUD,IAC1E,cAAC,IAAD,CACEF,YAAWI,KAAU,mBAClBC,YAAoB,kBAAgC,SAAZJ,GADtB,cAElBI,YAAoB,eAA6B,SAAZJ,GAFnB,IADvB,WAMGE,S,2MChBT,EAJoBG,wBAAgC,CAClDC,SAAQ,MAACC,OAAWA,K,mvCCsCtB,I,qxCCjCA,IAAMC,EDiCOC,sBAAW,cAA0B,MAC1C,EAAN,EAAM,YAAN,EAAM,QAAN,EAGEH,OAHF,IAIEI,iBAJF,MAAM,MAAN,MAKEC,YALF,MAAM,SAAN,MAMEC,eANF,MAAM,QAAN,MAOEC,aAPF,MAAM,QAAN,EAQEX,EARF,EAQEA,SARF,gCAWMI,EA9CR,SAASQ,cAAcR,GACrB,OAAOS,mBAAQ,WACb,YAAIT,EACF,MAAO,MAACC,OAAR,GAGF,GAAI,IAAJ,GACE,MAAO,CAACD,EAAR,GAGF,GAAI,IAAJ,GAAwB,CACtB,IAAMU,EAAe,IAArB,GACA,MAAO,CAACA,EAAR,GAGF,GAAI,IAAJ,GAAuB,CACrB,uBAAM,EAAN,KAAM,EAAN,KACA,MAAO,CAAC,IAAD,GAA+B,IAAtC,IAGF,MAAO,CAAC,EAAR,KACC,CApBH,IA6CeF,CAAf,GACM,EAAN,oBAEMG,EAAcF,mBAAuB,WACzC,IAAME,EAAN,GACA,KAAsB,CACpB,IAAMC,EAAiB,OAAvB,EACAD,aAAyBxC,aAAzBwC,GACAA,cAA0BxC,aAA1BwC,GAEF,WACC,CARH,IAUA,OACE,mCACEE,MADF,EAEEpB,YAAWI,IACTiB,YADmB,4BAIhBA,YAAD,aAFF,QAEkCV,GAJf,cAKhBU,YAAD,qBAHF,gBAG0CV,GALvB,cAMhBU,YAAD,gBAJF,WAIqCV,GANlB,cAOhBU,YAAD,wBALF,mBAK6CV,GAP1B,cAShBU,YAAD,gBAPF,WAOqCT,GATlB,cAUhBS,YAAD,cARF,SAQmCT,GAVhB,cAWhBS,YAAD,sBATF,iBAS2CT,GAXxB,cAahBS,YAAD,uBAXF,UAW4CR,GAbzB,cAchBQ,YAAD,wBAZF,WAY6CR,GAd1B,cAehBQ,YAAD,qBAbF,QAa0CR,GAfvB,cAgBhBQ,YAAD,8BAdF,iBAcmDR,GAhBhC,cAiBhBQ,YAAD,+BAfF,kBAeoDR,GAjBjC,cAmBhBQ,YAAD,qBAjBF,UAiB0CP,GAnBvB,cAoBhBO,YAAD,sBAlBF,WAkB2CP,GApBxB,cAqBhBO,YAAD,mBAnBF,QAmBwCP,GArBrB,cAsBhBO,YAAD,wBApBF,aAoB6CP,GAtB1B,cAuBhBO,YAAD,uBAAoD,YAAVP,GAvBzB,GAFvB,GA6BEQ,QAAK,sCA7BP,GAmCE,gBAACC,EAAD,SAAqB,CACnBhD,QAAO,CACLgC,YAEFJ,WAAUA,QChGlBM,OCEc,qBAAuC,MAC7C,EAAN,EAAM,YAAN,EAAM,QAAN,EAAM,KAA0Be,EAAhC,EAAgCA,OAAhC,yCACgBC,EAAYC,qBAA5B,GAAQnB,OACF,EAAN,oBAGMW,EAAN,GACA,KAAsB,CACpB,IAAMC,EAAiBQ,EAAvB,EACAT,cAA0BxC,YAA1BwC,GACAA,eAA2BxC,YAA3BwC,GAGF,OACE,4CACElB,YAAWI,IACTiB,YADmB,iCAGhBA,YAAgB,aAAD,OAAhB,SADF,IAC0CO,GAHvB,cAIhBP,YAAgB,oBAAD,OAAhB,SAA4Db,IAAXgB,GAJhC,GADvB,GASEF,QAAK,wDAVT,KDbF,O,mCEhBA,e,0OCSA,EAFwBhB,wBAAxB,I,szBCmBA,MAdA,SAASuB,SAAS9B,GAChB,IAAM,EAAN,EAAM,UAAa+B,EAAnB,EAAmBA,SAAnB,gCAEA,OACE,gBAACC,EAAD,SAAyB,CACvBxD,QAAO,CACLuD,eAGF,oB,uYAAA,EAAM9B,YAAWI,IAAWiB,YAAD,gBAN/B,M,o3BCEF,MARA,SAASW,kBAAkBjC,GACnB,IAAEC,EAAR,EAAQA,UAAR,kDAEA,OACE,oB,idAAA,EAAMA,YAAWI,IAAWiB,YAAD,0BAD7B,K,84BC6BF,MA3BA,SAASY,gBAAgBlC,GAA2B,MAC5C,EAAN,EAAM,YAAN,EAAM,QAAsBe,EAA5B,EAA4BA,MAA5B,gDACA,OACE,oB,ycAAA,EACEd,YAAWI,IACTiB,YADmB,wCAIhBA,YAAD,mCAFF,UAEwDR,GAJrC,cAKhBQ,YAAD,oCAHF,WAGyDR,GALtC,cAMhBQ,YAAD,iCAJF,QAIsDR,GANnC,cAOhBQ,YAAD,0CALF,iBAK+DR,GAP5C,cAQhBQ,YAAD,2CANF,kBAMgER,GAR7C,cAUhBQ,YAAD,iCARF,UAQsDP,GAVnC,cAWhBO,YAAD,kCATF,WASuDP,GAXpC,cAYhBO,YAAD,+BAVF,QAUoDP,GAZjC,cAahBO,YAAD,oCAXF,aAWyDP,GAbtC,cAchBO,YAAD,mCAAgE,YAAVP,GAdrC,OAFzB,K,82BCTF,IAAMoB,EAAsB,CAAC,UAAW,UAAW,OAAQ,UAAW,UAAtE,UAEMC,EAAwB,CAAC,SAA/B,YAMA,SAASC,cAAcC,GACrB,OAAOH,WAAP,GAGF,SAASI,gBAAgBrC,GACvB,OAAOkC,WAAP,GAyBF,MAjBA,SAASI,YAAYxC,GACnB,IAAM,EAAN,EAAM,UAAN,IAAmBE,eAAnB,MAAM,SAAN,MAAuCoC,aAAvC,MAA+C,UAA/C,8CACA,OACE,oB,ybAAA,EACErC,YAAWI,IACTiB,YADmB,+BAGhBA,YAAgB,iBAAD,qBAAhB,IACEiB,oBAA4BF,cAAcC,IAJ3B,IAFzB,K,+4BChBF,MANA,SAASG,iBAAiBzC,GAClB,IAAEC,EAAR,EAAQA,UAAR,kDAEA,OAAO,oB,idAAA,EAAMA,YAAWI,IAAWiB,YAAD,qBAAlC,K,o3BCFF,SAASoB,kBAAkB1C,GACnB,IAAEC,EAAR,EAAQA,UAAR,kDAEA,OACE,oB,idAAA,EAAMA,YAAWI,IAAWiB,YAAD,0BAD7B,IAIFoB,kDACA,wB,8yCCsHA,MApBA,SAASC,aAAa3C,GAAwB,MACtC,EAAN,EAAM,UAAN,IAAmB4C,IAAKC,OAAxB,MAAkCC,kBAA5B,MAAN,EAA6DC,EAA7D,EAAmD3C,SAAnD,6CACQ2B,EAAaJ,qBAArB,GAAQI,SAEF3B,EA5FR,SAAS4C,wBAAwB,EAAjC,GAIE,IAAM,EAAN,EAAM,SAAYJ,EAAlB,EAAkBA,IACZK,EAAkC,EAAC,OAAzC,GACMC,EAAoC,EAAC,OAA3C,GACMC,EAAqC,EAAC,OAA5C,GAkCA,OAhCAC,sBAA4BC,YACtBC,YAAYD,EAAhB,KACEJ,QACAA,QAGEC,MAAkBI,YAAYD,EAAlC,KACEF,QACAA,SAGGD,EAAD,IAAmBI,YAAYD,EAAnC,KACEH,QACAA,WAICA,EAAD,IAAoBC,EAAxB,KACED,QACAA,KAAiB,kBAAgB,CAAC9C,WAAUA,KAGzC6C,EAAL,KACEA,QACAA,KACEH,yBAEEA,kBAHJG,QAQF,SAAIlB,EAEAe,gCACGI,EADHJ,GAEGG,EAHL,IAQF,UAAIlB,EAEAe,gCACGG,EADHH,GAEGI,EAHL,KAQGC,EAAL,KACEA,QACAA,KAAkBL,kBAAlBK,OAIAL,gCACGI,EADHJ,GAEGG,EAFHH,GAGGK,EAJL,KA4BiBH,CAAwBD,EAAc,CAAEhB,aAAUa,MAnBrE,SAASW,eAAeX,GACtB,GAAIhD,yBAAJ,GACE,SAGF,GAAI,IAAJ,GAAqB,CACnB,IAAM4D,EAAN,EACA,OAAOV,gDAAP,KAWUS,CAAZ,KAEA,OACE,8CACEtD,YAAWI,IAAWJ,GAAD,mBAClBqB,YAAD,wBAD+B,UACYS,GADxB,cAElBT,YAAD,uBAF+B,SAEWS,GAFvB,cAGlBT,YAAD,4BAH+B,cAGgBS,GAH5B,cAIlBT,YAAD,oCAAoE,sBAAbS,GAJpC,KADvB,GADF,ICxGID,EAAN,EACAA,cACAA,YACAA,QACAA,SACAA,cAEA,Q,sDCfA,SAAS2B,gBACP,OACE,kBAAU1B,WAAS,QAAnB,YACE,gBAAU2B,KAAV,oBACA,gBAAUA,KAAV,qBACA,gBAAUA,KAAV,yBAKN,SAASC,eACP,OACE,kBAAU5B,WAAS,OAAnB,YACE,gBAAU2B,KAAV,oBACA,gBAAUA,KAAV,qBACA,gBAAUA,KAAV,yBAKN,SAASE,oBACP,OACE,kBAAU7B,WAAS,YAAnB,YACE,gBAAU2B,KAAV,oBACA,gBAAUA,KAAV,qBACA,gBAAUA,KAAV,sBACA,gBAAUA,KAAV,0BAKN,SAASG,mBACP,OACE,kBAAU9B,WAAS,YAAnB,YACE,gBAAU2B,KAAV,CAAed,MAAK,CAAE1C,UAAS,YAA/B,mBACA,gBAAUwD,KAAV,CAAed,MAAK,CAAE1C,UAAS,WAAYoC,QAAO,WAAlD,oBACA,gBAAUoB,KAAV,CAAed,MAAK,CAAE1C,UAAS,WAAYoC,QAAO,UAAlD,qBACA,gBAAUoB,KAAV,CAAed,MAAK,CAAE1C,UAAS,YAA/B,yBAKN,SAAS4D,iBACP,OACE,8BACE,iBAAUJ,KAAV,aACE,gBAAUK,QAAV,CAAkBhD,QAAM,SAAxB,uBACA,iBAAUiD,UAAV,aACE,gBAAUC,UAAV,IACA,gBAAUC,IAAV,YACE,cAAC,eAAD,CAAcxF,OAAK,SAErB,gBAAUuF,UAAV,OAEF,iBAAUF,QAAV,CAAkBnD,YAAU,SAASG,QAAM,QAA3C,YACE,cAAC,IAAD,CAAMd,YAAU,iBAAhB,mBACA,cAAC,IAAD,gDAGJ,iBAAUyD,KAAV,aACE,iBAAUK,QAAV,CAAkBnD,YAAU,SAASG,QAAM,MAA3C,YACE,cAAC,IAAD,CAAMd,YAAU,iBAAhB,oBACA,cAAC,IAAD,2BAEF,iBAAU+D,UAAV,aACE,gBAAUC,UAAV,IACA,gBAAUC,IAAV,CAAc5B,QAAM,UAApB,WACE,cAAC,eAAD,CAAc5D,OAAK,SAErB,gBAAUuF,UAAV,OAEF,gBAAUF,QAAV,CAAkBhD,QAAM,SAAxB,2BAEF,iBAAU2C,KAAV,aACE,gBAAUK,QAAV,IACA,iBAAUC,UAAV,aACE,gBAAUC,UAAV,IACA,gBAAUC,IAAV,CAAchE,UAAQ,WAAWoC,QAAM,UAAvC,WACE,cAAC,cAAD,CAAa5D,OAAK,SAEpB,gBAAUuF,UAAV,OAEF,iBAAUF,QAAV,CAAkBnD,YAAU,SAASG,QAAM,QAA3C,YACE,cAAC,IAAD,CAAMd,YAAU,iBAAhB,qBACA,cAAC,IAAD,4CAGJ,iBAAUyD,KAAV,aACE,iBAAUK,QAAV,CAAkBnD,YAAU,SAASG,QAAM,MAA3C,YACE,cAAC,IAAD,CAAMd,YAAU,iBAAhB,sBACA,cAAC,IAAD,6BAEF,iBAAU+D,UAAV,aACE,gBAAUC,UAAV,IACA,gBAAUC,IAAV,CAAc5B,QAAM,SAApB,WACE,cAAC,gBAAD,CAAe5D,OAAK,SAEtB,gBAAUuF,UAAV,aAOK,SAASE,eACtB,OACE,eAAC,IAAD,CAAMhE,QAAM,eAAeF,YAAU,gBAArC,YACE,eAAC,IAAD,CAAOE,QAAM,OAAb,YACE,cAAC,IAAD,CAAMoB,QAAO,CAAE3C,QAAO,sBACtB,cAAC,IAAD,CAAMqB,YAAWK,YAAoB,kBAArC,WACE,cAACmD,cAAD,SAGJ,eAAC,IAAD,CAAOtD,QAAM,OAAb,YACE,cAAC,IAAD,CAAMF,YAAWK,YAAoB,kBAArC,WACE,cAACqD,aAAD,MAEF,cAAC,IAAD,CAAM1D,YAAWK,YAAoB,uBAEvC,cAAC,IAAD,CAAOH,QAAM,OAAb,WACE,cAAC,IAAD,CAAMoB,QAAO,CAAE3C,QAAO,qBAAtB,WACE,cAACgF,kBAAD,QAGJ,cAAC,IAAD,CAAOzD,QAAM,OAAb,WACE,cAAC,IAAD,CAAMoB,QAAO,CAAE3C,QAAO,qBAAtB,WACE,cAACiF,iBAAD,QAGJ,cAAC,IAAD,CAAO1D,QAAM,QAAb,WACE,cAAC,IAAD,CAAMoB,QAAO,CAAE3C,QAAO,qBAAtB,WACE,cAACkF,eAAD","file":"chunk/74.6bbbada5.js","sourcesContent":["import { getSystemInfoSync } from \"@tarojs/taro\"\r\nimport * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertRpx(value: string) {\r\n  value = value.replace(/rpx/g, \"\")\r\n  const { windowWidth } = getSystemInfoSync()\r\n  const pixelRatio = 750 / windowWidth\r\n  return +value / pixelRatio\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"rpx\")) {\r\n    return convertRpx(value)\r\n  }\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { isValidElement, JSXElementConstructor, ReactElement, ReactNode } from \"react\"\r\n\r\nexport function isNoneElement(node: ReactNode) {\r\n  return _.isUndefined(node) || _.isNull(node)\r\n}\r\n\r\nexport function isTextElement(node: ReactNode) {\r\n  return _.isNumber(node) || _.isString(node)\r\n}\r\n\r\nexport function isObjectElement(node?: ReactNode) {\r\n  return !isValidElement(node) && _.isObject(node) && !_.isArray(node)\r\n}\r\n\r\nexport function isElementOf(node?: ReactNode, type?: JSXElementConstructor<any>) {\r\n  if (isValidElement(node)) {\r\n    const element = node as ReactElement\r\n    if (element.type === type) {\r\n      return true\r\n    }\r\n\r\n    const displayName = _.get(element.type, \"displayName\")\r\n    if (\r\n      _.isFunction(element.type) &&\r\n      !_.isEmpty(displayName) &&\r\n      _.endsWith(displayName, _.get(type, \"displayName\"))\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { createContext } from \"react\"\r\n\r\ninterface FlexContextValue {\r\n  gutter: [number | undefined, number | undefined]\r\n}\r\n\r\nconst FlexContext = createContext<FlexContextValue>({\r\n  gutter: [undefined, undefined],\r\n})\r\n\r\nexport default FlexContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, forwardRef, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\nimport { FlexAlign, FlexDirection, FlexGutter, FlexJustify, FlexWrap } from \"./flex.shared\"\r\n\r\nfunction useFlexGutter(gutter?: FlexGutter): [undefined | number, undefined | number] {\r\n  return useMemo(() => {\r\n    if (gutter === undefined) {\r\n      return [undefined, undefined]\r\n    }\r\n\r\n    if (_.isNumber(gutter)) {\r\n      return [gutter, gutter]\r\n    }\r\n\r\n    if (_.isString(gutter)) {\r\n      const gutterNumber = _.toNumber(gutter)\r\n      return [gutterNumber, gutterNumber]\r\n    }\r\n\r\n    if (_.isArray(gutter)) {\r\n      const [horizontalGutter, verticalGutter] = gutter\r\n      return [_.toNumber(horizontalGutter), _.toNumber(verticalGutter)]\r\n    }\r\n\r\n    return [0, 0]\r\n  }, [gutter])\r\n}\r\n\r\nexport interface FlexProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: FlexDirection\r\n  wrap?: FlexWrap\r\n  justify?: FlexJustify\r\n  align?: FlexAlign\r\n  gutter?: FlexGutter\r\n  children?: ReactNode\r\n}\r\n\r\nconst Flex = forwardRef((props: FlexProps, ref) => {\r\n  const {\r\n    className,\r\n    style,\r\n    gutter: gutterProp,\r\n    direction = \"row\",\r\n    wrap = \"nowrap\",\r\n    justify = \"start\",\r\n    align = \"start\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const gutter = useFlexGutter(gutterProp)\r\n  const [horizontalGutter] = gutter\r\n\r\n  const gutterStyle = useMemo<CSSProperties>(() => {\r\n    const gutterStyle: CSSProperties = {}\r\n    if (horizontalGutter) {\r\n      const averagePadding = _.toNumber(horizontalGutter) / 2\r\n      gutterStyle.marginLeft = addUnitPx(-averagePadding)\r\n      gutterStyle.marginRight = addUnitPx(-averagePadding)\r\n    }\r\n    return {}\r\n  }, [horizontalGutter])\r\n\r\n  return (\r\n    <View\r\n      ref={ref}\r\n      className={classNames(\r\n        prefixClassname(\"flex\"),\r\n        {\r\n          // Set flex style\r\n          [prefixClassname(\"flex--row\")]: direction === \"row\",\r\n          [prefixClassname(\"flex--row-reverse\")]: direction === \"row-reverse\",\r\n          [prefixClassname(\"flex--column\")]: direction === \"column\",\r\n          [prefixClassname(\"flex--column-reverse\")]: direction === \"column-reverse\",\r\n          // Set flex-wrap style\r\n          [prefixClassname(\"flex--nowrap\")]: wrap === \"nowrap\",\r\n          [prefixClassname(\"flex--wrap\")]: wrap === \"wrap\",\r\n          [prefixClassname(\"flex--wrap-reverse\")]: wrap === \"wrap-reverse\",\r\n          // Set justify style\r\n          [prefixClassname(\"flex--justify-start\")]: justify === \"start\",\r\n          [prefixClassname(\"flex--justify-center\")]: justify === \"center\",\r\n          [prefixClassname(\"flex--justify-end\")]: justify === \"end\",\r\n          [prefixClassname(\"flex--justify-space-around\")]: justify === \"space-around\",\r\n          [prefixClassname(\"flex--justify-space-between\")]: justify === \"space-between\",\r\n          // Set align style\r\n          [prefixClassname(\"flex--align-start\")]: align === \"start\",\r\n          [prefixClassname(\"flex--align-center\")]: align === \"center\",\r\n          [prefixClassname(\"flex--align-end\")]: align === \"end\",\r\n          [prefixClassname(\"flex--align-baseline\")]: align === \"baseline\",\r\n          [prefixClassname(\"flex--align-stretch\")]: align === \"stretch\",\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    >\r\n      <FlexContext.Provider\r\n        value={{\r\n          gutter,\r\n        }}\r\n        children={children}\r\n      />\r\n    </View>\r\n  )\r\n})\r\n\r\nexport default Flex\r\n","import { ForwardRefExoticComponent } from \"react\"\r\nimport FlexComponent, { FlexProps } from \"./flex\"\r\nimport FlexItem from \"./flex-item\"\r\n\r\nexport type { FlexProps } from \"./flex\"\r\nexport type { FlexAlign, FlexDirection, FlexJustify } from \"./flex.shared\"\r\nexport type { FlexItemProps } from \"./flex-item\"\r\n\r\ninterface FlexInterface extends ForwardRefExoticComponent<FlexProps> {\r\n  Item: typeof FlexItem\r\n}\r\n\r\nconst Flex = FlexComponent as FlexInterface\r\n\r\nFlex.Item = FlexItem\r\n\r\nexport default Flex\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\n\r\nexport interface FlexItemProps extends ViewProps {\r\n  style?: CSSProperties\r\n  span?: number\r\n  offset?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function FlexItem(props: FlexItemProps) {\r\n  const { className, style, span, offset, ...restProps } = props\r\n  const { gutter: gutters } = useContext(FlexContext)\r\n  const [horizontalGutter] = gutters\r\n\r\n  // Horizontal gutter use padding\r\n  const gutterStyle: React.CSSProperties = {}\r\n  if (horizontalGutter) {\r\n    const averagePadding = horizontalGutter / 2\r\n    gutterStyle.paddingLeft = addUnitPx(averagePadding)\r\n    gutterStyle.paddingRight = addUnitPx(averagePadding)\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex-item\"),\r\n        {\r\n          [prefixClassname(`flex-item-${span}`)]: span !== undefined,\r\n          [prefixClassname(`flex-item-offset-${offset}`)]: offset !== undefined,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\nimport { TimelinePosition } from \"./timeline.shared\"\r\n\r\ninterface TimelineContextValue {\r\n  position?: TimelinePosition\r\n}\r\n\r\nconst TimelineContext = createContext<TimelineContextValue>({})\r\n\r\nexport default TimelineContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { PropsWithChildren } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TimelineContext from \"./timeline.context\"\r\nimport { TimelinePosition } from \"./timeline.shared\"\r\n\r\nexport interface TimelineProps extends PropsWithChildren<ViewProps> {\r\n  position?: TimelinePosition\r\n}\r\nfunction Timeline(props: TimelineProps) {\r\n  const { className, position, ...restProps } = props\r\n\r\n  return (\r\n    <TimelineContext.Provider\r\n      value={{\r\n        position,\r\n      }}\r\n    >\r\n      <View className={classNames(prefixClassname(\"timeline\"), className)} {...restProps} />\r\n    </TimelineContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Timeline\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { PropsWithChildren } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface TimelineConnectorProps extends PropsWithChildren<ViewProps> {}\r\n\r\nfunction TimelineConnector(props: TimelineConnectorProps) {\r\n  const { className, ...restProps } = props\r\n\r\n  return (\r\n    <View className={classNames(prefixClassname(\"timeline-connector\"), className)} {...restProps} />\r\n  )\r\n}\r\n\r\nexport default TimelineConnector\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, PropsWithChildren } from \"react\"\r\nimport Flex, { FlexAlign, FlexDirection, FlexJustify } from \"../flex\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface TimeLineContentProps extends PropsWithChildren<ViewProps> {\r\n  style?: CSSProperties\r\n  direction?: FlexDirection\r\n  align?: FlexAlign\r\n  justify?: FlexJustify\r\n}\r\n\r\nfunction TimeLineContent(props: TimeLineContentProps) {\r\n  const { className, justify, align, ...restProps } = props\r\n  return (\r\n    <Flex\r\n      className={classNames(\r\n        prefixClassname(\"timeline-content\"),\r\n        {\r\n          // Set justify style\r\n          [prefixClassname(\"timeline-content--justify-start\")]: justify === \"start\",\r\n          [prefixClassname(\"timeline-content--justify-center\")]: justify === \"center\",\r\n          [prefixClassname(\"timeline-content--justify-end\")]: justify === \"end\",\r\n          [prefixClassname(\"timeline-content--justify-space-around\")]: justify === \"space-around\",\r\n          [prefixClassname(\"timeline-content--justify-space-between\")]: justify === \"space-between\",\r\n          // Set align style\r\n          [prefixClassname(\"timeline-content--align-start\")]: align === \"start\",\r\n          [prefixClassname(\"timeline-content--align-center\")]: align === \"center\",\r\n          [prefixClassname(\"timeline-content--align-end\")]: align === \"end\",\r\n          [prefixClassname(\"timeline-content--align-baseline\")]: align === \"baseline\",\r\n          [prefixClassname(\"timeline-content--align-stretch\")]: align === \"stretch\",\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TimeLineContent\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { PropsWithChildren } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nconst TIMELINE_DOT_COLORS = [\"default\", \"primary\", \"info\", \"success\", \"warning\", \"danger\"]\r\n\r\nconst TIMELINE_DOT_VARIANTS = [\"filled\", \"outlined\"]\r\n\r\ntype TimelineDotColor = \"default\" | \"primary\" | \"info\" | \"success\" | \"warning\" | \"danger\"\r\n\r\ntype TimelineDotVariant = \"filled\" | \"outlined\"\r\n\r\nfunction isPresetColor(color: TimelineDotColor) {\r\n  return TIMELINE_DOT_COLORS.includes(color)\r\n}\r\n\r\nfunction isPresetVariant(variant: TimelineDotVariant) {\r\n  return TIMELINE_DOT_VARIANTS.includes(variant)\r\n}\r\n\r\nexport interface TimelineDotProps extends PropsWithChildren<ViewProps> {\r\n  variant?: TimelineDotVariant\r\n  color?: TimelineDotColor\r\n}\r\n\r\nfunction TimelineDot(props: TimelineDotProps) {\r\n  const { className, variant = \"filled\", color = \"default\", ...restProps } = props\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"timeline-dot\"),\r\n        {\r\n          [prefixClassname(`timeline-dot--${variant}-${color}`)]:\r\n            isPresetVariant(variant) && isPresetColor(color),\r\n        },\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TimelineDot\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { PropsWithChildren } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface TimeLineItemBaseProps extends PropsWithChildren<ViewProps> {}\r\nfunction TimeLineItemBase(props: TimeLineItemBaseProps) {\r\n  const { className, ...restProps } = props\r\n\r\n  return <View className={classNames(prefixClassname(\"timeline-item\"), className)} {...restProps} />\r\n}\r\n\r\nexport default TimeLineItemBase\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { PropsWithChildren } from \"react\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface TimeLineSeparatorProps extends PropsWithChildren<ViewProps> {}\r\n\r\nfunction TimeLineSeparator(props: TimeLineSeparatorProps) {\r\n  const { className, ...restProps } = props\r\n\r\n  return (\r\n    <View className={classNames(prefixClassname(\"timeline-separator\"), className)} {...restProps} />\r\n  )\r\n}\r\nTimeLineSeparator.displayName = \"TimeLineSeparator\"\r\nexport default TimeLineSeparator\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  isValidElement,\r\n  PropsWithChildren,\r\n  ReactElement,\r\n  ReactNode,\r\n  useContext,\r\n} from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { isElementOf } from \"../utils/validate\"\r\nimport TimelineConnector from \"./timeline-connector\"\r\nimport TimelineContent from \"./timeline-content\"\r\nimport TimelineDot, { TimelineDotProps } from \"./timeline-dot\"\r\nimport TimelineItemBase from \"./timeline-item-base\"\r\nimport TimelineSeparator from \"./timeline-separator\"\r\nimport TimelineContext from \"./timeline.context\"\r\nimport { TimelinePosition } from \"./timeline.shared\"\r\n\r\ninterface UseTimelineItemChildrenOptions {\r\n  position?: TimelinePosition\r\n  dot?: ReactNode\r\n}\r\n\r\nfunction useTimelineItemChildren(\r\n  children: ReactNode,\r\n  options: UseTimelineItemChildrenOptions,\r\n): ReactNode {\r\n  const { position, dot } = options\r\n  const separator: [boolean, ReactNode] = [false, undefined]\r\n  const leftContent: [boolean, ReactNode] = [false, undefined]\r\n  const rightContent: [boolean, ReactNode] = [false, undefined]\r\n\r\n  Children.forEach(children, (child) => {\r\n    if (isElementOf(child, TimelineSeparator)) {\r\n      separator[0] = true\r\n      separator[1] = child\r\n    }\r\n\r\n    if (leftContent[0] && isElementOf(child, TimelineContent)) {\r\n      rightContent[0] = true\r\n      rightContent[1] = child\r\n    }\r\n\r\n    if (!leftContent[0] && isElementOf(child, TimelineContent)) {\r\n      leftContent[0] = true\r\n      leftContent[1] = child\r\n    }\r\n  })\r\n\r\n  if (!leftContent[0] && !rightContent[0]) {\r\n    leftContent[0] = true\r\n    leftContent[1] = <TimelineContent children={children} />\r\n  }\r\n\r\n  if (!separator[0]) {\r\n    separator[0] = true\r\n    separator[1] = (\r\n      <TimelineSeparator>\r\n        {dot}\r\n        <TimelineConnector />\r\n      </TimelineSeparator>\r\n    )\r\n  }\r\n\r\n  if (position === \"left\") {\r\n    return (\r\n      <>\r\n        {leftContent[1]}\r\n        {separator[1]}\r\n      </>\r\n    )\r\n  }\r\n\r\n  if (position === \"right\") {\r\n    return (\r\n      <>\r\n        {separator[1]}\r\n        {leftContent[1]}\r\n      </>\r\n    )\r\n  }\r\n\r\n  if (!rightContent[0]) {\r\n    rightContent[0] = true\r\n    rightContent[1] = <TimelineContent />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {leftContent[1]}\r\n      {separator[1]}\r\n      {rightContent[1]}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction useTimelineDot(dot?: ReactNode | TimelineDotProps): ReactNode {\r\n  if (isValidElement(dot)) {\r\n    return dot as ReactElement\r\n  }\r\n\r\n  if (_.isObject(dot)) {\r\n    const dotProps = dot as TimelineDotProps\r\n    return <TimelineDot {...dotProps} />\r\n  }\r\n}\r\n\r\nexport interface TimelineItemProps extends PropsWithChildren<ViewProps> {\r\n  dot?: ReactNode | TimelineDotProps\r\n}\r\n\r\nfunction TimelineItem(props: TimelineItemProps) {\r\n  const { className, dot: dotProp = <TimelineDot />, children: childrenProp, ...restProps } = props\r\n  const { position } = useContext(TimelineContext)\r\n  const dot = useTimelineDot(dotProp)\r\n  const children = useTimelineItemChildren(childrenProp, { position, dot })\r\n  return (\r\n    <TimelineItemBase\r\n      className={classNames(className, {\r\n        [prefixClassname(\"timeline-item--right\")]: position === \"right\",\r\n        [prefixClassname(\"timeline-item--left\")]: position === \"left\",\r\n        [prefixClassname(\"timeline-item--alternate\")]: position === \"alternate\",\r\n        [prefixClassname(\"timeline-item--alternate-reverse\")]: position === \"alternate-reverse\",\r\n      })}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </TimelineItemBase>\r\n  )\r\n}\r\n\r\nexport default TimelineItem\r\n","import { FunctionComponent } from \"react\"\r\nimport TimelineComponent, { TimelineProps } from \"./timeline\"\r\nimport TimelineConnector from \"./timeline-connector\"\r\nimport TimelineContent from \"./timeline-content\"\r\nimport TimelineDot from \"./timeline-dot\"\r\nimport TimelineItem from \"./timeline-item\"\r\nimport TimelineSeparator from \"./timeline-separator\"\r\n\r\ninterface TimelineInterface extends FunctionComponent<TimelineProps> {\r\n  Connector: typeof TimelineConnector\r\n  Content: typeof TimelineContent\r\n  Dot: typeof TimelineDot\r\n  Item: typeof TimelineItem\r\n  Separator: typeof TimelineSeparator\r\n}\r\n\r\nconst Timeline = TimelineComponent as TimelineInterface\r\nTimeline.Connector = TimelineConnector\r\nTimeline.Content = TimelineContent\r\nTimeline.Dot = TimelineDot\r\nTimeline.Item = TimelineItem\r\nTimeline.Separator = TimelineSeparator\r\n\r\nexport default Timeline\r\n","import { Timeline } from \"@taroify/core\"\r\nimport { FireOutlined, GemOutlined, SmileOutlined, StarOutlined } from \"@taroify/icons\"\r\nimport { View } from \"@tarojs/components\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport { demoPrefixClassname } from \"../../../styles/prefix\"\r\nimport \"./index.scss\"\r\n\r\nfunction RightTimeline() {\r\n  return (\r\n    <Timeline position=\"right\">\r\n      <Timeline.Item>Eat</Timeline.Item>\r\n      <Timeline.Item>Code</Timeline.Item>\r\n      <Timeline.Item>Sleep</Timeline.Item>\r\n    </Timeline>\r\n  )\r\n}\r\n\r\nfunction LeftTimeline() {\r\n  return (\r\n    <Timeline position=\"left\">\r\n      <Timeline.Item>Eat</Timeline.Item>\r\n      <Timeline.Item>Code</Timeline.Item>\r\n      <Timeline.Item>Sleep</Timeline.Item>\r\n    </Timeline>\r\n  )\r\n}\r\n\r\nfunction AlternateTimeline() {\r\n  return (\r\n    <Timeline position=\"alternate\">\r\n      <Timeline.Item>Eat</Timeline.Item>\r\n      <Timeline.Item>Code</Timeline.Item>\r\n      <Timeline.Item>Sleep</Timeline.Item>\r\n      <Timeline.Item>Repeat</Timeline.Item>\r\n    </Timeline>\r\n  )\r\n}\r\n\r\nfunction OutlinedTimeline() {\r\n  return (\r\n    <Timeline position=\"alternate\">\r\n      <Timeline.Item dot={{ variant: \"outlined\" }}>Eat</Timeline.Item>\r\n      <Timeline.Item dot={{ variant: \"outlined\", color: \"primary\" }}>Code</Timeline.Item>\r\n      <Timeline.Item dot={{ variant: \"outlined\", color: \"danger\" }}>Sleep</Timeline.Item>\r\n      <Timeline.Item dot={{ variant: \"outlined\" }}>Repeat</Timeline.Item>\r\n    </Timeline>\r\n  )\r\n}\r\n\r\nfunction CustomTimeline() {\r\n  return (\r\n    <Timeline>\r\n      <Timeline.Item>\r\n        <Timeline.Content align=\"center\">9:30 am</Timeline.Content>\r\n        <Timeline.Separator>\r\n          <Timeline.Connector />\r\n          <Timeline.Dot>\r\n            <FireOutlined size=\"24\" />\r\n          </Timeline.Dot>\r\n          <Timeline.Connector />\r\n        </Timeline.Separator>\r\n        <Timeline.Content direction=\"column\" align=\"start\">\r\n          <View className=\"timeline-title\">Eat</View>\r\n          <View>Because you need strength</View>\r\n        </Timeline.Content>\r\n      </Timeline.Item>\r\n      <Timeline.Item>\r\n        <Timeline.Content direction=\"column\" align=\"end\">\r\n          <View className=\"timeline-title\">Code</View>\r\n          <View>awesome</View>\r\n        </Timeline.Content>\r\n        <Timeline.Separator>\r\n          <Timeline.Connector />\r\n          <Timeline.Dot color=\"primary\">\r\n            <StarOutlined size=\"24\" />\r\n          </Timeline.Dot>\r\n          <Timeline.Connector />\r\n        </Timeline.Separator>\r\n        <Timeline.Content align=\"center\">10:00 am</Timeline.Content>\r\n      </Timeline.Item>\r\n      <Timeline.Item>\r\n        <Timeline.Content />\r\n        <Timeline.Separator>\r\n          <Timeline.Connector />\r\n          <Timeline.Dot variant=\"outlined\" color=\"primary\">\r\n            <GemOutlined size=\"24\" />\r\n          </Timeline.Dot>\r\n          <Timeline.Connector />\r\n        </Timeline.Separator>\r\n        <Timeline.Content direction=\"column\" align=\"start\">\r\n          <View className=\"timeline-title\">Sleep</View>\r\n          <View>Because you need rest</View>\r\n        </Timeline.Content>\r\n      </Timeline.Item>\r\n      <Timeline.Item>\r\n        <Timeline.Content direction=\"column\" align=\"end\">\r\n          <View className=\"timeline-title\">Repeat</View>\r\n          <View>you love!</View>\r\n        </Timeline.Content>\r\n        <Timeline.Separator>\r\n          <Timeline.Connector />\r\n          <Timeline.Dot color=\"danger\">\r\n            <SmileOutlined size=\"24\" />\r\n          </Timeline.Dot>\r\n          <Timeline.Connector />\r\n        </Timeline.Separator>\r\n      </Timeline.Item>\r\n    </Timeline>\r\n  )\r\n}\r\n\r\nexport default function TimelineDemo() {\r\n  return (\r\n    <Page title=\"Timeline 时间轴\" className=\"timeline-demo\">\r\n      <Block title=\"基础用法\">\r\n        <View style={{ width: \"calc(50% - 12px)\" }} />\r\n        <View className={demoPrefixClassname(\"timeline-block\")}>\r\n          <RightTimeline />\r\n        </View>\r\n      </Block>\r\n      <Block title=\"左边用法\">\r\n        <View className={demoPrefixClassname(\"timeline-block\")}>\r\n          <LeftTimeline />\r\n        </View>\r\n        <View className={demoPrefixClassname(\"timeline-block\")} />\r\n      </Block>\r\n      <Block title=\"交替用法\">\r\n        <View style={{ width: \"calc(100% - 12px)\" }}>\r\n          <AlternateTimeline />\r\n        </View>\r\n      </Block>\r\n      <Block title=\"描边用法\">\r\n        <View style={{ width: \"calc(100% - 12px)\" }}>\r\n          <OutlinedTimeline />\r\n        </View>\r\n      </Block>\r\n      <Block title=\"自定义用法\">\r\n        <View style={{ width: \"calc(100% - 12px)\" }}>\r\n          <CustomTimeline />\r\n        </View>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}