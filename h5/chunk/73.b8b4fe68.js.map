{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/image/image.tsx","webpack:///../../../../packages/core/src/image/style/index.ts","webpack:///../../../../packages/core/src/flex/style/index.ts","webpack:///../../../../packages/core/src/flex/flex.context.ts","webpack:///../../../../packages/core/src/flex/index.ts","webpack:///../../../../packages/core/src/flex/flex.tsx","webpack:///../../../../packages/core/src/flex/flex-item.tsx","webpack:///./src/pages/basic/image/index.tsx"],"names":["value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","Block","props","className","variant","title","children","classNames","demoPrefixClassname","ImagePlaceholder","prefix","React","prefixClassname","mode","round","lazyLoad","placeholder","fallback","taroMode","toTaroMode","useState","useEffect","setLoading","failed","src","loading","imgProps","alt","onError","setFailed","onLoad","createContext","gutter","undefined","Flex","direction","wrap","justify","align","useFlexGutter","useMemo","gutterNumber","gutterStyle","averagePadding","style","FlexContext","offset","gutters","useContext","horizontalGutter","span","ImageDemo","imageUrl","modes","map","Item"],"mappings":"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","file":"chunk/73.b8b4fe68.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport type ImageMode =\r\n  | \"scaleToFill\"\r\n  | \"aspectFit\"\r\n  | \"aspectFill\"\r\n  | \"widthFix\"\r\n  | \"heightFix\"\r\n  | \"top\"\r\n  | \"bottom\"\r\n  | \"center\"\r\n  | \"left\"\r\n  | \"right\"\r\n  | \"topLeft\"\r\n  | \"topRight\"\r\n  | \"bottomLeft\"\r\n  | \"bottomRight\"\r\n\r\nfunction toTaroMode(mode: ImageMode): string {\r\n  if (mode === \"topLeft\") {\r\n    return \"top left\"\r\n  }\r\n  if (mode === \"topRight\") {\r\n    return \"top right\"\r\n  }\r\n  if (mode === \"bottomLeft\") {\r\n    return \"bottom left\"\r\n  }\r\n  if (mode === \"bottomRight\") {\r\n    return \"bottom right\"\r\n  }\r\n  return mode\r\n}\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ImagePlaceholder({ prefix = \"placeholder\", children }: ImagePlaceholderProps) {\r\n  // Icon Element\r\n  if (React.isValidElement(children)) {\r\n    return (\r\n      <>\r\n        {React.cloneElement(children as ReactElement, {\r\n          className: classNames(\r\n            prefixClassname(`image__${prefix}`),\r\n            prefixClassname(`image__${prefix}-icon`),\r\n          ),\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n\r\ninterface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round = false,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = toTaroMode(mode)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n  }, [src])\r\n\r\n  function handleLoad() {\r\n    setLoading(false)\r\n  }\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--round\")]: round,\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onError={handleError}\r\n          onLoad={handleLoad}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface FlexContextValue {\r\n  gutter: [number | undefined, number | undefined]\r\n}\r\n\r\nconst FlexContext = createContext<FlexContextValue>({\r\n  gutter: [undefined, undefined],\r\n})\r\n\r\nexport default FlexContext\r\n","import FlexComponent, { FlexProps } from \"./flex\"\r\nimport FlexItem from \"./flex-item\"\r\n\r\nexport type { FlexProps } from \"./flex\"\r\nexport type { FlexItemProps } from \"./flex-item\"\r\n\r\ninterface FlexInterface {\r\n  (props: FlexProps): JSX.Element\r\n\r\n  Item: typeof FlexItem\r\n}\r\n\r\nconst Flex = FlexComponent as FlexInterface\r\n\r\nFlex.Item = FlexItem\r\n\r\nexport default Flex\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\nimport { FlexAlign, FlexDirection, FlexGutter, FlexJustify, FlexWrap } from \"./flex.shared\"\r\n\r\nfunction useFlexGutter(gutter?: FlexGutter): [undefined | number, undefined | number] {\r\n  return useMemo(() => {\r\n    if (gutter === undefined) {\r\n      return [undefined, undefined]\r\n    }\r\n\r\n    if (_.isNumber(gutter)) {\r\n      return [gutter, gutter]\r\n    }\r\n\r\n    if (_.isString(gutter)) {\r\n      const gutterNumber = _.toNumber(gutter)\r\n      return [gutterNumber, gutterNumber]\r\n    }\r\n\r\n    if (_.isArray(gutter)) {\r\n      const [horizontalGutter, verticalGutter] = gutter\r\n      return [_.toNumber(horizontalGutter), _.toNumber(verticalGutter)]\r\n    }\r\n\r\n    return [0, 0]\r\n  }, [gutter])\r\n}\r\n\r\nexport interface FlexProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: FlexDirection\r\n  wrap?: FlexWrap\r\n  justify?: FlexJustify\r\n  align?: FlexAlign\r\n  gutter?: FlexGutter\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Flex(props: FlexProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    gutter: gutterProp,\r\n    direction = \"row\",\r\n    wrap = \"nowrap\",\r\n    justify = \"start\",\r\n    align = \"start\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const gutter = useFlexGutter(gutterProp)\r\n  const [horizontalGutter] = gutter\r\n\r\n  const gutterStyle = useMemo<CSSProperties>(() => {\r\n    const gutterStyle: CSSProperties = {}\r\n    if (horizontalGutter) {\r\n      const averagePadding = _.toNumber(horizontalGutter) / 2\r\n      gutterStyle.marginLeft = addUnitPx(-averagePadding)\r\n      gutterStyle.marginRight = addUnitPx(-averagePadding)\r\n    }\r\n    return {}\r\n  }, [horizontalGutter])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex\"),\r\n        {\r\n          // Set flex style\r\n          [prefixClassname(\"flex--row\")]: direction === \"row\",\r\n          [prefixClassname(\"flex--row-reverse\")]: direction === \"row-reverse\",\r\n          [prefixClassname(\"flex--column\")]: direction === \"column\",\r\n          [prefixClassname(\"flex--column-reverse\")]: direction === \"column-reverse\",\r\n          // Set flex-wrap style\r\n          [prefixClassname(\"flex--nowrap\")]: wrap === \"nowrap\",\r\n          [prefixClassname(\"flex--wrap\")]: wrap === \"wrap\",\r\n          [prefixClassname(\"flex--wrap-reverse\")]: wrap === \"wrap-reverse\",\r\n          // Set justify style\r\n          [prefixClassname(\"flex--justify-start\")]: justify === \"start\",\r\n          [prefixClassname(\"flex--justify-center\")]: justify === \"center\",\r\n          [prefixClassname(\"flex--justify-end\")]: justify === \"end\",\r\n          [prefixClassname(\"flex--justify-space-around\")]: justify === \"space-around\",\r\n          [prefixClassname(\"flex--justify-space-between\")]: justify === \"space-between\",\r\n          // Set align style\r\n          [prefixClassname(\"flex--align-start\")]: align === \"start\",\r\n          [prefixClassname(\"flex--align-center\")]: align === \"center\",\r\n          [prefixClassname(\"flex--align-end\")]: align === \"end\",\r\n          [prefixClassname(\"flex--align-baseline\")]: align === \"baseline\",\r\n          [prefixClassname(\"flex--align-stretch\")]: align === \"stretch\",\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    >\r\n      <FlexContext.Provider\r\n        value={{\r\n          gutter,\r\n        }}\r\n        children={children}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\n\r\nexport interface FlexItemProps extends ViewProps {\r\n  style?: CSSProperties\r\n  span?: number\r\n  offset?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function FlexItem(props: FlexItemProps) {\r\n  const { className, style, span, offset, ...restProps } = props\r\n  const { gutter: gutters } = useContext(FlexContext)\r\n  const [horizontalGutter] = gutters\r\n\r\n  // Horizontal gutter use padding\r\n  const gutterStyle: React.CSSProperties = {}\r\n  if (horizontalGutter) {\r\n    const averagePadding = horizontalGutter / 2\r\n    gutterStyle.paddingLeft = addUnitPx(averagePadding)\r\n    gutterStyle.paddingRight = addUnitPx(averagePadding)\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex-item\"),\r\n        {\r\n          [prefixClassname(`flex-item-${span}`)]: span !== undefined,\r\n          [prefixClassname(`flex-item-offset-${offset}`)]: offset !== undefined,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import { Flex, Image } from \"@taroify/core\"\r\nimport { ImageMode } from \"@taroify/core/image\"\r\nimport { Photo, PhotoFail } from \"@taroify/icons\"\r\nimport { Text } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nexport default function ImageDemo() {\r\n  const imageUrl = \"https://img01.yzcdn.cn/vant/cat.jpeg\"\r\n\r\n  const modes: ImageMode[] = [\r\n    \"scaleToFill\",\r\n    \"aspectFit\",\r\n    \"aspectFill\",\r\n    \"widthFix\",\r\n    \"heightFix\",\r\n    \"top\",\r\n    \"bottom\",\r\n    \"center\",\r\n    \"left\",\r\n    \"right\",\r\n    \"topLeft\",\r\n    \"topRight\",\r\n    \"bottomLeft\",\r\n    \"bottomRight\",\r\n  ]\r\n\r\n  return (\r\n    <Page title=\"Image 图片\" className=\"image-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Image className=\"basic-image\" src={imageUrl} />\r\n      </Block>\r\n      <Block title=\"填充模式\">\r\n        <Flex wrap=\"wrap\" gutter={20}>\r\n          {modes.map((mode) => (\r\n            <Flex.Item span={8} key={mode}>\r\n              <Image mode={mode} src={imageUrl} />\r\n              <Text className=\"text\">{mode}</Text>\r\n            </Flex.Item>\r\n          ))}\r\n        </Flex>\r\n      </Block>\r\n      <Block title=\"圆形图片\">\r\n        <Flex wrap=\"wrap\" gutter={20}>\r\n          {modes.map((mode) => (\r\n            <Flex.Item span={8} key={mode}>\r\n              <Image mode={mode} src={imageUrl} round />\r\n              <Text className=\"text\">{mode}</Text>\r\n            </Flex.Item>\r\n          ))}\r\n        </Flex>\r\n      </Block>\r\n      <Block title=\"加载中提示\">\r\n        <Flex wrap=\"wrap\" gutter={20}>\r\n          <Flex.Item span={8}>\r\n            <Image placeholder={<Photo />} />\r\n            <Text className=\"text\">默认提示</Text>\r\n          </Flex.Item>\r\n          <Flex.Item span={8}>\r\n            <Image placeholder=\"加载中...\" />\r\n            <Text className=\"text\">自定义提示</Text>\r\n          </Flex.Item>\r\n        </Flex>\r\n      </Block>\r\n      <Block title=\"加载失败提示\">\r\n        <Flex wrap=\"wrap\" gutter={20}>\r\n          <Flex.Item span={8}>\r\n            <Image src=\"error\" fallback={<PhotoFail />} />\r\n            <Text className=\"text\">默认提示</Text>\r\n          </Flex.Item>\r\n          <Flex.Item span={8}>\r\n            <Image src=\"error\" fallback=\"加载失败\" />\r\n            <Text className=\"text\">自定义提示</Text>\r\n          </Flex.Item>\r\n        </Flex>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}