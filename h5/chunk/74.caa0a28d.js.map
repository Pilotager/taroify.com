{"version":3,"sources":["webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/utils/state.ts","webpack:///../../../../packages/core/src/utils/base.ts","webpack:///../../../../packages/core/src/hooks/use-mounted.ts","webpack:///../../../../packages/core/src/hooks/use-rendered-effect.tsx","webpack:///../../../../packages/core/src/hooks/use-placeholder.tsx","webpack:///../../../../packages/core/src/hooks/use-height.ts","webpack:///../../../../packages/core/src/hooks/use-timeout.ts","webpack:///../../../../packages/core/src/hooks/use-unique-id.ts","webpack:///../../../../packages/core/src/hooks/use-update.ts","webpack:///../../../../packages/core/src/hooks/use-window-resize.tsx","webpack:///../../../../packages/core/src/utils/dom/rect.ts","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///../../../../packages/core/src/utils/dom/element.ts","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/image/image.tsx","webpack:///../../../../packages/core/src/image/style/index.ts","webpack:///../../../../packages/core/src/badge/style/index.ts","webpack:///../../../../packages/core/src/badge/badge.tsx","webpack:///../../../../packages/core/src/badge/use-badge.tsx","webpack:///../../../../packages/core/src/sidebar/sidebar-tab.tsx","webpack:///../../../../packages/core/src/sidebar/sidebar.context.ts","webpack:///../../../../packages/core/src/sidebar/style/index.tsx","webpack:///../../../../packages/core/src/sidebar/sidebar.tsx","webpack:///../../../../packages/core/src/sidebar/index.ts","webpack:///../../../../packages/core/src/tree-select/tree-select.context.ts","webpack:///../../../../packages/core/src/tree-select/tree-select-option.tsx","webpack:///../../../../packages/core/src/tree-select/tree-select-tab.tsx","webpack:///../../../../packages/core/src/tree-select/tree-select.tsx","webpack:///../../../../packages/core/src/tree-select/index.ts","webpack:///./src/pages/navigation/tree-select/index.tsx"],"names":["value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","previousRef","useRef","useEffect","usePreviousRef","cb","stateRef","refs","setIndexRefs","useCallback","index","el","createRef","update","useUpdate","currentRef","setObject","newState","getObject","useMemo","object","options","onChange","valueRef","useToRef","defaultValue","setValue","emitChange","getValue","inBrowser","inWechat","process","useRenderedEffect","effect","destructorRef","nextTick","destructor","className","useState","useMounted","useHeight","children","style","useTimeout","timerRef","cbRef","msRef","argsRef","stop","clearTimeout","start","args","setTimeout","callback","ms","restart","useUniqueId","prefix","uniqueIdRef","updateReducer","num","useReducer","useWindowResize","onWindowResize","offWindowResize","top","left","right","bottom","element","elementUnref","isWindow","Promise","makeRect","resolve","queryNodesRef","isRootElement","rects","oneElement","queryAllNodesRef","isValidElement","isIconElement","cloneElement","node","oldProps","props","newProps","classNames","val","elementOrRef","ancestorCustomWrapper","ancestor","createSelectorQuery","Block","variant","title","demoPrefixClassname","ImagePlaceholder","React","prefixClassname","mode","round","lazyLoad","placeholder","fallback","taroMode","toTaroMode","setLoading","failed","src","loading","imgProps","alt","onError","setFailed","onLoad","Badge","content","position","isIcon","hasChildren","noneChildren","contentProp","cloneIconElement","dot","elementTypeOf","badge","SidebarTabContent","useBadge","SidebarTab","onClick","useContext","onTabClick","active","activeValue","handleClick","event","disabled","SidebarContext","createContext","useSidebarChildren","oldValue","key","Sidebar","childrenProp","useValue","tab","TreeSelectOption","onOptionClick","ctxValue","activeIcon","TreeSelectTab","useTreeSelectChildren","__children__","tabs","Children","tabValue","getTreeSelectOptions","__dataKey__","__dataIndex__","TreeSelect","onTabChange","onChangeProp","onTabChangeProp","setTabValue","evtValue","multiselect","aValue","TreeSelectContext","newTab","RadioTreeSelect","Tab","Option","MultiselectTreeSelect","TreeSelectWithCustomContent","BadgeTreeSelect","TreeSelectDemo"],"mappings":"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","file":"chunk/74.caa0a28d.js","sourcesContent":["import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { createRef, MutableRefObject, useCallback, useEffect, useMemo, useRef } from \"react\"\r\nimport { useUpdate } from \"../hooks\"\r\n\r\nexport function usePreviousRef<T = any>(value: T): MutableRefObject<T> {\r\n  const previousRef = useRef<T>(value)\r\n  useEffect(() => {\r\n    previousRef.current = value\r\n  })\r\n  return previousRef\r\n}\r\n\r\nexport function usePrevious<T>(state: T): T | undefined {\r\n  return usePreviousRef(state).current\r\n}\r\n\r\ntype UseRenderedCallback<T> = () => T\r\n\r\nexport function useRendered<T = any>(cb: UseRenderedCallback<T>): T {\r\n  return cb?.()\r\n}\r\n\r\nexport function useRenderedRef<T = any>(cb: UseRenderedCallback<T>): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  if (cb) {\r\n    stateRef.current = cb()\r\n  }\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useToRef<T = any>(value: T): MutableRefObject<T> {\r\n  const stateRef = useRef<T>()\r\n  stateRef.current = value\r\n  return stateRef as MutableRefObject<T>\r\n}\r\n\r\nexport function useRefs<T = Element>() {\r\n  const refs = useRef<MutableRefObject<T>[]>([])\r\n\r\n  const setIndexRefs = useCallback(\r\n    (index: number) => (el: unknown) => {\r\n      if (!refs.current[index]) {\r\n        refs.current[index] = createRef() as MutableRefObject<T>\r\n      }\r\n      refs.current[index].current = el as T\r\n    },\r\n    [],\r\n  )\r\n\r\n  return [refs.current, setIndexRefs] as const\r\n}\r\n\r\nexport function useObject<S>(state: S) {\r\n  const update = useUpdate()\r\n\r\n  const stateRef = useRef(state)\r\n\r\n  const currentRef = useRef<S>()\r\n  const previousRef = useRef<S>()\r\n\r\n  if (!_.isEqual(currentRef.current, state)) {\r\n    previousRef.current = currentRef.current\r\n    currentRef.current = state\r\n    stateRef.current = state\r\n  }\r\n\r\n  const setObject = useCallback(\r\n    (newState: S) => {\r\n      stateRef.current = { ...stateRef.current, ...newState }\r\n      update()\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  const getObject = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({ object: stateRef.current, getObject, setObject }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getObject, setObject],\r\n  )\r\n}\r\n\r\ninterface UseValueOptions<S> {\r\n  defaultValue?: S\r\n  initialValue?: S\r\n  value?: S\r\n\r\n  onChange?: (...args: any[]) => void\r\n}\r\n\r\ninterface UseValueReturn<S> {\r\n  value: S | undefined\r\n  getValue: () => S\r\n  setValue: (newValue: S, emitChange?: (aValue: S) => void) => void\r\n}\r\n\r\nexport function useValue<S>(options: UseValueOptions<S> = {}): UseValueReturn<S> {\r\n  const { defaultValue, value: valueProp, initialValue, onChange } = options\r\n  const update = useUpdate()\r\n  //\r\n  const valueRef = useToRef(valueProp)\r\n  const stateRef = useRef(defaultValue ?? valueRef.current ?? initialValue)\r\n\r\n  if (valueRef.current !== undefined) {\r\n    stateRef.current = valueRef.current\r\n  }\r\n\r\n  const setValue = useCallback(\r\n    (newValue: S, emitChange?: (aValue: S) => void) => {\r\n      if (_.isUndefined(valueRef.current)) {\r\n        stateRef.current = newValue\r\n        update()\r\n      }\r\n      ;(emitChange ?? onChange)?.(newValue)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onChange],\r\n  )\r\n\r\n  const getValue = useCallback(() => stateRef.current as S, [])\r\n\r\n  return useMemo(\r\n    () => ({\r\n      value: stateRef.current,\r\n      getValue,\r\n      setValue,\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [stateRef.current, getValue, setValue],\r\n  )\r\n}\r\n","export function noop() {}\r\n\r\nexport const inBrowser = typeof document !== \"undefined\" && !!document.scripts\r\nexport const inWechat = process.env.TARO_ENV === \"weapp\"\r\nexport const inSwan = process.env.TARO_ENV === \"swan\"\r\nexport const inAlipay = process.env.TARO_ENV === \"alipay\"\r\nexport const inQQ = process.env.TARO_ENV === \"qq\"\r\nexport const inToutiao = process.env.TARO_ENV === \"tt\"\r\n","import useRenderedEffect from \"./use-rendered-effect\"\r\n\r\nexport default function useMounted(cb: (...args: any[]) => any) {\r\n  useRenderedEffect(cb, [])\r\n}\r\n","import { nextTick } from \"@tarojs/taro\"\r\nimport * as _ from \"lodash\"\r\nimport { DependencyList, EffectCallback, useEffect, useRef } from \"react\"\r\n\r\nfunction useRenderedEffect(effect: EffectCallback, deps?: DependencyList) {\r\n  const destructorRef = useRef<() => void>()\r\n\r\n  useEffect(\r\n    () => {\r\n      nextTick(() => {\r\n        const destructor = effect?.()\r\n        if (_.isFunction(destructor)) {\r\n          destructorRef.current = destructor\r\n        }\r\n      })\r\n\r\n      return destructorRef.current\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    deps,\r\n  )\r\n}\r\n\r\nexport default useRenderedEffect\r\n","import { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport useHeight from \"./use-height\"\r\n\r\ninterface UsePlaceholderOptions {\r\n  className?: string\r\n}\r\n\r\nexport default function usePlaceholder(contentRef: any, { className }: UsePlaceholderOptions) {\r\n  const height = useHeight(contentRef)\r\n\r\n  return ({\r\n    // @ts-ignore\r\n    children,\r\n  }) => (\r\n    <View\r\n      className={className}\r\n      style={{ height: height ? `${addUnitPx(height)}` : \"\" }}\r\n      children={children}\r\n    />\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport useMounted from \"./use-mounted\"\r\n\r\nexport default function useHeight(elementOrRef: any) {\r\n  const [height, setHeight] = useState<number>(0)\r\n  useMounted(() =>\r\n    getRect(elementOrRef)\r\n      .then(({ height }) => height)\r\n      .then(setHeight),\r\n  )\r\n  return height\r\n}\r\n","import { useCallback, useMemo, useRef } from \"react\"\r\n\r\ntype UseTimeoutCallback = (...args: any[]) => void\r\n\r\nfunction useTimeout() {\r\n  const timerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const cbRef = useRef<UseTimeoutCallback>()\r\n  const msRef = useRef<number>()\r\n  const argsRef = useRef<any[]>()\r\n\r\n  const stop = useCallback(() => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current)\r\n      timerRef.current = undefined\r\n    }\r\n  }, [])\r\n\r\n  const start = useCallback((callback: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n    if (timerRef.current) {\r\n      return\r\n    }\r\n    cbRef.current = callback\r\n    msRef.current = ms\r\n    argsRef.current = args\r\n    timerRef.current = setTimeout(callback, ms, args)\r\n  }, [])\r\n\r\n  const restart = useCallback(\r\n    (callback?: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n      stop()\r\n      if (callback) {\r\n        start(callback, ms, args)\r\n      } else if (cbRef.current) {\r\n        start(cbRef.current, msRef.current, argsRef.current)\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  return useMemo(\r\n    () => ({\r\n      restart,\r\n      start,\r\n      stop,\r\n    }),\r\n    [restart, start, stop],\r\n  )\r\n}\r\n\r\nexport default useTimeout\r\n","import * as _ from \"lodash\"\r\nimport { useRef } from \"react\"\r\n\r\nfunction useUniqueId(prefix: string = \"t_\") {\r\n  const uniqueIdRef = useRef(_.uniqueId(prefix))\r\n  return uniqueIdRef.current\r\n}\r\n\r\nexport default useUniqueId\r\n","import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useUpdate\r\n","import { offWindowResize, onWindowResize } from \"@tarojs/taro\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Size {\r\n  /** 变化后的窗口高度，单位 px */\r\n  windowHeight: number\r\n  /** 变化后的窗口宽度，单位 px */\r\n  windowWidth: number\r\n}\r\n\r\ninterface CallbackResult {\r\n  size: Size\r\n}\r\n\r\ntype WindowResizeCallback = (result: CallbackResult) => void\r\n\r\nfunction useWindowResize(callback: WindowResizeCallback) {\r\n  useEffect(() => {\r\n    onWindowResize?.(callback)\r\n\r\n    return () =>\r\n      offWindowResize?.(\r\n        // @ts-ignore\r\n        callback,\r\n      )\r\n  }, [callback])\r\n}\r\n\r\nexport default useWindowResize\r\n","import { inBrowser } from \"../base\"\r\nimport { queryNodesRef, elementUnref, isRootElement, isWindow, queryAllNodesRef } from \"./element\"\r\n\r\nexport interface Rect {\r\n  dataset: Record<string, any>\r\n  id: string\r\n  top: number\r\n  right: number\r\n  bottom: number\r\n  left: number\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport function makeRect(width: number, height: number) {\r\n  return {\r\n    top: 0,\r\n    left: 0,\r\n    right: width,\r\n    bottom: height,\r\n    width,\r\n    height,\r\n  } as Rect\r\n}\r\n\r\nexport function getRect(elementOrRef: any): Promise<Rect> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      if (isWindow(element)) {\r\n        const width = element.innerWidth\r\n        const height = element.innerHeight\r\n        return Promise.resolve(makeRect(width, height))\r\n      }\r\n\r\n      return Promise.resolve(\r\n        (((element as unknown) as HTMLElement).getBoundingClientRect() as unknown) as Rect,\r\n      )\r\n    } else {\r\n      return new Promise<Rect>((resolve) => {\r\n        queryNodesRef(element)\r\n          .boundingClientRect()\r\n          .exec(([rect]) => {\r\n            if (isRootElement(element)) {\r\n              const { width, height } = rect\r\n              resolve(makeRect(width, height))\r\n            } else {\r\n              resolve(rect)\r\n            }\r\n          })\r\n      })\r\n    }\r\n  }\r\n  return Promise.resolve(makeRect(0, 0))\r\n}\r\n\r\nexport function getRects(elementOrRef: any, selector: string): Promise<Rect[]> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      const rects: Rect[] = []\r\n      ;((element as unknown) as HTMLElement)\r\n        .querySelectorAll(selector)\r\n        .forEach((oneElement) =>\r\n          rects.push((oneElement.getBoundingClientRect() as unknown) as Rect),\r\n        )\r\n      return Promise.resolve(rects)\r\n    } else {\r\n      return new Promise<Rect[]>((resolve) => {\r\n        queryAllNodesRef(element, selector)\r\n          .boundingClientRect()\r\n          .exec(([rects]) => resolve((rects as unknown) as Rect[]))\r\n      })\r\n    }\r\n  }\r\n  return Promise.resolve([])\r\n}\r\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","import { TaroElement } from \"@tarojs/runtime\"\r\nimport { createSelectorQuery } from \"@tarojs/taro\"\r\nimport * as _ from \"lodash\"\r\nimport { inWechat } from \"../base\"\r\n\r\nexport const ELEMENT_NODE_TYPE = 1\r\n\r\nexport function isWindow(val: unknown): val is Window {\r\n  return val === window\r\n}\r\n\r\nexport function isBodyElement(val: unknown): boolean {\r\n  return val === document.body\r\n}\r\n\r\nexport function elementUnref(elementOrRef: any): TaroElement {\r\n  if (elementOrRef === undefined || elementOrRef === null) {\r\n    return elementOrRef\r\n  }\r\n  if (\"current\" in elementOrRef) {\r\n    return elementOrRef.current\r\n  }\r\n  return elementOrRef\r\n}\r\n\r\nexport function isRootElement(node?: TaroElement) {\r\n  return node?.nodeType === ELEMENT_NODE_TYPE && node?.tagName === \"ROOT\"\r\n}\r\n\r\nexport function matchSelector(aSelector?: string, bSelector?: string) {\r\n  return _.replace(aSelector as string, \"#\", \"\") === bSelector\r\n}\r\n\r\n// Fix nested in CustomWrapper is undefined\r\n// See: https://github.com/mallfoundry/taroify/pull/143\r\nfunction ancestorCustomWrapper(element: TaroElement) {\r\n  if (inWechat) {\r\n    let ancestor = element\r\n    while (ancestor.parentNode && !isRootElement(ancestor.parentNode as TaroElement)) {\r\n      ancestor = ancestor.parentNode as TaroElement\r\n    }\r\n\r\n    if (ancestor && ancestor !== element) {\r\n      return ancestor\r\n    }\r\n  }\r\n}\r\n\r\nexport function queryNodesRef(element: TaroElement) {\r\n  if (isRootElement(element)) {\r\n    return createSelectorQuery().selectViewport()\r\n  }\r\n\r\n  const ancestor = ancestorCustomWrapper(element)\r\n  if (ancestor) {\r\n    return createSelectorQuery().select(`#${ancestor.uid}>>>#${element.uid}`)\r\n  }\r\n\r\n  return createSelectorQuery().select(\"#\" + element.uid)\r\n}\r\n\r\nexport function queryAllNodesRef(element: TaroElement, selector?: string) {\r\n  if (isRootElement(element)) {\r\n    return createSelectorQuery().selectViewport()\r\n  }\r\n\r\n  const ancestor = ancestorCustomWrapper(element)\r\n  if (ancestor) {\r\n    return createSelectorQuery().selectAll(`#${ancestor.uid}>>>#${element.uid}${selector}`)\r\n  }\r\n\r\n  return createSelectorQuery().selectAll(\"#\" + element.uid + selector)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { Image as TaroImage, View } from \"@tarojs/components\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactElement, ReactNode, useEffect, useState } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport type ImageMode =\r\n  | \"scaleToFill\"\r\n  | \"aspectFit\"\r\n  | \"aspectFill\"\r\n  | \"widthFix\"\r\n  | \"heightFix\"\r\n  | \"top\"\r\n  | \"bottom\"\r\n  | \"center\"\r\n  | \"left\"\r\n  | \"right\"\r\n  | \"topLeft\"\r\n  | \"topRight\"\r\n  | \"bottomLeft\"\r\n  | \"bottomRight\"\r\n\r\nfunction toTaroMode(mode: ImageMode): string {\r\n  if (mode === \"topLeft\") {\r\n    return \"top left\"\r\n  }\r\n  if (mode === \"topRight\") {\r\n    return \"top right\"\r\n  }\r\n  if (mode === \"bottomLeft\") {\r\n    return \"bottom left\"\r\n  }\r\n  if (mode === \"bottomRight\") {\r\n    return \"bottom right\"\r\n  }\r\n  return mode\r\n}\r\n\r\ninterface ImagePlaceholderProps {\r\n  prefix: string\r\n  children?: ReactNode\r\n}\r\n\r\nfunction ImagePlaceholder({ prefix = \"placeholder\", children }: ImagePlaceholderProps) {\r\n  // Icon Element\r\n  if (React.isValidElement(children)) {\r\n    return (\r\n      <>\r\n        {React.cloneElement(children as ReactElement, {\r\n          className: classNames(\r\n            prefixClassname(`image__${prefix}`),\r\n            prefixClassname(`image__${prefix}-icon`),\r\n          ),\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n  // Text String\r\n  if (_.isString(children) || _.isNumber(children)) {\r\n    return <View className={prefixClassname(`image__${prefix}`)} children={children} />\r\n  }\r\n  return <></>\r\n}\r\n\r\ninterface ImageProps extends StandardProps {\r\n  src?: string\r\n  alt?: string\r\n  mode?: ImageMode\r\n  round?: boolean\r\n  lazyLoad?: boolean\r\n  placeholder?: boolean | ReactNode\r\n  fallback?: boolean | ReactNode\r\n}\r\n\r\nexport default function Image(props: ImageProps) {\r\n  const {\r\n    className,\r\n    src,\r\n    alt,\r\n    mode = \"scaleToFill\",\r\n    round = false,\r\n    lazyLoad = false,\r\n    placeholder = true,\r\n    fallback = true,\r\n    ...restProps\r\n  } = props\r\n  const taroMode = toTaroMode(mode)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [failed, setFailed] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n  }, [src])\r\n\r\n  function handleLoad() {\r\n    setLoading(false)\r\n  }\r\n\r\n  function handleError() {\r\n    setLoading(false)\r\n    setFailed(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!failed && src && (\r\n        <TaroImage\r\n          src={src as string}\r\n          mode={(taroMode as unknown) as undefined}\r\n          lazyLoad={lazyLoad}\r\n          className={classNames(\r\n            prefixClassname(\"image\"),\r\n            {\r\n              [prefixClassname(\"image--round\")]: round,\r\n              [prefixClassname(\"image--loading\")]: loading,\r\n            },\r\n            className,\r\n          )}\r\n          imgProps={{ alt }}\r\n          onError={handleError}\r\n          onLoad={handleLoad}\r\n          {...restProps}\r\n        />\r\n      )}\r\n      {loading && placeholder && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"placeholder\" children={placeholder} />\r\n        </View>\r\n      )}\r\n      {failed && fallback && (\r\n        <View className={classNames(prefixClassname(\"image\"), className)} {...restProps}>\r\n          <ImagePlaceholder prefix=\"fallback\" children={fallback} />\r\n        </View>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactElement, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport type BadgePosition = \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\"\r\n\r\nexport interface BadgeProps {\r\n  className?: string\r\n  content?: ReactNode\r\n  dot?: boolean\r\n  max?: number\r\n  position?: BadgePosition\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Badge(props: BadgeProps): JSX.Element {\r\n  const { className, content: contentProp, max, dot, position = \"top-right\", children } = props\r\n  const isIcon = useMemo(() => isIconElement(children), [children])\r\n  const hasChildren = children !== undefined\r\n  const noneChildren = children === undefined\r\n\r\n  const content = useMemo(\r\n    () =>\r\n      _.isNumber(contentProp)\r\n        ? _.toString(_.gt(contentProp, max) ? `${max}+` : contentProp)\r\n        : contentProp,\r\n    [contentProp, max],\r\n  )\r\n\r\n  return cloneIconElement(isIcon ? children : <View />, {\r\n    className: classNames(\r\n      {\r\n        [prefixClassname(\"badge__wrapper\")]: hasChildren,\r\n        [prefixClassname(\"badge\")]: noneChildren,\r\n        [prefixClassname(\"badge--dot\")]: noneChildren && dot,\r\n        [prefixClassname(\"badge--top-left\")]: noneChildren && position === \"top-left\",\r\n        [prefixClassname(\"badge--top-right\")]: noneChildren && position === \"top-right\",\r\n        [prefixClassname(\"badge--bottom-left\")]: noneChildren && position === \"bottom-left\",\r\n        [prefixClassname(\"badge--bottom-right\")]: noneChildren && position === \"bottom-right\",\r\n      },\r\n      className,\r\n    ),\r\n    children: (\r\n      <>\r\n        {!isIcon && children}\r\n        {noneChildren && !dot && content}\r\n        {hasChildren && (dot || content) && (\r\n          <View\r\n            className={classNames(\r\n              prefixClassname(\"badge\"),\r\n              {\r\n                [prefixClassname(\"badge--dot\")]: dot,\r\n                [prefixClassname(\"badge--content\")]: content,\r\n                [prefixClassname(\"badge--top-left\")]: position === \"top-left\",\r\n                [prefixClassname(\"badge--top-right\")]: position === \"top-right\",\r\n                [prefixClassname(\"badge--bottom-left\")]: position === \"bottom-left\",\r\n                [prefixClassname(\"badge--bottom-right\")]: position === \"bottom-right\",\r\n              },\r\n              prefixClassname(\"badge--fixed\"),\r\n            )}\r\n            children={!dot && content}\r\n          />\r\n        )}\r\n      </>\r\n    ),\r\n  }) as ReactElement\r\n}\r\n\r\nexport default Badge\r\n","import * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\r\nimport Badge, { BadgeProps } from \"./badge\"\r\n\r\ninterface BadgeChildren {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction elementTypeOf(node: ReactNode, type: any) {\r\n  return isValidElement(node) && (node as ReactElement).type === type\r\n}\r\n\r\nexport default function useBadge(badge: ReactNode, props: BadgeProps = {}) {\r\n  if (_.isBoolean(badge) && badge) {\r\n    return ({ children }: BadgeChildren) => <Badge {...props} dot children={children} />\r\n  }\r\n\r\n  if (_.isNumber(badge) || _.isString(badge)) {\r\n    return ({ children }: BadgeChildren) => <Badge {...props} content={badge} children={children} />\r\n  }\r\n\r\n  if (elementTypeOf(badge, Badge)) {\r\n    return ({ children }: BadgeChildren) =>\r\n      cloneElement(badge as ReactElement, {\r\n        ...props,\r\n        children,\r\n      })\r\n  }\r\n  return ({ children }: BadgeChildren) => <Badge {...props} children={children} />\r\n}\r\n","import { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useCallback, useContext } from \"react\"\r\nimport { useBadge } from \"../badge\"\r\nimport SidebarContext from \"../sidebar/sidebar.context\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface SidebarTabContentProps {\r\n  badge?: boolean | string | number | ReactNode\r\n  children: ReactNode\r\n}\r\n\r\nfunction SidebarTabContent(props: SidebarTabContentProps) {\r\n  const { badge, children } = props\r\n  const Badge = useBadge(badge, {\r\n    className: prefixClassname(\"sidebar-tab__content\"),\r\n  })\r\n\r\n  return <Badge children={children} />\r\n}\r\n\r\ninterface SidebarTabProps extends ViewProps {\r\n  className?: string\r\n  value?: any\r\n  disabled?: boolean\r\n  badge?: boolean | string | number | ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction SidebarTab(props: SidebarTabProps) {\r\n  const { value, className, disabled, badge, children, onClick, ...restProps } = props\r\n  const { value: activeValue, onTabClick } = useContext(SidebarContext)\r\n  const active = activeValue === value\r\n\r\n  const handleClick = useCallback(\r\n    (event: ITouchEvent) => {\r\n      onClick?.(event)\r\n      onTabClick?.({ value, disabled, children })\r\n    },\r\n    [children, disabled, onClick, onTabClick, value],\r\n  )\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"sidebar-tab\"),\r\n        {\r\n          [prefixClassname(\"sidebar-tab--active\")]: active,\r\n          [prefixClassname(\"sidebar-tab--disabled\")]: disabled,\r\n        },\r\n        className,\r\n      )}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      <SidebarTabContent badge={badge} children={children} />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default SidebarTab\r\n","import { createContext } from \"react\"\r\nimport { SidebarTabObject } from \"./sidebar-tab.shared\"\r\n\r\ninterface SidebarContextProps {\r\n  value?: any\r\n\r\n  onTabClick?(tab: SidebarTabObject): void\r\n}\r\n\r\nconst SidebarContext = createContext<SidebarContextProps>({})\r\n\r\nexport default SidebarContext\r\n","import \"../../styles/style\"\r\nimport \"../../badge/style\"\r\nimport \"../index.scss\"\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport {\r\n  Children,\r\n  cloneElement,\r\n  CSSProperties,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useValue } from \"../utils/state\"\r\nimport SidebarTab from \"./sidebar-tab\"\r\nimport { SidebarTabObject } from \"./sidebar-tab.shared\"\r\nimport SidebarContext from \"./sidebar.context\"\r\n\r\nfunction useSidebarChildren(children: ReactNode) {\r\n  return useMemo(\r\n    () =>\r\n      Children.map(children, (node: ReactNode, index) => {\r\n        if (!isValidElement(node)) {\r\n          return node\r\n        }\r\n        const element = node as ReactElement\r\n        if (element.type !== SidebarTab) {\r\n          return element\r\n        }\r\n        const { key, props } = element\r\n        const { value: oldValue, ...restProps } = props\r\n        const value = oldValue ?? index\r\n        return cloneElement(element, {\r\n          key: key ?? value,\r\n          value: value,\r\n          ...restProps,\r\n        })\r\n      }),\r\n    [children],\r\n  )\r\n}\r\n\r\nexport interface SidebarProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  defaultValue?: any\r\n  value?: any\r\n  children?: ReactNode\r\n\r\n  onChange?(value: any, tab: SidebarTabObject): void\r\n}\r\n\r\nfunction Sidebar(props: SidebarProps) {\r\n  const {\r\n    className,\r\n    defaultValue,\r\n    value: valueProp,\r\n    onChange,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value = 0, setValue } = useValue({ value: valueProp, defaultValue })\r\n\r\n  const children = useSidebarChildren(childrenProp)\r\n\r\n  const onTabClick = useCallback(\r\n    (tab: SidebarTabObject) => {\r\n      const { disabled, value } = tab\r\n      if (!disabled) {\r\n        setValue(value)\r\n        onChange?.(value, tab)\r\n      }\r\n    },\r\n    [onChange, setValue],\r\n  )\r\n\r\n  return (\r\n    <View className={classNames(prefixClassname(\"sidebar\"), className)} {...restProps}>\r\n      <SidebarContext.Provider value={{ value, onTabClick }} children={children} />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import SidebarElement, { SidebarProps } from \"./sidebar\"\r\nimport SidebarTab from \"./sidebar-tab\"\r\nimport { SidebarTabObject } from \"./sidebar-tab.shared\"\r\n\r\ninterface SidebarInterface {\r\n  (props: SidebarProps): JSX.Element\r\n\r\n  Tab: typeof SidebarTab\r\n}\r\n\r\nconst Sidebar = SidebarElement as SidebarInterface\r\nSidebar.Tab = SidebarTab\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace Sidebar {\r\n  export type TabObject = SidebarTabObject\r\n}\r\n\r\nexport default Sidebar\r\n","import { createContext, ReactNode } from \"react\"\r\nimport { TreeSelectOptionObject } from \"./tree-select.shared\"\r\n\r\ninterface TreeSelectContextValue {\r\n  activeIcon?: ReactNode\r\n  value?: any | any[]\r\n\r\n  onOptionClick?(event: TreeSelectOptionObject): void\r\n}\r\n\r\nconst TreeSelectContext = createContext<TreeSelectContextValue>({})\r\n\r\nexport default TreeSelectContext\r\n","import { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { ITouchEvent, View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useCallback, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport TreeSelectContext from \"./tree-select.context\"\r\n\r\ninterface TreeSelectOptionProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  disabled?: boolean\r\n  value?: any\r\n  children?: ReactNode\r\n}\r\n\r\nfunction TreeSelectOption(props: TreeSelectOptionProps) {\r\n  const { className, style, disabled = false, value, children, onClick, ...restProps } = props\r\n  const { activeIcon, value: ctxValue, onOptionClick } = useContext(TreeSelectContext)\r\n\r\n  const active = useMemo(\r\n    () => (_.isArray(ctxValue) ? _.includes(ctxValue, value) : value === ctxValue),\r\n    [ctxValue, value],\r\n  )\r\n\r\n  const handleClick = useCallback(\r\n    (event: ITouchEvent) => {\r\n      onClick?.(event)\r\n      onOptionClick?.({\r\n        active: !active,\r\n        disabled,\r\n        value,\r\n        children,\r\n      })\r\n    },\r\n    [active, children, disabled, onClick, onOptionClick, value],\r\n  )\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"ellipsis\"), //\r\n        prefixClassname(\"tree-select-option\"),\r\n        {\r\n          [prefixClassname(\"tree-select-option--disabled\")]: disabled,\r\n          [prefixClassname(\"tree-select-option--active\")]: active,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n      {\r\n        //\r\n        active &&\r\n          cloneIconElement(activeIcon, {\r\n            className: prefixClassname(\"tree-select-option__icon\"),\r\n          })\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default TreeSelectOption\r\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport SidebarTab from \"../sidebar/sidebar-tab\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface TreeSelectTabProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  value?: any\r\n  disabled?: boolean\r\n  badge?: boolean | string | number | ReactNode\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction TreeSelectTab(props: TreeSelectTabProps) {\r\n  const { className, title, children, ...restProps } = props\r\n  return (\r\n    <SidebarTab\r\n      className={classNames(\r\n        prefixClassname(\"tree-select-tab\"), //\r\n        className,\r\n      )}\r\n      children={title}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TreeSelectTab\r\n","import { Success } from \"@taroify/icons\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { Children, cloneElement, isValidElement, ReactElement, ReactNode, useCallback } from \"react\"\r\nimport Sidebar from \"../sidebar\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { useValue } from \"../utils/state\"\r\nimport TreeSelectOption from \"./tree-select-option\"\r\nimport TreeSelectTab from \"./tree-select-tab\"\r\nimport TreeSelectContext from \"./tree-select.context\"\r\nimport { TreeSelectOptionObject, TreeSelectTabObject } from \"./tree-select.shared\"\r\n\r\ninterface TreeSelectChildren {\r\n  tabs: ReactNode[]\r\n  options: ReactNode[]\r\n}\r\n\r\nfunction getTreeSelectOptions(children: ReactNode) {\r\n  const options: ReactNode[] = []\r\n  Children.forEach(children, (child: ReactNode, index) => {\r\n    // Skip is not Option of TreeSelect\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n\r\n    const element = child as ReactElement\r\n\r\n    const elementType = element.type\r\n    if (elementType === TreeSelectOption) {\r\n      const { key } = element\r\n      options.push(\r\n        cloneElement(element, {\r\n          key: key ?? index,\r\n          __dataKey__: key ?? index,\r\n          __dataIndex__: index,\r\n        }),\r\n      )\r\n    } else {\r\n      options.push(element)\r\n    }\r\n  })\r\n  return options\r\n}\r\n\r\nfunction useTreeSelectChildren(children: ReactNode, tabValue?: any): TreeSelectChildren {\r\n  const __children__: TreeSelectChildren = {\r\n    tabs: [],\r\n    options: [],\r\n  }\r\n\r\n  Children.forEach(children, (child: ReactNode, index) => {\r\n    // Skip is not Tab of TreeSelect\r\n    if (!isValidElement(child)) {\r\n      return\r\n    }\r\n\r\n    const element = child as ReactElement\r\n\r\n    const elementType = element.type\r\n    if (elementType === TreeSelectTab) {\r\n      const { key, props } = element\r\n      const { value: oldValue, children: childrenProp, ...restProps } = props\r\n      const value = oldValue ?? index\r\n\r\n      __children__.tabs.push(\r\n        cloneElement(element, {\r\n          key: key ?? value,\r\n          value: value,\r\n          children: childrenProp,\r\n          ...restProps,\r\n        }),\r\n      )\r\n\r\n      if (tabValue === value) {\r\n        __children__.options.push(...getTreeSelectOptions(childrenProp))\r\n      }\r\n    }\r\n  })\r\n  return __children__\r\n}\r\n\r\nexport interface TreeSelectProps extends ViewProps {\r\n  defaultTabValue?: any\r\n  tabValue?: any\r\n  defaultValue?: any | any[]\r\n  value?: any | any[]\r\n  activeIcon?: ReactNode\r\n  children?: ReactNode\r\n\r\n  onTabChange?(value: any, tabObject: TreeSelectTabObject): void\r\n\r\n  onChange?(values: any | any[]): void\r\n}\r\n\r\nfunction TreeSelect(props: TreeSelectProps) {\r\n  const {\r\n    className,\r\n    defaultTabValue,\r\n    tabValue: tabValueProp,\r\n    defaultValue,\r\n    value: valueProp,\r\n    activeIcon = <Success />,\r\n    children: childrenProp,\r\n    onTabChange: onTabChangeProp,\r\n    onChange: onChangeProp,\r\n    ...restProps\r\n  } = props\r\n\r\n  const { value: tabValue = 0, setValue: setTabValue } = useValue({\r\n    value: tabValueProp,\r\n    defaultValue: defaultTabValue,\r\n    onChange: onTabChangeProp,\r\n  })\r\n\r\n  const { value = 0, setValue } = useValue({\r\n    value: valueProp,\r\n    defaultValue,\r\n    onChange: onChangeProp,\r\n  })\r\n\r\n  const { tabs, options } = useTreeSelectChildren(childrenProp, tabValue)\r\n\r\n  const onOptionClick = useCallback(\r\n    ({ disabled, active, value: evtValue }: TreeSelectOptionObject) => {\r\n      if (disabled) {\r\n        return\r\n      }\r\n      const multiselect = _.isArray(value)\r\n\r\n      if (multiselect) {\r\n        if (active) {\r\n          setValue((value as any[]).concat(evtValue))\r\n        } else {\r\n          setValue((value as any[]).filter((aValue) => aValue !== evtValue))\r\n        }\r\n      } else {\r\n        setValue(value === evtValue && !active ? undefined : evtValue)\r\n      }\r\n    },\r\n    [value, setValue],\r\n  )\r\n\r\n  return (\r\n    <TreeSelectContext.Provider\r\n      value={{\r\n        activeIcon,\r\n        value,\r\n        onOptionClick,\r\n      }}\r\n    >\r\n      <View className={classNames(prefixClassname(\"tree-select\"), className)} {...restProps}>\r\n        <Sidebar\r\n          className={prefixClassname(\"tree-select__sidebar\")}\r\n          defaultValue={defaultTabValue}\r\n          value={tabValue}\r\n          onChange={(newTab) => setTabValue(newTab)}\r\n          children={tabs}\r\n        />\r\n        <View className={prefixClassname(\"tree-select__content\")} children={options} />\r\n      </View>\r\n    </TreeSelectContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TreeSelect\r\n","import TreeSelectElement, { TreeSelectProps } from \"./tree-select\"\r\nimport TreeSelectOption from \"./tree-select-option\"\r\nimport TreeSelectTab from \"./tree-select-tab\"\r\nimport { TreeSelectTabObject } from \"./tree-select.shared\"\r\n\r\ninterface TreeSelectInterface {\r\n  (props: TreeSelectProps): JSX.Element\r\n\r\n  Tab: typeof TreeSelectTab\r\n  Option: typeof TreeSelectOption\r\n}\r\n\r\nconst TreeSelect = TreeSelectElement as TreeSelectInterface\r\n\r\nTreeSelect.Tab = TreeSelectTab\r\nTreeSelect.Option = TreeSelectOption\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nnamespace TreeSelect {\r\n  export type TabObject = TreeSelectTabObject\r\n}\r\n\r\nexport default TreeSelect\r\n","import { Image, TreeSelect } from \"@taroify/core\"\r\nimport * as React from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\n\r\nimport \"./index.scss\"\r\n\r\nfunction RadioTreeSelect() {\r\n  return (\r\n    <TreeSelect>\r\n      <TreeSelect.Tab title=\"浙江\">\r\n        <TreeSelect.Option value={0}>杭州</TreeSelect.Option>\r\n        <TreeSelect.Option value={1}>温州</TreeSelect.Option>\r\n        <TreeSelect.Option value={2} disabled>\r\n          宁波\r\n        </TreeSelect.Option>\r\n        <TreeSelect.Option value={3}>义乌</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"江苏\">\r\n        <TreeSelect.Option value={4}>南京</TreeSelect.Option>\r\n        <TreeSelect.Option value={5}>无锡</TreeSelect.Option>\r\n        <TreeSelect.Option value={6}>徐州</TreeSelect.Option>\r\n        <TreeSelect.Option value={7}>苏州</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"福建\" disabled>\r\n        <TreeSelect.Option value={8}>泉州</TreeSelect.Option>\r\n        <TreeSelect.Option value={9}>厦门</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n    </TreeSelect>\r\n  )\r\n}\r\n\r\nfunction MultiselectTreeSelect() {\r\n  return (\r\n    <TreeSelect defaultValue={[0, 1]}>\r\n      <TreeSelect.Tab title=\"浙江\">\r\n        <TreeSelect.Option value={0}>杭州</TreeSelect.Option>\r\n        <TreeSelect.Option value={1}>温州</TreeSelect.Option>\r\n        <TreeSelect.Option value={2} disabled>\r\n          宁波\r\n        </TreeSelect.Option>\r\n        <TreeSelect.Option value={3}>义乌</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"江苏\">\r\n        <TreeSelect.Option value={4}>南京</TreeSelect.Option>\r\n        <TreeSelect.Option value={5}>无锡</TreeSelect.Option>\r\n        <TreeSelect.Option value={6}>徐州</TreeSelect.Option>\r\n        <TreeSelect.Option value={7}>苏州</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"福建\" disabled>\r\n        <TreeSelect.Option value={8}>泉州</TreeSelect.Option>\r\n        <TreeSelect.Option value={9}>厦门</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n    </TreeSelect>\r\n  )\r\n}\r\n\r\nfunction TreeSelectWithCustomContent() {\r\n  return (\r\n    <TreeSelect>\r\n      <TreeSelect.Tab title=\"分组 1\">\r\n        <Image src=\"https://img.yzcdn.cn/vant/apple-1.jpg\" />\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"分组 2\">\r\n        <Image src=\"https://img.yzcdn.cn/vant/apple-2.jpg\" />\r\n      </TreeSelect.Tab>\r\n    </TreeSelect>\r\n  )\r\n}\r\n\r\nfunction BadgeTreeSelect() {\r\n  return (\r\n    <TreeSelect>\r\n      <TreeSelect.Tab badge title=\"浙江\">\r\n        <TreeSelect.Option value={0}>杭州</TreeSelect.Option>\r\n        <TreeSelect.Option value={1}>温州</TreeSelect.Option>\r\n        <TreeSelect.Option value={2} disabled>\r\n          宁波\r\n        </TreeSelect.Option>\r\n        <TreeSelect.Option value={3}>义乌</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab badge=\"5\" title=\"江苏\">\r\n        <TreeSelect.Option value={4}>南京</TreeSelect.Option>\r\n        <TreeSelect.Option value={5}>无锡</TreeSelect.Option>\r\n        <TreeSelect.Option value={6}>徐州</TreeSelect.Option>\r\n        <TreeSelect.Option value={7}>苏州</TreeSelect.Option>\r\n      </TreeSelect.Tab>\r\n      <TreeSelect.Tab title=\"福建\" disabled>\r\n        <TreeSelect.Option value={8}>泉州</TreeSelect.Option>\r\n        <TreeSelect.Option value={9}>厦门</TreeSelect.Option>n\r\n      </TreeSelect.Tab>\r\n    </TreeSelect>\r\n  )\r\n}\r\n\r\nexport default function TreeSelectDemo() {\r\n  return (\r\n    <Page title=\"TreeSelect 分类选择\" className=\"tree-select-demo\">\r\n      <Block title=\"单选模式\">\r\n        <RadioTreeSelect />\r\n      </Block>\r\n      <Block title=\"多选模式\">\r\n        <MultiselectTreeSelect />\r\n      </Block>\r\n      <Block title=\"自定义内容\">\r\n        <TreeSelectWithCustomContent />\r\n      </Block>\r\n      <Block title=\"徽标提示\">\r\n        <BadgeTreeSelect />\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}