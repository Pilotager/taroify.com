{"version":3,"sources":["webpack:///../../../../packages/icons/src/utils/unit.ts","webpack:///../../../../packages/icons/src/van/VanIcon.tsx","webpack:///../../../../packages/core/src/styles/index.ts","webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/styles/prefix.ts","webpack:///../../../../packages/icons/src/ArrowLeft.tsx","webpack:///./src/styles/prefix.ts","webpack:///../../../../packages/icons/src/shared.ts","webpack:///./src/components/target.tsx","webpack:///./src/components/page.tsx","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/loading/loading.tsx","webpack:///../../../../packages/core/src/loading/style/index.ts","webpack:///../../../../packages/core/src/button/button.context.ts","webpack:///../../../../packages/core/src/button-base/button-base.tsx","webpack:///../../../../packages/core/src/button/style/index.ts","webpack:///../../../../packages/core/src/button-base/style/index.ts","webpack:///../../../../packages/core/src/button/button.tsx","webpack:///../../../../packages/core/src/flex/style/index.ts","webpack:///../../../../packages/core/src/flex/flex.context.ts","webpack:///../../../../packages/core/src/flex/index.ts","webpack:///../../../../packages/core/src/flex/flex.tsx","webpack:///../../../../packages/core/src/flex/flex-item.tsx","webpack:///../../../../packages/core/src/space/style/index.ts","webpack:///../../../../packages/core/src/space/index.ts","webpack:///../../../../packages/core/src/space/space.tsx","webpack:///./src/pages/basic/space/index.tsx"],"names":["value","convertPx","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertVw","convertVh","unitToPx","size","color","presetColor","ICON_PRESET_COLORS","presetSize","ICON_PRESET_SIZES","className","classNames","style","addUnitPx","name","VanIconWrapper","width","height","ArrowLeft","createVanIconComponent","demoPrefixClassname","component","ICON_TYPE","Symbol","TargetType","Target","props","type","children","process","Page","title","onClick","navigateBack","Block","variant","SpinIcon","key","prefixClassname","LoadingSpinner","rootStyle","useMemo","LoadingCircular","direction","ButtonContext","createContext","ButtonBase","formType","loading","useButtonLoading","onCtxClick","useContext","shape","block","e","disabled","React","Object","gutter","undefined","Flex","wrap","justify","align","useFlexGutter","gutterNumber","gutterStyle","averagePadding","FlexContext","offset","gutters","horizontalGutter","span","item","SpaceDemo"],"mappings":"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","file":"chunk/52.93c59b53.js","sourcesContent":["export function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport {\r\n  ICON_PRESET_COLORS,\r\n  ICON_PRESET_SIZES,\r\n  ICON_TYPE,\r\n  IconColor,\r\n  IconProps,\r\n  IconSize,\r\n} from \"../shared\"\r\nimport { addUnitPx } from \"../utils/unit\"\r\n\r\ninterface VanIconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  name?: string\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function VanIcon(props: VanIconProps) {\r\n  const { className, style, name, size = \"inherit\", color = \"inherit\", ...restProps } = props\r\n  const presetColor = ICON_PRESET_COLORS.includes(color as IconColor)\r\n  const presetSize = ICON_PRESET_SIZES.includes(size as IconSize)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        \"van-icon\",\r\n        `van-icon-${name}`,\r\n        \"taroify-icon\",\r\n        {\r\n          [`taroify-icon--${color}`]: presetColor,\r\n          [`taroify-icon--${size}`]: presetSize,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        color: presetColor ? \"\" : color,\r\n        fontSize: presetSize ? \"\" : addUnitPx(size),\r\n        ...style,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport function createVanIconComponent(name: string) {\r\n  function VanIconWrapper(props: IconProps) {\r\n    return <VanIcon name={name} {...props} />\r\n  }\r\n\r\n  // @ts-ignore\r\n  VanIconWrapper[ICON_TYPE] = ICON_TYPE\r\n  return VanIconWrapper\r\n}\r\n","export { prefixClassname } from \"./prefix\"\n","import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","const COMPONENT_PREFIX = \"taroify-\"\n\nexport function prefixClassname(component: string) {\n  return `${COMPONENT_PREFIX}${component}`\n}\n","import { createVanIconComponent } from \"./van\"\r\n\r\nconst ArrowLeft = createVanIconComponent(\"arrow-left\")\r\nexport default ArrowLeft\r\n","const DEMO_PREFIX = \"taroify-demo-\"\n\nexport function demoPrefixClassname(component: string) {\n  return `${DEMO_PREFIX}${component}`\n}\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\n\r\nexport const ICON_TYPE = Symbol(\"__iconType__\")\r\n\r\nexport type IconSize = \"inherit\" | \"mini\" | \"small\" | \"medium\" | \"large\"\r\n\r\nexport const ICON_PRESET_SIZES = [\"inherit\", \"mini\", \"small\", \"medium\", \"large\"]\r\n\r\nexport type IconColor =\r\n  | \"inherit\"\r\n  | \"default\"\r\n  | \"primary\"\r\n  | \"info\"\r\n  | \"success\"\r\n  | \"warning\"\r\n  | \"danger\"\r\n\r\nexport const ICON_PRESET_COLORS = [\r\n  \"inherit\",\r\n  \"default\",\r\n  \"primary\",\r\n  \"info\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n]\r\n\r\nexport interface IconProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  size?: IconSize | number | string\r\n  color?: IconColor | string\r\n  children?: ReactNode\r\n}\r\n","import * as React from \"react\"\nimport { ReactNode } from \"react\"\n\n/* eslint-disable  no-shadow */\nexport enum TargetType {\n  /* eslint-enable  no-shadow */\n  H5 = \"h5\",\n}\n\ntype TargetTypeString = \"h5\"\n\ninterface TargetProps {\n  type?: TargetType | TargetTypeString\n  children?: ReactNode\n}\n\nexport default function Target(props: TargetProps) {\n  const { type, children } = props\n  return <>{type === process.env.TARO_ENV && children}</>\n}\n","import ArrowLeft from \"@taroify/icons/ArrowLeft\"\nimport { View } from \"@tarojs/components\"\nimport { navigateBack } from \"@tarojs/taro\"\nimport classNames from \"classnames\"\nimport * as React from \"react\"\nimport { ReactNode } from \"react\"\nimport { demoPrefixClassname } from \"../styles/prefix\"\nimport \"./page.scss\"\nimport Target from \"./target\"\n\ninterface PageProps {\n  className?: string\n  title?: string\n  children: ReactNode\n}\n\nexport default function Page(props: PageProps) {\n  const { className, title, children } = props\n\n  return (\n    <View className={classNames(demoPrefixClassname(\"page\"), className)}>\n      <Target type=\"h5\">\n        <View className={demoPrefixClassname(\"page__nav\")}>\n          <ArrowLeft\n            className={demoPrefixClassname(\"page__nav__back\")}\n            onClick={() => navigateBack()}\n          />\n          <View className={demoPrefixClassname(\"page__nav__title\")}>{title} </View>\n        </View>\n      </Target>\n      <View className={demoPrefixClassname(\"page__content\")}>{children}</View>\n    </View>\n  )\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\n\r\nconst SpinIcon = _.range(0, 12).map((key) => (\r\n  <View key={key} className={prefixClassname(\"loading__spinner__item\")} />\r\n))\r\n\r\nfunction LoadingSpinner(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return (\r\n    <View className={prefixClassname(\"loading__spinner\")} style={rootStyle}>\r\n      {SpinIcon}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction LoadingCircular(props: LoadingProps) {\r\n  const { size } = props\r\n  const rootStyle = useMemo(\r\n    () => ({\r\n      width: addUnitPx(size) ?? \"\",\r\n      height: addUnitPx(size) ?? \"\",\r\n    }),\r\n    [size],\r\n  )\r\n  return <View className={prefixClassname(\"loading__circular\")} style={rootStyle} />\r\n}\r\n\r\nexport type LoadingType = \"circular\" | \"spinner\"\r\n\r\ntype LoadingDirection = \"horizontal\" | \"vertical\"\r\n\r\nexport interface LoadingProps extends ViewProps {\r\n  className?: string\r\n  size?: number | string\r\n  type?: LoadingType\r\n  direction?: LoadingDirection\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Loading(props: LoadingProps) {\r\n  const {\r\n    className,\r\n    size,\r\n    type = \"circular\",\r\n    direction = \"horizontal\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"loading\"),\r\n        prefixClassname(`loading--${direction}`),\r\n        prefixClassname(`loading--${type}`),\r\n        className,\r\n      )}\r\n      {...restProps}\r\n    >\r\n      {type === \"spinner\" && <LoadingSpinner size={size} />}\r\n      {type === \"circular\" && <LoadingCircular size={size} />}\r\n      {children && <View className={prefixClassname(\"loading__text\")} children={children} />}\r\n    </View>\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { ITouchEvent } from \"@tarojs/components\"\r\nimport { createContext } from \"react\"\r\nimport { ButtonProps } from \"./button\"\r\n\r\ninterface ButtonContextValue {\r\n  onClick?(event: ITouchEvent, props: ButtonProps): void\r\n}\r\n\r\nconst ButtonContext = createContext<ButtonContextValue>({})\r\n\r\nexport default ButtonContext\r\n","import { Button, ButtonProps } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\nexport interface ButtonBaseProps extends ButtonProps {}\r\n\r\nfunction ButtonBase(props: ButtonBaseProps) {\r\n  const { className, ...restProps } = props\r\n  return <Button className={classNames(prefixClassname(\"button-base\"), className)} {...restProps} />\r\n}\r\n\r\nexport default ButtonBase\r\n","import \"../../styles/style\"\r\nimport \"../../loading/style\"\r\nimport \"../../button-base/style\"\r\n\r\nimport \"../index.scss\"\r\n","import \"../index.scss\"\r\n","import { ButtonProps as TaroButtonProps, View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { ReactNode, useContext, useMemo } from \"react\"\r\nimport ButtonBase from \"../button-base\"\r\nimport Loading, { LoadingProps } from \"../loading\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport ButtonContext from \"./button.context\"\r\nimport {\r\n  ButtonColor,\r\n  ButtonFormType,\r\n  ButtonShape,\r\n  ButtonSize,\r\n  ButtonVariant,\r\n} from \"./button.shared\"\r\n\r\nfunction useButtonLoading(loading?: boolean | LoadingProps): ReactNode {\r\n  return useMemo(() => {\r\n    if (_.isBoolean(loading) && loading) {\r\n      return <Loading className={prefixClassname(\"button__loading\")} />\r\n    } else if (_.isPlainObject(loading)) {\r\n      const { className, ...restProps } = loading as LoadingProps\r\n      return (\r\n        <Loading\r\n          className={classNames(prefixClassname(\"button__loading\"), className)}\r\n          {...restProps}\r\n        />\r\n      )\r\n    }\r\n    return loading\r\n  }, [loading])\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends Omit<TaroButtonProps, \"size\" | \"formType\" | \"type\" | \"loading\" | \"plain\"> {\r\n  variant?: ButtonVariant\r\n  shape?: ButtonShape\r\n  size?: ButtonSize\r\n  color?: ButtonColor\r\n  formType?: ButtonFormType\r\n  loading?: boolean | LoadingProps\r\n  block?: boolean\r\n  hairline?: boolean\r\n  disabled?: boolean\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    variant = \"contained\",\r\n    shape,\r\n    size = \"medium\",\r\n    color = \"default\",\r\n    formType = \"button\",\r\n    block,\r\n    hairline,\r\n    disabled,\r\n    loading: loadingProp,\r\n    icon,\r\n    children,\r\n    onClick,\r\n    ...restProps\r\n  } = props\r\n\r\n  const loading = useButtonLoading(loadingProp)\r\n\r\n  const { onClick: onCtxClick } = useContext(ButtonContext)\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"button\"),\r\n        {\r\n          // Set variant style\r\n          [prefixClassname(\"button--text\")]: variant === \"text\",\r\n          [prefixClassname(\"button--contained\")]: variant === \"contained\",\r\n          [prefixClassname(\"button--outlined\")]: variant === \"outlined\",\r\n          // Set color style\r\n          [prefixClassname(`button--${color}`)]: color,\r\n          // Set shape style\r\n          [prefixClassname(\"button--round\")]: shape === \"round\",\r\n          [prefixClassname(\"button--square\")]: shape === \"square\",\r\n          // Set size style\r\n          [prefixClassname(\"button--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"button--small\")]: size === \"small\",\r\n          [prefixClassname(\"button--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"button--large\")]: size === \"large\",\r\n          // Set hairline style\r\n          [prefixClassname(\"button--hairline\")]: hairline,\r\n          [prefixClassname(\"hairline--surround\")]: hairline,\r\n          [prefixClassname(\"button--disabled\")]: disabled,\r\n          [prefixClassname(\"button--loading\")]: loading,\r\n          [prefixClassname(\"button--block\")]: block,\r\n        },\r\n        className,\r\n      )}\r\n      style={style}\r\n      onClick={(e) => {\r\n        if (!disabled && !loading) {\r\n          onClick?.(e)\r\n          onCtxClick?.(e, props)\r\n        }\r\n      }}\r\n    >\r\n      <View className={prefixClassname(\"button__content\")}>\r\n        {loading ?? icon}\r\n        {children && <View className={prefixClassname(\"button__text\")} children={children} />}\r\n      </View>\r\n      <ButtonBase\r\n        className={prefixClassname(\"button__button\")}\r\n        formType={formType === \"submit\" ? \"submit\" : formType === \"reset\" ? \"reset\" : undefined}\r\n        disabled={disabled || !!loading}\r\n        loading={false}\r\n        {...restProps}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport function createButton(children: ReactNode | ButtonProps, props?: ButtonProps) {\r\n  if (_.isPlainObject(children)) {\r\n    return <Button {...(children as ButtonProps)} {...props} />\r\n  }\r\n  return <Button children={children} {...props} />\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface FlexContextValue {\r\n  gutter: [number | undefined, number | undefined]\r\n}\r\n\r\nconst FlexContext = createContext<FlexContextValue>({\r\n  gutter: [undefined, undefined],\r\n})\r\n\r\nexport default FlexContext\r\n","import FlexComponent, { FlexProps } from \"./flex\"\r\nimport FlexItem from \"./flex-item\"\r\n\r\nexport type { FlexProps } from \"./flex\"\r\nexport type { FlexItemProps } from \"./flex-item\"\r\n\r\ninterface FlexInterface {\r\n  (props: FlexProps): JSX.Element\r\n\r\n  Item: typeof FlexItem\r\n}\r\n\r\nconst Flex = FlexComponent as FlexInterface\r\n\r\nFlex.Item = FlexItem\r\n\r\nexport default Flex\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\nimport { FlexAlign, FlexDirection, FlexGutter, FlexJustify, FlexWrap } from \"./flex.shared\"\r\n\r\nfunction useFlexGutter(gutter?: FlexGutter): [undefined | number, undefined | number] {\r\n  return useMemo(() => {\r\n    if (gutter === undefined) {\r\n      return [undefined, undefined]\r\n    }\r\n\r\n    if (_.isNumber(gutter)) {\r\n      return [gutter, gutter]\r\n    }\r\n\r\n    if (_.isString(gutter)) {\r\n      const gutterNumber = _.toNumber(gutter)\r\n      return [gutterNumber, gutterNumber]\r\n    }\r\n\r\n    if (_.isArray(gutter)) {\r\n      const [horizontalGutter, verticalGutter] = gutter\r\n      return [_.toNumber(horizontalGutter), _.toNumber(verticalGutter)]\r\n    }\r\n\r\n    return [0, 0]\r\n  }, [gutter])\r\n}\r\n\r\nexport interface FlexProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: FlexDirection\r\n  wrap?: FlexWrap\r\n  justify?: FlexJustify\r\n  align?: FlexAlign\r\n  gutter?: FlexGutter\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Flex(props: FlexProps) {\r\n  const {\r\n    className,\r\n    style,\r\n    gutter: gutterProp,\r\n    direction = \"row\",\r\n    wrap = \"nowrap\",\r\n    justify = \"start\",\r\n    align = \"start\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const gutter = useFlexGutter(gutterProp)\r\n  const [horizontalGutter] = gutter\r\n\r\n  const gutterStyle = useMemo<CSSProperties>(() => {\r\n    const gutterStyle: CSSProperties = {}\r\n    if (horizontalGutter) {\r\n      const averagePadding = _.toNumber(horizontalGutter) / 2\r\n      gutterStyle.marginLeft = addUnitPx(-averagePadding)\r\n      gutterStyle.marginRight = addUnitPx(-averagePadding)\r\n    }\r\n    return {}\r\n  }, [horizontalGutter])\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex\"),\r\n        {\r\n          // Set flex style\r\n          [prefixClassname(\"flex--row\")]: direction === \"row\",\r\n          [prefixClassname(\"flex--row-reverse\")]: direction === \"row-reverse\",\r\n          [prefixClassname(\"flex--column\")]: direction === \"column\",\r\n          [prefixClassname(\"flex--column-reverse\")]: direction === \"column-reverse\",\r\n          // Set flex-wrap style\r\n          [prefixClassname(\"flex--nowrap\")]: wrap === \"nowrap\",\r\n          [prefixClassname(\"flex--wrap\")]: wrap === \"wrap\",\r\n          [prefixClassname(\"flex--wrap-reverse\")]: wrap === \"wrap-reverse\",\r\n          // Set justify style\r\n          [prefixClassname(\"flex--justify-start\")]: justify === \"start\",\r\n          [prefixClassname(\"flex--justify-center\")]: justify === \"center\",\r\n          [prefixClassname(\"flex--justify-end\")]: justify === \"end\",\r\n          [prefixClassname(\"flex--justify-space-around\")]: justify === \"space-around\",\r\n          [prefixClassname(\"flex--justify-space-between\")]: justify === \"space-between\",\r\n          // Set align style\r\n          [prefixClassname(\"flex--align-start\")]: align === \"start\",\r\n          [prefixClassname(\"flex--align-center\")]: align === \"center\",\r\n          [prefixClassname(\"flex--align-end\")]: align === \"end\",\r\n          [prefixClassname(\"flex--align-baseline\")]: align === \"baseline\",\r\n          [prefixClassname(\"flex--align-stretch\")]: align === \"stretch\",\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    >\r\n      <FlexContext.Provider\r\n        value={{\r\n          gutter,\r\n        }}\r\n        children={children}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport FlexContext from \"./flex.context\"\r\n\r\nexport interface FlexItemProps extends ViewProps {\r\n  style?: CSSProperties\r\n  span?: number\r\n  offset?: number\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function FlexItem(props: FlexItemProps) {\r\n  const { className, style, span, offset, ...restProps } = props\r\n  const { gutter: gutters } = useContext(FlexContext)\r\n  const [horizontalGutter] = gutters\r\n\r\n  // Horizontal gutter use padding\r\n  const gutterStyle: React.CSSProperties = {}\r\n  if (horizontalGutter) {\r\n    const averagePadding = horizontalGutter / 2\r\n    gutterStyle.paddingLeft = addUnitPx(averagePadding)\r\n    gutterStyle.paddingRight = addUnitPx(averagePadding)\r\n  }\r\n\r\n  return (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"flex-item\"),\r\n        {\r\n          [prefixClassname(`flex-item-${span}`)]: span !== undefined,\r\n          [prefixClassname(`flex-item-offset-${offset}`)]: offset !== undefined,\r\n        },\r\n        className,\r\n      )}\r\n      style={{\r\n        ...style,\r\n        ...gutterStyle,\r\n      }}\r\n      {...restProps}\r\n    />\r\n  )\r\n}\r\n","import \"../../styles/style\"\r\nimport \"../../flex/style\"\r\nimport \"../index.scss\"\r\n","import Space from \"./space\"\n\nexport default Space\n","import { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { Children, CSSProperties, ReactNode } from \"react\"\r\nimport Flex from \"../flex\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { SpaceAlign, SpaceDirection, SpaceJustify, SpaceSize, SpaceWrap } from \"./space.shared\"\r\n\r\ninterface SpaceProps extends ViewProps {\r\n  style?: CSSProperties\r\n  direction?: SpaceDirection\r\n  size?: SpaceSize\r\n  align?: SpaceAlign\r\n  justify?: SpaceJustify\r\n  wrap?: SpaceWrap\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Space(props: SpaceProps) {\r\n  const {\r\n    className,\r\n    size = \"small\",\r\n    justify,\r\n    align,\r\n    direction = \"horizontal\",\r\n    wrap = \"wrap\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n\r\n  return (\r\n    <Flex\r\n      className={classNames(\r\n        prefixClassname(\"space\"),\r\n        {\r\n          [prefixClassname(\"space--horizontal\")]: direction === \"horizontal\",\r\n          [prefixClassname(\"space--vertical\")]: direction === \"vertical\",\r\n\r\n          [prefixClassname(\"space--mini\")]: size === \"mini\",\r\n          [prefixClassname(\"space--small\")]: size === \"small\",\r\n          [prefixClassname(\"space--medium\")]: size === \"medium\",\r\n          [prefixClassname(\"space--large\")]: size === \"large\",\r\n        },\r\n        className,\r\n      )}\r\n      direction={\r\n        direction === \"horizontal\" ? \"row\" : direction === \"vertical\" ? \"column\" : undefined\r\n      }\r\n      justify={justify}\r\n      align={align}\r\n      wrap={wrap}\r\n      {...restProps}\r\n    >\r\n      {\r\n        //\r\n        Children.map(children, (item, index) => (\r\n          <Flex.Item\r\n            key={index}\r\n            className={classNames(prefixClassname(\"space__item\"), {\r\n              [prefixClassname(\"space__item--mini\")]: size === \"mini\",\r\n              [prefixClassname(\"space__item--small\")]: size === \"small\",\r\n              [prefixClassname(\"space__item--medium\")]: size === \"medium\",\r\n              [prefixClassname(\"space__item--large\")]: size === \"large\",\r\n            })}\r\n            children={item}\r\n          />\r\n        ))\r\n      }\r\n    </Flex>\r\n  )\r\n}\r\n","import { Button, Space } from \"@taroify/core\"\r\nimport * as React from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nexport default function SpaceDemo() {\r\n  return (\r\n    <Page title=\"Space 间距\" className=\"space-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Space>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"垂直\">\r\n        <Space direction=\"vertical\">\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"间隙\">\r\n        <Space size=\"mini\">\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n        </Space>\r\n        <Space size=\"small\">\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n        </Space>\r\n        <Space size=\"medium\">\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n        </Space>\r\n        <Space size=\"large\">\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"靠右\">\r\n        <Space justify=\"space-around\">\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"居中\">\r\n        <Space justify=\"center\">\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"环绕\">\r\n        <Space justify=\"space-around\">\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"两端对齐\">\r\n        <Space justify=\"space-between\">\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n        </Space>\r\n      </Block>\r\n      <Block title=\"不换行\">\r\n        <Space wrap=\"nowrap\">\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n          <Button color=\"primary\">主要按钮</Button>\r\n        </Space>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}