{"version":3,"sources":["webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/prop-types/index.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/prop-types/factoryWithThrowingShims.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/dom-helpers/esm/removeClass.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/react-transition-group/esm/config.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/react-transition-group/esm/TransitionGroupContext.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/react-transition-group/esm/Transition.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/react-transition-group/esm/CSSTransition.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/dom-helpers/esm/addClass.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/dom-helpers/esm/hasClass.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","module","exports","require","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_inheritsLoose","subClass","superClass","create","constructor","setPrototypeOf","replaceClassName","origClass","classToRemove","replace","RegExp","React","createContext","Transition","_React$Component","context","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","ReactDOM","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","current","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","createElement","TransitionGroupContext","Provider","value","cloneElement","Children","only","Component","noop","contextType","propTypes","defaultProps","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","removeClass","classes","split","forEach","c","className","classList","remove","setAttribute","baseVal","removeOneClass","CSSTransition","_len","args","Array","_key","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","scrollTop","add","hasClass","contains","addOneClass","_addClass","_this$appliedClasses$","base","done"],"mappings":"4FAAe,SAASA,8BAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EAZT,+D,sBCiBEM,EAAOC,QAAUC,EAAQ,IAARA,I,mCCRnB,IAAIC,EAAuBD,EAAQ,KAEnC,SAASE,iBACT,SAASC,0BACTA,uBAAuBC,kBAAoBF,cAE3CJ,EAAOC,QAAU,WACf,SAASM,KAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWV,EAAf,CAIA,IAAIW,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,GAGR,SAASG,UACP,OAAOV,KAFTA,KAAKW,WAAaX,KAMlB,IAAIY,EAAiB,CACnBC,QAAOb,KACPc,OAAMd,KACNe,OAAMf,KACNgB,SAAQhB,KACRiB,SAAQjB,KACRkB,SAAQlB,KACRmB,SAAQnB,KAERoB,MAAKpB,KACLqB,UAASX,QACTY,UAAStB,KACTuB,cAAavB,KACbwB,aAAYd,QACZe,OAAMzB,KACN0B,WAAUhB,QACViB,QAAOjB,QACPkB,YAAWlB,QACXmB,QAAOnB,QACPoB,QAAOpB,QAEPqB,iBAAgBjC,uBAChBC,oBAAmBF,eAKrB,OAFAe,EAAeoB,UAAYpB,EAEpBA,I,mCCnDTnB,EAAOC,QAFoB,gD,mCCTZ,SAASuC,WAetB,OAdAA,SAAW5C,OAAO6C,QAAU,SAAU/C,GACpC,IAAK,IAAID,EAAI,EAAGA,EAAIiD,UAAU5C,OAAQL,IAAK,CACzC,IAAIH,EAASoD,UAAUjD,GAEvB,IAAK,IAAID,KAAOF,EACVM,OAAO+C,UAAUC,eAAeC,KAAKvD,EAAQE,KAC/CE,EAAOF,GAAOF,EAAOE,IAK3B,OAAOE,IAGOoD,MAAMC,KAAML,W,qBCdf,SAASM,eAAeC,EAAUC,GAC/CD,EAASN,UAAY/C,OAAOuD,OAAOD,EAAWP,WAC9CM,EAASN,UAAUS,YAAcH,EACjCI,YAAeJ,EAAUC,G,OCJ3B,SAASI,iBAAiBC,EAAWC,GACnC,OAAOD,EAAUE,QAAQ,IAAIC,OAAO,UAAYF,EAAgB,YAAa,KAAM,MAAMC,QAAQ,OAAQ,KAAKA,QAAQ,aAAc,I,sCCDvH,GACH,ECAGE,MAAMC,cAAc,MCwG/BC,EAA0B,SAAUC,GAGtC,SAASD,WAAWrD,EAAOuD,GACzB,IAAIC,EAEJA,EAAQF,EAAiBjB,KAAKE,KAAMvC,EAAOuD,IAAYhB,KACvD,IAGIkB,EADAC,EAFcH,MAEuBI,WAAa3D,EAAM4D,MAAQ5D,EAAM0D,OAuB1E,OArBAF,EAAMK,aAAe,KAEjB7D,EAAM8D,GACJJ,GACFD,EA/GY,SAgHZD,EAAMK,aA/GQ,YAiHdJ,EAhHa,UAoHbA,EADEzD,EAAM+D,eAAiB/D,EAAMgE,aAtHhB,YACH,SA4HhBR,EAAMS,MAAQ,CACZC,SAAQT,GAEVD,EAAMW,aAAe,KACdX,EA/BThB,eAAea,WAAYC,GAkC3BD,WAAWe,yBAA2B,SAASA,yBAAyBC,EAAMC,GAG5E,OAFaD,EAAKP,IArIC,cAuILQ,EAAUJ,OACf,CACLA,SAxIY,UA4IT,MAmBT,IAAIK,EAASlB,WAAWlB,UA0OxB,OAxOAoC,EAAOC,kBAAoB,SAASA,oBAClCjC,KAAKkC,cAAa,EAAMlC,KAAKsB,eAG/BU,EAAOG,mBAAqB,SAASA,mBAAmBC,GACtD,IAAIC,EAAa,KAEjB,GAAID,IAAcpC,KAAKvC,MAAO,CAC5B,IAAIkE,EAAS3B,KAAK0B,MAAMC,OAEpB3B,KAAKvC,MAAM8D,GA1KC,aA2KVI,GA1KS,YA0KcA,IACzBU,EA5KY,yBA+KVV,GA9KS,YA8KcA,IACzBU,EA9KW,WAmLjBrC,KAAKkC,cAAa,EAAOG,IAG3BL,EAAOM,qBAAuB,SAASA,uBACrCtC,KAAKuC,sBAGPP,EAAOQ,YAAc,SAASA,cAC5B,IACIC,EAAMpB,EAAOF,EADbuB,EAAU1C,KAAKvC,MAAMiF,QAWzB,OATAD,EAAOpB,EAAQF,EAASuB,EAET,MAAXA,GAAsC,iBAAZA,IAC5BD,EAAOC,EAAQD,KACfpB,EAAQqB,EAAQrB,MAEhBF,OAA4BwB,IAAnBD,EAAQvB,OAAuBuB,EAAQvB,OAASE,GAGpD,CACLoB,OAAMA,EACNpB,QAAOA,EACPF,SAAQA,IAIZa,EAAOE,aAAe,SAASA,aAAaU,EAAUP,QACnC,IAAbO,IACFA,GAAW,GAGM,OAAfP,GAEFrC,KAAKuC,qBAtNW,aAwNZF,EACFrC,KAAK6C,aAAaD,GAElB5C,KAAK8C,eAEE9C,KAAKvC,MAAM+D,eA9NN,WA8NuBxB,KAAK0B,MAAMC,QAChD3B,KAAK+C,SAAS,CACZpB,SAjOe,eAsOrBK,EAAOa,aAAe,SAASA,aAAaD,GAC1C,IAAII,EAAShD,KAETqB,EAAQrB,KAAKvC,MAAM4D,MACnB4B,EAAYjD,KAAKgB,QAAUhB,KAAKgB,QAAQI,WAAawB,EAErDM,EAAQlD,KAAKvC,MAAM0F,QAAU,CAACF,GAAa,CAACG,IAASC,YAAYrD,MAAOiD,GACxEK,EAAYJ,EAAM,GAClBK,EAAiBL,EAAM,GAEvBM,EAAWxD,KAAKwC,cAChBiB,EAAeR,EAAYO,EAASrC,OAASqC,EAASnC,OAGrDuB,IAAavB,GAASqC,EACzB1D,KAAK2D,aAAa,CAChBhC,SAnPa,YAoPZ,WACDqB,EAAOvF,MAAMmG,UAAUN,OAK3BtD,KAAKvC,MAAMoG,QAAQP,EAAWC,GAC9BvD,KAAK2D,aAAa,CAChBhC,SA7PgB,aA8Pf,WACDqB,EAAOvF,MAAMqG,WAAWR,EAAWC,GAEnCP,EAAOe,gBAAgBN,GAAc,WACnCT,EAAOW,aAAa,CAClBhC,SAlQW,YAmQV,WACDqB,EAAOvF,MAAMmG,UAAUN,EAAWC,cAM1CvB,EAAOc,YAAc,SAASA,cAC5B,IAAIkB,EAAShE,KAETyC,EAAOzC,KAAKvC,MAAMgF,KAClBe,EAAWxD,KAAKwC,cAChBc,EAAYtD,KAAKvC,MAAM0F,aAAUR,EAAYS,IAASC,YAAYrD,MAEjEyC,IAAQiB,GASb1D,KAAKvC,MAAMwG,OAAOX,GAClBtD,KAAK2D,aAAa,CAChBhC,SA3Re,YA4Rd,WACDqC,EAAOvG,MAAMyG,UAAUZ,GAEvBU,EAAOD,gBAAgBP,EAASf,MAAM,WACpCuB,EAAOL,aAAa,CAClBhC,SApSU,WAqST,WACDqC,EAAOvG,MAAM0G,SAASb,aAlB1BtD,KAAK2D,aAAa,CAChBhC,SArRY,WAsRX,WACDqC,EAAOvG,MAAM0G,SAASb,OAqB5BtB,EAAOO,mBAAqB,SAASA,qBACT,OAAtBvC,KAAK4B,eACP5B,KAAK4B,aAAawC,SAClBpE,KAAK4B,aAAe,OAIxBI,EAAO2B,aAAe,SAASA,aAAaU,EAAWC,GAIrDA,EAAWtE,KAAKuE,gBAAgBD,GAChCtE,KAAK+C,SAASsB,EAAWC,IAG3BtC,EAAOuC,gBAAkB,SAASA,gBAAgBD,GAChD,IAAIE,EAASxE,KAETyE,GAAS,EAcb,OAZAzE,KAAK4B,aAAe,SAAU8C,GACxBD,IACFA,GAAS,EACTD,EAAO5C,aAAe,KACtB0C,EAASI,KAIb1E,KAAK4B,aAAawC,OAAS,WACzBK,GAAS,GAGJzE,KAAK4B,cAGdI,EAAO+B,gBAAkB,SAASA,gBAAgBrB,EAASiC,GACzD3E,KAAKuE,gBAAgBI,GACrB,IAAI1F,EAAOe,KAAKvC,MAAM0F,QAAUnD,KAAKvC,MAAM0F,QAAQyB,QAAUxB,IAASC,YAAYrD,MAC9E6E,EAA0C,MAAXnC,IAAoB1C,KAAKvC,MAAMqH,eAElE,GAAK7F,IAAQ4F,EAAb,CAKA,GAAI7E,KAAKvC,MAAMqH,eAAgB,CAC7B,IAAIC,EAAQ/E,KAAKvC,MAAM0F,QAAU,CAACnD,KAAK4B,cAAgB,CAAC3C,EAAMe,KAAK4B,cAC/D0B,EAAYyB,EAAM,GAClBC,EAAoBD,EAAM,GAE9B/E,KAAKvC,MAAMqH,eAAexB,EAAW0B,GAGxB,MAAXtC,GACFuC,WAAWjF,KAAK4B,aAAcc,QAb9BuC,WAAWjF,KAAK4B,aAAc,IAiBlCI,EAAOkD,OAAS,SAASA,SACvB,IAAIvD,EAAS3B,KAAK0B,MAAMC,OAExB,GA1WmB,cA0WfA,EACF,OAAO,KAGT,IAAIwD,EAAcnF,KAAKvC,MACnB2H,EAAWD,EAAYC,SAgBvBC,GAfMF,EAAY5D,GACF4D,EAAY1D,aACX0D,EAAY3D,cACnB2D,EAAYhE,OACbgE,EAAY9D,MACb8D,EAAY1C,KACT0C,EAAYzC,QACLyC,EAAYL,eACnBK,EAAYtB,QACTsB,EAAYrB,WACbqB,EAAYvB,UACfuB,EAAYlB,OACTkB,EAAYjB,UACbiB,EAAYhB,SACbgB,EAAYhC,QACV7G,YAA8B6I,EAAa,CAAC,WAAY,KAAM,eAAgB,gBAAiB,SAAU,QAAS,OAAQ,UAAW,iBAAkB,UAAW,aAAc,YAAa,SAAU,YAAa,WAAY,aAEjP,OAGEvE,IAAM0E,cAAcC,EAAuBC,SAAU,CACnDC,QAAO,MACc,mBAAbL,EAA0BA,EAASzD,EAAQ0D,GAAczE,IAAM8E,aAAa9E,IAAM+E,SAASC,KAAKR,GAAWC,KAIlHvE,WAzSqB,CA0S5BF,IAAMiF,WA4LR,SAASC,QA1LThF,EAAWiF,YAAcR,EACzBzE,EAAWkF,UAuLP,GAIJlF,EAAWmF,aAAe,CACxB1E,MAAI,EACJE,gBAAc,EACdD,iBAAe,EACfL,UAAQ,EACRE,SAAO,EACPoB,QAAM,EACNoB,UAASiC,KACThC,aAAYgC,KACZlC,YAAWkC,KACX7B,SAAQ6B,KACR5B,YAAW4B,KACX3B,WAAU2B,MAEZhF,EAAWoF,UAvlBY,YAwlBvBpF,EAAWqF,OAvlBS,SAwlBpBrF,EAAWsF,SAvlBW,WAwlBtBtF,EAAWuF,QAvlBU,UAwlBrBvF,EAAWwF,QAvlBU,UAwlBNxF,QCplBXyF,EAAc,SAASA,YAAYtH,EAAMuH,GAC3C,OAAOvH,GAAQuH,GAAWA,EAAQC,MAAM,KAAKC,SAAQ,SAAUC,GAC7D,OJdW,SAASJ,wBAAYzH,EAAS8H,GACvC9H,EAAQ+H,UACV/H,EAAQ+H,UAAUC,OAAOF,GACa,iBAAtB9H,EAAQ8H,UAExB9H,EAAQ8H,UAAYrG,iBAAiBzB,EAAQ8H,UAAWA,GAExD9H,EAAQiI,aAAa,QAASxG,iBAAiBzB,EAAQ8H,WAAa9H,EAAQ8H,UAAUI,SAAW,GAAIJ,IIO9FK,CAAehI,EAAM0H,OA0E5BO,EAA6B,SAAUnG,GAGzC,SAASmG,gBAGP,IAFA,IAAIjG,EAEKkG,EAAOxH,UAAU5C,OAAQqK,EAAO,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EF,EAAKE,GAAQ3H,UAAU2H,GAgHzB,OA7GArG,EAAQF,EAAiBjB,KAAKC,MAAMgB,EAAkB,CAACf,MAAMuH,OAAOH,KAAUpH,MACxEwH,eAAiB,CACrBrG,SAAQ,GACRE,QAAO,GACPoB,OAAM,IAGRxB,EAAM4C,QAAU,SAAUP,EAAWC,GACnC,IAAIkE,EAAwBxG,EAAMyG,iBAAiBpE,EAAWC,GAC1DtE,EAAOwI,EAAsB,GAC7BxE,EAAYwE,EAAsB,GAEtCxG,EAAM0G,cAAc1I,EAAM,QAE1BgC,EAAM2G,SAAS3I,EAAMgE,EAAY,SAAW,QAAS,QAEjDhC,EAAMxD,MAAMoG,SACd5C,EAAMxD,MAAMoG,QAAQP,EAAWC,IAInCtC,EAAM6C,WAAa,SAAUR,EAAWC,GACtC,IAAIsE,EAAyB5G,EAAMyG,iBAAiBpE,EAAWC,GAC3DtE,EAAO4I,EAAuB,GAG9BC,EAFYD,EAAuB,GAEhB,SAAW,QAElC5G,EAAM2G,SAAS3I,EAAM6I,EAAM,UAEvB7G,EAAMxD,MAAMqG,YACd7C,EAAMxD,MAAMqG,WAAWR,EAAWC,IAItCtC,EAAM2C,UAAY,SAAUN,EAAWC,GACrC,IAAIwE,EAAyB9G,EAAMyG,iBAAiBpE,EAAWC,GAC3DtE,EAAO8I,EAAuB,GAG9BD,EAFYC,EAAuB,GAEhB,SAAW,QAElC9G,EAAM0G,cAAc1I,EAAM6I,GAE1B7G,EAAM2G,SAAS3I,EAAM6I,EAAM,QAEvB7G,EAAMxD,MAAMmG,WACd3C,EAAMxD,MAAMmG,UAAUN,EAAWC,IAIrCtC,EAAMgD,OAAS,SAAUX,GACvB,IACIrE,EADyBgC,EAAMyG,iBAAiBpE,GAClB,GAElCrC,EAAM0G,cAAc1I,EAAM,UAE1BgC,EAAM0G,cAAc1I,EAAM,SAE1BgC,EAAM2G,SAAS3I,EAAM,OAAQ,QAEzBgC,EAAMxD,MAAMwG,QACdhD,EAAMxD,MAAMwG,OAAOX,IAIvBrC,EAAMiD,UAAY,SAAUZ,GAC1B,IACIrE,EADyBgC,EAAMyG,iBAAiBpE,GAClB,GAElCrC,EAAM2G,SAAS3I,EAAM,OAAQ,UAEzBgC,EAAMxD,MAAMyG,WACdjD,EAAMxD,MAAMyG,UAAUZ,IAI1BrC,EAAMkD,SAAW,SAAUb,GACzB,IACIrE,EADyBgC,EAAMyG,iBAAiBpE,GAClB,GAElCrC,EAAM0G,cAAc1I,EAAM,QAE1BgC,EAAM2G,SAAS3I,EAAM,OAAQ,QAEzBgC,EAAMxD,MAAM0G,UACdlD,EAAMxD,MAAM0G,SAASb,IAIzBrC,EAAMyG,iBAAmB,SAAUpE,EAAWC,GAC5C,OAAOtC,EAAMxD,MAAM0F,QAAU,CAAClC,EAAMxD,MAAM0F,QAAQyB,QAAStB,GACzD,CAACA,EAAWC,IAGhBtC,EAAM+G,cAAgB,SAAUF,GAC9B,IAAIG,EAAahH,EAAMxD,MAAMwK,WACzBC,EAA2C,iBAAfD,EAE5BE,EAAgBD,EAAqB,IAD5BA,GAAsBD,EAAaA,EAAa,IAAM,IACZH,EAAOG,EAAWH,GAGzE,MAAO,CACLK,gBAAeA,EACfC,kBAJoBF,EAAqBC,EAAgB,UAAYF,EAAWH,EAAO,UAKvFO,gBAJkBH,EAAqBC,EAAgB,QAAUF,EAAWH,EAAO,UAQhF7G,EAtHThB,eAAeiH,cAAenG,GAyH9B,IAAIiB,EAASkF,cAActH,UA6D3B,OA3DAoC,EAAO4F,SAAW,SAASA,SAAS3I,EAAM6I,EAAMQ,GAC9C,IAAI1B,EAAY5G,KAAKgI,cAAcF,GAAMQ,EAAQ,aAG7CD,EADsBrI,KAAKgI,cAAc,SACLK,cAE3B,WAATP,GAA+B,SAAVQ,GAAoBD,IAC3CzB,GAAa,IAAMyB,GAKP,WAAVC,GAEFrJ,GAAQA,EAAKsJ,UAGX3B,IACF5G,KAAKwH,eAAeM,GAAMQ,GAAS1B,EAhOzB,SAASgB,SAAS3I,EAAMuH,GAC/BvH,GAAQuH,GAAWA,EAAQC,MAAM,KAAKC,SAAQ,SAAUC,GAC7D,OCXW,SAASiB,kBAAS9I,EAAS8H,GACpC9H,EAAQ+H,UAAW/H,EAAQ+H,UAAU2B,IAAI5B,GCFhC,SAAS6B,SAAS3J,EAAS8H,GACxC,OAAI9H,EAAQ+H,YAAoBD,GAAa9H,EAAQ+H,UAAU6B,SAAS9B,IACkC,KAAlG,KAAO9H,EAAQ8H,UAAUI,SAAWlI,EAAQ8H,WAAa,KAAK5J,QAAQ,IAAM4J,EAAY,KDA9B6B,CAAS3J,EAAS8H,KAA6C,iBAAtB9H,EAAQ8H,UAAwB9H,EAAQ8H,UAAY9H,EAAQ8H,UAAY,IAAMA,EAAe9H,EAAQiI,aAAa,SAAUjI,EAAQ8H,WAAa9H,EAAQ8H,UAAUI,SAAW,IAAM,IAAMJ,IDU5R+B,CAAY1J,EAAM0H,MAgOvBiC,CAAU3J,EAAM2H,KAIpB5E,EAAO2F,cAAgB,SAASA,cAAc1I,EAAM6I,GAClD,IAAIe,EAAwB7I,KAAKwH,eAAeM,GAC5CK,EAAgBU,EAAsBC,KACtCV,EAAkBS,EAAsBpE,OACxC4D,EAAgBQ,EAAsBE,KAC1C/I,KAAKwH,eAAeM,GAAQ,GAExBK,GACF5B,EAAYtH,EAAMkJ,GAGhBC,GACF7B,EAAYtH,EAAMmJ,GAGhBC,GACF9B,EAAYtH,EAAMoJ,IAItBrG,EAAOkD,OAAS,SAASA,SACvB,IAAIC,EAAcnF,KAAKvC,MAEnBA,GADI0H,EAAY8C,WACR3L,YAA8B6I,EAAa,CAAC,gBAExD,OAAoBvE,IAAM0E,cAAcxE,EAAYrB,SAAS,GAAIhC,EAAO,CACtEoG,UAAS7D,KAAK6D,QACdD,YAAW5D,KAAK4D,UAChBE,aAAY9D,KAAK8D,WACjBG,SAAQjE,KAAKiE,OACbC,YAAWlE,KAAKkE,UAChBC,WAAUnE,KAAKmE,aAIZ+C,cAvLwB,CAwL/BtG,IAAMiF,WAERqB,EAAcjB,aAAe,CAC3BgC,aAAY,IAEdf,EAAclB,UAiIT,GACUkB","file":"chunk/2.109d8c51.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    ;\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : PropTypes.instanceOf(Element)\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","export default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}"],"sourceRoot":""}