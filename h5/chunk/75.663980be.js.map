{"version":3,"sources":["webpack:///../../../../packages/hooks/src/use-force-update/use-force-update.ts","webpack:///../../../../packages/core/src/utils/format/unit.ts","webpack:///../../../../packages/core/src/utils/base.ts","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/utils/dom/rect.ts","webpack:///../../../../packages/core/src/hooks/use-mounted.ts","webpack:///../../../../packages/core/src/hooks/use-rendered-effect.tsx","webpack:///../../../../packages/core/src/utils/dom/element.ts","webpack:///../../../../packages/core/src/hooks/use-did-effect.ts","webpack:///../../../../packages/core/src/hooks/use-placeholder.tsx","webpack:///../../../../packages/core/src/hooks/use-height.ts","webpack:///../../../../packages/core/src/hooks/use-timeout.ts","webpack:///../../../../packages/core/src/hooks/use-unique-id.ts","webpack:///../../../../packages/core/src/hooks/use-update.ts","webpack:///../../../../packages/core/src/hooks/use-window-resize.tsx","webpack:///../../../../packages/core/src/styles/hairline.ts","webpack:///../../../../packages/core/src/navbar/navbar-left.tsx","webpack:///../../../../packages/core/src/navbar/navbar-right.tsx","webpack:///../../../../packages/core/src/navbar/navbar-title.tsx","webpack:///../../../../packages/core/src/navbar/navbar.tsx","webpack:///../../../../packages/core/src/navbar/index.ts","webpack:///./src/pages/navigation/navbar/index.tsx"],"names":["updateReducer","num","useForceUpdate","useReducer","value","unitToPx","size","addUnitPx","width","height","convertRem","getRootFontSize","doc","document","fontSize","window","rootFontSize","parseFloat","convertPx","convertVw","convertVh","inBrowser","inWechat","process","isValidElement","element","isIconElement","cloneElement","node","className","oldProps","props","newProps","classNames","Block","variant","title","children","demoPrefixClassname","top","left","right","bottom","elementUnref","isWindow","Promise","makeRect","resolve","queryNodesRef","isRootElement","rects","oneElement","queryAllNodesRef","useRenderedEffect","cb","effect","destructorRef","useRef","useEffect","nextTick","destructor","val","elementOrRef","aSelector","selectors","path","getCurrentInstance","ancestorCustomWrapper","ancestor","createSelectorQuery","useState","useMounted","useHeight","style","useTimeout","timerRef","cbRef","msRef","argsRef","stop","useCallback","clearTimeout","start","args","setTimeout","callback","ms","restart","useMemo","useUniqueId","prefix","uniqueIdRef","useWindowResize","onWindowResize","offWindowResize","HAIRLINE_BORDER","prefixClassname","HAIRLINE_BORDER_TOP","HAIRLINE_BORDER_LEFT","HAIRLINE_BORDER_BOTTOM","HAIRLINE_BORDER_SURROUND","HAIRLINE_BORDER_TOP_BOTTOM","HAIRLINE_BORDER_UNSET_TOP_BOTTOM","icon","React","cloneIconElement","Navbar","childrenProp","useNavbarChildren","__children__","undefined","Children","child","type","rootRef","Placeholder","usePlaceholder","Content","ref","fixed","titleProp","bordered","restProps","NavbarDemo","NavLeft","NavRight","Title"],"mappings":"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","file":"chunk/75.663980be.js","sourcesContent":["import { useReducer } from \"react\"\r\n\r\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000\r\n\r\nfunction useForceUpdate(): () => void {\r\n  const [, update] = useReducer(updateReducer, 0)\r\n\r\n  return update\r\n}\r\n\r\nexport default useForceUpdate\r\n","import * as _ from \"lodash\"\r\nimport { CSSProperties } from \"react\"\r\n\r\nexport function addUnitPx(value?: string | number): string {\r\n  return value === undefined ? \"\" : `${unitToPx(value)}px`\r\n}\r\n\r\nexport function getSizeStyle(originSize?: string | number): CSSProperties | undefined {\r\n  if (_.isNumber(originSize) || _.isString(originSize)) {\r\n    const size = addUnitPx(originSize)\r\n    return {\r\n      width: size,\r\n      height: size,\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nexport function getZIndexStyle(zIndex?: string | number) {\r\n  const style: CSSProperties = {}\r\n  if (zIndex !== undefined) {\r\n    style.zIndex = +zIndex\r\n  }\r\n  return style\r\n}\r\n\r\n// cache\r\nlet rootFontSize: number\r\n\r\nfunction getRootFontSize() {\r\n  if (!rootFontSize) {\r\n    const doc = document.documentElement\r\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize\r\n\r\n    rootFontSize = parseFloat(fontSize)\r\n  }\r\n\r\n  return rootFontSize\r\n}\r\n\r\nfunction convertPx(value: string) {\r\n  value = value.replace(/px/g, \"\")\r\n  return +value\r\n}\r\n\r\nfunction convertRem(value: string) {\r\n  value = value.replace(/rem/g, \"\")\r\n  return +value * getRootFontSize()\r\n}\r\n\r\nfunction convertVw(value: string) {\r\n  value = value.replace(/vw/g, \"\")\r\n  return (+value * window.innerWidth) / 100\r\n}\r\n\r\nfunction convertVh(value: string) {\r\n  value = value.replace(/vh/g, \"\")\r\n  return (+value * window.innerHeight) / 100\r\n}\r\n\r\nexport function unitToPx(value: string | number): number {\r\n  if (typeof value === \"number\") {\r\n    return value\r\n  }\r\n\r\n  if (value.includes(\"px\")) {\r\n    return convertPx(value)\r\n  }\r\n  if (value.includes(\"rem\")) {\r\n    return convertRem(value)\r\n  }\r\n  if (value.includes(\"vw\")) {\r\n    return convertVw(value)\r\n  }\r\n  if (value.includes(\"vh\")) {\r\n    return convertVh(value)\r\n  }\r\n\r\n  return parseFloat(value)\r\n}\r\n","export function noop() {}\r\n\r\nexport const inBrowser = typeof document !== \"undefined\" && !!document.scripts\r\nexport const inWechat = process.env.TARO_ENV === \"weapp\"\r\nexport const inSwan = process.env.TARO_ENV === \"swan\"\r\nexport const inAlipay = process.env.TARO_ENV === \"alipay\"\r\nexport const inQQ = process.env.TARO_ENV === \"qq\"\r\nexport const inToutiao = process.env.TARO_ENV === \"tt\"\r\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { inBrowser } from \"../base\"\r\nimport { queryNodesRef, elementUnref, isRootElement, isWindow, queryAllNodesRef } from \"./element\"\r\n\r\nexport interface Rect {\r\n  dataset: Record<string, any>\r\n  id: string\r\n  top: number\r\n  right: number\r\n  bottom: number\r\n  left: number\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport function makeRect(width: number, height: number) {\r\n  return {\r\n    top: 0,\r\n    left: 0,\r\n    right: width,\r\n    bottom: height,\r\n    width,\r\n    height,\r\n  } as Rect\r\n}\r\n\r\nexport function getRect(elementOrRef: any): Promise<Rect> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      if (isWindow(element)) {\r\n        const width = element.innerWidth\r\n        const height = element.innerHeight\r\n        return Promise.resolve(makeRect(width, height))\r\n      }\r\n\r\n      return Promise.resolve(\r\n        (((element as unknown) as HTMLElement).getBoundingClientRect() as unknown) as Rect,\r\n      )\r\n    } else {\r\n      return new Promise<Rect>((resolve) => {\r\n        queryNodesRef(element)\r\n          .boundingClientRect()\r\n          .exec(([rect]) => {\r\n            if (isRootElement(element)) {\r\n              const { width, height } = rect\r\n              resolve(makeRect(width, height))\r\n            } else {\r\n              resolve(rect)\r\n            }\r\n          })\r\n      })\r\n    }\r\n  }\r\n  return Promise.resolve(makeRect(0, 0))\r\n}\r\n\r\nexport function getRects(elementOrRef: any, selector: string): Promise<Rect[]> {\r\n  const element = elementUnref(elementOrRef)\r\n  if (element) {\r\n    if (inBrowser) {\r\n      const rects: Rect[] = []\r\n      ;((element as unknown) as HTMLElement)\r\n        .querySelectorAll(selector)\r\n        .forEach((oneElement) =>\r\n          rects.push((oneElement.getBoundingClientRect() as unknown) as Rect),\r\n        )\r\n      return Promise.resolve(rects)\r\n    } else {\r\n      return new Promise<Rect[]>((resolve) => {\r\n        queryAllNodesRef(element, selector)\r\n          .boundingClientRect()\r\n          .exec(([rects]) => resolve((rects as unknown) as Rect[]))\r\n      })\r\n    }\r\n  }\r\n  return Promise.resolve([])\r\n}\r\n","import useRenderedEffect from \"./use-rendered-effect\"\r\n\r\nexport default function useMounted(cb: (...args: any[]) => any) {\r\n  useRenderedEffect(cb, [])\r\n}\r\n","import { nextTick } from \"@tarojs/taro\"\r\nimport * as _ from \"lodash\"\r\nimport { DependencyList, EffectCallback, useEffect, useRef } from \"react\"\r\n\r\nfunction useRenderedEffect(effect: EffectCallback, deps?: DependencyList) {\r\n  const destructorRef = useRef<() => void>()\r\n\r\n  useEffect(\r\n    () => {\r\n      nextTick(() => {\r\n        const destructor = effect?.()\r\n        if (_.isFunction(destructor)) {\r\n          destructorRef.current = destructor\r\n        }\r\n      })\r\n\r\n      return destructorRef.current\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    deps,\r\n  )\r\n}\r\n\r\nexport default useRenderedEffect\r\n","import { TaroElement } from \"@tarojs/runtime\"\r\nimport { createSelectorQuery, getCurrentInstance, useRouter } from \"@tarojs/taro\"\r\nimport * as _ from \"lodash\"\r\nimport { inWechat } from \"../base\"\r\n\r\nexport const ELEMENT_NODE_TYPE = 1\r\n\r\nexport function isWindow(val: unknown): val is Window {\r\n  return val === window\r\n}\r\n\r\nexport function isBodyElement(val: unknown): boolean {\r\n  return val === document.body\r\n}\r\n\r\nexport function elementUnref(elementOrRef: any): TaroElement {\r\n  if (elementOrRef === undefined || elementOrRef === null) {\r\n    return elementOrRef\r\n  }\r\n  if (\"current\" in elementOrRef) {\r\n    return elementOrRef.current\r\n  }\r\n  return elementOrRef\r\n}\r\n\r\nexport function isRootElement(node?: TaroElement) {\r\n  return node?.nodeType === ELEMENT_NODE_TYPE && node?.tagName === \"ROOT\"\r\n}\r\n\r\nexport function matchSelector(aSelector?: string, bSelector?: string) {\r\n  return aSelector === bSelector\r\n}\r\n\r\nexport function getElementSelector(id?: string, className?: string) {\r\n  const selectors: string[] = []\r\n  if (!_.isEmpty(id)) {\r\n    selectors.push(`#${id}`)\r\n  }\r\n  if (!_.isEmpty(className)) {\r\n    selectors.push(_.split(className, \" \").join(\".\"))\r\n  }\r\n  return selectors.join(\".\")\r\n}\r\n\r\nexport function prependPageSelector(selector?: string) {\r\n  const path = getCurrentInstance().router?.path\r\n  return path ? `${path}__${selector}` : selector\r\n}\r\n\r\nexport function usePrependPageSelector(selector?: string) {\r\n  const { path } = useRouter()\r\n  return path ? `${path}__${selector}` : selector\r\n}\r\n\r\n// Fix nested in CustomWrapper is undefined\r\n// See: https://github.com/mallfoundry/taroify/pull/143\r\nfunction ancestorCustomWrapper(element: TaroElement) {\r\n  if (inWechat) {\r\n    let ancestor = element\r\n    while (ancestor.parentNode && !isRootElement(ancestor.parentNode as TaroElement)) {\r\n      ancestor = ancestor.parentNode as TaroElement\r\n    }\r\n\r\n    if (ancestor && ancestor !== element) {\r\n      return ancestor\r\n    }\r\n  }\r\n}\r\n\r\nexport function queryNodesRef(element: TaroElement) {\r\n  if (isRootElement(element)) {\r\n    return createSelectorQuery().selectViewport()\r\n  }\r\n\r\n  const ancestor = ancestorCustomWrapper(element)\r\n  if (ancestor) {\r\n    return createSelectorQuery().select(`#${ancestor.uid}>>>#${element.uid}`)\r\n  }\r\n\r\n  return createSelectorQuery().select(\"#\" + element.uid)\r\n}\r\n\r\nexport function queryAllNodesRef(element: TaroElement, selector?: string) {\r\n  if (isRootElement(element)) {\r\n    return createSelectorQuery().selectViewport()\r\n  }\r\n\r\n  const ancestor = ancestorCustomWrapper(element)\r\n  if (ancestor) {\r\n    return createSelectorQuery().selectAll(`#${ancestor.uid}>>>#${element.uid}${selector}`)\r\n  }\r\n\r\n  return createSelectorQuery().selectAll(\"#\" + element.uid + selector)\r\n}\r\n","import { DependencyList, EffectCallback, useEffect, useRef } from \"react\"\r\n\r\nfunction useDidEffect(effect: EffectCallback, deps?: DependencyList) {\r\n  const mounted = useRef(false)\r\n\r\n  useEffect(\r\n    () => {\r\n      if (mounted.current) {\r\n        effect?.()\r\n      } else {\r\n        mounted.current = true\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    deps,\r\n  )\r\n}\r\n\r\nexport default useDidEffect\r\n","import { View } from \"@tarojs/components\"\r\nimport * as React from \"react\"\r\nimport { addUnitPx } from \"../utils/format/unit\"\r\nimport useHeight from \"./use-height\"\r\n\r\ninterface UsePlaceholderOptions {\r\n  className?: string\r\n}\r\n\r\nexport default function usePlaceholder(contentRef: any, { className }: UsePlaceholderOptions) {\r\n  const height = useHeight(contentRef)\r\n\r\n  return ({\r\n    // @ts-ignore\r\n    children,\r\n  }) => (\r\n    <View\r\n      className={className}\r\n      style={{ height: height ? `${addUnitPx(height)}` : \"\" }}\r\n      children={children}\r\n    />\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { getRect } from \"../utils/dom/rect\"\r\nimport useMounted from \"./use-mounted\"\r\n\r\nexport default function useHeight(elementOrRef: any) {\r\n  const [height, setHeight] = useState<number>(0)\r\n  useMounted(() =>\r\n    getRect(elementOrRef)\r\n      .then(({ height }) => height)\r\n      .then(setHeight),\r\n  )\r\n  return height\r\n}\r\n","import { useCallback, useMemo, useRef } from \"react\"\r\n\r\ntype UseTimeoutCallback = (...args: any[]) => void\r\n\r\nfunction useTimeout() {\r\n  const timerRef = useRef<NodeJS.Timeout>()\r\n\r\n  const cbRef = useRef<UseTimeoutCallback>()\r\n  const msRef = useRef<number>()\r\n  const argsRef = useRef<any[]>()\r\n\r\n  const stop = useCallback(() => {\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current)\r\n      timerRef.current = undefined\r\n    }\r\n  }, [])\r\n\r\n  const start = useCallback((callback: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n    if (timerRef.current) {\r\n      return\r\n    }\r\n    cbRef.current = callback\r\n    msRef.current = ms\r\n    argsRef.current = args\r\n    timerRef.current = setTimeout(callback, ms, args)\r\n  }, [])\r\n\r\n  const restart = useCallback(\r\n    (callback?: UseTimeoutCallback, ms?: number, ...args: any[]) => {\r\n      stop()\r\n      if (callback) {\r\n        start(callback, ms, args)\r\n      } else if (cbRef.current) {\r\n        start(cbRef.current, msRef.current, argsRef.current)\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [],\r\n  )\r\n\r\n  return useMemo(\r\n    () => ({\r\n      restart,\r\n      start,\r\n      stop,\r\n    }),\r\n    [restart, start, stop],\r\n  )\r\n}\r\n\r\nexport default useTimeout\r\n","import * as _ from \"lodash\"\r\nimport { useRef } from \"react\"\r\n\r\nfunction useUniqueId(prefix: string = \"t_\") {\r\n  const uniqueIdRef = useRef(_.uniqueId(prefix))\r\n  return uniqueIdRef.current\r\n}\r\n\r\nexport default useUniqueId\r\n","import useUpdate from \"@taroify/hooks/use-force-update\"\r\n\r\nexport default useUpdate\r\n","import { offWindowResize, onWindowResize } from \"@tarojs/taro\"\r\nimport { useEffect } from \"react\"\r\n\r\ninterface Size {\r\n  /** 变化后的窗口高度，单位 px */\r\n  windowHeight: number\r\n  /** 变化后的窗口宽度，单位 px */\r\n  windowWidth: number\r\n}\r\n\r\ninterface CallbackResult {\r\n  size: Size\r\n}\r\n\r\ntype WindowResizeCallback = (result: CallbackResult) => void\r\n\r\nfunction useWindowResize(callback: WindowResizeCallback) {\r\n  useEffect(() => {\r\n    onWindowResize?.(callback)\r\n\r\n    return () =>\r\n      offWindowResize?.(\r\n        // @ts-ignore\r\n        callback,\r\n      )\r\n  }, [callback])\r\n}\r\n\r\nexport default useWindowResize\r\n","import { prefixClassname } from \"./prefix\"\n\nexport const HAIRLINE_BORDER = prefixClassname(\"hairline\")\nexport const HAIRLINE_BORDER_TOP = `${HAIRLINE_BORDER}--top`\nexport const HAIRLINE_BORDER_LEFT = `${HAIRLINE_BORDER}--left`\nexport const HAIRLINE_BORDER_BOTTOM = `${HAIRLINE_BORDER}--bottom`\nexport const HAIRLINE_BORDER_SURROUND = `${HAIRLINE_BORDER}--surround`\nexport const HAIRLINE_BORDER_TOP_BOTTOM = `${HAIRLINE_BORDER}--top-bottom`\nexport const HAIRLINE_BORDER_UNSET_TOP_BOTTOM = `${HAIRLINE_BORDER}-unset--top-bottom`\n","import { ArrowLeft } from \"@taroify/icons\"\r\nimport { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { isValidElement, ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface NavBarLeftProps extends ViewProps {\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport function NavBarLeft(props: NavBarLeftProps) {\r\n  const { className, icon = <ArrowLeft />, children, ...restProps } = props\r\n  return (\r\n    <View className={classNames(prefixClassname(\"navbar__left\"), className)} {...restProps}>\r\n      {icon && cloneIconElement(icon, { className: prefixClassname(\"navbar__icon\") })}\r\n      {isValidElement(children) ? (\r\n        children\r\n      ) : (\r\n        <View className={prefixClassname(\"navbar__text\")} children={children} />\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default NavBarLeft\r\n","import { cloneIconElement } from \"@taroify/icons/utils\"\r\nimport { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { isValidElement, ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface NavBarRightProps extends ViewProps {\r\n  icon?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport function NavBarRight(props: NavBarRightProps) {\r\n  const { className, icon, children, ...restProps } = props\r\n\r\n  return (\r\n    <View className={classNames(prefixClassname(\"navbar__right\"), className)} {...restProps}>\r\n      {icon && cloneIconElement(icon, { className: prefixClassname(\"navbar__icon\") })}\r\n      {isValidElement(children) ? (\r\n        children\r\n      ) : (\r\n        <View className={prefixClassname(\"navbar__text\")} children={children} />\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default NavBarRight\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\n\r\ninterface NavBarTitleProps extends ViewProps {\r\n  className?: string\r\n  children?: ReactNode\r\n}\r\n\r\nexport function NavBarTitle(props: NavBarTitleProps) {\r\n  const { className, ...restProps } = props\r\n  return <View className={classNames(prefixClassname(\"navbar__title\"), className)} {...restProps} />\r\n}\r\n\r\nexport default NavBarTitle\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { Children, isValidElement, ReactElement, ReactNode, useMemo, useRef } from \"react\"\r\nimport { usePlaceholder } from \"../hooks\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport { HAIRLINE_BORDER_BOTTOM } from \"../styles/hairline\"\r\nimport NavBarLeft from \"./navbar-left\"\r\nimport NavBarRight from \"./navbar-right\"\r\nimport NavBarTitle from \"./navbar-title\"\r\n\r\ninterface NavbarChildren {\r\n  left?: ReactNode\r\n  right?: ReactNode\r\n  title?: ReactNode\r\n}\r\n\r\nfunction useNavbarChildren(children?: ReactNode): NavbarChildren {\r\n  return useMemo(() => {\r\n    const __children__: NavbarChildren = {\r\n      left: undefined,\r\n      right: undefined,\r\n      title: undefined,\r\n    }\r\n\r\n    Children.forEach(children, (child: ReactNode) => {\r\n      if (isValidElement(child)) {\r\n        const element = child as ReactElement\r\n\r\n        const { type } = element\r\n        if (type === NavBarLeft) {\r\n          __children__.left = element\r\n        } else if (type === NavBarRight) {\r\n          __children__.right = element\r\n        } else if (type === NavBarTitle) {\r\n          __children__.title = element\r\n        }\r\n      }\r\n    })\r\n    return __children__\r\n  }, [children])\r\n}\r\n\r\nexport interface NavbarProps extends ViewProps {\r\n  bordered?: boolean\r\n  placeholder?: boolean\r\n  fixed?: boolean\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Navbar(props: NavbarProps) {\r\n  const {\r\n    className,\r\n    bordered,\r\n    fixed,\r\n    placeholder,\r\n    title: titleProp,\r\n    children: childrenProp,\r\n    ...restProps\r\n  } = props\r\n  const { left, title, right } = useNavbarChildren(childrenProp)\r\n  const rootRef = useRef()\r\n\r\n  const Placeholder = usePlaceholder(rootRef, { className: \"navbar__placeholder\" })\r\n\r\n  const Content = useMemo(\r\n    () => (\r\n      <View\r\n        ref={rootRef}\r\n        className={classNames(\r\n          prefixClassname(\"navbar\"),\r\n          {\r\n            [HAIRLINE_BORDER_BOTTOM]: bordered,\r\n            [prefixClassname(\"navbar--fixed\")]: fixed,\r\n          },\r\n          className,\r\n        )}\r\n        {...restProps}\r\n      >\r\n        <View className={classNames(prefixClassname(\"navbar__content\"))}>\r\n          {left}\r\n          {title ?? (\r\n            <View className={classNames(prefixClassname(\"navbar__title\"))} children={titleProp} />\r\n          )}\r\n          {right}\r\n        </View>\r\n      </View>\r\n    ),\r\n    [bordered, className, fixed, left, restProps, right, title, titleProp],\r\n  )\r\n\r\n  if (fixed && placeholder) {\r\n    return <Placeholder children={Content} />\r\n  }\r\n\r\n  return Content\r\n}\r\n\r\nexport default Navbar\r\n","import NavbarComponent, { NavbarProps } from \"./navbar\"\r\nimport NavBarLeft from \"./navbar-left\"\r\nimport NavBarRight from \"./navbar-right\"\r\nimport NavBarTitle from \"./navbar-title\"\r\n\r\ninterface NavbarInterface {\r\n  (props: NavbarProps): JSX.Element\r\n\r\n  NavLeft: typeof NavBarLeft\r\n  NavRight: typeof NavBarRight\r\n  Title: typeof NavBarTitle\r\n}\r\n\r\nconst Navbar = NavbarComponent as NavbarInterface\r\n\r\nNavbar.NavLeft = NavBarLeft\r\nNavbar.NavRight = NavBarRight\r\nNavbar.Title = NavBarTitle\r\n\r\nexport default Navbar\r\n","import { Navbar } from \"@taroify/core\"\r\nimport { Search } from \"@taroify/icons\"\r\nimport * as React from \"react\"\r\nimport Block from \"../../../components/block\"\r\nimport Page from \"../../../components/page\"\r\nimport \"./index.scss\"\r\n\r\nexport default function NavbarDemo() {\r\n  return (\r\n    <Page title=\"Navbar 导航栏\" className=\"navbar-demo\">\r\n      <Block title=\"基础用法\">\r\n        <Navbar title=\"标题\">\r\n          <Navbar.NavLeft>返回</Navbar.NavLeft>\r\n          <Navbar.NavRight>按钮</Navbar.NavRight>\r\n        </Navbar>\r\n      </Block>\r\n      <Block title=\"使用 NavLeft 和 NavRight\">\r\n        <Navbar>\r\n          <Navbar.NavLeft>返回</Navbar.NavLeft>\r\n          <Navbar.Title>标题</Navbar.Title>\r\n          <Navbar.NavRight icon={<Search />} />\r\n        </Navbar>\r\n      </Block>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}