{"version":3,"sources":["webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isEmpty.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isNumber.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isString.js","webpack:///../../../../packages/icons/src/utils/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/isBoolean.js","webpack:///./src/components/block.tsx","webpack:///../../../../packages/core/src/utils/validate/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/endsWith.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toNumber.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toInteger.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseClamp.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_createRelationalOperation.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseTrim.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_trimmedEndIndex.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/toFinite.js","webpack:///../../../../packages/core/src/badge/style/index.ts","webpack:///../../../../packages/core/src/badge/badge-wrapper.context.ts","webpack:///../../../../packages/core/src/badge/badge-wrapper.tsx","webpack:///../../../../packages/core/src/badge/badge.tsx","webpack:///../../../../packages/core/src/badge/use-badge.tsx","webpack:///../../../../packages/core/src/badge/use-badge-wrapper.tsx","webpack:///../../../../packages/core/src/badge/index.ts","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/gt.js","webpack:///D:/Projects/WebstormProjects/vant-taro/node_modules/lodash/_baseGt.js","webpack:///./src/pages/display/badge/index.tsx"],"names":["baseKeys","require","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","module","exports","isEmpty","value","splice","length","tag","size","key","call","baseGetTag","isObjectLike","isNumber","isString","isValidElement","element","isIconElement","cloneElement","node","className","oldProps","props","newProps","classNames","isBoolean","Block","variant","title","children","demoPrefixClassname","displayName","baseClamp","baseToString","toInteger","toString","endsWith","string","target","position","end","undefined","slice","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","test","toFinite","result","remainder","number","lower","upper","createRelationalOperation","operator","trimmedEndIndex","reTrimStart","replace","reWhitespace","index","charAt","createContext","BadgeWrapper","BadgeWrapperContext","prefixClassname","Badge","content","fixed","wrapperContext","useContext","hasChildren","noChildren","fixedProp","useMemo","contentProp","badge","dot","React","badgeProps","isElementOf","wrapper","useBadgeWrapper","acquireCloneElement","baseGt","gt","BadgeDemo","max"],"mappings":"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","file":"chunk/71.996fea06.js","sourcesContent":["var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","import classNames from \"classnames\"\nimport * as _ from \"lodash\"\nimport { cloneElement, isValidElement, ReactElement, ReactNode } from \"react\"\nimport { ICON_TYPE, IconProps } from \"../shared\"\n\nexport function isIconElement(node?: ReactNode): boolean {\n  // Is`t not ReactElement\n  if (!isValidElement(node)) {\n    return false\n  }\n  const element = node as ReactElement\n  return _.hasIn(element.type, ICON_TYPE)\n}\n\nexport function cloneIconElement(node: ReactNode, props: IconProps): ReactNode {\n  if (!isIconElement(node)) {\n    return isValidElement(node) ? cloneElement(node, props) : node\n  }\n  const { className, ...restProps } = props\n  const element = node as ReactElement\n  const { props: oldProps } = element\n  const newProps: IconProps = {\n    ...oldProps,\n    className: classNames(oldProps.className, className),\n    ...restProps,\n  }\n  return cloneElement(element, newProps)\n}\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","import { View } from \"@tarojs/components\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { ReactNode } from \"react\"\r\nimport { demoPrefixClassname } from \"../styles/prefix\"\r\nimport \"./block.scss\"\r\n\r\ntype BlockVariant = \"card\"\r\n\r\ninterface BlockProps {\r\n  className?: string\r\n  variant?: BlockVariant\r\n  title?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nexport default function Block(props: BlockProps) {\r\n  const { className, variant, title, children } = props\r\n  return (\r\n    <View className={classNames(demoPrefixClassname(\"block\"), className)}>\r\n      {title && <View className={demoPrefixClassname(\"block__title\")} children={title} />}\r\n      <View\r\n        className={classNames({\r\n          [demoPrefixClassname(\"block__content\")]: variant !== \"card\",\r\n          [demoPrefixClassname(\"block__card\")]: variant === \"card\",\r\n        })}\r\n      >\r\n        {children}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import * as _ from \"lodash\"\r\nimport { isValidElement, JSXElementConstructor, ReactElement, ReactNode } from \"react\"\r\n\r\nexport function isTextElement(node: ReactNode) {\r\n  return _.isNumber(node) || _.isString(node)\r\n}\r\n\r\nexport function isObjectElement(node?: ReactNode) {\r\n  return !isValidElement(node) && _.isObject(node) && !_.isArray(node)\r\n}\r\n\r\nexport function isElementOf(node?: ReactNode, type?: JSXElementConstructor<any>) {\r\n  if (isValidElement(node)) {\r\n    const element = node as ReactElement\r\n    if (element.type === type) {\r\n      return true\r\n    }\r\n\r\n    const displayName = _.get(element.type, \"displayName\")\r\n    if (\r\n      _.isFunction(element.type) &&\r\n      !_.isEmpty(displayName) &&\r\n      _.endsWith(displayName, _.get(type, \"displayName\"))\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n","var baseClamp = require('./_baseClamp'),\n    baseToString = require('./_baseToString'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Checks if `string` ends with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @example\n *\n * _.endsWith('abc', 'c');\n * // => true\n *\n * _.endsWith('abc', 'b');\n * // => false\n *\n * _.endsWith('abc', 'b', 2);\n * // => true\n */\nfunction endsWith(string, target, position) {\n  string = toString(string);\n  target = baseToString(target);\n\n  var length = string.length;\n  position = position === undefined\n    ? length\n    : baseClamp(toInteger(position), 0, length);\n\n  var end = position;\n  position -= target.length;\n  return position >= 0 && string.slice(position, end) == target;\n}\n\nmodule.exports = endsWith;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nmodule.exports = baseClamp;\n","var toNumber = require('./toNumber');\n\n/**\n * Creates a function that performs a relational operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @returns {Function} Returns the new relational operation function.\n */\nfunction createRelationalOperation(operator) {\n  return function(value, other) {\n    if (!(typeof value == 'string' && typeof other == 'string')) {\n      value = toNumber(value);\n      other = toNumber(other);\n    }\n    return operator(value, other);\n  };\n}\n\nmodule.exports = createRelationalOperation;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","import \"../../styles/style\"\r\nimport \"../index.scss\"\r\n","import { createContext } from \"react\"\r\n\r\ninterface BadgeWrapperContextValue {}\r\n\r\nconst BadgeWrapperContext = createContext<BadgeWrapperContextValue>({})\r\n\r\nexport default BadgeWrapperContext\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport BadgeWrapperContext from \"./badge-wrapper.context\"\r\n\r\nexport interface BadgeWrapperProps extends ViewProps {\r\n  style?: CSSProperties\r\n  children?: ReactNode\r\n}\r\n\r\nfunction BadgeWrapper(props: BadgeWrapperProps) {\r\n  const { className, ...restProps } = props\r\n\r\n  return (\r\n    <BadgeWrapperContext.Provider value={{}}>\r\n      <View className={classNames(prefixClassname(\"badge-wrapper\"), className)} {...restProps} />\r\n    </BadgeWrapperContext.Provider>\r\n  )\r\n}\r\n\r\nexport default BadgeWrapper\r\n","import { View } from \"@tarojs/components\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { CSSProperties, ReactNode, useContext, useMemo } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport BadgeWrapper from \"./badge-wrapper\"\r\nimport BadgeWrapperContext from \"./badge-wrapper.context\"\r\n\r\nexport type BadgePosition = \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\"\r\n\r\nexport interface BadgeProps extends ViewProps {\r\n  className?: string\r\n  style?: CSSProperties\r\n  content?: ReactNode\r\n  fixed?: boolean\r\n  dot?: boolean\r\n  max?: number\r\n  position?: BadgePosition\r\n  children?: ReactNode\r\n}\r\n\r\nfunction Badge(props: BadgeProps): JSX.Element {\r\n  const {\r\n    className,\r\n    content: contentProp,\r\n    max,\r\n    dot,\r\n    fixed: fixedProp,\r\n    position = \"top-right\",\r\n    children,\r\n    ...restProps\r\n  } = props\r\n  const wrapperContext = useContext(BadgeWrapperContext)\r\n  const hasChildren = children !== undefined\r\n  const noChildren = children === undefined\r\n  const fixed = fixedProp ?? !!wrapperContext\r\n\r\n  const content = useMemo(\r\n    () =>\r\n      _.isNumber(contentProp)\r\n        ? _.toString(_.gt(contentProp, max) ? `${max}+` : contentProp)\r\n        : contentProp,\r\n    [contentProp, max],\r\n  )\r\n\r\n  const badge = (\r\n    <View\r\n      className={classNames(\r\n        prefixClassname(\"badge__badge\"),\r\n        {\r\n          [prefixClassname(\"badge--dot\")]: dot,\r\n          [prefixClassname(\"badge--content\")]: content,\r\n          [prefixClassname(\"badge--fixed\")]: fixed || hasChildren,\r\n          [prefixClassname(\"badge--top-left\")]: position === \"top-left\",\r\n          [prefixClassname(\"badge--top-right\")]: position === \"top-right\",\r\n          [prefixClassname(\"badge--bottom-left\")]: position === \"bottom-left\",\r\n          [prefixClassname(\"badge--bottom-right\")]: position === \"bottom-right\",\r\n        },\r\n        className,\r\n      )}\r\n      children={!dot && content}\r\n      {...restProps}\r\n    />\r\n  )\r\n\r\n  if (noChildren) {\r\n    return badge\r\n  }\r\n\r\n  return (\r\n    <BadgeWrapper>\r\n      {children}\r\n      {(dot || content) && badge}\r\n    </BadgeWrapper>\r\n  )\r\n}\r\n\r\nexport default Badge\r\n","import * as _ from \"lodash\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, ReactElement, ReactNode } from \"react\"\r\nimport { isElementOf } from \"../utils/validate\"\r\nimport Badge, { BadgeProps } from \"./badge\"\r\n\r\nexport default function useBadge(badge: ReactNode, props: BadgeProps = {}) {\r\n  if (_.isBoolean(badge) && badge) {\r\n    return (badgeProps: BadgeProps) => <Badge {...props} dot {...badgeProps} />\r\n  }\r\n\r\n  if (_.isNumber(badge) || _.isString(badge)) {\r\n    return (badgeProps: BadgeProps) => <Badge {...props} content={badge} {...badgeProps} />\r\n  }\r\n\r\n  if (isElementOf(badge, Badge)) {\r\n    return (badgeProps: BadgeProps) =>\r\n      cloneElement(badge as ReactElement, {\r\n        ...props,\r\n        ...badgeProps,\r\n      })\r\n  }\r\n  return (badgeProps: BadgeProps) => <Badge {...props} {...badgeProps} />\r\n}\r\n","import { IconProps } from \"@taroify/icons/shared\"\r\nimport { cloneIconElement, isIconElement } from \"@taroify/icons/utils\"\r\nimport { StandardProps } from \"@tarojs/components/types/common\"\r\nimport { ViewProps } from \"@tarojs/components/types/View\"\r\nimport classNames from \"classnames\"\r\nimport * as React from \"react\"\r\nimport { cloneElement, isValidElement, PropsWithChildren, ReactElement, ReactNode } from \"react\"\r\nimport { prefixClassname } from \"../styles\"\r\nimport BadgeWrapperContext from \"./badge-wrapper.context\"\r\n\r\nfunction acquireCloneElement(wrapper: ReactNode) {\r\n  if (isIconElement(wrapper)) {\r\n    return cloneIconElement\r\n  }\r\n  if (isValidElement(wrapper)) {\r\n    return cloneElement\r\n  }\r\n}\r\n\r\nconst useBadgeWrapper = <P extends StandardProps = PropsWithChildren<ViewProps>>(\r\n  wrapper: ReactNode,\r\n) => (props: P): JSX.Element => {\r\n  const { className, ...restProps } = props\r\n  const cloneElement = acquireCloneElement(wrapper)\r\n\r\n  if (cloneElement) {\r\n    wrapper = cloneElement(\r\n      wrapper as ReactElement,\r\n      {\r\n        className: classNames(prefixClassname(\"badge-wrapper\"), className),\r\n        ...restProps,\r\n      } as IconProps,\r\n    )\r\n  }\r\n\r\n  return <BadgeWrapperContext.Provider value={{}} children={wrapper} />\r\n}\r\n\r\nexport default useBadgeWrapper\r\n","import { FunctionComponent } from \"react\"\r\nimport BadgeComponent, { BadgeProps } from \"./badge\"\r\nimport BadgeWrapper from \"./badge-wrapper\"\r\n\r\nexport { default as useBadge } from \"./use-badge\"\r\nexport { default as useBadgeWrapper } from \"./use-badge-wrapper\"\r\n\r\ninterface BadgeInterface extends FunctionComponent<BadgeProps> {\r\n  Wrapper: typeof BadgeWrapper\r\n}\r\n\r\nconst Badge = BadgeComponent as BadgeInterface\r\n\r\nBadge.Wrapper = BadgeWrapper\r\n\r\nexport default Badge\r\n","var baseGt = require('./_baseGt'),\n    createRelationalOperation = require('./_createRelationalOperation');\n\n/**\n * Checks if `value` is greater than `other`.\n *\n * @static\n * @memberOf _\n * @since 3.9.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n * @see _.lt\n * @example\n *\n * _.gt(3, 1);\n * // => true\n *\n * _.gt(3, 3);\n * // => false\n *\n * _.gt(1, 3);\n * // => false\n */\nvar gt = createRelationalOperation(baseGt);\n\nmodule.exports = gt;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;\n","import { Badge } from \"@taroify/core\"\nimport { Cross, Down, Success } from \"@taroify/icons\"\nimport { View } from \"@tarojs/components\"\nimport * as React from \"react\"\nimport Block from \"../../../components/block\"\nimport Page from \"../../../components/page\"\nimport \"./index.scss\"\n\nexport default function BadgeDemo() {\n  return (\n    <Page title=\"Badge 徽标\" className=\"badge-demo\">\n      <Block title=\"基础用法\">\n        <Badge content={5}>\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge content=\"10\">\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge content=\"Hot\">\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge dot>\n          <View className=\"badge-block\" />\n        </Badge>\n      </Block>\n      <Block title=\"最大值\">\n        <Badge content={10} max={9}>\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge content={21} max={20}>\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge content={100} max={99}>\n          <View className=\"badge-block\" />\n        </Badge>\n      </Block>\n      <Block title=\"自定义颜色\">\n        <Badge className=\"custom-color\" content={5}>\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge className=\"custom-color\" content={10}>\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge className=\"custom-color\" content=\"Hot\">\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge className=\"custom-color\" dot>\n          <View className=\"badge-block\" />\n        </Badge>\n      </Block>\n      <Block title=\"自定义徽标内容\">\n        <Badge content={<Success className=\"badge-icon\" />}>\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge content={<Cross className=\"badge-icon\" />}>\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge content={<Down className=\"badge-icon\" />}>\n          <View className=\"badge-block\" />\n        </Badge>\n      </Block>\n      <Block title=\"自定义徽标位置\">\n        <Badge content={10} position=\"top-left\">\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge content={10} position=\"top-right\">\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge content={10} position=\"bottom-left\">\n          <View className=\"badge-block\" />\n        </Badge>\n        <Badge content={10} position=\"bottom-right\">\n          <View className=\"badge-block\" />\n        </Badge>\n      </Block>\n      <Block title=\"独立展示\" className=\"independent-badges\">\n        <Badge content=\"20\" />\n        <Badge content={100} max={99} />\n      </Block>\n    </Page>\n  )\n}\n"],"sourceRoot":""}